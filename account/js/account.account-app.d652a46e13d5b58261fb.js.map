{"version":3,"file":"account/js/account.account-app.d652a46e13d5b58261fb.js","mappings":"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","sources":["webpack://@deriv/account/./Assets/ic-brand-deriv-red.svg","webpack://@deriv/account/./Sections/Security/Passwords/deriv-password.jsx","webpack://@deriv/account/./Components/unlink-account-modal/unlink-account-modal.jsx","webpack://@deriv/account/./Components/unlink-account-modal/index.js","webpack://@deriv/account/./Sections/Security/Passwords/deriv-email.jsx","webpack://@deriv/account/./Sections/Security/Passwords/passwords-platform.jsx","webpack://@deriv/account/./Sections/Security/Passwords/passwords.jsx","webpack://@deriv/account/./Sections/Security/Passwords/index.js","webpack://@deriv/account/./Components/article/article.tsx","webpack://@deriv/account/./Components/article/index.ts","webpack://@deriv/account/./Components/account-limits/account-limits-article.tsx","webpack://@deriv/account/./Components/account-limits/account-limits-context.tsx","webpack://@deriv/account/./Components/account-limits/account-limits-extra-info.tsx","webpack://@deriv/account/./Components/account-limits/account-limits-footer.tsx","webpack://@deriv/account/./Components/account-limits/account-limits-overlay.tsx","webpack://@deriv/account/./Components/account-limits/account-limits-table-cell.tsx","webpack://@deriv/account/./Components/account-limits/account-limits-table-header.tsx","webpack://@deriv/account/./Components/account-limits/account-limits-turnover-limit-row.tsx","webpack://@deriv/account/./Components/account-limits/account-limits.tsx","webpack://@deriv/account/./Sections/Security/AccountLimits/index.ts","webpack://@deriv/account/./Components/poa-address-mismatch-hint-box/poa-address-mismatch-hint-box.tsx","webpack://@deriv/account/./Components/poa-address-mismatch-hint-box/index.ts","webpack://@deriv/account/./Sections/Profile/PersonalDetails/personal-details.jsx","webpack://@deriv/account/./Sections/Verification/ProofOfAddress/proof-of-address.jsx","webpack://@deriv/account/./Sections/Verification/ProofOfOwnership/file-uploader.jsx","webpack://@deriv/account/./Components/sample-credit-card-modal/index.js","webpack://@deriv/account/./Components/sample-credit-card-modal/sample-credit-card-modal.jsx","webpack://@deriv/account/./Sections/Verification/ProofOfOwnership/constants/constants.js","webpack://@deriv/account/./Sections/Verification/ProofOfOwnership/expanded-card.jsx","webpack://@deriv/account/./Sections/Verification/ProofOfOwnership/card.jsx","webpack://@deriv/account/./Sections/Verification/ProofOfOwnership/proof-of-ownership-form.jsx","webpack://@deriv/account/./Components/poo/statuses/poo-not-required/index.js","webpack://@deriv/account/./Components/poo/statuses/poo-not-required/not-required.jsx","webpack://@deriv/account/./Components/poo/statuses/poo-verified/index.js","webpack://@deriv/account/./Components/poo/statuses/poo-verified/verified.jsx","webpack://@deriv/account/./Components/poo/statuses/poo-rejected/index.js","webpack://@deriv/account/./Components/poo/statuses/poo-rejected/rejected.jsx","webpack://@deriv/account/./Components/poo/statuses/poo-submitted/index.js","webpack://@deriv/account/./Components/poo/statuses/poo-submitted/submitted.jsx","webpack://@deriv/account/./Sections/Verification/ProofOfOwnership/payment-method-config.js","webpack://@deriv/account/./Sections/Verification/ProofOfOwnership/proof-of-ownership.jsx","webpack://@deriv/account/./Sections/Verification/ProofOfOwnership/index.js","webpack://@deriv/account/./Sections/Security/TwoFactorAuthentication/digit-form.jsx","webpack://@deriv/account/./Sections/Security/TwoFactorAuthentication/two-factor-authentication-article.jsx","webpack://@deriv/account/./Sections/Security/TwoFactorAuthentication/two-factor-authentication.jsx","webpack://@deriv/account/./Sections/Security/TwoFactorAuthentication/index.js","webpack://@deriv/account/./Components/api-token/api-token-article.tsx","webpack://@deriv/account/./Components/api-token/api-token-card.tsx","webpack://@deriv/account/./Components/api-token/api-token-context.ts","webpack://@deriv/account/./Components/api-token/api-token-footer.tsx","webpack://@deriv/account/./Components/api-token/api-token-overlay.tsx","webpack://@deriv/account/./Components/api-token/api-token-delete-button.tsx","webpack://@deriv/account/./Components/api-token/api-token-table-row-cell.tsx","webpack://@deriv/account/./Components/api-token/api-token-table-row-scopes-cell.tsx","webpack://@deriv/account/./Components/api-token/api-token-clipboard.tsx","webpack://@deriv/account/./Components/api-token/api-token-table-row-token-cell.tsx","webpack://@deriv/account/./Components/api-token/api-token-table-row.tsx","webpack://@deriv/account/./Components/api-token/api-token-table-row-header.tsx","webpack://@deriv/account/./Components/api-token/api-token-table.tsx","webpack://@deriv/account/./Components/api-token/api-token.tsx","webpack://@deriv/account/./Sections/Security/ApiToken/index.ts","webpack://@deriv/account/./Components/self-exclusion/self-exclusion-context.tsx","webpack://@deriv/account/./Components/self-exclusion/self-exclusion-article-content.tsx","webpack://@deriv/account/./Components/self-exclusion/self-exclusion-modal.tsx","webpack://@deriv/account/./Components/self-exclusion/self-exclusion-article.tsx","webpack://@deriv/account/./Components/self-exclusion/self-exclusion-wrapper.tsx","webpack://@deriv/account/./Components/self-exclusion/self-exclusion-confirm-limits.tsx","webpack://@deriv/account/./Components/self-exclusion/self-exclusion-confirm-page.tsx","webpack://@deriv/account/./Components/self-exclusion/self-exclusion-footer.tsx","webpack://@deriv/account/./Components/self-exclusion/self-exclusion-inputs.tsx","webpack://@deriv/account/./Components/self-exclusion/self-exclusion-form.tsx","webpack://@deriv/account/./Components/self-exclusion/self-exclusion.tsx","webpack://@deriv/account/./Sections/Security/SelfExclusion/self-exclusion.jsx","webpack://@deriv/account/./Sections/Security/SelfExclusion/index.js","webpack://@deriv/account/./Containers/account.jsx","webpack://@deriv/account/./Helpers/flatten.js","webpack://@deriv/account/./Sections/Security/ClosingAccount/closing-account-steps.jsx","webpack://@deriv/account/./Sections/Security/ClosingAccount/account-has-balance.jsx","webpack://@deriv/account/./Sections/Security/ClosingAccount/closing-account-reason-form.jsx","webpack://@deriv/account/./Sections/Security/ClosingAccount/closing-account-reason.jsx","webpack://@deriv/account/./Sections/Security/ClosingAccount/closing-account.jsx","webpack://@deriv/account/./Sections/Security/ClosingAccount/index.js","webpack://@deriv/account/./Sections/Security/ConnectedApps/connected-apps-article.tsx","webpack://@deriv/account/./Sections/Security/ConnectedApps/data-table-template.tsx","webpack://@deriv/account/./Sections/Security/ConnectedApps/connected-apps.tsx","webpack://@deriv/account/./Sections/Security/ConnectedApps/index.js","webpack://@deriv/account/./Sections/Security/LoginHistory/login-history.jsx","webpack://@deriv/account/./Sections/Security/LoginHistory/index.js","webpack://@deriv/account/./Sections/Security/AccountClosed/account-closed.tsx","webpack://@deriv/account/./Sections/Security/AccountClosed/index.ts","webpack://@deriv/account/./Sections/Security/DeactivateAccount/deactivate-account.jsx","webpack://@deriv/account/./Sections/Security/DeactivateAccount/index.js","webpack://@deriv/account/./Components/language-settings/language-radio-button.tsx","webpack://@deriv/account/./Components/language-settings/index.ts","webpack://@deriv/account/./Sections/Profile/LanguageSettings/language-settings.tsx","webpack://@deriv/account/./Sections/Profile/LanguageSettings/index.ts","webpack://@deriv/account/./Constants/routes-config.js","webpack://@deriv/account/./Components/Routes/route-with-sub-routes.tsx","webpack://@deriv/account/./Components/Routes/binary-routes.tsx","webpack://@deriv/account/./Containers/routes.jsx","webpack://@deriv/account/./Containers/reset-trading-password.jsx","webpack://@deriv/account/./App.tsx","webpack://@deriv/account/./Components/icon-with-message/icon-with-message.tsx","webpack://@deriv/account/./Components/icon-with-message/index.ts","webpack://@deriv/account/./Components/demo-message/demo-message.tsx","webpack://@deriv/account/./Components/demo-message/index.ts","webpack://@deriv/account/./Components/error-component/error-component.tsx","webpack://@deriv/account/./Components/error-component/index.js","webpack://@deriv/account/./Components/file-uploader-container/file-uploader.tsx","webpack://@deriv/account/./Components/file-uploader-container/file-uploader-container.tsx","webpack://@deriv/account/./Components/file-uploader-container/index.ts","webpack://@deriv/account/./Components/form-body-section/form-body-section.tsx","webpack://@deriv/account/./Components/form-body-section/index.ts","webpack://@deriv/account/./Components/scrollbars-container/scrollbars-container.tsx","webpack://@deriv/account/./Components/form-body/index.ts","webpack://@deriv/account/./Components/form-body/form-body.tsx","webpack://@deriv/account/./Components/form-footer/form-footer.tsx","webpack://@deriv/account/./Components/form-footer/index.ts","webpack://@deriv/account/./Components/form-sub-header/index.ts","webpack://@deriv/account/./Components/form-sub-header/form-sub-header.tsx","webpack://@deriv/account/./Components/forms/form-fields.jsx","webpack://@deriv/account/./Components/forms/personal-details-form.jsx","webpack://@deriv/account/./Components/icon-message-content/icon-message-content.tsx","webpack://@deriv/account/./Components/icon-message-content/index.ts","webpack://@deriv/account/./Components/inline-note-with-icon/index.ts","webpack://@deriv/account/./Components/inline-note-with-icon/inline-note-with-icon.tsx","webpack://@deriv/account/./Components/leave-confirm/leave-confirm.tsx","webpack://@deriv/account/./Components/leave-confirm/index.js","webpack://@deriv/account/./Components/load-error-message/load-error-message.tsx","webpack://@deriv/account/./Components/load-error-message/index.ts","webpack://@deriv/account/./Components/poa/continue-trading-button/continue-trading-button.tsx","webpack://@deriv/account/./Components/poa/poa-button/index.ts","webpack://@deriv/account/./Components/poa/poa-button/poa-button.tsx","webpack://@deriv/account/./Components/poa/status/expired/index.ts","webpack://@deriv/account/./Components/poa/status/expired/expired.tsx","webpack://@deriv/account/./Components/poa/status/needs-review/index.ts","webpack://@deriv/account/./Components/poa/status/needs-review/needs-review.tsx","webpack://@deriv/account/./Components/poa/status/status-codes/index.ts","webpack://@deriv/account/./Components/poa/status/status-codes/status-codes.ts","webpack://@deriv/account/./Components/poa/status/submitted/index.ts","webpack://@deriv/account/./Components/poa/status/submitted/submitted.tsx","webpack://@deriv/account/./Components/poa/status/unverified/index.ts","webpack://@deriv/account/./Components/poa/status/unverified/unverified.tsx","webpack://@deriv/account/./Components/poa/status/verified/verified.tsx","webpack://@deriv/account/./Components/poa/status/verified/index.ts","webpack://@deriv/account/./Components/poi/missing-personal-details/missing-personal-details.tsx","webpack://@deriv/account/./Components/poi/missing-personal-details/index.js","webpack://@deriv/account/./Components/poi/poi-button/index.ts","webpack://@deriv/account/./Components/poi/poi-button/poi-button.tsx","webpack://@deriv/account/./Components/poi/status/expired/expired.tsx","webpack://@deriv/account/./Components/poi/status/expired/index.js","webpack://@deriv/account/./Components/poi/status/limited/index.js","webpack://@deriv/account/./Components/poi/status/limited/limited.tsx","webpack://@deriv/account/./Components/poi-unsupported-failed/unsupported-failed.tsx","webpack://@deriv/account/./Components/poi-unsupported-failed/index.ts","webpack://@deriv/account/./Components/file-uploader-container/upload-file.ts","webpack://@deriv/account/./Components/poi/status/unsupported/constants.ts","webpack://@deriv/account/./Components/poi/status/unsupported/card-details/input-field.tsx","webpack://@deriv/account/./Components/poi/status/unsupported/card-details/uploader.tsx","webpack://@deriv/account/./Components/poi/status/unsupported/card-details/utils.ts","webpack://@deriv/account/./Components/poi/status/unsupported/card-details/documents-upload.tsx","webpack://@deriv/account/./Components/poi/status/unsupported/card-details/selfie-upload.tsx","webpack://@deriv/account/./Components/poi/status/unsupported/card-details/card-details.tsx","webpack://@deriv/account/./Components/poi/status/unsupported/card-details/index.ts","webpack://@deriv/account/./Components/poi/status/unsupported/detail-component.tsx","webpack://@deriv/account/./Components/poi/status/unsupported/card-with-arrow.tsx","webpack://@deriv/account/./Components/poi/status/unsupported/documents.tsx","webpack://@deriv/account/./Components/poi/status/unsupported/unsupported.tsx","webpack://@deriv/account/./Components/poi/status/unsupported/index.js","webpack://@deriv/account/./Components/poi/status/upload-complete/index.ts","webpack://@deriv/account/./Components/poi/status/upload-complete/upload-complete.tsx","webpack://@deriv/account/./Components/poi/status/verified/verified.tsx","webpack://@deriv/account/./Components/poi/status/verified/index.ts","webpack://@deriv/account/./Components/reset-trading-password-modal/reset-trading-password-modal.tsx","webpack://@deriv/account/./Components/reset-trading-password-modal/index.js","webpack://@deriv/account/./Components/sent-email-modal/sent-email-modal.tsx","webpack://@deriv/account/./Components/sent-email-modal/index.ts","webpack://@deriv/account/./Components/trading-assessment/risk-tolerance-warning-modal.jsx","webpack://@deriv/account/./Components/trading-assessment/test-warning-modal.jsx","webpack://@deriv/account/./Configs/trading-assessment-config.ts","webpack://@deriv/account/./Helpers/utils.ts","webpack://@deriv/account/./Sections/Assessment/FinancialAssessment/financial-information-list.ts","webpack://@deriv/account/./Sections/Assessment/FinancialAssessment/financial-assessment.tsx","webpack://@deriv/account/./Sections/Assessment/FinancialAssessment/index.ts","webpack://@deriv/account/./Sections/Assessment/TradingAssessment/trading-assessment.jsx","webpack://@deriv/account/./Sections/Assessment/TradingAssessment/index.js","webpack://@deriv/account/./Sections/Verification/Helpers/verification.js","webpack://@deriv/account/./Components/poa/status/not-required/index.ts","webpack://@deriv/account/./Components/poa/status/not-required/not-required.tsx","webpack://@deriv/account/./Sections/Verification/ProofOfAddress/proof-of-address-form.jsx","webpack://@deriv/account/./Sections/Verification/ProofOfAddress/proof-of-address-container.jsx","webpack://@deriv/account/./Constants/onfido-phrases.js","webpack://@deriv/account/./Components/poi/poi-confirm-with-example-form-container/poi-confirm-with-example-form-container.tsx","webpack://@deriv/account/./Components/poi/poi-confirm-with-example-form-container/index.ts","webpack://@deriv/account/./Sections/Verification/ProofOfIdentity/onfido-sdk-view.tsx","webpack://@deriv/account/./Sections/Verification/ProofOfIdentity/onfido-sdk-view-container.tsx","webpack://@deriv/account/./Components/poi/idv-status/idv-expired/idv-expired.tsx","webpack://@deriv/account/./Components/poi/idv-status/idv-expired/index.js","webpack://@deriv/account/./Assets/ic-idv-document-rejected.svg","webpack://@deriv/account/./Components/poi/idv-status/idv-limited/idv-limited.tsx","webpack://@deriv/account/./Components/poi/idv-status/idv-limited/index.js","webpack://@deriv/account/./Components/poi/idv-status/idv-rejected/idv-rejected.tsx","webpack://@deriv/account/./Components/poi/idv-status/idv-rejected/index.js","webpack://@deriv/account/./Assets/ic-idv-document-pending.svg","webpack://@deriv/account/./Components/poi/idv-status/idv-submit-complete/idv-submit-complete.tsx","webpack://@deriv/account/./Components/poi/idv-status/idv-submit-complete/index.js","webpack://@deriv/account/./Assets/ic-idv-verified.svg","webpack://@deriv/account/./Components/poi/idv-status/idv-verified/idv-verified.tsx","webpack://@deriv/account/./Components/poi/idv-status/idv-verified/index.js","webpack://@deriv/account/./Sections/Verification/ProofOfIdentity/idv.jsx","webpack://@deriv/account/./Components/poi/status/not-required/index.ts","webpack://@deriv/account/./Components/poi/status/not-required/not-required.tsx","webpack://@deriv/account/./Components/icon-message-list/icon-message-list.tsx","webpack://@deriv/account/./Components/icon-message-list/index.ts","webpack://@deriv/account/./Components/poi/status/rejected-reasons/index.js","webpack://@deriv/account/./Components/poi/status/rejected-reasons/rejected-reasons.tsx","webpack://@deriv/account/./Sections/Verification/ProofOfIdentity/onfido.jsx","webpack://@deriv/account/./Components/poi/poi-country-selector/poi-country-selector.tsx","webpack://@deriv/account/./Components/poi/poi-country-selector/index.js","webpack://@deriv/account/./Assets/ic-poi-back-btn.svg","webpack://@deriv/account/./Components/forms/idv-form.tsx","webpack://@deriv/account/./Components/poi/idv-document-submit/idv-document-submit.tsx","webpack://@deriv/account/./Components/poi/idv-document-submit/index.js","webpack://@deriv/account/./Sections/Verification/ProofOfIdentity/proof-of-identity-submission.jsx","webpack://@deriv/account/./Sections/Verification/ProofOfIdentity/proof-of-identity-container.jsx","webpack://@deriv/account/./Sections/Verification/ProofOfIdentity/proof-of-identity-utils.ts","webpack://@deriv/account/./Sections/Verification/ProofOfIdentity/proof-of-identity.jsx","webpack://@deriv/account/../../api/src/APIProvider.tsx","webpack://@deriv/account/../../api/src/useSubscription.ts","webpack://@deriv/account/../../stores/src/providers/ExchangeRatesProvider.tsx","webpack://@deriv/account/../../stores/src/storeContext.ts","webpack://@deriv/account/../../stores/src/storeProvider.tsx","webpack://@deriv/account/../../stores/src/stores/BaseStore.ts","webpack://@deriv/account/../../stores/src/stores/ExchangeRatesStore.ts","webpack://@deriv/account/../../stores/src/stores/FeatureFlagsStore.ts","webpack://@deriv/account/../../stores/src/useStore.ts","webpack://@deriv/account/./Assets/ic-poi-name-dob-example.svg"],"sourcesContent":["import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"none\" viewBox=\"0 -15 100 100\" {...props}><path fill=\"#FF444F\" d=\"M0 28A28 28 0 0128 0h16a28 28 0 0128 28v16a28 28 0 01-28 28H28A28 28 0 010 44V28z\" /><path fill=\"#fff\" d=\"M45.17 14.92l-2.32 13.16h-8.06c-7.52 0-14.69 6.1-16.02 13.61l-.56 3.2c-1.32 7.52 3.7 13.61 11.21 13.61h6.73c5.48 0 10.7-4.43 11.66-9.91L54 13.49l-8.83 1.43zm-5.72 32.43a3.72 3.72 0 01-3.51 3.07h-4.09c-3.38 0-5.64-2.75-5.04-6.13l.35-2a7.63 7.63 0 017.2-6.13h7.06l-1.97 11.19z\" /></svg>);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Icon, Popover, Text } from '@deriv/components';\nimport { getBrandWebsiteName, getPlatformSettings, toTitleCase, WS } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\nimport FormSubHeader from 'Components/form-sub-header';\nimport SentEmailModal from 'Components/sent-email-modal';\nimport DerivComLogo from 'Assets/ic-brand-deriv-red.svg';\n\nconst DerivPassword = ({\n    email,\n    is_eu_user,\n    is_social_signup,\n    social_identity_provider,\n    financial_restricted_countries,\n}) => {\n    const [is_sent_email_modal_open, setIsSentEmailModalOpen] = React.useState(false);\n\n    const onClickSendEmail = () => {\n        if (social_identity_provider === 'apple') {\n            WS.verifyEmail(email, 'request_email');\n        } else {\n            WS.verifyEmail(email, 'reset_password');\n        }\n        setIsSentEmailModalOpen(true);\n    };\n\n    const capitalized_identifier = social_identity_provider ? toTitleCase(social_identity_provider) : '';\n    const brand_website_name = getBrandWebsiteName();\n    const platform_name_dbot = getPlatformSettings('dbot').name;\n    const platform_name_go = getPlatformSettings('go').name;\n    const platform_name_smarttrader = getPlatformSettings('smarttrader').name;\n    const platform_name_trader = getPlatformSettings('trader').name;\n    const platform_name_derivez = getPlatformSettings('derivez').name;\n\n    const PlatformDescription = () => {\n        let text =\n            'Use the <0>Deriv password</0> to log in to {{brand_website_name}}, {{platform_name_go}}, {{platform_name_trader}}, {{platform_name_smarttrader}}, and {{platform_name_dbot}}.';\n        let values = {\n            brand_website_name,\n            platform_name_trader,\n            platform_name_dbot,\n            platform_name_smarttrader,\n            platform_name_go,\n        };\n        if (is_eu_user) {\n            text = 'Use the <0>Deriv password</0> to log in to {{brand_website_name}} and {{platform_name_trader}}.';\n            values = {\n                brand_website_name,\n                platform_name_trader,\n            };\n        } else if (financial_restricted_countries) {\n            text =\n                'Use the <0>Deriv password</0> to log in to {{brand_website_name}}, {{platform_name_trader}} and {{platform_name_go}}.';\n            values = {\n                brand_website_name,\n                platform_name_trader,\n                platform_name_go,\n            };\n        }\n\n        return <Localize i18n_default_text={text} components={[<strong key={0} />]} values={values} />;\n    };\n\n    return (\n        <React.Fragment>\n            <FormSubHeader title={localize('Deriv password')} />\n            <div className='account__passwords-wrapper'>\n                <React.Fragment>\n                    <Text as='p' className='passwords-platform__desc' color='prominent' size='xs' weight='lighter'>\n                        <PlatformDescription />\n                    </Text>\n                    <Text as='p' className='passwords-platform__desc' color='prominent' size='xs' weight='lighter'>\n                        <Localize\n                            i18n_default_text='Apps you have linked to your <0>Deriv password:</0>'\n                            components={[<strong key={0} />]}\n                        />\n                    </Text>\n                    <div className='passwords-platform__logo-container'>\n                        <DerivComLogo />\n                        <Text line_height='l' size='xs' weight='bold'>\n                            {brand_website_name}\n                        </Text>\n                    </div>\n                    <div className='passwords-platform__icons'>\n                        <Popover alignment='bottom' message={platform_name_trader}>\n                            <Icon\n                                icon={`${getPlatformSettings('trader').icon}-dashboard`}\n                                size={32}\n                                description='trader'\n                            />\n                        </Popover>\n                        {!is_eu_user && !financial_restricted_countries && (\n                            <React.Fragment>\n                                <Popover alignment='bottom' message={platform_name_dbot}>\n                                    <Icon\n                                        icon={`${getPlatformSettings('dbot').icon}-dashboard`}\n                                        size={32}\n                                        description='dbot'\n                                    />\n                                </Popover>\n                                <Popover alignment='bottom' message={platform_name_smarttrader}>\n                                    <Icon\n                                        icon={`${getPlatformSettings('smarttrader').icon}-dashboard`}\n                                        size={32}\n                                        description='smarttrader'\n                                    />\n                                </Popover>\n                            </React.Fragment>\n                        )}\n                        {(!is_eu_user || financial_restricted_countries) && (\n                            <React.Fragment>\n                                <Popover alignment='bottom' message={platform_name_go}>\n                                    <Icon\n                                        icon={`${getPlatformSettings('go').icon}-dashboard`}\n                                        size={32}\n                                        description='derivgo'\n                                    />\n                                </Popover>\n                                <Popover alignment='bottom' message={platform_name_derivez}>\n                                    <Icon\n                                        icon={`${getPlatformSettings('derivez').icon}`}\n                                        size={32}\n                                        description='derivez'\n                                    />\n                                </Popover>\n                            </React.Fragment>\n                        )}\n                    </div>\n                </React.Fragment>\n                {is_social_signup ? (\n                    <React.Fragment>\n                        <div className='account__passwords-item passwords-social-buttons'>\n                            <div className='account__passwords-linked' onClick={onClickSendEmail}>\n                                {social_identity_provider ? (\n                                    <React.Fragment>\n                                        <Icon icon={`IcStock${capitalized_identifier}`} size={16} />\n                                        <Text size='xs'>\n                                            <Localize\n                                                i18n_default_text='Unlink from {{identifier_title}}'\n                                                values={{ identifier_title: capitalized_identifier }}\n                                            />\n                                        </Text>\n                                        <Icon icon='IcChevronRight' size={16} />\n                                    </React.Fragment>\n                                ) : (\n                                    ''\n                                )}\n                            </div>\n                        </div>\n                    </React.Fragment>\n                ) : (\n                    <div>\n                        <Text as='p' className='passwords-platform__desc' color='prominent' size='xs' weight='lighter'>\n                            <Localize\n                                i18n_default_text='Click the <0>Change password</0> button to change your Deriv password.'\n                                components={[<strong key={0} />]}\n                            />\n                        </Text>\n                        <Button\n                            className='account__passwords-footer-btn'\n                            type='button'\n                            onClick={onClickSendEmail}\n                            has_effect\n                            text={localize('Change password')}\n                            primary\n                            large\n                        />\n                    </div>\n                )}\n                <SentEmailModal\n                    is_open={is_sent_email_modal_open}\n                    onClose={() => setIsSentEmailModalOpen(false)}\n                    identifier_title={capitalized_identifier}\n                    onClickSendEmail={onClickSendEmail}\n                    is_modal_when_mobile={true}\n                />\n            </div>\n        </React.Fragment>\n    );\n};\n\nDerivPassword.propTypes = {\n    email: PropTypes.string,\n    is_dark_mode_on: PropTypes.bool,\n    is_eu_user: PropTypes.bool,\n    financial_restricted_countries: PropTypes.bool,\n    is_social_signup: PropTypes.bool,\n    social_identity_provider: PropTypes.string,\n};\n\nexport default DerivPassword;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, Text, Icon } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\n\nconst UnlinkAccountModal = ({ onClose, is_open, identifier_title, onClickSendEmail }) => {\n    const onClickUnlinkButton = () => {\n        onClose();\n        onClickSendEmail();\n    };\n\n    return (\n        <Modal className={'unlink-account__modal'} is_open={is_open} has_close_icon toggleModal={onClose} width='440px'>\n            <Modal.Body>\n                <div onClick={onClose} className='unlink-account__modal-close'>\n                    <Icon icon='IcCross' />\n                </div>\n                <div className='unlink-account__modal-icon'>\n                    <Icon icon='IcEmailChanged' size={128} />\n                </div>\n                <div className='unlink-account__modal-content'>\n                    <Text className='unlink-account__modal-title' weight='bold' size='s'>\n                        <Localize i18n_default_text='Change your login email' />\n                    </Text>\n                    <Text className='unlink-account__modal-description' size='xs'>\n                        <Localize\n                            i18n_default_text=\"To change your email address, you'll first need to unlink your email address from your {{identifier_title}} account.\"\n                            values={{ identifier_title }}\n                        />\n                    </Text>\n                </div>\n            </Modal.Body>\n            <Modal.Footer className='unlink-account__footer'>\n                <Button onClick={onClose} has_effect text={localize('Cancel')} secondary large />\n                <Button onClick={onClickUnlinkButton} has_effect primary large>\n                    <Localize i18n_default_text='Unlink from {{identifier_title}}' values={{ identifier_title }} />\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nUnlinkAccountModal.prototypes = {\n    onClose: PropTypes.func,\n    is_open: PropTypes.bool,\n    identifier_title: PropTypes.string,\n    onClickSendEmail: PropTypes.func,\n};\n\nexport default UnlinkAccountModal;\n","import UnlinkAccountModal from './unlink-account-modal.jsx';\n\nexport default UnlinkAccountModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { withRouter } from 'react-router';\nimport { WS, toTitleCase } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\nimport { Button, Text, Input } from '@deriv/components';\nimport FormSubHeader from 'Components/form-sub-header';\nimport SentEmailModal from 'Components/sent-email-modal';\nimport UnlinkAccountModal from 'Components/unlink-account-modal';\nimport { observer, useStore } from '@deriv/stores';\n\nconst DerivEmail = observer(({ email, social_identity_provider, is_social_signup }) => {\n    const { common } = useStore();\n    const { is_from_derivgo } = common;\n    const [is_unlink_account_modal_open, setIsUnlinkAccountModalOpen] = React.useState(false);\n    const [is_send_email_modal_open, setIsSendEmailModalOpen] = React.useState(false);\n\n    const onClickChangeEmail = () => {\n        if (is_social_signup) {\n            setIsUnlinkAccountModalOpen(true);\n        } else {\n            WS.verifyEmail(email, 'request_email');\n            setIsSendEmailModalOpen(true);\n        }\n    };\n\n    const onClickSendEmail = () => {\n        WS.verifyEmail(email, 'request_email');\n        setIsUnlinkAccountModalOpen(false);\n        setIsSendEmailModalOpen(true);\n    };\n\n    const onClickResendEmail = () => {\n        WS.verifyEmail(email, 'request_email');\n    };\n\n    return (\n        <React.Fragment>\n            <FormSubHeader title={localize('Email address')} />\n            <div className='account__email-wrapper'>\n                <React.Fragment>\n                    <Text as='p' className='email-platform__desc' color='prominent' size='xs' weight='lighter'>\n                        <Localize i18n_default_text='This is the email address associated with your Deriv account.' />\n                    </Text>\n                </React.Fragment>\n                <div className='email-platform__content'>\n                    <Formik>\n                        <fieldset className='email-platform__content__fieldset'>\n                            <Input\n                                className='email-input'\n                                data-lpignore='true'\n                                type='text'\n                                name='email'\n                                id={'email'}\n                                label={localize('Email address*')}\n                                value={email}\n                                disabled={true}\n                            />\n                        </fieldset>\n                    </Formik>\n                    {!is_from_derivgo && (\n                        <Button\n                            className='email-change_button'\n                            type='submit'\n                            onClick={onClickChangeEmail}\n                            has_effect\n                            is_disabled={false}\n                            is_loading={false}\n                            text={localize('Change email')}\n                            large\n                            primary\n                        />\n                    )}\n                </div>\n                <UnlinkAccountModal\n                    is_open={is_unlink_account_modal_open}\n                    onClose={() => setIsUnlinkAccountModalOpen(false)}\n                    identifier_title={toTitleCase(social_identity_provider)}\n                    onClickSendEmail={onClickSendEmail}\n                />\n                <SentEmailModal\n                    is_open={is_send_email_modal_open}\n                    onClose={() => setIsSendEmailModalOpen(false)}\n                    identifier_title={'Change_Email'}\n                    onClickSendEmail={onClickResendEmail}\n                    has_live_chat={true}\n                    is_modal_when_mobile={true}\n                />\n            </div>\n        </React.Fragment>\n    );\n});\n\nDerivEmail.propTypes = {\n    email: PropTypes.string,\n    is_dark_mode_on: PropTypes.bool,\n    is_social_signup: PropTypes.bool,\n    social_identity_provider: PropTypes.string,\n};\n\nexport default withRouter(DerivEmail);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Icon, Popover, Text } from '@deriv/components';\nimport { CFD_PLATFORMS, WS, getPlatformSettings } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport FormSubHeader from 'Components/form-sub-header';\nimport SentEmailModal from 'Components/sent-email-modal';\n\nconst PasswordsPlatform = ({ email, has_dxtrade_accounts, has_mt5_accounts }) => {\n    const [identifier, setIdenifier] = React.useState('');\n    const [is_sent_email_modal_open, setIsSentEmailModalOpen] = React.useState(false);\n\n    const platform_name_dxtrade = getPlatformSettings('dxtrade').name;\n\n    const getPlatformTitle = () => {\n        let title = '';\n        if (has_mt5_accounts) {\n            title = localize('Deriv MT5 Password');\n        } else if (has_dxtrade_accounts) {\n            title = localize('{{platform_name_dxtrade}} Password', { platform_name_dxtrade });\n        }\n        return title;\n    };\n\n    const onClickSendEmail = cfd_platform => {\n        const password_reset_code =\n            cfd_platform === CFD_PLATFORMS.MT5\n                ? 'trading_platform_mt5_password_reset'\n                : 'trading_platform_dxtrade_password_reset';\n\n        WS.verifyEmail(email, password_reset_code, {\n            url_parameters: {\n                redirect_to: 3,\n            },\n        });\n        setIdenifier(cfd_platform);\n        setIsSentEmailModalOpen(true);\n    };\n\n    return (\n        <React.Fragment>\n            <FormSubHeader title={getPlatformTitle()} />\n            <div className='account__passwords-wrapper'>\n                {has_mt5_accounts && (\n                    <React.Fragment>\n                        <Text as='p' className='passwords-platform__desc' color='prominent' size='xs' weight='lighter'>\n                            <Localize i18n_default_text='Your Deriv MT5 password is for logging in to your Deriv MT5 accounts on the desktop, web, and mobile apps.' />\n                        </Text>\n                        <div className='passwords-platform__content'>\n                            <Popover alignment='bottom' message='Deriv MT5'>\n                                <Icon icon={`${getPlatformSettings('mt5').icon}-dashboard`} size={32} />\n                            </Popover>\n                            <Button\n                                className='account__passwords-footer-btn'\n                                type='button'\n                                onClick={() => onClickSendEmail(CFD_PLATFORMS.MT5)}\n                                text={localize('Change password')}\n                                primary\n                                large\n                            />\n                        </div>\n                    </React.Fragment>\n                )}\n                {has_dxtrade_accounts && (\n                    <React.Fragment>\n                        <Text as='p' className='passwords-platform__desc' color='prominent' size='xs' weight='lighter'>\n                            <Localize\n                                i18n_default_text='Use the {{platform_name_dxtrade}} password to log in to your {{platform_name_dxtrade}} accounts on the web and mobile apps.'\n                                values={{ platform_name_dxtrade }}\n                            />\n                        </Text>\n                        <div className='passwords-platform__content'>\n                            <Popover alignment='bottom' message={platform_name_dxtrade}>\n                                <Icon icon={`${getPlatformSettings('dxtrade').icon}-dashboard`} size={32} />\n                            </Popover>\n                            <Button\n                                className='account__passwords-footer-btn'\n                                type='button'\n                                onClick={() => onClickSendEmail(CFD_PLATFORMS.DXTRADE)}\n                                text={localize('Change password')}\n                                primary\n                                large\n                            />\n                        </div>\n                    </React.Fragment>\n                )}\n                <SentEmailModal\n                    is_open={is_sent_email_modal_open}\n                    identifier_title={identifier}\n                    onClose={() => setIsSentEmailModalOpen(false)}\n                    onClickSendEmail={onClickSendEmail}\n                    is_modal_when_mobile\n                />\n                {/*\n                <SuccessDialog\n                    is_open={is_success_dialog_open}\n                    is_dxtrade_allowed={is_dxtrade_allowed}\n                    onClose={() => setIsSuccessDialogOpen(false)}\n                /> */}\n            </div>\n        </React.Fragment>\n    );\n};\n\nPasswordsPlatform.propTypes = {\n    email: PropTypes.string,\n    has_dxtrade_accounts: PropTypes.bool,\n    has_mt5_accounts: PropTypes.bool,\n};\n\nexport default PasswordsPlatform;\n","import React from 'react';\nimport { Loading } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport DerivPassword from './deriv-password.jsx';\nimport DerivEmail from './deriv-email.jsx';\nimport PasswordsPlatform from './passwords-platform.jsx';\n\nconst Passwords = observer(() => {\n    const [is_loading, setIsLoading] = React.useState(true);\n    const { client, ui, common, traders_hub } = useStore();\n    const {\n        is_populating_mt5_account_list,\n        is_populating_dxtrade_account_list,\n        is_social_signup,\n        email,\n        social_identity_provider,\n        mt5_login_list,\n        is_mt5_password_not_set,\n        dxtrade_accounts_list,\n        is_dxtrade_password_not_set,\n    } = client;\n    const { is_from_derivgo } = common;\n    const { is_eu_user, financial_restricted_countries } = traders_hub;\n    const { is_dark_mode_on } = ui;\n    React.useEffect(() => {\n        if (\n            is_populating_mt5_account_list === false &&\n            is_populating_dxtrade_account_list === false &&\n            is_social_signup !== undefined\n        ) {\n            setIsLoading(false);\n        }\n    }, [is_populating_mt5_account_list, is_populating_dxtrade_account_list, is_social_signup]);\n\n    if (is_loading) {\n        return <Loading is_fullscreen={false} />;\n    }\n\n    return (\n        <div className='account__passwords'>\n            <DerivEmail\n                email={email}\n                social_identity_provider={social_identity_provider}\n                is_social_signup={is_social_signup}\n            />\n            <DerivPassword\n                email={email}\n                is_dark_mode_on={is_dark_mode_on}\n                is_social_signup={is_social_signup}\n                is_eu_user={is_eu_user}\n                financial_restricted_countries={financial_restricted_countries}\n                social_identity_provider={social_identity_provider}\n            />\n            {!is_from_derivgo && (mt5_login_list?.length > 0 || !is_mt5_password_not_set) && (\n                <PasswordsPlatform\n                    email={email}\n                    has_mt5_accounts={mt5_login_list?.length > 0 || !is_mt5_password_not_set}\n                />\n            )}\n            {!is_from_derivgo && (dxtrade_accounts_list?.length > 0 || !is_dxtrade_password_not_set) && (\n                <PasswordsPlatform\n                    email={email}\n                    has_dxtrade_accounts={dxtrade_accounts_list?.length > 0 || !is_dxtrade_password_not_set}\n                />\n            )}\n        </div>\n    );\n});\n\nexport default Passwords;\n","import Passwords from './passwords.jsx';\n\nexport default Passwords;\n","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport './article.scss';\nimport classNames from 'classnames';\n\ntype TDescriptionsItem = {\n    key: string;\n    component: React.ReactElement;\n};\n\nexport type TArticle = {\n    title: string;\n    descriptions: Array<TDescriptionsItem | React.ReactElement>;\n    onClickLearnMore?: () => void;\n    className?: string;\n};\n\nconst Article = ({ title, descriptions, onClickLearnMore, className }: TArticle) => {\n    const has_descriptions: boolean = descriptions?.length > 0;\n    const has_single_description: boolean = descriptions?.length === 1;\n\n    return (\n        <article className={classNames('da-article', className)}>\n            <Text as='h4' color='prominent' line_height='m' size='xs' weight='bold' className='da-article__header'>\n                {title}\n            </Text>\n            {has_descriptions && (\n                <React.Fragment>\n                    {has_single_description ? (\n                        <Text as='p' size='xxs' line_height='m'>\n                            {descriptions[0]}\n                        </Text>\n                    ) : (\n                        <ul className='da-article__list'>\n                            {descriptions.map((description, idx) => (\n                                <li key={idx}>\n                                    <Text size='xxs' line_height='xs'>\n                                        {'component' in description ? description.component : description}\n                                    </Text>\n                                </li>\n                            ))}\n                        </ul>\n                    )}\n                </React.Fragment>\n            )}\n            {onClickLearnMore && (\n                <div className='da-article__learn-more' onClick={onClickLearnMore}>\n                    <Text size='xxs' color='loss-danger' line_height='s'>\n                        <Localize i18n_default_text='Learn more' />\n                    </Text>\n                    <Icon icon='IcChevronRight' className='da-article__learn-more-icon' color='red' />\n                </div>\n            )}\n        </article>\n    );\n};\n\nexport default Article;\n","import AccountArticle from './article';\nimport './article.scss';\n\nexport default AccountArticle;\n","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { StaticUrl } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport AccountArticle from 'Components/article';\n\ntype TAccountLimitsArticle = {\n    is_from_derivgo?: boolean;\n};\n\nconst AccountLimitsArticle = ({ is_from_derivgo }: TAccountLimitsArticle) => {\n    const getDescription = () => {\n        const description = [\n            <Localize key={0} i18n_default_text='These are default limits that we apply to your accounts.' />,\n        ];\n\n        if (!is_from_derivgo) {\n            description.push(\n                <Localize\n                    key={1}\n                    i18n_default_text='To learn more about trading limits and how they apply, please go to the <0>Help Centre.</0>'\n                    components={[<StaticUrl key={0} className='link' href='/help-centre/trading/#trading-limits' />]}\n                />\n            );\n        }\n        return description;\n    };\n\n    return <AccountArticle title={localize('Account limits')} descriptions={getDescription()} />;\n};\n\nAccountLimitsArticle.propTypes = {\n    is_from_derivgo: PropTypes.bool,\n};\n\nexport default AccountLimitsArticle;\n","import * as React from 'react';\n\nexport type TAccountLimitsContext = {\n    currency: string;\n    footer_ref?: React.RefObject<HTMLElement>;\n    overlay_ref: HTMLDivElement;\n    toggleOverlay?: () => void;\n};\n\nconst AccountLimitsContext = React.createContext<TAccountLimitsContext>({\n    currency: '',\n    overlay_ref: document.createElement('div'),\n});\n\nexport default AccountLimitsContext;\n","import * as React from 'react';\nimport { Popover, Text } from '@deriv/components';\nimport { isMobile } from '@deriv/shared';\n\ntype TAccountLimitsExtraInfo = {\n    message: string;\n    className?: string;\n};\n\nconst AccountLimitsExtraInfo = ({ message, ...props }: TAccountLimitsExtraInfo) => {\n    if (isMobile()) {\n        return (\n            <Text color='less-prominent' line_height='s' size='xxxs'>\n                {message}\n            </Text>\n        );\n    }\n\n    return (\n        <Popover\n            data_testid='dt_acc_limits_popover'\n            alignment='right'\n            className='da-account-limits__popover'\n            icon='info'\n            is_bubble_hover_enabled\n            message={message}\n            zIndex='9999'\n            {...props}\n        />\n    );\n};\n\nexport default AccountLimitsExtraInfo;\n","import * as React from 'react';\nimport { createPortal } from 'react-dom';\nimport { Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport AccountLimitsContext, { TAccountLimitsContext } from './account-limits-context';\n\nconst AccountLimitsFooterPortal = () => {\n    const { footer_ref, toggleOverlay } = React.useContext<TAccountLimitsContext>(AccountLimitsContext);\n\n    return createPortal(\n        <a className='link link--prominent' onClick={toggleOverlay} data-testid='dt_footer_text'>\n            <Text size='xxs' line_height='m' weight='bold'>\n                <Localize i18n_default_text='Learn more about account limits' />\n            </Text>\n        </a>,\n        footer_ref?.current as HTMLElement\n    );\n};\n\nexport default AccountLimitsFooterPortal;\n","import * as React from 'react';\nimport { Popup, StaticUrl } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport AccountLimitsContext from './account-limits-context';\n\nconst AccountLimitsOverlay = () => {\n    const { overlay_ref, toggleOverlay } = React.useContext(AccountLimitsContext);\n\n    return (\n        <Popup.Overlay\n            descriptions={[\n                {\n                    key: 'account_limits_desc_1',\n                    component: (\n                        <Localize i18n_default_text='These are default limits that we apply to your accounts.' />\n                    ),\n                },\n                {\n                    key: 'account_limits_desc_2',\n                    component: (\n                        <Localize\n                            i18n_default_text='To learn more about account limits and how they apply, please go to the <0>Help Centre</0>.'\n                            components={[<StaticUrl key={0} className='link' href='/help-centre' />]}\n                        />\n                    ),\n                },\n            ]}\n            done_text={localize('Done')}\n            overlay_ref={overlay_ref}\n            title={localize('Account limits')}\n            toggleOverlay={toggleOverlay}\n        />\n    );\n};\n\nexport default AccountLimitsOverlay;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Text } from '@deriv/components';\n\ntype TAccountLimitsTableCell = {\n    align: 'right' | 'left';\n    is_hint: boolean;\n    level: string;\n    renderExtraInfo: () => React.ReactElement;\n};\n\nconst AccountLimitsTableCell = ({\n    align,\n    children,\n    is_hint,\n    level,\n    renderExtraInfo,\n}: React.PropsWithChildren<Partial<TAccountLimitsTableCell>>) => {\n    const text_size = is_hint ? 'xxxs' : 'xxs';\n\n    return (\n        <React.Fragment>\n            <td\n                className={classNames('da-account-limits__table-cell', {\n                    'da-account-limits__table-cell--left': align !== 'right',\n                    'da-account-limits__table-cell--right': align === 'right',\n                    'da-account-limits__table-cell--submarket': level === 'submarket',\n                })}\n                data-testid='account_limit_table_cell'\n            >\n                {children && (\n                    <Text\n                        align={align}\n                        as='p'\n                        color='prominent'\n                        size={text_size}\n                        line_height='m'\n                        data-testid='account_limit_table_cell_text'\n                    >\n                        {children}\n                    </Text>\n                )}\n                {renderExtraInfo && renderExtraInfo()}\n            </td>\n        </React.Fragment>\n    );\n};\n\nexport default AccountLimitsTableCell;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Text } from '@deriv/components';\n\ntype TAccountLimitsTableHeader = {\n    align: 'left' | 'right';\n    renderExtraInfo: () => React.ReactNode;\n};\n\nconst AccountLimitsTableHeader = ({\n    align,\n    children,\n    renderExtraInfo,\n}: React.PropsWithChildren<Partial<TAccountLimitsTableHeader>>) => {\n    return (\n        <th\n            className={classNames('da-account-limits__table-header', {\n                'da-account-limits__table-header--left': align !== 'right',\n                'da-account-limits__table-header--right': align === 'right',\n            })}\n            data-testid='account_limit_table_header'\n        >\n            {children && (\n                <Text\n                    align={align}\n                    as='p'\n                    color='prominent'\n                    size='xs'\n                    line_height='m'\n                    weight='bold'\n                    data-testid='account_limit_table_header_text'\n                >\n                    {children}\n                </Text>\n            )}\n            {renderExtraInfo && renderExtraInfo()}\n        </th>\n    );\n};\n\nexport default AccountLimitsTableHeader;\n","import * as React from 'react';\nimport { formatMoney } from '@deriv/shared';\nimport AccountLimitsTableCell from './account-limits-table-cell';\nimport AccountLimitsContext, { TAccountLimitsContext } from './account-limits-context';\n\nexport type TAccountLimitsCollection = {\n    level?: string;\n    name: string;\n    payout_limit: number;\n    profile_name: string;\n    turnover_limit: number;\n};\n\ntype TAccountLimitsTurnoverLimitRow = {\n    collection: TAccountLimitsCollection[];\n    title?: string;\n};\n\nconst AccountLimitsTurnoverLimitRow = ({ collection, title }: TAccountLimitsTurnoverLimitRow) => {\n    const { currency } = React.useContext<TAccountLimitsContext>(AccountLimitsContext);\n\n    return (\n        <React.Fragment>\n            {collection?.map(({ name, turnover_limit, level }) => (\n                <tr key={name} data-testid='account-limits-turnover-limit-row'>\n                    <AccountLimitsTableCell level={level}>\n                        {title && `${title} - `}\n                        {name}\n                    </AccountLimitsTableCell>\n                    <AccountLimitsTableCell align='right'>\n                        {formatMoney(currency, turnover_limit, true)}\n                    </AccountLimitsTableCell>\n                </tr>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default AccountLimitsTurnoverLimitRow;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Loading, ThemedScrollbars, Text, ButtonLink } from '@deriv/components';\nimport { formatMoney, isDesktop, isMobile, useIsMounted, PlatformContext } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\nimport LoadErrorMessage from 'Components/load-error-message';\nimport DemoMessage from 'Components/demo-message';\nimport AccountLimitsArticle from './account-limits-article';\nimport AccountLimitsContext, { TAccountLimitsContext } from './account-limits-context';\nimport AccountLimitsExtraInfo from './account-limits-extra-info';\nimport AccountLimitsFooter from './account-limits-footer';\nimport AccountLimitsOverlay from './account-limits-overlay';\nimport AccountLimitsTableCell from './account-limits-table-cell';\nimport AccountLimitsTableHeader from './account-limits-table-header';\nimport AccountLimitsTurnoverLimitRow from './account-limits-turnover-limit-row';\nimport { observer, useStore } from '@deriv/stores';\nimport { FormikValues } from 'formik';\n\ntype TAccountLimits = {\n    footer_ref?: React.RefObject<HTMLElement>;\n    is_app_settings?: boolean;\n    overlay_ref: HTMLDivElement;\n    setIsOverlayShown?: (is_overlay_shown?: boolean) => void;\n    setIsPopupOverlayShown?: (is_popup_overlay_shown: boolean) => void;\n    should_bypass_scrollbars?: boolean;\n    should_show_article?: boolean;\n};\n\nconst AccountLimits = observer(\n    ({\n        footer_ref,\n        is_app_settings,\n        overlay_ref,\n        setIsOverlayShown: setIsPopupOverlayShown,\n        should_bypass_scrollbars,\n        should_show_article = true,\n    }: TAccountLimits) => {\n        const { client, common } = useStore();\n        const { account_limits, currency, getLimits, is_fully_authenticated, is_virtual, is_switching } = client;\n        const { is_from_derivgo } = common;\n        const isMounted = useIsMounted();\n        const [is_loading, setLoading] = React.useState(false);\n        const [is_overlay_shown, setIsOverlayShown] = React.useState(false);\n        const { is_appstore } = React.useContext(PlatformContext);\n\n        React.useEffect(() => {\n            if (is_virtual) {\n                setLoading(false);\n            } else {\n                getLimits().then(() => {\n                    if (isMounted()) setLoading(false);\n                });\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, []);\n\n        React.useEffect(() => {\n            if (!is_virtual && account_limits && is_loading) {\n                setLoading(false);\n            }\n        }, [account_limits, is_virtual, is_loading]);\n\n        React.useEffect(() => {\n            if (typeof setIsPopupOverlayShown === 'function') {\n                setIsPopupOverlayShown(is_overlay_shown);\n            }\n        }, [is_overlay_shown, setIsPopupOverlayShown]);\n\n        const toggleOverlay = () => setIsOverlayShown(!is_overlay_shown);\n\n        if (is_switching) {\n            return <Loading is_fullscreen={false} />;\n        }\n\n        if (is_virtual) {\n            return (\n                <div\n                    data-testid='dt_account_demo_message_wrapper'\n                    className={classNames('account__demo-message-wrapper', {\n                        'account__demo-message-wrapper-dashboard': is_appstore,\n                    })}\n                >\n                    <DemoMessage has_demo_icon={is_appstore} has_button={is_appstore} />\n                </div>\n            );\n        }\n\n        const {\n            api_initial_load_error,\n            open_positions,\n            account_balance,\n            payout,\n            market_specific,\n            num_of_days_limit,\n            remainder,\n            withdrawal_since_inception_monetary,\n        } = account_limits;\n\n        if (api_initial_load_error) {\n            return <LoadErrorMessage error_message={api_initial_load_error} />;\n        }\n\n        if (is_switching || is_loading) {\n            return <Loading is_fullscreen={false} />;\n        }\n\n        const { commodities, forex, indices, synthetic_index } = { ...market_specific };\n        const forex_ordered = forex\n            ?.slice()\n            .sort((a: FormikValues, b: FormikValues) => (a.name > b.name ? 1 : b.name > a.name ? -1 : 0));\n        const derived_ordered = synthetic_index\n            ?.slice()\n            .sort((a: FormikValues, b: FormikValues) => (a.level > b.level ? 1 : -1));\n\n        const context_value: TAccountLimitsContext = {\n            currency,\n            footer_ref,\n            overlay_ref,\n            toggleOverlay,\n        };\n\n        return (\n            <AccountLimitsContext.Provider value={context_value}>\n                <section className='da-account-limits__wrapper' data-testid='account_limits_data'>\n                    <div\n                        className={classNames('da-account-limits', {\n                            'da-account-limits--app-settings': is_app_settings,\n                        })}\n                    >\n                        {should_show_article && isMobile() && (\n                            <AccountLimitsArticle is_from_derivgo={is_from_derivgo} />\n                        )}\n                        <div className='da-account-limits__table-wrapper'>\n                            <ThemedScrollbars is_bypassed={should_bypass_scrollbars || isMobile()}>\n                                <table className='da-account-limits__table' data-testid='trading_limit_item_table'>\n                                    <thead>\n                                        <tr>\n                                            <AccountLimitsTableHeader>\n                                                <Localize i18n_default_text='Trading limits' />\n                                            </AccountLimitsTableHeader>\n                                            <AccountLimitsTableHeader align='right'>\n                                                <Localize i18n_default_text='Limit' />\n                                            </AccountLimitsTableHeader>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <AccountLimitsTableCell\n                                                renderExtraInfo={() => (\n                                                    <AccountLimitsExtraInfo\n                                                        message={localize(\n                                                            'Represents the maximum number of outstanding contracts in your portfolio. Each line in your portfolio counts for one open position. Once the maximum is reached, you will not be able to open new positions without closing an existing position first.'\n                                                        )}\n                                                    />\n                                                )}\n                                            >\n                                                <Localize i18n_default_text='*Maximum number of open positions' />\n                                            </AccountLimitsTableCell>\n                                            <AccountLimitsTableCell align='right'>\n                                                {open_positions}\n                                            </AccountLimitsTableCell>\n                                        </tr>\n                                        <tr>\n                                            <AccountLimitsTableCell\n                                                renderExtraInfo={() => (\n                                                    <AccountLimitsExtraInfo\n                                                        message={localize(\n                                                            'Represents the maximum amount of cash that you may hold in your account.  If the maximum is reached, you will be asked to withdraw funds.'\n                                                        )}\n                                                    />\n                                                )}\n                                            >\n                                                <Localize i18n_default_text='*Maximum account cash balance' />\n                                            </AccountLimitsTableCell>\n                                            <AccountLimitsTableCell align='right'>\n                                                {/* null or 0 are expected form BE when max balance limit is not set */}\n                                                {account_balance ? (\n                                                    formatMoney(currency, account_balance, true)\n                                                ) : (\n                                                    <Localize i18n_default_text='Not set' />\n                                                )}\n                                            </AccountLimitsTableCell>\n                                        </tr>\n                                        <tr>\n                                            <AccountLimitsTableCell\n                                                renderExtraInfo={() => (\n                                                    <AccountLimitsExtraInfo\n                                                        message={localize(\n                                                            'Represents the maximum aggregate payouts on outstanding contracts in your portfolio. If the maximum is attained, you may not purchase additional contracts without first closing out existing positions.'\n                                                        )}\n                                                    />\n                                                )}\n                                            >\n                                                <Localize i18n_default_text='Maximum aggregate payouts on open positions' />\n                                            </AccountLimitsTableCell>\n                                            <AccountLimitsTableCell align='right'>\n                                                {formatMoney(currency, payout, true)}\n                                            </AccountLimitsTableCell>\n                                        </tr>\n                                        <tr>\n                                            <AccountLimitsTableCell is_hint>\n                                                <Localize i18n_default_text='*Any limits in your Self-exclusion settings will override these default limits.' />\n                                            </AccountLimitsTableCell>\n                                            <AccountLimitsTableCell />\n                                        </tr>\n                                    </tbody>\n                                </table>\n                                <table className='da-account-limits__table' data-testid='trading_daily_turnover_table'>\n                                    <thead>\n                                        <tr>\n                                            <AccountLimitsTableHeader\n                                                renderExtraInfo={() => (\n                                                    <AccountLimitsExtraInfo\n                                                        message={localize(\n                                                            'Represents the maximum volume of contracts that you may purchase in any given trading day.'\n                                                        )}\n                                                    />\n                                                )}\n                                            >\n                                                <Localize i18n_default_text='Maximum daily turnover' />\n                                            </AccountLimitsTableHeader>\n                                            <AccountLimitsTableHeader align='right'>\n                                                <Localize i18n_default_text='Limit' />\n                                            </AccountLimitsTableHeader>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <AccountLimitsTurnoverLimitRow collection={commodities} />\n                                        <AccountLimitsTurnoverLimitRow collection={forex_ordered} />\n                                        <AccountLimitsTurnoverLimitRow collection={indices} />\n                                        <AccountLimitsTurnoverLimitRow collection={derived_ordered} />\n                                    </tbody>\n                                </table>\n                                {/* We only show \"Withdrawal Limits\" on account-wide settings pages. */}\n                                {!is_app_settings && (\n                                    <React.Fragment>\n                                        <table\n                                            className='da-account-limits__table'\n                                            data-testid='withdrawal_limits_table'\n                                        >\n                                            <thead>\n                                                <tr>\n                                                    <AccountLimitsTableHeader>\n                                                        <Localize i18n_default_text='Withdrawal limits' />\n                                                    </AccountLimitsTableHeader>\n                                                    {is_fully_authenticated && (\n                                                        <AccountLimitsTableHeader align='right'>\n                                                            <Localize i18n_default_text='Limit' />\n                                                        </AccountLimitsTableHeader>\n                                                    )}\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {is_fully_authenticated ? (\n                                                    <tr>\n                                                        <AccountLimitsTableCell>\n                                                            <React.Fragment>\n                                                                <Text size='xxs' color='prominent'>\n                                                                    {localize(\n                                                                        'Your account is fully authenticated and your withdrawal limits have been lifted.'\n                                                                    )}\n                                                                </Text>\n                                                            </React.Fragment>\n                                                        </AccountLimitsTableCell>\n                                                        <AccountLimitsTableCell />\n                                                    </tr>\n                                                ) : (\n                                                    <React.Fragment>\n                                                        <tr>\n                                                            <AccountLimitsTableCell>\n                                                                {is_appstore ? (\n                                                                    <Localize i18n_default_text='Total withdrawal limit' />\n                                                                ) : (\n                                                                    <Localize i18n_default_text='Total withdrawal allowed' />\n                                                                )}\n                                                                {is_appstore && !is_fully_authenticated && (\n                                                                    <React.Fragment>\n                                                                        <Text\n                                                                            size={isMobile() ? 'xxxs' : 'xxs'}\n                                                                            className='account-management-table__verify'\n                                                                            color='less-prominent'\n                                                                            line_height='xs'\n                                                                        >\n                                                                            {localize(\n                                                                                'To increase limit please verify your identity'\n                                                                            )}\n                                                                        </Text>\n                                                                        <ButtonLink\n                                                                            to='/account/proof-of-identity'\n                                                                            size='small'\n                                                                            className='account-management-table__verify-button'\n                                                                        >\n                                                                            <Text\n                                                                                weight='bold'\n                                                                                color='colored-background'\n                                                                                size={isMobile() ? 'xxxs' : 'xxs'}\n                                                                            >\n                                                                                {localize('Verify')}\n                                                                            </Text>\n                                                                        </ButtonLink>\n                                                                    </React.Fragment>\n                                                                )}\n                                                            </AccountLimitsTableCell>\n                                                            <AccountLimitsTableCell align='right'>\n                                                                {formatMoney(currency, num_of_days_limit, true)}\n                                                            </AccountLimitsTableCell>\n                                                        </tr>\n                                                        <tr>\n                                                            <AccountLimitsTableCell>\n                                                                <Localize i18n_default_text='Total withdrawn' />\n                                                            </AccountLimitsTableCell>\n                                                            <AccountLimitsTableCell align='right'>\n                                                                {formatMoney(\n                                                                    currency,\n                                                                    withdrawal_since_inception_monetary,\n                                                                    true\n                                                                )}\n                                                            </AccountLimitsTableCell>\n                                                        </tr>\n                                                        <tr>\n                                                            <AccountLimitsTableCell>\n                                                                <Localize i18n_default_text='Maximum withdrawal remaining' />\n                                                            </AccountLimitsTableCell>\n                                                            <AccountLimitsTableCell align='right'>\n                                                                {formatMoney(currency, remainder, true)}\n                                                            </AccountLimitsTableCell>\n                                                        </tr>\n                                                    </React.Fragment>\n                                                )}\n                                            </tbody>\n                                        </table>\n                                        {(!is_appstore || isMobile()) && (\n                                            <div className='da-account-limits__text-container'>\n                                                <Text as='p' size='xxs' color='less-prominent' line_height='xs'>\n                                                    {is_fully_authenticated ? (\n                                                        <Localize i18n_default_text='Your account is fully authenticated and your withdrawal limits have been lifted.' />\n                                                    ) : (\n                                                        <Localize i18n_default_text='Stated limits are subject to change without prior notice.' />\n                                                    )}\n                                                </Text>\n                                            </div>\n                                        )}\n                                    </React.Fragment>\n                                )}\n                            </ThemedScrollbars>\n                        </div>\n                        {should_show_article && isDesktop() && <AccountLimitsArticle />}\n                        {footer_ref && <AccountLimitsFooter />}\n                        {is_overlay_shown && overlay_ref && <AccountLimitsOverlay />}\n                    </div>\n                </section>\n            </AccountLimitsContext.Provider>\n        );\n    }\n);\n\nexport default AccountLimits;\n","import AccountLimits from './account-limits';\n\nexport default AccountLimits;\n","import React from 'react';\nimport { Text, HintBox } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport './poa-address-mismatch-hint-box.scss';\n\nconst POAAddressMismatchHintBox = () => {\n    const ref = React.useRef<HTMLDivElement | null>(null);\n\n    React.useEffect(() => {\n        // To make scrolling work on mobile we need to add a delay.\n        setTimeout(() => ref?.current?.scrollIntoView(), 0);\n    }, []);\n\n    return (\n        <div className='poa-address-mismatch-hint-box--wrapper' ref={ref}>\n            <HintBox\n                icon='IcAlertWarning'\n                message={\n                    <Text size='xxxs' color='prominent' line_height='xs'>\n                        <Localize\n                            i18n_default_text='It appears that the address in your document doesn’t match the address\n    in your Deriv profile. Please update your personal details now with the\n    correct address.'\n                        />\n                    </Text>\n                }\n                is_warn\n            />\n        </div>\n    );\n};\n\nexport default POAAddressMismatchHintBox;\n","import POAAddressMismatchHintBox from './poa-address-mismatch-hint-box';\n\nexport default POAAddressMismatchHintBox;\n","import classNames from 'classnames';\nimport { Field, Formik, Form } from 'formik';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport {\n    Autocomplete,\n    Button,\n    Checkbox,\n    DateOfBirthPicker,\n    DesktopWrapper,\n    Dropdown,\n    FormSubmitErrorMessage,\n    HintBox,\n    Input,\n    Loading,\n    MobileWrapper,\n    SelectNative,\n    Text,\n    useStateCallback,\n} from '@deriv/components';\nimport {\n    PlatformContext,\n    WS,\n    filterObjProperties,\n    getBrandWebsiteName,\n    getLocation,\n    isMobile,\n    regex_checks,\n    removeObjProperties,\n    routes,\n    toMoment,\n    useIsMounted,\n    validAddress,\n    validLength,\n    validLetterSymbol,\n    validPhone,\n    validPostCode,\n    removeEmptyPropertiesFromObject,\n} from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport LeaveConfirm from 'Components/leave-confirm';\nimport FormFooter from 'Components/form-footer';\nimport FormBody from 'Components/form-body';\nimport FormBodySection from 'Components/form-body-section';\nimport FormSubHeader from 'Components/form-sub-header';\nimport LoadErrorMessage from 'Components/load-error-message';\nimport POAAddressMismatchHintBox from 'Components/poa-address-mismatch-hint-box';\nimport { getEmploymentStatusList } from 'Sections/Assessment/FinancialAssessment/financial-information-list';\nimport { validateName, validate } from 'Helpers/utils';\n\nconst InputGroup = ({ children, className }) => {\n    const { is_appstore } = React.useContext(PlatformContext);\n    if (is_appstore) {\n        return React.Children.map(children, child => <fieldset className='account-form__fieldset'>{child}</fieldset>);\n    }\n    return (\n        <fieldset className='account-form__fieldset'>\n            <div className={className}>{children}</div>\n        </fieldset>\n    );\n};\n\nconst TaxResidenceSelect = ({ field, errors, setFieldValue, values, is_changeable, residence_list }) => (\n    <React.Fragment>\n        <DesktopWrapper>\n            <Autocomplete\n                {...field}\n                data-lpignore='true'\n                autoComplete='new-password' // prevent chrome autocomplete\n                type='text'\n                label={localize('Tax residence*')}\n                error={errors.tax_residence}\n                disabled={!is_changeable}\n                id='tax_residence'\n                list_items={residence_list}\n                onItemSelection={({ value, text }) => setFieldValue('tax_residence', value ? text : '', true)}\n                required\n            />\n        </DesktopWrapper>\n        <MobileWrapper>\n            <SelectNative\n                placeholder={localize('Tax residence*')}\n                label={localize('Tax residence*')}\n                value={values.tax_residence}\n                list_items={residence_list}\n                id={'tax_residence_mobile'}\n                error={errors.tax_residence}\n                disabled={!is_changeable}\n                use_text={true}\n                onChange={e => setFieldValue('tax_residence', e.target.value, true)}\n                required\n            />\n        </MobileWrapper>\n    </React.Fragment>\n);\n\nexport const PersonalDetailsForm = observer(({ history }) => {\n    const [is_loading, setIsLoading] = React.useState(true);\n\n    const [is_state_loading, setIsStateLoading] = useStateCallback(false);\n\n    const [is_btn_loading, setIsBtnLoading] = React.useState(false);\n\n    const [is_submit_success, setIsSubmitSuccess] = useStateCallback(false);\n    const { client, notifications, ui, common } = useStore();\n\n    const {\n        authentication_status,\n        is_eu,\n        landing_company_shortcode,\n        is_uk,\n        is_svg,\n        is_virtual,\n        residence_list,\n        states_list,\n        current_landing_company,\n        fetchResidenceList,\n        fetchStatesList,\n        has_residence,\n        account_settings,\n        getChangeableFields,\n        updateAccountStatus,\n        is_social_signup,\n        account_status,\n    } = client;\n\n    const {\n        refreshNotifications,\n        showPOAAddressMismatchSuccessNotification,\n        showPOAAddressMismatchFailureNotification,\n    } = notifications;\n\n    const { Notifications } = ui;\n    const { is_language_changing } = common;\n    const is_mf = landing_company_shortcode === 'maltainvest';\n    const has_poa_address_mismatch = account_status.status?.includes('poa_address_mismatch');\n    const [rest_state, setRestState] = React.useState({\n        show_form: true,\n        errors: false,\n        form_initial_values: {},\n    });\n\n    const [start_on_submit_timeout, setStartOnSubmitTimeout] = React.useState({\n        is_timeout_started: false,\n        timeout_callback: null,\n    });\n\n    const { is_appstore } = React.useContext(PlatformContext);\n    const isMounted = useIsMounted();\n\n    React.useEffect(() => {\n        if (isMounted()) {\n            const getSettings = async () => {\n                // waits for residence to be populated\n                await WS.wait('get_settings');\n\n                fetchResidenceList();\n\n                if (has_residence) {\n                    if (!is_language_changing) {\n                        setIsStateLoading(true, () => {\n                            fetchStatesList().then(() => {\n                                setIsStateLoading(false);\n                            });\n                        });\n                    }\n                }\n            };\n            getSettings();\n        }\n        initializeFormValues();\n    }, [account_settings, is_eu, is_mf, is_social_signup]);\n\n    React.useEffect(() => {\n        let timeout_id;\n        if (start_on_submit_timeout.is_timeout_started) {\n            timeout_id = setTimeout(() => {\n                setIsSubmitSuccess(false, start_on_submit_timeout.timeout_callback);\n            }, 10000);\n        }\n\n        return () => {\n            clearTimeout(timeout_id);\n        };\n    }, [start_on_submit_timeout.is_timeout_started]);\n\n    const makeSettingsRequest = settings => {\n        if (is_virtual) return { email_consent: +settings.email_consent };\n        const request = filterObjProperties(settings, [...rest_state.changeable_fields]);\n\n        request.email_consent = +request.email_consent; // checkbox is boolean but api expects number (1 or 0)\n        if (\n            !!request.request_professional_status &&\n            !!rest_state.form_initial_values.request_professional_status === false\n        ) {\n            // We can just send the value of request_professional_status once. Also backend just accepts true value for this field!\n            request.request_professional_status = +request.request_professional_status; // checkbox is boolean but api expects number (1 or 0)\n        } else {\n            // if it is already active we have to exclude it from request. otherwise backend returns error!\n            delete request.request_professional_status;\n        }\n\n        if (request.first_name) {\n            request.first_name = request.first_name.trim();\n        }\n\n        if (request.last_name) {\n            request.last_name = request.last_name.trim();\n        }\n        if (request.date_of_birth) {\n            request.date_of_birth = toMoment(request.date_of_birth).format('YYYY-MM-DD');\n        }\n\n        if (is_mf) {\n            if (request.tax_residence) {\n                request.tax_residence = getLocation(residence_list, request.tax_residence, 'value');\n            }\n\n            if (request.tax_identification_number) {\n                request.tax_identification_number = request.tax_identification_number.trim();\n            }\n        }\n\n        if (request.citizen) {\n            request.citizen = getLocation(residence_list, request.citizen, 'value');\n        }\n\n        if (request.place_of_birth) {\n            request.place_of_birth = getLocation(residence_list, request.place_of_birth, 'value');\n        } else {\n            delete request.place_of_birth;\n        }\n\n        if (request.address_state) {\n            request.address_state = states_list.length\n                ? getLocation(states_list, request.address_state, 'value')\n                : request.address_state;\n        }\n\n        return request;\n    };\n\n    const onSubmit = async (values, { setStatus, setSubmitting }) => {\n        setStatus({ msg: '' });\n        const request = makeSettingsRequest(values);\n        setIsBtnLoading(true);\n        const data = await WS.setSettings(request);\n\n        if (data.error) {\n            setStatus({ msg: data.error.message });\n            setIsBtnLoading(false);\n            setSubmitting(false);\n        } else {\n            // Adding a delay to show the notification after the page reload\n            setTimeout(() => {\n                if (data.set_settings.notification) {\n                    showPOAAddressMismatchSuccessNotification();\n                } else if (has_poa_address_mismatch) {\n                    showPOAAddressMismatchFailureNotification();\n                }\n            }, 2000);\n\n            // force request to update settings cache since settings have been updated\n            const response = await WS.authorized.storage.getSettings();\n            if (response.error) {\n                setRestState({ ...rest_state, api_error: response.error.message });\n                return;\n            }\n            // Fetches the status of the account after update\n            updateAccountStatus();\n            setRestState({ ...rest_state, ...response.get_settings });\n            setIsLoading(false);\n            refreshNotifications();\n            setIsBtnLoading(false);\n            setIsSubmitSuccess(true);\n            setStartOnSubmitTimeout({\n                is_timeout_started: true,\n                timeout_callback: () => {\n                    setSubmitting(false);\n                },\n            });\n            // redirection back based on 'from' param in query string\n            const url_query_string = window.location.search;\n            const url_params = new URLSearchParams(url_query_string);\n            if (url_params.get('from')) {\n                history.push(routes[url_params.get('from')]);\n            }\n        }\n    };\n\n    // TODO: standardize validations and refactor this\n    const validateFields = values => {\n        setIsSubmitSuccess(false);\n        const errors = {};\n        const validateValues = validate(errors, values);\n\n        if (is_virtual) return errors;\n\n        const required_fields = ['first_name', 'last_name', 'phone', 'address_line_1', 'address_city'];\n\n        if (is_mf) {\n            const required_tax_fields = ['tax_residence', 'tax_identification_number', 'employment_status'];\n            required_fields.push(...required_tax_fields);\n        }\n\n        validateValues(val => val, required_fields, localize('This field is required'));\n\n        if (is_eu) {\n            const residence_fields = ['citizen'];\n            const validateResidence = val => getLocation(residence_list, val, 'value');\n            validateValues(validateResidence, residence_fields, true);\n        }\n\n        const min_tax_identification_number = 0;\n        const max_tax_identification_number = 25;\n        if (values.tax_identification_number) {\n            if (\n                values.tax_identification_number &&\n                !/^(?!^$|\\s+)[A-Za-z0-9./\\s-]{0,25}$/.test(values.tax_identification_number)\n            ) {\n                errors.tax_identification_number = localize(\n                    'Only letters, numbers, space, hyphen, period, and forward slash are allowed.'\n                );\n            }\n            if (!/^[a-zA-Z0-9].*$/.test(values.tax_identification_number.charAt(0))) {\n                errors.tax_identification_number = localize(\n                    'Should start with letter or number and may contain a hyphen, period and slash.'\n                );\n            }\n            if (\n                !validLength(values.tax_identification_number.trim(), {\n                    min: min_tax_identification_number,\n                    max: max_tax_identification_number,\n                })\n            ) {\n                errors.tax_identification_number = localize(\n                    \"Tax Identification Number can't be longer than 25 characters.\"\n                );\n            }\n        }\n        if (values.first_name) errors.first_name = validateName(values.first_name);\n        if (values.last_name) errors.last_name = validateName(values.last_name);\n\n        if (values.phone) {\n            // minimum characters required is 9 numbers (excluding +- signs or space)\n            const min_phone_number = 9;\n            const max_phone_number = 35;\n            // phone_trim uses regex that trims non-digits\n            const phone_trim = values.phone.replace(/\\D/g, '');\n            const phone_error_message = localize('Please enter a valid phone number (e.g. +15417541234).');\n\n            if (!validLength(phone_trim, { min: min_phone_number, max: max_phone_number })) {\n                errors.phone = localize('You should enter {{min}}-{{max}} numbers.', {\n                    min: min_phone_number,\n                    max: max_phone_number,\n                });\n            } else if (!validPhone(values.phone)) {\n                errors.phone = phone_error_message;\n            }\n        }\n\n        const address_line_1_validation_result = validAddress(values.address_line_1, { is_required: true });\n        if (!address_line_1_validation_result.is_ok) {\n            errors.address_line_1 = address_line_1_validation_result.message;\n        }\n        const address_line_2_validation_result = validAddress(values.address_line_2);\n        if (!address_line_2_validation_result.is_ok) {\n            errors.address_line_2 = address_line_2_validation_result.message;\n        }\n\n        if (values.address_city && !validLetterSymbol(values.address_city)) {\n            errors.address_city = localize('Only letters, space, hyphen, period, and apostrophe are allowed.');\n        }\n\n        const state_is_input_element = values.address_state && !states_list.length;\n        if (state_is_input_element) {\n            if (!validLength(values.address_state, { min: 0, max: 35 })) {\n                errors.address_state = localize('You should enter 0-35 characters.');\n            } else if (!regex_checks.address_details.address_state.test(values.address_state)) {\n                errors.address_state = localize('State is not in a proper format');\n            }\n        }\n\n        // Not allowing Jersey postcodes with a UK residence.\n        if (\n            !regex_checks.address_details.non_jersey_postcode.test(values.address_postcode) &&\n            (is_uk || values.citizen === 'United Kingdom')\n        ) {\n            errors.address_postcode = localize('Our accounts and services are unavailable for the Jersey postal code');\n        }\n\n        if (values.address_postcode) {\n            if (!validLength(values.address_postcode, { min: 0, max: 20 })) {\n                errors.address_postcode = localize('Please enter a {{field_name}} under {{max_number}} characters.', {\n                    field_name: localize('postal/ZIP code'),\n                    max_number: 20,\n                    interpolation: { escapeValue: false },\n                });\n            } else if (!validPostCode(values.address_postcode)) {\n                errors.address_postcode = localize('Only letters, numbers, space, and hyphen are allowed.');\n            }\n        }\n\n        setRestState({ ...rest_state, errors: Object.keys(errors).length > 0 });\n\n        return removeEmptyPropertiesFromObject(errors);\n    };\n\n    const getWarningMessages = values => {\n        const warnings = {};\n        const active_errors = rest_state.errors;\n\n        const filter_tin_regex = residence_list.filter(residence => {\n            return residence.text === values.tax_residence && residence.tin_format;\n        });\n\n        const tin_regex = filter_tin_regex[0]?.tin_format?.[0];\n        const test_tin = new RegExp(tin_regex).test(values.tax_identification_number);\n        const valid_country_tin = tin_regex ? test_tin : true;\n\n        if (!active_errors) {\n            if (values.tax_identification_number) {\n                if (!valid_country_tin) {\n                    warnings.tax_identification_number = localize(\n                        'This Tax Identification Number (TIN) is invalid. You may continue using it, but to facilitate future payment processes, valid tax information will be required.'\n                    );\n                }\n            }\n        }\n        return warnings;\n    };\n\n    const showForm = show_form => setRestState({ show_form });\n\n    const isChangeableField = name => {\n        return rest_state.changeable_fields?.some(field => field === name);\n    };\n\n    const initializeFormValues = () => {\n        WS.wait('landing_company', 'get_account_status', 'get_settings').then(() => {\n            // Convert to boolean\n            account_settings.email_consent = !!account_settings.email_consent;\n            const hidden_settings = [\n                'account_opening_reason',\n                'allow_copiers',\n                !is_mf && 'tax_residence',\n                !is_mf && 'tax_identification_number',\n                !is_mf && 'employment_status',\n                'client_tnc_status',\n                'country_code',\n                'has_secret_answer',\n                'is_authenticated_payment_agent',\n                'user_hash',\n                'country',\n                (!is_appstore || !is_eu) && 'salutation',\n                'immutable_fields',\n            ];\n            const form_initial_values = removeObjProperties(hidden_settings, account_settings);\n            setRestState({\n                ...rest_state,\n                changeable_fields: is_virtual ? [] : getChangeableFields(),\n                form_initial_values,\n            });\n            setIsLoading(false);\n        });\n    };\n\n    const salutation_list = [\n        { text: localize('Mr'), value: 'Mr' },\n        { text: localize('Mrs'), value: 'Mrs' },\n        { text: localize('Ms'), value: 'Ms' },\n        { text: localize('Miss'), value: 'Miss' },\n    ];\n\n    const {\n        form_initial_values: { ...form_initial_values },\n        api_error,\n        show_form,\n    } = rest_state;\n\n    if (api_error) return <LoadErrorMessage error_message={api_error} />;\n\n    if (is_loading || is_state_loading || !residence_list.length) {\n        return <Loading is_fullscreen={false} className='account__initial-loader' />;\n    }\n\n    form_initial_values.citizen = form_initial_values.citizen\n        ? getLocation(residence_list, form_initial_values.citizen, 'text')\n        : '';\n    form_initial_values.place_of_birth = form_initial_values.place_of_birth\n        ? getLocation(residence_list, form_initial_values.place_of_birth, 'text')\n        : '';\n    if (form_initial_values.address_state) {\n        form_initial_values.address_state = states_list.length\n            ? getLocation(states_list, form_initial_values.address_state, 'text')\n            : form_initial_values.address_state;\n    } else {\n        form_initial_values.address_state = '';\n    }\n    if (is_mf) {\n        if (form_initial_values.tax_residence) {\n            const is_single_tax_value = form_initial_values.tax_residence.indexOf(',') < 0;\n            // if there's only one tax residence set, show it in drop-down\n            if (is_single_tax_value) {\n                form_initial_values.tax_residence = getLocation(\n                    residence_list,\n                    form_initial_values.tax_residence,\n                    'text'\n                );\n            } else if (isChangeableField('tax_residence')) {\n                // if there are multiple tax residences and user is allowed to update it\n                // select the first tax residence in drop-down\n                const first_tax_residence = form_initial_values.tax_residence.split(',')[0];\n                form_initial_values.tax_residence = getLocation(residence_list, first_tax_residence, 'text');\n            } else {\n                // otherwise show all tax residences in a disabled input field\n                const tax_residences = [];\n                form_initial_values.tax_residence.split(',').forEach(residence => {\n                    tax_residences.push(getLocation(residence_list, residence, 'text'));\n                });\n                form_initial_values.tax_residence = tax_residences;\n            }\n        } else {\n            form_initial_values.tax_residence = '';\n        }\n        if (!form_initial_values.tax_identification_number) form_initial_values.tax_identification_number = '';\n        if (!form_initial_values.employment_status) form_initial_values.employment_status = '';\n    }\n\n    const is_poa_verified = authentication_status?.document_status === 'verified';\n    const is_poi_verified = authentication_status?.identity_status === 'verified';\n\n    const is_account_verified = is_poa_verified && is_poi_verified;\n\n    //Generate Redirection Link to user based on verifiction status\n    const getRedirectionLink = () => {\n        if (!is_poi_verified) {\n            return '/account/proof-of-identity';\n        } else if (!is_poa_verified) {\n            return '/account/proof-of-address';\n        }\n        return null;\n    };\n\n    return (\n        <Formik initialValues={form_initial_values} enableReinitialize onSubmit={onSubmit} validate={validateFields}>\n            {({\n                values,\n                errors,\n                status,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                isSubmitting,\n                setFieldValue,\n                setFieldTouched,\n                setTouched,\n                dirty,\n            }) => (\n                <React.Fragment>\n                    {Notifications && <Notifications />}\n                    <LeaveConfirm onDirty={isMobile() ? showForm : null} />\n                    {show_form && (\n                        <Form\n                            noValidate\n                            className={classNames('account-form account-form__personal-details', {\n                                'account-form account-form__personal-details--dashboard': is_appstore,\n                            })}\n                            onSubmit={handleSubmit}\n                            data-testid='dt_account_personal_details_section'\n                        >\n                            <FormBody scroll_offset={isMobile() ? '199px' : '80px'}>\n                                <FormSubHeader title={localize('Details')} />\n                                {!is_virtual && (\n                                    <React.Fragment>\n                                        <FormBodySection\n                                            has_side_note={is_appstore}\n                                            side_note={localize(\n                                                'We use the information you give us only for verification purposes. All information is kept confidential.'\n                                            )}\n                                        >\n                                            {is_appstore && is_eu && (\n                                                <fieldset className='account-form__fieldset'>\n                                                    <DesktopWrapper>\n                                                        <Field name='salutation'>\n                                                            {({ field }) => (\n                                                                <Autocomplete\n                                                                    {...field}\n                                                                    data-lpignore='true'\n                                                                    autoComplete='new-password' // prevent chrome autocomplete\n                                                                    type='text'\n                                                                    label={localize('Title*')}\n                                                                    error={errors.salutation}\n                                                                    list_items={salutation_list}\n                                                                    onItemSelection={({ value, text }) =>\n                                                                        setFieldValue(\n                                                                            'salutation',\n                                                                            value ? text : '',\n                                                                            true\n                                                                        )\n                                                                    }\n                                                                    id={'salutation'}\n                                                                    disabled={!isChangeableField('salutation')}\n                                                                />\n                                                            )}\n                                                        </Field>\n                                                    </DesktopWrapper>\n                                                    <MobileWrapper>\n                                                        <SelectNative\n                                                            placeholder={localize('Please select')}\n                                                            label={localize('Title')}\n                                                            value={values.salutation}\n                                                            list_items={salutation_list}\n                                                            use_text={true}\n                                                            error={errors.salutation}\n                                                            onChange={e =>\n                                                                setFieldValue('salutation', e.target.value, true)\n                                                            }\n                                                            disabled={!isChangeableField('salutation')}\n                                                            id={'salutation_mobile'}\n                                                        />\n                                                    </MobileWrapper>\n                                                </fieldset>\n                                            )}\n                                            <DesktopWrapper>\n                                                <InputGroup className='account-form__fieldset--2-cols'>\n                                                    <Input\n                                                        data-lpignore='true'\n                                                        type='text'\n                                                        name='first_name'\n                                                        label={localize('First name*')}\n                                                        value={values.first_name}\n                                                        onChange={handleChange}\n                                                        onBlur={handleBlur}\n                                                        required\n                                                        disabled={!isChangeableField('first_name')}\n                                                        error={errors.first_name}\n                                                        id='first_name'\n                                                        data-testid='dt_first_name'\n                                                    />\n                                                    <Input\n                                                        id='last_name'\n                                                        data-lpignore='true'\n                                                        type='text'\n                                                        name='last_name'\n                                                        label={localize('Last name*')}\n                                                        value={values.last_name}\n                                                        onChange={handleChange}\n                                                        onBlur={handleBlur}\n                                                        required\n                                                        disabled={!isChangeableField('last_name')}\n                                                        error={errors.last_name}\n                                                        data-testid='dt_last_name'\n                                                    />\n                                                </InputGroup>\n                                            </DesktopWrapper>\n                                            <MobileWrapper>\n                                                <fieldset className='account-form__fieldset'>\n                                                    <Input\n                                                        data-lpignore='true'\n                                                        type='text'\n                                                        name='first_name'\n                                                        id='first_name_mobile'\n                                                        label={localize('First name*')}\n                                                        value={values.first_name}\n                                                        onChange={handleChange}\n                                                        onBlur={handleBlur}\n                                                        required\n                                                        disabled={!isChangeableField('first_name')}\n                                                        error={errors.first_name}\n                                                        data-testid='dt_first_name'\n                                                    />\n                                                </fieldset>\n                                                <fieldset className='account-form__fieldset'>\n                                                    <Input\n                                                        data-lpignore='true'\n                                                        type='text'\n                                                        name='last_name'\n                                                        id='last_name_mobile'\n                                                        label={localize('Last name*')}\n                                                        value={values.last_name}\n                                                        onChange={handleChange}\n                                                        onBlur={handleBlur}\n                                                        required\n                                                        disabled={!isChangeableField('last_name')}\n                                                        error={errors.last_name}\n                                                        data-testid='dt_last_name'\n                                                    />\n                                                </fieldset>\n                                            </MobileWrapper>\n                                            <fieldset className='account-form__fieldset'>\n                                                <DesktopWrapper>\n                                                    <Field name='place_of_birth'>\n                                                        {({ field }) => (\n                                                            <Autocomplete\n                                                                {...field}\n                                                                data-lpignore='true'\n                                                                autoComplete='new-password' // prevent chrome autocomplete\n                                                                type='text'\n                                                                label={\n                                                                    is_svg\n                                                                        ? localize('Place of birth')\n                                                                        : localize('Place of birth*')\n                                                                }\n                                                                error={errors.place_of_birth}\n                                                                id='birth_place'\n                                                                required={!is_svg}\n                                                                disabled={!isChangeableField('place_of_birth')}\n                                                                list_items={residence_list}\n                                                                onItemSelection={({ value, text }) =>\n                                                                    setFieldValue(\n                                                                        'place_of_birth',\n                                                                        value ? text : '',\n                                                                        true\n                                                                    )\n                                                                }\n                                                            />\n                                                        )}\n                                                    </Field>\n                                                </DesktopWrapper>\n                                                <MobileWrapper>\n                                                    <SelectNative\n                                                        placeholder={localize('Please select')}\n                                                        label={\n                                                            is_svg\n                                                                ? localize('Place of birth')\n                                                                : localize('Place of birth*')\n                                                        }\n                                                        required={!is_svg}\n                                                        disabled={!isChangeableField('place_of_birth')}\n                                                        value={values.place_of_birth}\n                                                        list_items={residence_list}\n                                                        use_text={true}\n                                                        error={errors.place_of_birth}\n                                                        onChange={e =>\n                                                            setFieldValue('place_of_birth', e.target.value, true)\n                                                        }\n                                                        id='birth_place_mobile'\n                                                        should_hide_disabled_options={false}\n                                                    />\n                                                </MobileWrapper>\n                                            </fieldset>\n                                            <fieldset className='account-form__fieldset'>\n                                                <DateOfBirthPicker\n                                                    name='date_of_birth'\n                                                    label={localize('Date of birth*')}\n                                                    error={errors.date_of_birth}\n                                                    onBlur={() => setTouched({ date_of_birth: true })}\n                                                    onChange={({ target }) =>\n                                                        setFieldValue(\n                                                            'date_of_birth',\n                                                            target?.value\n                                                                ? toMoment(target.value).format('YYYY-MM-DD')\n                                                                : '',\n                                                            true\n                                                        )\n                                                    }\n                                                    id={'birth_day'}\n                                                    disabled={!isChangeableField('date_of_birth')}\n                                                    value={values.date_of_birth}\n                                                />\n                                            </fieldset>\n                                            <fieldset className='account-form__fieldset'>\n                                                <DesktopWrapper>\n                                                    <Field name='citizen'>\n                                                        {({ field }) => (\n                                                            <Autocomplete\n                                                                {...field}\n                                                                data-lpignore='true'\n                                                                autoComplete='new-password' // prevent chrome autocomplete\n                                                                type='text'\n                                                                label={\n                                                                    is_eu\n                                                                        ? localize('Citizenship*')\n                                                                        : localize('Citizenship')\n                                                                }\n                                                                error={errors.citizen}\n                                                                disabled={!isChangeableField('citizen')}\n                                                                list_items={residence_list}\n                                                                onItemSelection={({ value, text }) =>\n                                                                    setFieldValue('citizen', value ? text : '', true)\n                                                                }\n                                                                id={'password'}\n                                                                required={is_eu}\n                                                            />\n                                                        )}\n                                                    </Field>\n                                                </DesktopWrapper>\n                                                <MobileWrapper>\n                                                    <MobileWrapper>\n                                                        <SelectNative\n                                                            placeholder={localize('Please select')}\n                                                            label={\n                                                                is_eu\n                                                                    ? localize('Citizenship*')\n                                                                    : localize('Citizenship')\n                                                            }\n                                                            id={'citizen_ship'}\n                                                            required={is_eu}\n                                                            disabled={!isChangeableField('citizen')}\n                                                            value={values.citizen}\n                                                            list_items={residence_list}\n                                                            error={errors.citizen}\n                                                            use_text={true}\n                                                            onChange={e =>\n                                                                setFieldValue('citizen', e.target.value, true)\n                                                            }\n                                                            should_hide_disabled_options={false}\n                                                        />\n                                                    </MobileWrapper>\n                                                </MobileWrapper>\n                                            </fieldset>\n                                        </FormBodySection>\n                                    </React.Fragment>\n                                )}\n                                <FormBodySection has_side_note={is_appstore}>\n                                    <fieldset className='account-form__fieldset'>\n                                        <Input\n                                            data-lpignore='true'\n                                            type='text'\n                                            name='residence'\n                                            id={'residence'}\n                                            label={localize('Country of residence*')}\n                                            value={values.residence}\n                                            required\n                                            disabled={!isChangeableField('residence')}\n                                            error={errors.residence}\n                                            onChange={handleChange}\n                                        />\n                                    </fieldset>\n                                    {is_social_signup && (\n                                        <fieldset className='account-form__fieldset'>\n                                            <Input\n                                                data-lpignore='true'\n                                                type='text'\n                                                name='email'\n                                                id={'email'}\n                                                label={localize('Email address*')}\n                                                value={values.email}\n                                                required\n                                                disabled={!isChangeableField('email')}\n                                                error={errors.email}\n                                                onChange={handleChange}\n                                            />\n                                        </fieldset>\n                                    )}\n                                </FormBodySection>\n                                {!is_virtual && (\n                                    <React.Fragment>\n                                        <FormBodySection has_side_note={is_appstore}>\n                                            <fieldset className='account-form__fieldset'>\n                                                <Input\n                                                    data-lpignore='true'\n                                                    type='text'\n                                                    name='phone'\n                                                    id={'phone'}\n                                                    label={localize('Phone number*')}\n                                                    value={values.phone}\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    required\n                                                    error={errors.phone}\n                                                    data-testid='dt_phone'\n                                                />\n                                            </fieldset>\n                                        </FormBodySection>\n                                    </React.Fragment>\n                                )}\n                                <React.Fragment>\n                                    {is_mf && (\n                                        <React.Fragment>\n                                            <FormSubHeader title={localize('Tax information')} />\n                                            <FormBodySection\n                                                has_side_note={is_appstore}\n                                                side_note={localize(\n                                                    'We’re legally obliged to ask for your tax information.'\n                                                )}\n                                            >\n                                                {'tax_residence' in values && (\n                                                    <fieldset className='account-form__fieldset'>\n                                                        <Field name='tax_residence'>\n                                                            {({ field }) => (\n                                                                <React.Fragment>\n                                                                    {Array.isArray(values.tax_residence) &&\n                                                                    !isChangeableField('tax_residence') ? (\n                                                                        <fieldset className='account-form__fieldset'>\n                                                                            <Input\n                                                                                type='text'\n                                                                                id={'tax_residence_disabled'}\n                                                                                name='tax_residence'\n                                                                                label={localize('Tax residence*')}\n                                                                                value={values.tax_residence.join(', ')}\n                                                                                disabled\n                                                                            />\n                                                                        </fieldset>\n                                                                    ) : (\n                                                                        <TaxResidenceSelect\n                                                                            is_changeable={isChangeableField(\n                                                                                'tax_residence'\n                                                                            )}\n                                                                            field={field}\n                                                                            id={'tax_residence'}\n                                                                            touched={touched}\n                                                                            errors={errors}\n                                                                            setFieldValue={setFieldValue}\n                                                                            values={values}\n                                                                            residence_list={residence_list}\n                                                                        />\n                                                                    )}\n                                                                </React.Fragment>\n                                                            )}\n                                                        </Field>\n                                                    </fieldset>\n                                                )}\n                                                {'tax_identification_number' in values && (\n                                                    <fieldset\n                                                        className={classNames('account-form__fieldset', {\n                                                            'account-form__fieldset--tin':\n                                                                getWarningMessages(values).tax_identification_number,\n                                                        })}\n                                                    >\n                                                        <Input\n                                                            data-lpignore='true'\n                                                            type='text'\n                                                            id={'tax_identification_number'}\n                                                            name='tax_identification_number'\n                                                            label={localize('Tax identification number*')}\n                                                            value={values.tax_identification_number}\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            warn={getWarningMessages(values).tax_identification_number}\n                                                            error={errors.tax_identification_number}\n                                                            disabled={!isChangeableField('tax_identification_number')}\n                                                            required\n                                                        />\n                                                    </fieldset>\n                                                )}\n                                                {'employment_status' in values && (\n                                                    <fieldset className='account-form__fieldset'>\n                                                        <DesktopWrapper>\n                                                            <Dropdown\n                                                                placeholder={localize('Employment status')}\n                                                                is_align_text_left\n                                                                name='employment_status'\n                                                                list={getEmploymentStatusList()}\n                                                                value={values.employment_status}\n                                                                onChange={handleChange}\n                                                                handleBlur={handleBlur}\n                                                                error={\n                                                                    touched.employment_status &&\n                                                                    errors.employment_status\n                                                                }\n                                                            />\n                                                        </DesktopWrapper>\n                                                        <MobileWrapper>\n                                                            <SelectNative\n                                                                className={'emp-status'}\n                                                                placeholder={localize('Please select')}\n                                                                name='employment_status'\n                                                                label={localize('Employment status')}\n                                                                list_items={getEmploymentStatusList()}\n                                                                value={values.employment_status}\n                                                                error={\n                                                                    touched.employment_status &&\n                                                                    errors.employment_status\n                                                                }\n                                                                onChange={e => {\n                                                                    setFieldTouched('employment_status', true);\n                                                                    handleChange(e);\n                                                                }}\n                                                            />\n                                                        </MobileWrapper>\n                                                    </fieldset>\n                                                )}\n                                            </FormBodySection>\n                                        </React.Fragment>\n                                    )}\n                                    {!is_appstore && !is_virtual && (\n                                        <React.Fragment>\n                                            {has_poa_address_mismatch && <POAAddressMismatchHintBox />}\n                                            <FormSubHeader title={localize('Address')} />\n                                            <FormBodySection has_side_note={is_appstore}>\n                                                <div className='account-address__details-section'>\n                                                    <fieldset className='account-form__fieldset'>\n                                                        <Input\n                                                            data-lpignore='true'\n                                                            autoComplete='off' // prevent chrome autocomplete\n                                                            type='text'\n                                                            maxLength={70}\n                                                            name='address_line_1'\n                                                            id='address_line_1'\n                                                            label={localize('First line of address*')}\n                                                            value={values.address_line_1}\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            error={errors.address_line_1}\n                                                            required\n                                                            disabled={!isChangeableField('address_line_1')}\n                                                            data-testid='dt_address_line_1'\n                                                        />\n                                                    </fieldset>\n                                                    <fieldset className='account-form__fieldset'>\n                                                        <Input\n                                                            data-lpignore='true'\n                                                            autoComplete='off' // prevent chrome autocomplete\n                                                            type='text'\n                                                            maxLength={70}\n                                                            name='address_line_2'\n                                                            id='address_line_2'\n                                                            label={localize('Second line of address (optional)')}\n                                                            value={values.address_line_2}\n                                                            error={errors.address_line_2}\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            required\n                                                            disabled={!isChangeableField('address_line_2')}\n                                                        />\n                                                    </fieldset>\n                                                    <fieldset className='account-form__fieldset'>\n                                                        <Input\n                                                            data-lpignore='true'\n                                                            autoComplete='off' // prevent chrome autocomplete\n                                                            type='text'\n                                                            name='address_city'\n                                                            id='address_city'\n                                                            label={localize('Town/City*')}\n                                                            value={values.address_city}\n                                                            error={errors.address_city}\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            required\n                                                            disabled={!isChangeableField('address_city')}\n                                                            data-testid='dt_address_city'\n                                                        />\n                                                    </fieldset>\n                                                    <fieldset className='account-form__fieldset'>\n                                                        {states_list.length ? (\n                                                            <>\n                                                                <DesktopWrapper>\n                                                                    <Field name='address_state'>\n                                                                        {({ field }) => (\n                                                                            <Autocomplete\n                                                                                {...field}\n                                                                                data-lpignore='true'\n                                                                                autoComplete='new-password' // prevent chrome autocomplete\n                                                                                type='text'\n                                                                                label={localize(\n                                                                                    'State/Province (optional)'\n                                                                                )}\n                                                                                id={'state_province'}\n                                                                                error={errors.address_state}\n                                                                                list_items={states_list}\n                                                                                onItemSelection={({ value, text }) =>\n                                                                                    setFieldValue(\n                                                                                        'address_state',\n                                                                                        value ? text : '',\n                                                                                        true\n                                                                                    )\n                                                                                }\n                                                                                disabled={\n                                                                                    !isChangeableField('address_state')\n                                                                                }\n                                                                            />\n                                                                        )}\n                                                                    </Field>\n                                                                </DesktopWrapper>\n                                                                <MobileWrapper>\n                                                                    <SelectNative\n                                                                        placeholder={localize('Please select')}\n                                                                        label={localize('State/Province (optional)')}\n                                                                        value={values.address_state}\n                                                                        list_items={states_list}\n                                                                        id={'state_province_mobile'}\n                                                                        error={errors.address_state}\n                                                                        use_text={true}\n                                                                        onChange={e =>\n                                                                            setFieldValue(\n                                                                                'address_state',\n                                                                                e.target.value,\n                                                                                true\n                                                                            )\n                                                                        }\n                                                                        disabled={!isChangeableField('address_state')}\n                                                                    />\n                                                                </MobileWrapper>\n                                                            </>\n                                                        ) : (\n                                                            <Input\n                                                                data-lpignore='true'\n                                                                autoComplete='off' // prevent chrome autocomplete\n                                                                type='text'\n                                                                name='address_state'\n                                                                id='address_state'\n                                                                label={localize('State/Province (optional)')}\n                                                                value={values.address_state}\n                                                                error={errors.address_state}\n                                                                onChange={handleChange}\n                                                                onBlur={handleBlur}\n                                                                disabled={!isChangeableField('address_state')}\n                                                            />\n                                                        )}\n                                                    </fieldset>\n                                                    <fieldset className='account-form__fieldset'>\n                                                        <Input\n                                                            data-lpignore='true'\n                                                            autoComplete='off' // prevent chrome autocomplete\n                                                            type='text'\n                                                            name='address_postcode'\n                                                            id='address_postcode'\n                                                            label={localize('Postal/ZIP code')}\n                                                            value={values.address_postcode}\n                                                            error={errors.address_postcode}\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            disabled={!isChangeableField('address_postcode')}\n                                                        />\n                                                    </fieldset>\n                                                </div>\n                                            </FormBodySection>\n                                        </React.Fragment>\n                                    )}\n                                </React.Fragment>\n                                {!!current_landing_company?.support_professional_client && (\n                                    <>\n                                        <div className='account-form__divider' />\n                                        <div className='pro-client'>\n                                            <FormSubHeader title={localize('Professional Client')} />\n                                            <FormBodySection>\n                                                <fieldset className='account-form__fieldset'>\n                                                    <div>\n                                                        <Text as='p' size='xs'>\n                                                            <Localize\n                                                                i18n_default_text='By default, all {{brand_website_name}} clients are retail clients but anyone can request to be treated as a professional client.'\n                                                                values={{\n                                                                    brand_website_name: getBrandWebsiteName(),\n                                                                }}\n                                                            />\n                                                        </Text>\n                                                        <Text as='p' size='xs'>\n                                                            <Localize i18n_default_text='A professional client receives a lower degree of client protection due to the following.' />\n                                                        </Text>\n                                                        <Text as='p' size='xs'>\n                                                            <Localize i18n_default_text='We presume that you possess the experience, knowledge, and expertise to make your own investment decisions and properly assess the risk involved.' />\n                                                        </Text>\n                                                        <Text as='p' size='xs' className='last-child'>\n                                                            <Localize i18n_default_text='We’re not obliged to conduct an appropriateness test, nor provide you with any risk warnings.' />\n                                                        </Text>\n                                                    </div>\n                                                    {is_account_verified ? (\n                                                        <Checkbox\n                                                            name='request_professional_status'\n                                                            value={values.request_professional_status}\n                                                            onChange={() => {\n                                                                setFieldValue(\n                                                                    'request_professional_status',\n                                                                    !values.request_professional_status\n                                                                );\n                                                                setFieldTouched(\n                                                                    'request_professional_status',\n                                                                    true,\n                                                                    true\n                                                                );\n                                                            }}\n                                                            label={localize(\n                                                                'I would like to be treated as a professional client.'\n                                                            )}\n                                                            id='request_professional_status'\n                                                            defaultChecked={!!values.request_professional_status}\n                                                            disabled={\n                                                                is_virtual ||\n                                                                !!form_initial_values.request_professional_status\n                                                            }\n                                                            greyDisabled\n                                                            className={classNames({\n                                                                'dc-checkbox-blue': is_appstore,\n                                                            })}\n                                                        />\n                                                    ) : (\n                                                        <HintBox\n                                                            icon='IcInfoBlue'\n                                                            icon_height={20}\n                                                            icon_width={30}\n                                                            message={\n                                                                <Text as='p' size='xs'>\n                                                                    <Localize\n                                                                        i18n_default_text='You’ll need to authenticate your account before requesting to become a professional client. <0>Authenticate my account</0>'\n                                                                        components={[\n                                                                            <a\n                                                                                key={0}\n                                                                                className='link--no-bold'\n                                                                                rel='noopener noreferrer'\n                                                                                target='_blank'\n                                                                                href={getRedirectionLink()}\n                                                                            />,\n                                                                        ]}\n                                                                    />\n                                                                </Text>\n                                                            }\n                                                            is_info\n                                                            is_inline\n                                                        />\n                                                    )}\n                                                </fieldset>\n                                            </FormBodySection>\n                                        </div>\n                                        <div className='account-form__divider' />\n                                    </>\n                                )}\n                                <FormSubHeader title={localize('Email preference')} />\n                                <FormBodySection\n                                    has_side_note={is_appstore}\n                                    side_note={localize('Check this box to receive updates via email.')}\n                                >\n                                    <fieldset className='account-form__fieldset'>\n                                        <Checkbox\n                                            name='email_consent'\n                                            value={values.email_consent}\n                                            onChange={() => {\n                                                setFieldValue('email_consent', !values.email_consent);\n                                                setFieldTouched('email_consent', true, true);\n                                            }}\n                                            label={localize('Get updates about Deriv products, services and events.')}\n                                            id='email_consent'\n                                            defaultChecked={!!values.email_consent}\n                                            disabled={!isChangeableField('email_consent') && !is_virtual}\n                                            className={classNames({ 'dc-checkbox-blue': is_appstore })}\n                                        />\n                                    </fieldset>\n                                </FormBodySection>\n                            </FormBody>\n                            <FormFooter>\n                                {status && status.msg && <FormSubmitErrorMessage message={status.msg} />}\n                                {!is_virtual && !(isSubmitting || is_submit_success || (status && status.msg)) && (\n                                    <Text className='account-form__footer-note' size='xxxs'>\n                                        {localize(\n                                            'Please make sure your information is correct or it may affect your trading experience.'\n                                        )}\n                                    </Text>\n                                )}\n                                <Button\n                                    className={classNames('account-form__footer-btn', {\n                                        'dc-btn--green': is_submit_success,\n                                    })}\n                                    type='submit'\n                                    is_disabled={\n                                        isSubmitting ||\n                                        !dirty ||\n                                        (is_virtual\n                                            ? false\n                                            : !!(\n                                                  errors.first_name ||\n                                                  !values.first_name ||\n                                                  errors.last_name ||\n                                                  !values.last_name ||\n                                                  errors.phone ||\n                                                  !values.phone ||\n                                                  (is_mf && errors.tax_residence) ||\n                                                  (is_mf && !values.tax_residence) ||\n                                                  (is_mf && errors.tax_identification_number) ||\n                                                  (is_mf && !values.tax_identification_number) ||\n                                                  (!is_svg && errors.place_of_birth) ||\n                                                  (!is_svg && !values.place_of_birth) ||\n                                                  errors.address_line_1 ||\n                                                  !values.address_line_1 ||\n                                                  errors.address_line_2 ||\n                                                  errors.address_city ||\n                                                  !values.address_city ||\n                                                  errors.address_state ||\n                                                  errors.address_postcode\n                                              ))\n                                    }\n                                    has_effect\n                                    is_loading={is_btn_loading}\n                                    is_submit_success={is_submit_success}\n                                    text={is_appstore ? localize('Save') : localize('Submit')}\n                                    large\n                                    primary\n                                />\n                            </FormFooter>\n                        </Form>\n                    )}\n                </React.Fragment>\n            )}\n        </Formik>\n    );\n});\n\nPersonalDetailsForm.propTypes = {\n    history: PropTypes.object,\n};\n\nexport default withRouter(PersonalDetailsForm);\n","import DemoMessage from 'Components/demo-message';\nimport { PlatformContext } from '@deriv/shared';\nimport ProofOfAddressContainer from './proof-of-address-container.jsx';\nimport React from 'react';\nimport { observer, useStore } from '@deriv/stores';\n\nconst ProofOfAddress = observer(() => {\n    const { client, notifications, common } = useStore();\n    const { app_routing_history } = common;\n    const { is_virtual, landing_company_shortcode, has_restricted_mt5_account, is_switching } = client;\n    const { refreshNotifications } = notifications;\n    const { is_appstore } = React.useContext(PlatformContext);\n    if (is_virtual) return <DemoMessage has_demo_icon={is_appstore} has_button={true} />;\n\n    return (\n        <ProofOfAddressContainer\n            is_mx_mlt={landing_company_shortcode === 'iom' || landing_company_shortcode === 'malta'}\n            is_switching={is_switching}\n            refreshNotifications={refreshNotifications}\n            has_restricted_mt5_account={has_restricted_mt5_account}\n            app_routing_history={app_routing_history}\n        />\n    );\n});\n\nexport default ProofOfAddress;\n","import React from 'react';\nimport { localize } from '@deriv/translations';\nimport { Button, Input, Icon } from '@deriv/components';\nimport classNames from 'classnames';\nimport { compressImageFiles } from '@deriv/shared';\nimport PropTypes from 'prop-types';\n\nconst FileUploader = ({\n    class_name,\n    error,\n    file_name,\n    handleFile,\n    index,\n    item_index,\n    name,\n    sub_index,\n    updateErrors,\n}) => {\n    const [show_browse_button, setShowBrowseButton] = React.useState(!file_name);\n    // Create a reference to the hidden file input element\n    const hidden_file_input = React.useRef(null);\n    const handleClick = e => {\n        e.nativeEvent.preventDefault();\n        e.nativeEvent.stopPropagation();\n        e.nativeEvent.stopImmediatePropagation();\n        hidden_file_input.current.click();\n    };\n\n    const handleChange = async event => {\n        event.nativeEvent.preventDefault();\n        event.nativeEvent.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n        const file_to_upload = await compressImageFiles([event.target.files[0]]);\n        handleFile(name, file_to_upload[0]);\n        setShowBrowseButton(!file_to_upload[0]);\n    };\n    const handleIconClick = async e => {\n        e.nativeEvent.preventDefault();\n        e.nativeEvent.stopPropagation();\n        e.nativeEvent.stopImmediatePropagation();\n        hidden_file_input.current.value = '';\n        await handleFile(name, '');\n        setShowBrowseButton(prevState => !prevState);\n        await updateErrors(index, item_index, sub_index);\n    };\n    return (\n        <div className={`file-uploader ${class_name}`}>\n            <input\n                type='file'\n                accept='image/png, image/jpeg, image/jpg, application/pdf'\n                ref={hidden_file_input}\n                onChange={handleChange}\n                className='hidden-input'\n                name={name}\n            />\n            <Input\n                name='cardImgName'\n                required\n                label={localize('Choose a photo')}\n                maxLength={255}\n                hint={localize('Accepted formats: pdf, jpeg, jpg, and png. Max file size: 8MB')}\n                value={file_name}\n                readOnly\n                color='less-prominent'\n                type={'text'}\n                tabIndex={'-1'}\n                error={error}\n                trailing_icon={\n                    <Icon\n                        onClick={handleIconClick}\n                        icon='IcCross'\n                        height='100%'\n                        size={20}\n                        className={classNames('stack-top ', {\n                            'remove-element': show_browse_button,\n                        })}\n                    />\n                }\n            />\n            <Button\n                className={classNames('proof-of-ownership__card-open-inputs-photo-btn ', {\n                    'remove-element': !show_browse_button,\n                })}\n                text={localize('Browse')}\n                onClick={handleClick}\n                primary\n            />\n        </div>\n    );\n};\n\nFileUploader.propTypes = {\n    class_name: PropTypes.string,\n    error: PropTypes.string,\n    file_name: PropTypes.string,\n    handleFile: PropTypes.func,\n    index: PropTypes.number,\n    item_index: PropTypes.number,\n    name: PropTypes.string,\n    sub_index: PropTypes.number,\n    updateErrors: PropTypes.func,\n};\n\nexport default FileUploader;\n","import { SampleCreditCardModal } from './sample-credit-card-modal.jsx';\n\nexport default SampleCreditCardModal;\n","import React from 'react';\nimport { Modal, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { getUrlBase } from '@deriv/shared';\n\nexport const SampleCreditCardModal = ({ is_open, onClose }) => {\n    return (\n        <Modal\n            className='sample-credit-card-modal'\n            is_open={is_open}\n            should_header_stick_body\n            title={<Localize i18n_default_text='How to mask your card?' />}\n            toggleModal={onClose}\n        >\n            <React.Fragment>\n                <Text className='sample-credit-card-modal-text' size='xs'>\n                    {localize(\n                        'Black out digits 7 to 12 of the card number that’s shown on the front of your debit/credit card.⁤'\n                    )}\n                </Text>\n                <img\n                    src={getUrlBase('/public/images/common/sample-credit-card.png')}\n                    alt='creditcardsample'\n                    className='sample-credit-card-modal-img'\n                />\n            </React.Fragment>\n        </Modal>\n    );\n};\n","export const POO_STATUSES = {\n    none: 'none',\n    ownership: 'ownership',\n    pending: 'pending',\n    rejected: 'rejected',\n    verified: 'verified',\n};\nexport const IDENTIFIER_TYPES = {\n    account_id: 'account_id',\n    account_number: 'account_number',\n    bank_account_number: 'bank_account_number',\n    card_number: 'card_number',\n    email_address: 'email_address',\n    mobile_number: 'mobile_number',\n    user_id: 'user_id',\n};\nexport const VALIDATIONS = {\n    has_invalid_characters: target_string => /[^\\dX\\s]/.test(target_string),\n    is_formated_card_number: target_string => /(^\\d{4})\\s(\\d{2}X{2})\\s(X{4})\\s(\\d{4}$)/.test(target_string),\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport FileUploader from './file-uploader';\nimport { Input, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport SampleCreditCardModal from 'Components/sample-credit-card-modal';\nimport classNames from 'classnames';\nimport { IDENTIFIER_TYPES, VALIDATIONS } from './constants/constants.js';\n\nconst ExpandedCard = ({ card_details, error, index, setFieldValue, updateErrors, values }) => {\n    const [is_sample_modal_open, setIsSampleModalOpen] = useState(false);\n    const handleUploadedFile = async (name, file) => {\n        await setFieldValue(name, file);\n    };\n    const handleBlur = (name, payment_method_identifier, identifier_type, item_id, item_index, documents_required) => {\n        handleIdentifierChange(\n            name,\n            formatIdentifier(payment_method_identifier, identifier_type),\n            item_id,\n            item_index,\n            documents_required\n        );\n    };\n    const handleIdentifierChange = (name, payment_method_identifier, item_id, item_index, documents_required) => {\n        setFieldValue(`${name}`, {\n            ...values.data?.[index]?.[item_index],\n            documents_required,\n            id: item_id,\n            payment_method_identifier,\n            is_generic_pm: card_details.is_generic_pm,\n            identifier_type: card_details.identifier_type,\n        });\n    };\n    const exampleLink = () =>\n        card_details?.identifier_type === IDENTIFIER_TYPES.card_number && (\n            <span\n                className='proof-of-ownership__card-open-desc-link'\n                key={0}\n                onClick={() => {\n                    setIsSampleModalOpen(true);\n                }}\n            >\n                {localize('See example')}\n            </span>\n        );\n    const formatIdentifier = (payment_method_identifier, identifier_type) => {\n        let formatted_id = payment_method_identifier?.replace(/\\s/g, '') || '';\n        if (identifier_type === IDENTIFIER_TYPES.card_number) {\n            if (\n                formatted_id.length !== 16 ||\n                (formatted_id.length === 16 && VALIDATIONS.has_invalid_characters(formatted_id))\n            ) {\n                return formatted_id;\n            }\n            formatted_id = `${formatted_id.substring(0, 6)}XXXXXX${formatted_id.substring(12)}`;\n        } else if ([IDENTIFIER_TYPES.email_address, IDENTIFIER_TYPES.user_id].some(s => s === identifier_type)) {\n            return formatted_id;\n        }\n        return formatted_id.replace(/(\\w{4})/g, '$1 ').trim();\n    };\n    const isSpecialPM = pm_icon => ['IcOnlineNaira', 'IcAstroPayLight', 'IcAstroPayDark'].some(ic => ic === pm_icon);\n    return (\n        <>\n            <div>\n                {card_details?.instructions?.map(instruction => (\n                    <Text\n                        className='proof-of-ownership__card-open-desc'\n                        as='p'\n                        color='general'\n                        size='xs'\n                        key={instruction?.key ?? instruction}\n                    >\n                        {instruction} {exampleLink()}\n                    </Text>\n                ))}\n                <fieldset>\n                    {card_details.items.map((item, item_index) => {\n                        const controls_to_show = [...Array(item?.documents_required).keys()];\n                        return (\n                            <div className='proof-of-ownership__card-open-inputs' key={`${item_index}-${item.id}`}>\n                                {card_details?.input_label && isSpecialPM(card_details?.icon) && (\n                                    <div className='proof-of-ownership__card-open-inputs-field'>\n                                        <Input\n                                            label={card_details?.input_label}\n                                            data-lpignore='true'\n                                            className={classNames('proof-of-ownership__card-open-inputs-cardnumber', {\n                                                'proof-of-ownership-valid-identifier':\n                                                    values?.data?.[index]?.[item_index]?.payment_method_identifier &&\n                                                    !error?.[item_index]?.payment_method_identifier,\n                                            })}\n                                            type='text'\n                                            onChange={e => {\n                                                handleIdentifierChange(\n                                                    `data[${index}].[${item_index}]`,\n                                                    e.currentTarget.value.trim(),\n                                                    item.id,\n                                                    item_index,\n                                                    card_details.documents_required\n                                                );\n                                            }}\n                                            value={values?.data?.[index]?.[item_index]?.payment_method_identifier || ''}\n                                            onBlur={e => {\n                                                handleBlur(\n                                                    `data[${index}].[${item_index}]`,\n                                                    e.currentTarget.value.trim(),\n                                                    card_details?.identifier_type,\n                                                    item.id,\n                                                    item_index,\n                                                    card_details.documents_required\n                                                );\n                                            }}\n                                            data-testid='dt_payment_method_identifier'\n                                            error={error?.[item_index]?.payment_method_identifier}\n                                        />\n                                    </div>\n                                )}\n                                {controls_to_show.map(i => (\n                                    <React.Fragment key={`${item?.id}-${i}`}>\n                                        {card_details?.input_label && !isSpecialPM(card_details?.icon) && (\n                                            <div className='proof-of-ownership__card-open-inputs-field'>\n                                                <Input\n                                                    label={card_details?.input_label}\n                                                    data-lpignore='true'\n                                                    className={classNames(\n                                                        'proof-of-ownership__card-open-inputs-cardnumber',\n                                                        {\n                                                            'proof-of-ownership-valid-identifier':\n                                                                values?.data?.[index]?.[item_index]\n                                                                    ?.payment_method_identifier &&\n                                                                !error?.[item_index]?.payment_method_identifier,\n                                                        }\n                                                    )}\n                                                    type='text'\n                                                    onChange={e => {\n                                                        handleIdentifierChange(\n                                                            `data[${index}].[${item_index}]`,\n                                                            e.currentTarget.value.trim(),\n                                                            item.id,\n                                                            item_index,\n                                                            card_details.documents_required\n                                                        );\n                                                    }}\n                                                    value={\n                                                        values?.data?.[index]?.[item_index]\n                                                            ?.payment_method_identifier ?? ''\n                                                    }\n                                                    onBlur={e => {\n                                                        handleBlur(\n                                                            `data[${index}].[${item_index}]`,\n                                                            e.currentTarget.value.trim(),\n                                                            card_details?.identifier_type,\n                                                            item.id,\n                                                            item_index,\n                                                            card_details.documents_required\n                                                        );\n                                                    }}\n                                                    data-testid='dt_payment_method_identifier'\n                                                    error={error?.[item_index]?.payment_method_identifier}\n                                                />\n                                            </div>\n                                        )}\n                                        <div\n                                            className={classNames('proof-of-ownership__card-open-inputs-upload', {\n                                                expand: !card_details?.input_label,\n                                                organise: card_details?.input_label !== null,\n                                            })}\n                                        >\n                                            <FileUploader\n                                                handleFile={handleUploadedFile}\n                                                file_name={values?.data?.[index]?.[item_index]?.files?.[i]?.name ?? ''}\n                                                class_name='proof-of-ownership__card-open-inputs-photo'\n                                                name={`data[${index}].[${item_index}].files[${i}]`}\n                                                error={error?.[item_index]?.files?.[i]}\n                                                index={index}\n                                                item_index={item_index}\n                                                sub_index={i}\n                                                updateErrors={updateErrors}\n                                            />\n                                        </div>\n                                    </React.Fragment>\n                                ))}\n                            </div>\n                        );\n                    })}\n                </fieldset>\n            </div>\n            <SampleCreditCardModal\n                is_open={is_sample_modal_open}\n                onClose={() => {\n                    setIsSampleModalOpen(false);\n                }}\n            />\n        </>\n    );\n};\n\nExpandedCard.propTypes = {\n    card_details: PropTypes.object,\n    error: PropTypes.object,\n    index: PropTypes.number,\n    setFieldValue: PropTypes.func,\n    updateErrors: PropTypes.func,\n    values: PropTypes.object,\n};\n\nexport default ExpandedCard;\n","import { Button, Icon, Text } from '@deriv/components';\nimport classNames from 'classnames';\nimport React from 'react';\nimport ExpandedCard from './expanded-card.jsx';\nimport PropTypes from 'prop-types';\n\nconst Card = ({ card, error, index, setFieldValue, updateErrors, values }) => {\n    const [is_open, setIsOpen] = React.useState(false);\n    const onClickHandler = e => {\n        e.preventDefault();\n        setIsOpen(!is_open);\n    };\n    const icon = (\n        <Icon\n            icon='IcChevronUpBold'\n            size={16}\n            className={classNames('proof-of-ownership__card-item-icon', {\n                'proof-of-ownership__card-item-icon--invert': !is_open,\n            })}\n        />\n    );\n\n    return (\n        <div\n            className={classNames('proof-of-ownership__card', { 'proof-of-ownership__card-open': is_open })}\n            data-testid={card.payment_method}\n            role='card-item'\n        >\n            <div className='proof-of-ownership__card-item' onClick={onClickHandler}>\n                <Icon icon={card?.icon} className='proof-of-ownership__card-item-logo' width={68} height={58} />\n                <Text className='proof-of-ownership__card-item-text' as='p' color='general' size='s' weight='bold'>\n                    {card.payment_method}\n                </Text>\n                <Button\n                    id='proof-of-ownership'\n                    icon={icon}\n                    className='proof-of-ownership__card-item-icon'\n                    onClick={onClickHandler}\n                    transparent\n                    data-testid='dt_proof-of-ownership-button'\n                />\n            </div>\n            {is_open && (\n                <ExpandedCard\n                    card_details={card}\n                    values={values}\n                    setFieldValue={setFieldValue}\n                    index={index}\n                    error={error}\n                    updateErrors={updateErrors}\n                />\n            )}\n        </div>\n    );\n};\n\nCard.propTypes = {\n    card: PropTypes.object,\n    error: PropTypes.object,\n    index: PropTypes.number,\n    setFieldValue: PropTypes.func,\n    updateErrors: PropTypes.func,\n    values: PropTypes.object,\n};\n\nexport default Card;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, useStateCallback } from '@deriv/components';\nimport { Formik } from 'formik';\nimport { localize } from '@deriv/translations';\nimport FormFooter from '../../../Components/form-footer';\nimport FormBody from '../../../Components/form-body';\nimport FormSubHeader from '../../../Components/form-sub-header';\nimport FormBodySection from '../../../Components/form-body-section';\nimport { isMobile, readFiles, WS, DOCUMENT_TYPE } from '@deriv/shared';\nimport Card from './card.jsx';\nimport DocumentUploader from '@binary-com/binary-document-uploader';\nimport { IDENTIFIER_TYPES, VALIDATIONS } from './constants/constants';\n\nconst getScrollOffset = (items_count = 0) => {\n    if (isMobile()) return '200px';\n    if (items_count <= 2) return '0px';\n    return '80px';\n};\nconst ProofOfOwnershipForm = ({\n    client_email,\n    grouped_payment_method_data,\n    refreshNotifications,\n    updateAccountStatus,\n}) => {\n    const grouped_payment_method_data_keys = Object.keys(grouped_payment_method_data);\n    const initial_values = {};\n    const [form_state, setFormState] = useStateCallback({ should_show_form: true });\n    const form_ref = React.useRef();\n    const fileReadErrorMessage = filename => {\n        return localize('Unable to read file {{name}}', { name: filename });\n    };\n    const validateFields = values => {\n        let errors = {};\n        errors.data = [...(form_ref?.current?.errors?.data || [])];\n        let total_documents_uploaded = 0;\n        let has_errors = false;\n        let are_files_uploaded = false;\n        const cards = values?.data;\n        Object.keys(cards)?.forEach?.(card_key => {\n            const items = cards?.[card_key] ?? {};\n            const item_keys = Object.keys(items);\n            item_keys?.forEach?.(item_key => {\n                if (!has_errors) {\n                    errors.data[card_key] = errors.data?.[card_key] ?? {};\n                    errors.data[card_key][item_key] = errors.data?.[card_key]?.[item_key] ?? {};\n                    const payment_method = items?.[item_key];\n                    const payment_method_identifier = payment_method?.payment_method_identifier?.trim();\n                    const is_payment_method_identifier_provided =\n                        payment_method?.is_generic_pm || payment_method_identifier?.length > 0;\n                    const is_credit_or_debit_card = payment_method?.identifier_type === IDENTIFIER_TYPES.card_number;\n                    total_documents_uploaded = payment_method?.files?.filter(Boolean)?.length ?? 0;\n                    if (is_payment_method_identifier_provided) {\n                        are_files_uploaded = total_documents_uploaded === payment_method.documents_required;\n                    } else if (\n                        (!payment_method?.documents_required && total_documents_uploaded === 0) ||\n                        (!is_payment_method_identifier_provided && total_documents_uploaded === 0)\n                    ) {\n                        are_files_uploaded = true;\n                    } else if (\n                        (payment_method?.documents_required &&\n                            is_payment_method_identifier_provided &&\n                            total_documents_uploaded === 0) ||\n                        (!is_payment_method_identifier_provided &&\n                            total_documents_uploaded === payment_method?.documents_required * 0.5)\n                    ) {\n                        are_files_uploaded = false;\n                    }\n                    delete errors.data[card_key][item_key].payment_method_identifier;\n                    payment_method?.files?.forEach((file, i) => {\n                        errors.data[card_key][item_key].files = errors?.data?.[card_key]?.[item_key]?.files ?? [];\n                        if (file?.type && !/(image|application)\\/(jpe?g|pdf|png)$/.test(file?.type)) {\n                            errors.data[card_key][item_key].files[i] = localize(\n                                \"That file format isn't supported. Please upload .pdf, .png, .jpg, or .jpeg files only.\"\n                            );\n                        }\n                        if (file?.size / 1024 > 8000) {\n                            errors.data[card_key][item_key].files[i] = localize(\n                                'That file is too big (only up to 8MB allowed). Please upload another file.'\n                            );\n                        }\n                        if (errors.data[card_key][item_key].files.length === 0) {\n                            delete errors.data[card_key][item_key].files;\n                        }\n                        if (\n                            !is_payment_method_identifier_provided &&\n                            (total_documents_uploaded === payment_method?.documents_required ||\n                                (!payment_method?.documents_required && total_documents_uploaded > 0) ||\n                                total_documents_uploaded === payment_method?.documents_required * 0.5)\n                        ) {\n                            errors.data[card_key][item_key].payment_method_identifier =\n                                localize('Please complete this field.');\n                        }\n                    });\n                    if (\n                        is_credit_or_debit_card &&\n                        ((payment_method_identifier?.length !== 0 &&\n                            (payment_method_identifier?.length !== 16 || payment_method_identifier?.length > 19) &&\n                            !VALIDATIONS.is_formated_card_number(payment_method_identifier)) ||\n                            (payment_method_identifier?.length === 16 &&\n                                VALIDATIONS.has_invalid_characters(payment_method_identifier)))\n                    ) {\n                        errors.data[card_key][item_key].payment_method_identifier =\n                            localize('Enter your full card number');\n                    }\n                    if (!payment_method_identifier && total_documents_uploaded === 0) {\n                        delete form_ref.current?.values?.data?.[card_key]?.[item_key];\n                        if ((form_ref.current?.values?.data?.[card_key]?.filter?.(Boolean)?.length || 0) === 0) {\n                            delete form_ref.current?.values?.data?.[card_key];\n                        }\n                    }\n                    if (Object.keys(errors?.data?.[card_key]?.[item_key] || {}).length === 0) {\n                        delete errors?.data?.[card_key]?.[item_key];\n                        if (Object.keys(errors?.data?.[card_key])?.length === 0) {\n                            delete errors?.data?.[card_key];\n                        }\n                    }\n                    has_errors =\n                        has_errors ||\n                        errors?.data?.[card_key]?.[item_key]?.payment_method_identifier?.trim?.()?.length > 0 ||\n                        errors?.data?.[card_key]?.[item_key]?.files?.length > 0 ||\n                        !are_files_uploaded;\n                }\n            });\n            if ((form_ref.current?.values?.data?.[card_key]?.filter(Boolean)?.length || 0) === 0) {\n                delete form_ref.current?.values?.data?.[card_key];\n            }\n        });\n        has_errors = has_errors || (form_ref.current?.values?.data?.filter(Boolean).length || 0) === 0;\n        if (!has_errors) {\n            errors = {};\n        }\n        return errors;\n    };\n\n    const updateErrors = async (index, item_index, sub_index) => {\n        let error_count = 0;\n        const errors = {};\n        errors.data = [...(form_ref?.current?.errors?.data || [])];\n        if (typeof errors.data[index] === 'object') {\n            delete errors?.data?.[index]?.[item_index]?.files?.[sub_index];\n            const has_other_errors = errors?.data[index]?.[item_index]?.files?.some(error => error !== null);\n            if (!has_other_errors) {\n                delete errors?.data[index]?.[item_index];\n            }\n            errors.data.forEach(e => {\n                error_count += Object.keys(e || {}).length;\n            });\n            if (error_count === 0) {\n                errors.data = [];\n            }\n        }\n        await form_ref.current.setErrors(errors);\n        await form_ref.current.validateForm();\n    };\n    const handleFormSubmit = ({ data: form_values }) => {\n        try {\n            setFormState({ ...form_state, ...{ is_btn_loading: true } });\n            const uploader = new DocumentUploader({ connection: WS.getSocket() });\n            if (form_ref.current.errors.length > 0) {\n                // Only upload if no errors and a file has been attached\n                return;\n            }\n            Object.keys(form_values).forEach(card_key => {\n                Object.keys(form_values[card_key]).forEach(async card_item_key => {\n                    const payment_method_details = form_values[card_key][card_item_key];\n                    if (payment_method_details.files.length > 0) {\n                        const processed_files = await readFiles(payment_method_details.files, fileReadErrorMessage, {\n                            documentType: DOCUMENT_TYPE.proof_of_ownership,\n                            proof_of_ownership: {\n                                details: {\n                                    email: client_email,\n                                    payment_identifier: payment_method_details.payment_method_identifier,\n                                },\n                                id: payment_method_details.id,\n                            },\n                        });\n                        processed_files.forEach(async (processed_file, sub_index) => {\n                            const response = await uploader.upload(processed_file);\n                            if (response.warning) {\n                                if (response.warning.trim() === 'DuplicateUpload') {\n                                    let { errors: form_errors } = form_ref?.current;\n                                    if (!form_errors?.data) {\n                                        form_errors = {};\n                                        form_errors.data = [];\n                                        form_errors.data[card_key] = {};\n                                    } else if (!form_errors.data?.[card_key]) {\n                                        form_errors.data[card_key] = {};\n                                    }\n                                    form_errors.data[card_key][card_item_key] =\n                                        form_errors?.data?.[card_key]?.[card_item_key] ?? {};\n                                    form_errors.data[card_key][card_item_key].files =\n                                        form_errors?.data?.[card_key]?.[card_item_key]?.files ?? [];\n                                    form_errors.data[card_key][card_item_key].files[sub_index] = response.message; // Document already uploaded\n                                    await form_ref.current.setErrors(form_errors);\n                                    await form_ref.current.validateForm();\n                                    setFormState({ ...form_state, ...{ is_btn_loading: false } });\n                                } else {\n                                    setFormState({ ...form_state, ...{ is_btn_loading: false } });\n                                }\n                            } else {\n                                updateAccountStatus();\n                                refreshNotifications();\n                            }\n                        });\n                    }\n                });\n            });\n        } catch (err) {\n            setFormState({ ...form_state, ...{ is_btn_loading: false } });\n        }\n    };\n    return (\n        <Formik\n            initialValues={initial_values}\n            validate={validateFields}\n            innerRef={form_ref}\n            onSubmit={handleFormSubmit}\n        >\n            {({ values, errors, setFieldValue, handleSubmit, isValid, dirty }) => (\n                <form\n                    data-testid='dt_poo_form'\n                    className='proof-of-ownership'\n                    onSubmit={e => {\n                        e.nativeEvent.preventDefault();\n                        e.nativeEvent.stopPropagation();\n                        e.nativeEvent.stopImmediatePropagation();\n                        handleSubmit(e);\n                    }}\n                >\n                    <FormBody scroll_offset={getScrollOffset(grouped_payment_method_data_keys.length)}>\n                        <FormSubHeader title={localize('Please upload the following document(s).')} />\n                        <FormBodySection>\n                            <fieldset>\n                                {grouped_payment_method_data_keys?.map((grouped_payment_method_data_key, index) => (\n                                    <div\n                                        className='proof-of-ownership__form-content'\n                                        key={grouped_payment_method_data_key}\n                                    >\n                                        {grouped_payment_method_data_keys.length > 1 && (\n                                            <div className='proof-of-ownership__progress'>\n                                                <div className='proof-of-ownership__progress-number'>{index + 1}</div>\n                                                {index !== grouped_payment_method_data_keys.length - 1 && (\n                                                    <div className='proof-of-ownership__progress-bar' />\n                                                )}\n                                            </div>\n                                        )}\n                                        <Card\n                                            error={errors?.data?.[index]}\n                                            index={index}\n                                            values={values}\n                                            card={grouped_payment_method_data[grouped_payment_method_data_key]}\n                                            setFieldValue={setFieldValue}\n                                            updateErrors={updateErrors}\n                                        />\n                                    </div>\n                                ))}\n                            </fieldset>\n                        </FormBodySection>\n                    </FormBody>\n                    <FormFooter>\n                        <Button\n                            type='submit'\n                            className={classNames('account-form__footer-btn')}\n                            is_disabled={!dirty || !isValid}\n                            data-testid={'submit-button'}\n                            has_effect\n                            text={localize('Submit')}\n                            large\n                            primary\n                            is_loading={form_state.is_btn_loading}\n                        />\n                    </FormFooter>\n                </form>\n            )}\n        </Formik>\n    );\n};\n\nProofOfOwnershipForm.propTypes = {\n    client_email: PropTypes.string,\n    grouped_payment_method_data: PropTypes.object,\n    refreshNotifications: PropTypes.func,\n    updateAccountStatus: PropTypes.func,\n};\n\nexport default ProofOfOwnershipForm;\n","import { POONotRequired } from './not-required.jsx';\n\nexport default POONotRequired;\n","import { Icon } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport React from 'react';\nimport IconMessageContent from 'Components/icon-message-content';\n\nexport const POONotRequired = () => {\n    return (\n        <div className='proof-of-ownership__container'>\n            <IconMessageContent\n                message={localize(\"Your proof of ownership isn't required.\")}\n                text={localize(\n                    'You are not required to submit proof of ownership at this time. We will inform you if proof of ownership is required in the future.'\n                )}\n                icon={<Icon icon='IcPooVerified' size={128} />}\n            />\n        </div>\n    );\n};\n","import { POOVerified } from './verified.jsx';\n\nexport default POOVerified;\n","import { Icon } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport React from 'react';\nimport IconMessageContent from 'Components/icon-message-content';\n\nexport const POOVerified = () => {\n    return (\n        <div className='proof-of-ownership__container'>\n            <IconMessageContent\n                message={localize('Proof of ownership verification passed.')}\n                icon={<Icon icon='IcPooVerified' size={128} />}\n            />\n        </div>\n    );\n};\n","import { POORejected } from './rejected.jsx';\n\nexport default POORejected;\n","import { Button, Text, Icon } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport React from 'react';\n\nexport const POORejected = ({ onTryAgain }) => {\n    return (\n        <div className='proof-of-ownership__container'>\n            <div className='proof-of-ownership__container--content'>\n                <Icon className='icon' icon='IcPooRejected' size={128} />\n                <Text weight='bold'>{localize('Proof of ownership verification failed')}</Text>\n                <Text size='xs'>{localize('We were unable to verify your proof of ownership.')}</Text>\n                <Button\n                    type='button'\n                    className='proof-of-ownership__try-again-button'\n                    onClick={onTryAgain}\n                    large\n                    text={localize('Try again')}\n                    primary\n                    data-testid='dt_try-again-button'\n                />\n            </div>\n        </div>\n    );\n};\n","import { POOSubmitted } from './submitted.jsx';\n\nexport default POOSubmitted;\n","import { Icon } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport React from 'react';\nimport IconMessageContent from 'Components/icon-message-content';\n\nexport const POOSubmitted = () => {\n    return (\n        <div className='proof-of-ownership__container'>\n            <IconMessageContent\n                message={localize('We’ve received your proof of ownership.')}\n                text={localize('We’ll review your documents and notify you of its status within 3 days.')}\n                icon={<Icon icon='IcPooSubmitted' size={128} />}\n            />\n        </div>\n    );\n};\n","import React from 'react';\nimport { Localize, localize } from '@deriv/translations';\n\nconst getPaymentMethodsConfig = () => ({\n    advcash: {\n        icon_light: 'IcAdvcashLight',\n        icon_dark: 'IcAdvcashDark',\n        instructions: [\n            localize('Upload a screenshot of your name and email address from the personal information section.'),\n        ],\n        input_label: localize('Email address'),\n        identifier_type: 'email_address',\n    },\n    astropay: {\n        icon_light: 'IcAstroPayLight',\n        icon_dark: 'IcAstroPayDark',\n        instructions: [\n            <Localize\n                key={0}\n                i18n_default_text='Upload 2 separate screenshots from the personal details page and the account page via <0>https://app.astropay.com/profile</0>'\n                components={[\n                    <a\n                        key={0}\n                        className='link  proof-of-ownership-link'\n                        target='_blank'\n                        rel='noreferrer'\n                        href='https://app.astropay.com/profile'\n                    />,\n                ]}\n            />,\n        ],\n        input_label: localize('Account number'),\n        identifier_type: 'account_number',\n    },\n    beyonic: {\n        icon_light: 'IcBeyonic',\n        icon_dark: 'IcBeyonic',\n        instructions: [localize('Upload your mobile bill statement showing your name and phone number.')],\n        input_label: localize('Mobile number'),\n        identifier_type: 'mobile_number',\n    },\n    'boleto (d24 voucher)': {\n        icon_light: 'IcBoletoD24VoucherLight',\n        icon_dark: 'IcBoletoD24VoucherDark',\n        instructions: [localize('Upload your bank statement showing your name and account details.')],\n        input_label: localize('Bank account number'),\n        identifier_type: 'bank_account_number',\n    },\n    visa: {\n        icon_light: 'IcVisaLight',\n        icon_dark: 'IcVisaDark',\n        instructions: [\n            localize(\n                'Upload a photo showing your name and the first six and last four digits of your card number. If the card does not display your name, upload the bank statement showing your name and card number in the transaction history.'\n            ),\n        ],\n        input_label: localize('Card number'),\n        identifier_type: 'card_number',\n    },\n    mastercard: {\n        icon_light: 'IcMasterCardLight',\n        icon_dark: 'IcMasterCardDark',\n        instructions: [\n            localize(\n                'Upload a photo showing your name and the first six and last four digits of your card number. If the card does not display your name, upload the bank statement showing your name and card number in the transaction history.'\n            ),\n        ],\n        input_label: localize('Card number'),\n        identifier_type: 'card_number',\n    },\n    pix: {\n        icon_light: 'IcPixLight',\n        icon_dark: 'IcPixDark',\n        instructions: [\n            localize('Upload a screenshot of either of the following to process the transaction:'),\n            localize('- your account profile section on the website'),\n            localize('- the Account Information page on the app'),\n            localize('- your account details of the bank linked to your account'),\n        ],\n        input_label: localize('User ID'),\n        identifier_type: 'user_id',\n    },\n    skrill: {\n        icon_light: 'IcSkrillLight',\n        icon_dark: 'IcSkrillDark',\n        instructions: [\n            localize(\n                'Upload a screenshot of your name, account number, and email address from the personal details section of the app or profile section of your account on the website.'\n            ),\n        ],\n        input_label: localize('Email address'),\n        identifier_type: 'email_address',\n    },\n    neteller: {\n        icon_light: 'IcNetellerLight',\n        icon_dark: 'IcNetellerDark',\n        instructions: [\n            localize(\n                'Upload a screenshot of your name, account number, and email address from the personal details section of the app or profile section of your account on the website.'\n            ),\n        ],\n        input_label: localize('Email address'),\n        identifier_type: 'email_address',\n    },\n    onlinenaira: {\n        icon_light: 'IcOnlineNaira',\n        icon_dark: 'IcOnlineNaira',\n        instructions: [\n            <Localize\n                key={0}\n                i18n_default_text='Upload a screenshot of your username on the General Information page at <0>https://onlinenaira.com/members/index.htm</0>'\n                components={[\n                    <a\n                        key={0}\n                        className='link proof-of-ownership-link'\n                        target='_blank'\n                        rel='noreferrer'\n                        href='https://onlinenaira.com/members/index.htm'\n                    />,\n                ]}\n            />,\n            <Localize\n                key={1}\n                i18n_default_text='Upload a screenshot of your account number and phone number on the Bank Account/Mobile wallet page at <0>https://onlinenaira.com/members/bank.htm</0>'\n                components={[\n                    <a\n                        key={0}\n                        className='link  proof-of-ownership-link'\n                        target='_blank'\n                        rel='noreferrer'\n                        href='https://onlinenaira.com/members/bank.htm'\n                    />,\n                ]}\n            />,\n        ],\n        input_label: localize('Account ID'),\n        identifier_type: 'account_id',\n    },\n    webmoney: {\n        icon_light: 'IcWebMoneyLight',\n        icon_dark: 'IcWebMoneyDark',\n        instructions: [\n            localize(\n                'Upload a screenshot of your account and personal details page with your name, account number, phone number, and email address.'\n            ),\n        ],\n        input_label: localize('Account number'),\n        identifier_type: 'account_number',\n    },\n    zingpay: {\n        icon_light: 'IcZingpay',\n        icon_dark: 'IcZingpay',\n        instructions: [\n            localize('Upload your bank statement showing your name, account number, and transaction history.'),\n        ],\n        input_label: localize('Bank account number'),\n        identifier_type: 'bank_account_number',\n    },\n    sticpay: {\n        icon_light: 'IcSticpayLight',\n        icon_dark: 'IcSticpayDark',\n        instructions: [\n            localize('Upload a screenshot of your name and email address from the personal details section.'),\n        ],\n        input_label: localize('Email address'),\n        identifier_type: 'email_address',\n    },\n    jeton: {\n        icon_light: 'IcJetonLight',\n        icon_dark: 'IcJetonDark',\n        instructions: [\n            localize('Upload a screenshot of your name and account number from the personal details section.'),\n        ],\n        input_label: localize('Account number'),\n        identifier_type: 'account_number',\n    },\n    other: {\n        icon_light: 'IcOtherPaymentMethod',\n        icon_dark: 'IcOtherPaymentMethod',\n        instructions: [localize('Upload a document showing your name and bank account number or account details.')],\n        input_label: null,\n        identifier_type: 'none',\n    },\n});\n\nexport default getPaymentMethodsConfig;\n","import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport ProofOfOwnershipForm from './proof-of-ownership-form.jsx';\nimport { POONotRequired, POOVerified, POORejetced, POOSubmitted } from 'Components/poo/statuses';\nimport { Loading } from '@deriv/components';\nimport { POO_STATUSES } from './constants/constants';\nimport getPaymentMethodsConfig from './payment-method-config.js';\nimport { observer, useStore } from '@deriv/stores';\n\nexport const ProofOfOwnership = observer(() => {\n    const { client, notifications, ui } = useStore();\n    const { account_status, email: client_email, updateAccountStatus } = client;\n    const { refreshNotifications } = notifications;\n    const { is_dark_mode_on: is_dark_mode } = ui;\n    const cards = account_status?.authentication?.ownership?.requests;\n    const [status, setStatus] = useState(POO_STATUSES.none);\n    const grouped_payment_method_data = React.useMemo(() => {\n        const groups = {};\n        const payment_methods_config = getPaymentMethodsConfig();\n        cards?.forEach(card => {\n            const card_details =\n                payment_methods_config[card.payment_method.toLowerCase()] || payment_methods_config.other;\n            if (groups[card?.payment_method?.toLowerCase()]) {\n                groups[card?.payment_method?.toLowerCase()].items.push(card);\n            } else {\n                groups[card?.payment_method?.toLowerCase()] = {\n                    documents_required: card?.documents_required,\n                    icon: is_dark_mode ? card_details?.icon_dark : card_details?.icon_light,\n                    payment_method: card?.payment_method,\n                    items: [card],\n                    instructions: card_details.instructions,\n                    input_label: card_details?.input_label,\n                    identifier_type: card_details.identifier_type,\n                    is_generic_pm: !card_details?.input_label,\n                };\n            }\n        });\n        return { groups };\n    }, [cards, is_dark_mode]);\n    useEffect(() => {\n        setStatus(account_status?.authentication?.ownership?.status?.toLowerCase());\n    }, [account_status]);\n    const onTryAgain = () => {\n        setStatus(POO_STATUSES.none);\n    };\n    if (cards?.length > 0 && status !== POO_STATUSES.rejected) {\n        return (\n            <ProofOfOwnershipForm\n                grouped_payment_method_data={grouped_payment_method_data.groups}\n                updateAccountStatus={updateAccountStatus}\n                refreshNotifications={refreshNotifications}\n                client_email={client_email}\n            />\n        ); // Proof of ownership is required.\n    }\n    if (status === POO_STATUSES.verified) {\n        return <POOVerified />; // Proof of ownership verified\n    }\n    if (status === POO_STATUSES.pending) {\n        return <POOSubmitted />; // Proof of ownership submitted pending review\n    }\n    if (status === POO_STATUSES.none) {\n        return <POONotRequired />; // Client does not need proof of ownership.\n    }\n    if (status === POO_STATUSES.rejected) {\n        return <POORejetced onTryAgain={onTryAgain} />; // Proof of ownership rejected\n    }\n    return <Loading is_fullscreen={false} className='account__initial-loader' />;\n});\n\nexport default withRouter(ProofOfOwnership);\n","import POO from './proof-of-ownership.jsx';\n\nexport default POO;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Formik, Form, Field } from 'formik';\nimport { Input, Button } from '@deriv/components';\nimport { getPropertyValue, WS } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\nconst DigitForm = ({ is_enabled, setTwoFAStatus, setTwoFAChangedStatus, is_language_changing }) => {\n    const [is_success, setSuccess] = React.useState(false);\n    const [is_ready_for_verification, setReadyForVerification] = React.useState(false);\n    const button_text = is_enabled ? localize('Disable') : localize('Enable');\n    const formik_ref = React.useRef();\n    let enable_response;\n\n    const initial_form = {\n        digit_code: '',\n    };\n\n    React.useEffect(() => {\n        if (is_language_changing) {\n            formik_ref.current.setFieldTouched('digit_code');\n        }\n    }, [is_language_changing]);\n\n    const validateFields = async values => {\n        const digit_code = values.digit_code;\n        if (!digit_code) {\n            return { digit_code: localize('Digit code is required.') };\n        } else if (!(digit_code.length === 6)) {\n            return { digit_code: localize('Length of digit code must be 6 characters.') };\n        } else if (!/^[0-9]{6}$/g.test(digit_code)) {\n            return { digit_code: localize('Digit code must only contain numbers.') };\n        } else if (is_ready_for_verification) {\n            if (formik_ref.current.isValid) {\n                const totp_action = is_enabled ? 'disable' : 'enable';\n                enable_response = await WS.authorized.accountSecurity({\n                    account_security: 1,\n                    totp_action,\n                    otp: values.digit_code,\n                });\n                if (enable_response.error) {\n                    const { code, message } = enable_response.error;\n                    if (code === 'InvalidOTP')\n                        return { digit_code: localize(\"That's not the right code. Please try again.\") };\n                    return { digit_code: message };\n                }\n            } else {\n                return { digit_code: localize(\"That's not the right code. Please try again.\") };\n            }\n        }\n        return {};\n    };\n\n    const handleSubmit = async (values, { resetForm }) => {\n        if (!enable_response.error) {\n            const is_enabled_response = !!getPropertyValue(enable_response, ['account_security', 'totp', 'is_enabled']);\n            setSuccess(true);\n            resetForm();\n            setTwoFAStatus(is_enabled_response);\n            setTwoFAChangedStatus(true);\n        }\n    };\n\n    return (\n        <Formik initialValues={initial_form} onSubmit={handleSubmit} validate={validateFields} innerRef={formik_ref}>\n            {({ values, errors, isValid, touched, handleChange, handleBlur, isSubmitting, dirty }) => (\n                <Form noValidate>\n                    <div className='two-factor__input-group'>\n                        <Field name='digit_code'>\n                            {({ field }) => (\n                                <Input\n                                    {...field}\n                                    data-lpignore='true'\n                                    type='text'\n                                    className='two-factor__input'\n                                    label={localize('Authentication code')}\n                                    value={values.digit_code}\n                                    onChange={e => {\n                                        handleChange(e);\n                                        setReadyForVerification(false);\n                                    }}\n                                    onBlur={handleBlur}\n                                    required\n                                    error={touched.digit_code && errors.digit_code}\n                                    maxLength='6'\n                                    autoComplete='off'\n                                />\n                            )}\n                        </Field>\n                        <Button\n                            className={classNames('two-factor__button', {\n                                'two-factor__button--success': is_success,\n                            })}\n                            type='submit'\n                            is_disabled={isSubmitting || !isValid || !dirty}\n                            has_effect\n                            is_loading={isSubmitting}\n                            is_submit_success={is_success}\n                            text={button_text}\n                            onClick={() => setReadyForVerification(true)}\n                            large\n                            primary\n                        />\n                    </div>\n                </Form>\n            )}\n        </Formik>\n    );\n};\n\nexport default DigitForm;\n","import React from 'react';\nimport { localize, Localize } from '@deriv/translations';\nimport AccountArticle from 'Components/article';\n\nconst TwoFactorAuthenticationArticle = () => (\n    <AccountArticle\n        title={localize('Two-factor authentication (2FA)')}\n        descriptions={[\n            <Localize\n                key={0}\n                i18n_default_text='Protect your account with 2FA. Each time you log in to your account, you will need to enter your password and an authentication code generated by a 2FA app on your smartphone.'\n            />,\n        ]}\n    />\n);\n\nexport default TwoFactorAuthenticationArticle;\n","import classNames from 'classnames';\nimport React from 'react';\nimport QRCode from 'qrcode.react';\nimport {\n    Timeline,\n    DesktopWrapper,\n    MobileWrapper,\n    ThemedScrollbars,\n    Clipboard,\n    Icon,\n    Loading,\n    Text,\n} from '@deriv/components';\nimport { getPropertyValue, isMobile, PlatformContext, WS } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport LoadErrorMessage from 'Components/load-error-message';\nimport DigitForm from './digit-form.jsx';\nimport TwoFactorAuthenticationArticle from './two-factor-authentication-article.jsx';\nimport { observer, useStore } from '@deriv/stores';\n\nconst TwoFactorAuthentication = observer(() => {\n    const { client, ui, common } = useStore();\n    const { email_address, getTwoFAStatus, has_enabled_two_fa, is_switching, setTwoFAStatus, setTwoFAChangedStatus } =\n        client;\n    const { is_language_changing } = common;\n    const { notification_messages_ui: Notifications } = ui;\n    const [is_loading, setLoading] = React.useState(true);\n    const [is_qr_loading, setQrLoading] = React.useState(false);\n    const [error_message, setErrorMessage] = React.useState('');\n    const [secret_key, setSecretKey] = React.useState('');\n    const [qr_secret_key, setQrSecretKey] = React.useState('');\n    const { is_appstore } = React.useContext(PlatformContext);\n\n    React.useEffect(() => {\n        getDigitStatus();\n    }, [getDigitStatus, has_enabled_two_fa]);\n\n    const generateQrCode = React.useCallback(async () => {\n        setQrLoading(true);\n        const generate_response = await WS.authorized.accountSecurity({\n            account_security: 1,\n            totp_action: 'generate',\n        });\n        setLoading(false);\n\n        if (generate_response.error) {\n            setErrorMessage(generate_response.error.message);\n            return;\n        }\n        const secret_key_value = getPropertyValue(generate_response, ['account_security', 'totp', 'secret_key']);\n        const qr_secret_key_value = `otpauth://totp/${email_address}?secret=${secret_key_value}&issuer=Deriv.com`;\n\n        setSecretKey(secret_key_value);\n        setQrSecretKey(qr_secret_key_value);\n        setQrLoading(false);\n    }, [email_address]);\n\n    const getDigitStatus = React.useCallback(async () => {\n        const status_response = await getTwoFAStatus();\n        if (status_response.error) {\n            setErrorMessage(status_response.error.message);\n            return;\n        }\n\n        if (!status_response) generateQrCode();\n\n        setLoading(false);\n    }, [getTwoFAStatus, generateQrCode]);\n\n    if (is_loading || is_switching) return <Loading is_fullscreen={false} className='account__initial-loader' />;\n    if (error_message) return <LoadErrorMessage error_message={error_message} />;\n\n    const TwoFactorEnabled = (\n        <ThemedScrollbars is_bypassed={isMobile()} className='two-factor__scrollbars'>\n            <div className='two-factor__wrapper--enabled'>\n                <Icon icon='IcQrPhone' className='two-factor__icon' />\n                <Text as='h3' align='center' weight='bold' color='prominent' className='two-factor__qr--title'>\n                    {localize('2FA enabled')}\n                </Text>\n                <Text as='h4' size='xs' align='center' className='two-factor__qr--message'>\n                    {localize('You have enabled 2FA for your Deriv account.')}\n                </Text>\n                <Text as='h4' size='xs' align='center' className='two-factor__qr--message'>\n                    {localize(\n                        'To disable 2FA, please enter the six-digit authentication code generated by your 2FA app below:'\n                    )}\n                </Text>\n                <DigitForm\n                    is_enabled={has_enabled_two_fa}\n                    setTwoFAStatus={setTwoFAStatus}\n                    setTwoFAChangedStatus={setTwoFAChangedStatus}\n                    is_language_changing={is_language_changing}\n                />\n            </div>\n        </ThemedScrollbars>\n    );\n\n    const TwoFactorDisabled = (\n        <React.Fragment>\n            <ThemedScrollbars\n                is_bypassed={isMobile()}\n                autoHide\n                className='two-factor__scrollbars'\n                hideHorizontal={true}\n            >\n                <MobileWrapper>\n                    <TwoFactorAuthenticationArticle />\n                </MobileWrapper>\n                <Text as='h2' color='prominent' weight='bold' className='two-factor__title'>\n                    {localize('How to set up 2FA for your Deriv account')}\n                </Text>\n                <div>\n                    <Timeline className='two-factor__timeline' line_height='xs'>\n                        <Timeline.Item\n                            item_title={\n                                <Localize\n                                    i18n_default_text='Scan the QR code below with your 2FA app. We recommend <0>Authy</0> or <1>Google Authenticator</1>.'\n                                    components={[\n                                        <a\n                                            className='link two-factor__link'\n                                            href='https://authy.com/'\n                                            target='_blank'\n                                            rel='noopener noreferrer'\n                                            key={0}\n                                        />,\n                                        <a\n                                            className='link two-factor__link'\n                                            href='https://github.com/google/google-authenticator/wiki#implementations'\n                                            target='_blank'\n                                            rel='noopener noreferrer'\n                                            key={1}\n                                        />,\n                                    ]}\n                                />\n                            }\n                        >\n                            <div className='two-factor__qr'>\n                                {is_qr_loading ? (\n                                    <Loading is_fullscreen={false} />\n                                ) : (\n                                    <React.Fragment>\n                                        {qr_secret_key && (\n                                            <div className='two-factor__qr--wrapper'>\n                                                <QRCode value={qr_secret_key} />\n                                            </div>\n                                        )}\n\n                                        {secret_key && (\n                                            <React.Fragment>\n                                                <Text\n                                                    as='h4'\n                                                    size='xs'\n                                                    align='center'\n                                                    className='two-factor__qr--message'\n                                                >\n                                                    {localize(\n                                                        'If you are unable to scan the QR code, you can manually enter this code instead:'\n                                                    )}\n                                                </Text>\n                                                <div className='two-factor__qr--code'>\n                                                    <Text size='xs'>{secret_key}</Text>\n                                                    <Clipboard\n                                                        text_copy={secret_key}\n                                                        info_message={localize('Click here to copy key')}\n                                                        success_message={localize('Key copied!')}\n                                                        className='two-factor__qr--clipboard'\n                                                    />\n                                                </div>\n                                            </React.Fragment>\n                                        )}\n                                    </React.Fragment>\n                                )}\n                            </div>\n                        </Timeline.Item>\n                        <Timeline.Item\n                            item_title={localize('Enter the authentication code generated by your 2FA app:')}\n                        >\n                            <DigitForm\n                                is_enabled={has_enabled_two_fa}\n                                setTwoFAStatus={setTwoFAStatus}\n                                setTwoFAChangedStatus={setTwoFAChangedStatus}\n                                is_language_changing={is_language_changing}\n                            />\n                        </Timeline.Item>\n                    </Timeline>\n                </div>\n            </ThemedScrollbars>\n            <DesktopWrapper>\n                <TwoFactorAuthenticationArticle />\n            </DesktopWrapper>\n        </React.Fragment>\n    );\n\n    return (\n        <section className='two-factor'>\n            <div\n                className={classNames('two-factor__wrapper', {\n                    'two-factor__wrapper-dashboard': is_appstore,\n                })}\n            >\n                {Notifications && <Notifications />}\n                {has_enabled_two_fa ? TwoFactorEnabled : TwoFactorDisabled}\n            </div>\n        </section>\n    );\n});\n\nexport default TwoFactorAuthentication;\n","import TwoFactorAuthentication from './two-factor-authentication.jsx';\n\nexport default TwoFactorAuthentication;\n","import React from 'react';\nimport { localize, Localize } from '@deriv/translations';\nimport AccountArticle from 'Components/article';\n\nconst ApiTokenArticle = () => (\n    <AccountArticle\n        title={localize('API token')}\n        descriptions={[\n            <Localize\n                key={0}\n                i18n_default_text=\"To access your mobile apps and other third-party apps, you'll first need to generate an API token.\"\n            />,\n        ]}\n    />\n);\n\nexport default ApiTokenArticle;\n","import React from 'react';\nimport { Field, FieldProps } from 'formik';\nimport { CompositeCheckbox } from '@deriv/components';\n\ntype TApiTokenCard = {\n    description: string;\n    display_name: string;\n    name: string;\n    value: boolean;\n    setFieldValue: (name: string, value: boolean) => void;\n};\n\nconst ApiTokenCard = ({\n    name,\n    value,\n    display_name,\n    description,\n    setFieldValue,\n    children,\n}: React.PropsWithChildren<TApiTokenCard>) => {\n    return (\n        <Field name={name}>\n            {({ field }: FieldProps<string | boolean>) => {\n                return (\n                    <CompositeCheckbox\n                        {...field}\n                        onChange={() => setFieldValue(name, !value)}\n                        value={value}\n                        className='api-token__checkbox'\n                        defaultChecked={value}\n                        label={display_name}\n                        description={description}\n                    >\n                        {children}\n                    </CompositeCheckbox>\n                );\n            }}\n        </Field>\n    );\n};\n\nexport default ApiTokenCard;\n","import * as React from 'react';\nimport { TApiContext } from 'Types';\n\nconst ApiTokenContext = React.createContext<TApiContext>({});\n\nexport default ApiTokenContext;\n","import React from 'react';\nimport { createPortal } from 'react-dom';\nimport { Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport ApiTokenContext from './api-token-context';\nimport { TApiContext } from 'Types';\n\nconst ApiTokenFooter = () => {\n    const { footer_ref, toggleOverlay } = React.useContext<TApiContext>(ApiTokenContext);\n\n    return createPortal(\n        <a className='link link--prominent' onClick={toggleOverlay}>\n            <Text size='xxs' line_height='m' weight='bold'>\n                <Localize i18n_default_text='Learn more about API token' />\n            </Text>\n        </a>,\n        footer_ref\n    );\n};\n\nexport default ApiTokenFooter;\n","import React from 'react';\nimport { Popup } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport ApiTokenContext from './api-token-context';\nimport { TApiContext } from 'Types';\n\nconst ApiTokenOverlay = () => {\n    const { overlay_ref, toggleOverlay } = React.useContext<TApiContext>(ApiTokenContext);\n\n    return (\n        <Popup.Overlay\n            descriptions={[\n                {\n                    key: 'api_token_desc_1',\n                    component: (\n                        <Localize\n                            key={0}\n                            i18n_default_text=\"To access our mobile apps and other third-party apps, you'll first need to generate an API token.\"\n                        />\n                    ),\n                },\n            ]}\n            done_text={localize('Done')}\n            overlay_ref={overlay_ref}\n            title={localize('API Token')}\n            toggleOverlay={toggleOverlay}\n        />\n    );\n};\n\nexport default ApiTokenOverlay;\n","import React from 'react';\nimport { Button, Icon, Modal, Text, Popover } from '@deriv/components';\nimport { isDesktop, useIsMounted } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport ApiTokenContext from './api-token-context';\nimport { TPopoverAlignment, TToken, TApiContext } from 'Types';\n\ntype TApiTokenDeleteButton = {\n    popover_alignment?: TPopoverAlignment;\n    token: TToken;\n};\n\nconst ApiTokenDeleteButton = ({ token, popover_alignment = 'left' }: TApiTokenDeleteButton) => {\n    const { deleteToken } = React.useContext<TApiContext>(ApiTokenContext);\n    const [is_deleting, setIsDeleting] = React.useState(false);\n    const [is_loading, setIsLoading] = React.useState(false);\n    const [is_popover_open, setIsPopoverOpen] = React.useState(false);\n    const isMounted = useIsMounted();\n\n    const getConfirmationBeforeDelete = () => {\n        if (isDesktop()) setIsPopoverOpen(false);\n        setIsDeleting(true);\n    };\n\n    const onMouseEnterHandler = () => {\n        if (!is_deleting && isDesktop()) setIsPopoverOpen(true);\n    };\n\n    const onMouseLeaveHandler = () => {\n        if (!is_deleting && isDesktop()) setIsPopoverOpen(false);\n    };\n\n    const handleNo = () => setIsDeleting(false);\n\n    const handleYes = () => {\n        setIsLoading(true);\n        deleteToken(token.token).finally(() => {\n            if (isMounted()) {\n                setIsLoading(false);\n                setIsDeleting(false);\n            }\n        });\n    };\n\n    return (\n        <React.Fragment>\n            <Modal is_open={is_deleting} small>\n                <Modal.Body>\n                    <Text as='h1' color='prominent' weight='bold' className='da-api-token__modal-title'>\n                        {localize('Delete token')}\n                    </Text>\n                    <Text as='p' color='prominent ' size='xs' line_height='m'>\n                        {localize('Are you sure you want to delete this token?')}\n                    </Text>\n                </Modal.Body>\n                <Modal.Footer className='da-api-token__modal-footer'>\n                    <Button\n                        className='dc-dialog__button'\n                        has_effect\n                        text={localize('Cancel')}\n                        onClick={handleNo}\n                        secondary\n                        large\n                    />\n                    <Button\n                        className='dc-dialog__button'\n                        has_effect\n                        text={localize('Yes, delete')}\n                        onClick={handleYes}\n                        primary\n                        large\n                        is_loading={is_loading}\n                    />\n                </Modal.Footer>\n            </Modal>\n            <Popover\n                alignment={popover_alignment}\n                classNameBubble='dc-clipboard__popover'\n                message={localize('Delete this token')}\n                relative_render={false}\n                zIndex='9999'\n                is_open={is_popover_open}\n            >\n                <Icon\n                    icon={'IcDelete'}\n                    custom_color='var(--text-prominent)'\n                    className='dc-clipboard da-api-token__delete-icon'\n                    onClick={getConfirmationBeforeDelete}\n                    size={14}\n                    data_testid='dt_token_delete_icon'\n                    onMouseEnter={onMouseEnterHandler}\n                    onMouseLeave={onMouseLeaveHandler}\n                />\n            </Popover>\n        </React.Fragment>\n    );\n};\n\nexport default ApiTokenDeleteButton;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Text } from '@deriv/components';\n\ntype TApiTokenTableRowCell = {\n    className?: string;\n    should_bypass_text: boolean;\n};\n\nconst ApiTokenTableRowCell = ({\n    className,\n    children,\n    should_bypass_text,\n}: React.PropsWithChildren<Partial<TApiTokenTableRowCell>>) => {\n    if (should_bypass_text) {\n        return <td className={classNames('da-api-token__table-cell', className)}>{children}</td>;\n    }\n\n    return (\n        <td className={classNames('da-api-token__table-cell', className)}>\n            <Text color='prominent ' size='xs' line_height='m'>\n                {children}\n            </Text>\n        </td>\n    );\n};\n\nexport default ApiTokenTableRowCell;\n","import React from 'react';\nimport classNames from 'classnames';\n\ntype TApiTokenTableRowScopesCell = {\n    scopes: string[];\n};\n\nconst ApiTokenTableRowScopesCell = ({ scopes }: TApiTokenTableRowScopesCell) => {\n    return (\n        <div className='da-api-token__table-scopes-cell-block'>\n            {scopes.map(scope => (\n                <div\n                    key={scope}\n                    className={classNames('da-api-token__table-scope-cell', {\n                        'da-api-token__table-scope-cell-admin': scope.toLowerCase() === 'admin',\n                    })}\n                >\n                    {scope}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default ApiTokenTableRowScopesCell;\n","import React from 'react';\nimport { useIsMounted } from '@deriv/shared';\nimport { Button, Icon, Modal, Text, Popover, useCopyToClipboard } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { TPopoverAlignment } from 'Types';\n\ntype TApiTokenClipboard = {\n    scopes: string[];\n    text_copy: string;\n    info_message: string;\n    success_message: string;\n    popover_alignment?: TPopoverAlignment;\n};\n\ntype TWarningNoteBullet = {\n    message: string;\n};\n\nconst WarningNoteBullet = ({ message }: TWarningNoteBullet) => (\n    <div className='da-api-token__bullet-wrapper'>\n        <div className='da-api-token__bullet' />\n        <Text as='p' color='prominent ' size='xs' line_height='m'>\n            {message}\n        </Text>\n    </div>\n);\n\nconst WarningDialogMessage = () => (\n    <React.Fragment>\n        <Text as='p' color='prominent ' size='xs' line_height='m'>\n            {localize(\n                'Be careful who you share this token with. Anyone with this token can perform the following actions on your account behalf'\n            )}\n        </Text>\n        <div className='da-api-token__bullet-container'>\n            <WarningNoteBullet message={localize('Add accounts')} />\n            <WarningNoteBullet message={localize('Create or delete API tokens for trading and withdrawals')} />\n            <WarningNoteBullet message={localize('Modify account settings')} />\n        </div>\n    </React.Fragment>\n);\n\nconst ApiTokenClipboard = ({\n    scopes,\n    text_copy,\n    info_message,\n    success_message,\n    popover_alignment = 'bottom',\n}: TApiTokenClipboard) => {\n    const [is_copied, copyToClipboard, setIsCopied] = useCopyToClipboard();\n    const [is_modal_open, setIsModalOpen] = React.useState(false);\n    const [is_popover_open, setIsPopoverOpen] = React.useState(false);\n    const isMounted = useIsMounted();\n    let timeout_clipboard: NodeJS.Timeout | undefined, timeout_clipboard_2: NodeJS.Timeout | undefined;\n    const has_admin_scope = scopes.includes('Admin');\n\n    const onMouseEnterHandler = () => {\n        if (!is_copied) setIsPopoverOpen(true);\n    };\n\n    const onMouseLeaveHandler = () => {\n        if (!is_copied) setIsPopoverOpen(false);\n    };\n    /* two timeouts help to prevent popup window blinking.\n    without early hiding the popup we will see shortly the description message like during hovering.\n    this bug appears when popup is handled outside like here\n    */\n    const onClick = () => {\n        setIsModalOpen(false);\n        copyToClipboard(text_copy);\n        setIsPopoverOpen(true);\n        timeout_clipboard = setTimeout(() => {\n            if (isMounted()) {\n                setIsPopoverOpen(false);\n                setIsCopied(false);\n            }\n        }, 1900);\n        timeout_clipboard_2 = setTimeout(() => {\n            if (isMounted()) {\n                setIsCopied(false);\n            }\n        }, 2050);\n    };\n\n    const onClickHandler = () => {\n        if (has_admin_scope) {\n            setIsModalOpen(true);\n        } else onClick();\n    };\n\n    React.useEffect(() => {\n        return () => {\n            clearTimeout(timeout_clipboard);\n            clearTimeout(timeout_clipboard_2);\n        };\n    }, [timeout_clipboard, timeout_clipboard_2]);\n\n    return (\n        <>\n            <Modal is_open={is_modal_open} small>\n                <Modal.Body>\n                    <WarningDialogMessage />\n                </Modal.Body>\n                <Modal.Footer className='da-api-token__modal-footer'>\n                    <Button\n                        className='dc-dialog__button'\n                        has_effect\n                        text={localize('OK')}\n                        onClick={onClick}\n                        primary\n                        large\n                    />\n                </Modal.Footer>\n            </Modal>\n            <Popover\n                alignment={popover_alignment}\n                classNameBubble='dc-clipboard__popover'\n                message={is_copied ? success_message : info_message}\n                is_open={is_popover_open}\n                zIndex='9999'\n            >\n                <Icon\n                    icon={`${is_copied ? 'IcCheckmarkCircle' : 'IcClipboard'}`}\n                    custom_color={`${is_copied ? 'var(--status-success)' : 'var(--text-prominent)'}`}\n                    className='dc-clipboard'\n                    size={14}\n                    data_testid={`${is_copied ? 'dt_token_copied_icon' : 'dt_copy_token_icon'}`}\n                    onClick={onClickHandler}\n                    onMouseEnter={onMouseEnterHandler}\n                    onMouseLeave={onMouseLeaveHandler}\n                />\n            </Popover>\n        </>\n    );\n};\n\nexport default ApiTokenClipboard;\n","import React from 'react';\nimport { Icon, Text, Popover } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport ApiTokenClipboard from './api-token-clipboard';\n\ntype TApiTokenTableRowTokenCell = {\n    token: string;\n    scopes: string[];\n};\n\nconst HiddenPasswordDots = () => (\n    <div className='da-api-token__pass-dot-container'>\n        {[...Array(15)].map((el, index) => (\n            <div key={index} className='da-api-token__pass-dot' />\n        ))}\n    </div>\n);\n\nconst ApiTokenTableRowTokenCell = ({ token, scopes }: TApiTokenTableRowTokenCell) => {\n    const [should_show_token, setShouldShowToken] = React.useState(false);\n\n    const toggleTokenVisibility = () => {\n        setShouldShowToken(prev_value => !prev_value);\n    };\n\n    return (\n        <div className='da-api-token__clipboard-wrapper'>\n            {should_show_token ? (\n                <Text as='p' color='prominent ' size='xs' line_height='m'>\n                    {token}\n                </Text>\n            ) : (\n                <HiddenPasswordDots />\n            )}\n            <ApiTokenClipboard\n                info_message={localize('Copy this token')}\n                success_message={localize('Token copied!')}\n                text_copy={token}\n                scopes={scopes}\n            />\n            <Popover\n                alignment='bottom'\n                classNameBubble='dc-clipboard__popover'\n                message={should_show_token ? localize('Hide this token') : localize('Show this token')}\n            >\n                <Icon\n                    icon={should_show_token ? 'IcPasswordEyeVisible' : 'IcPasswordEyeHide'}\n                    className='da-api-token__visibility-icon'\n                    onClick={toggleTokenVisibility}\n                    width={15}\n                    custom_color='var(--text-prominent)'\n                    data_testid='dt_toggle_visibility_icon'\n                />\n            </Popover>\n        </div>\n    );\n};\n\nexport default ApiTokenTableRowTokenCell;\n","import React from 'react';\nimport ApiTokenDeleteButton from './api-token-delete-button';\nimport ApiTokenTableRowCell from './api-token-table-row-cell';\nimport ApiTokenTableRowScopesCell from './api-token-table-row-scopes-cell';\nimport ApiTokenTableRowTokenCell from './api-token-table-row-token-cell';\nimport { TToken } from 'Types';\n\ntype TApiTokenTableRow = {\n    token: TToken;\n};\n\nconst ApiTokenTableRow = ({ token }: TApiTokenTableRow) => (\n    <tr className='da-api-token__table-cell-row'>\n        <ApiTokenTableRowCell className='da-api-token__table-cell--name'>{token.display_name}</ApiTokenTableRowCell>\n        <ApiTokenTableRowCell should_bypass_text>\n            <ApiTokenTableRowTokenCell token={token.token as string} scopes={token.scopes as string[]} />\n        </ApiTokenTableRowCell>\n        <ApiTokenTableRowCell should_bypass_text>\n            <ApiTokenTableRowScopesCell scopes={token.scopes as string[]} />\n        </ApiTokenTableRowCell>\n        <ApiTokenTableRowCell>{token.last_used}</ApiTokenTableRowCell>\n        <ApiTokenTableRowCell should_bypass_text>\n            <ApiTokenDeleteButton token={token} />\n        </ApiTokenTableRowCell>\n    </tr>\n);\n\nexport default ApiTokenTableRow;\n","import React from 'react';\nimport { Text } from '@deriv/components';\n\ntype TApiTokenTableRowHeader = {\n    text: string;\n};\n\nconst ApiTokenTableRowHeader = ({ text }: TApiTokenTableRowHeader) => (\n    <th className='da-api-token__table-header'>\n        <Text color='prominent ' size='xs' line_height='m' weight='bold'>\n            {text}\n        </Text>\n    </th>\n);\n\nexport default ApiTokenTableRowHeader;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { isMobile, formatDate } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\nimport ApiTokenContext from './api-token-context';\nimport ApiTokenDeleteButton from './api-token-delete-button';\nimport ApiTokenTableBodyRow from './api-token-table-row';\nimport ApiTokenTableRowHeader from './api-token-table-row-header';\nimport ApiTokenTableRowScopesCell from './api-token-table-row-scopes-cell';\nimport ApiTokenTableRowTokenCell from './api-token-table-row-token-cell';\nimport { TApiContext, TToken } from 'Types';\n\nconst ApiTokenTable = () => {\n    const { api_tokens } = React.useContext<TApiContext>(ApiTokenContext);\n\n    const formatTokenScopes = (str: string) => {\n        const replace_filter = str.replace(/-|_/g, ' ');\n        const sentenced_case = replace_filter[0].toUpperCase() + replace_filter.slice(1).toLowerCase();\n        return sentenced_case;\n    };\n\n    const getTranslatedScopes = (str: string) => {\n        switch (str) {\n            case 'read':\n                return localize('Read');\n            case 'trade':\n                return localize('Trade');\n            case 'payments':\n                return localize('Payments');\n            case 'admin':\n                return localize('Admin');\n            case 'trading_information':\n                return localize('Trading information');\n            default:\n                return formatTokenScopes(str);\n        }\n    };\n\n    const getScopeValue = (token: TToken) => {\n        const titled_scopes = token.scopes?.map((scope: string) => getTranslatedScopes(scope));\n        const date_format = token.last_used ? formatDate(token.last_used, 'DD/MM/YYYY') : localize('Never');\n\n        return {\n            display_name: token.display_name,\n            scopes: titled_scopes,\n            last_used: date_format,\n            token: token.token,\n        };\n    };\n    if (isMobile()) {\n        return (\n            <React.Fragment>\n                {api_tokens?.map((token_data: TToken) => {\n                    const token: TToken = getScopeValue(token_data);\n                    return (\n                        <div key={token.token} className='da-api-token__scope'>\n                            <div className='da-api-token__scope-item'>\n                                <div>\n                                    <Text as='h5' size='xxs' color='general' line_height='xs' weight='bold'>\n                                        <Localize i18n_default_text='Name' />\n                                    </Text>\n                                    <Text\n                                        className='da-api-token__scope-item--name'\n                                        as='p'\n                                        size='s'\n                                        color='general'\n                                        line_height='m'\n                                    >\n                                        {token.display_name}\n                                    </Text>\n                                </div>\n                            </div>\n                            <div className='da-api-token__scope-item'>\n                                <div>\n                                    <Text as='h5' size='xxs' color='general' line_height='xs' weight='bold'>\n                                        <Localize i18n_default_text='Token' />\n                                    </Text>\n                                    <ApiTokenTableRowTokenCell\n                                        token={token.token as string}\n                                        scopes={token.scopes as string[]}\n                                    />\n                                </div>\n                                <div>\n                                    <Text as='h5' size='xxs' color='general' line_height='xs' weight='bold'>\n                                        <Localize i18n_default_text='Last Used' />\n                                    </Text>\n                                    <Text as='p' size='s' color='general' line_height='m'>\n                                        {token.last_used}\n                                    </Text>\n                                </div>\n                            </div>\n                            <div className='da-api-token__scope-item'>\n                                <div>\n                                    <Text as='h5' size='xxs' color='general' line_height='xs' weight='bold'>\n                                        <Localize i18n_default_text='Scopes' />\n                                    </Text>\n                                    <ApiTokenTableRowScopesCell scopes={token.scopes as string[]} />\n                                </div>\n                                <div>\n                                    <ApiTokenDeleteButton token={token as TToken} />\n                                </div>\n                            </div>\n                        </div>\n                    );\n                })}\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <table className='da-api-token__table'>\n            <thead>\n                <tr className='da-api-token__table-header-row'>\n                    <ApiTokenTableRowHeader text={localize('Name')} />\n                    <ApiTokenTableRowHeader text={localize('Token')} />\n                    <ApiTokenTableRowHeader text={localize('Scopes')} />\n                    <ApiTokenTableRowHeader text={localize('Last used')} />\n                    <th />\n                </tr>\n            </thead>\n            <tbody>\n                {api_tokens?.map((api_token: TToken) => (\n                    <ApiTokenTableBodyRow key={api_token.token} token={getScopeValue(api_token)} />\n                ))}\n            </tbody>\n        </table>\n    );\n};\n\nexport default ApiTokenTable;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Formik, Form, Field, FormikValues, FormikErrors, FieldProps } from 'formik';\nimport { Timeline, Input, Button, ThemedScrollbars, Loading } from '@deriv/components';\nimport InlineNoteWithIcon from '../inline-note-with-icon';\nimport { isDesktop, isMobile, getPropertyValue, useIsMounted, WS } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport LoadErrorMessage from 'Components/load-error-message';\nimport ApiTokenArticle from './api-token-article';\nimport ApiTokenCard from './api-token-card';\nimport ApiTokenFooter from './api-token-footer';\nimport ApiTokenOverlay from './api-token-overlay';\nimport ApiTokenTable from './api-token-table';\nimport ApiTokenContext from './api-token-context';\nimport { TToken } from 'Types';\nimport { observer, useStore } from '@deriv/stores';\n\nconst MIN_TOKEN = 2;\nconst MAX_TOKEN = 32;\n\ntype AptTokenState = {\n    api_tokens: NonNullable<TToken[]>;\n    is_loading: boolean;\n    is_success: boolean;\n    is_overlay_shown: boolean;\n    error_message: string;\n    show_delete: boolean;\n    dispose_token: string;\n    is_delete_loading: boolean;\n    is_delete_success: boolean;\n};\n\nexport type TApiToken = {\n    footer_ref: Element | DocumentFragment | undefined;\n    is_app_settings: boolean;\n    overlay_ref:\n        | undefined\n        | ((...args: unknown[]) => unknown)\n        | import('prop-types').InferProps<{\n              current: import('prop-types').Requireable<unknown>;\n          }>;\n    setIsOverlayShown: (is_overlay_shown: boolean | undefined) => void;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n};\n\nconst ApiToken = ({ footer_ref, is_app_settings, overlay_ref, setIsOverlayShown }: TApiToken) => {\n    const { client } = useStore();\n    const { is_switching } = client;\n    const isMounted = useIsMounted();\n    const prev_is_switching = React.useRef(is_switching);\n    const [state, setState] = React.useReducer(\n        (prev_state: Partial<AptTokenState>, value: Partial<AptTokenState>) => ({\n            ...prev_state,\n            ...value,\n        }),\n        {\n            api_tokens: [],\n            is_loading: true,\n            is_success: false,\n            is_overlay_shown: false,\n            error_message: '',\n            show_delete: false,\n            dispose_token: '',\n            is_delete_loading: false,\n            is_delete_success: false,\n        }\n    );\n\n    React.useEffect(() => {\n        getApiTokens();\n\n        return () => setState({ dispose_token: '' });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        if (prev_is_switching.current !== is_switching) {\n            prev_is_switching.current = is_switching;\n            getApiTokens();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [is_switching]);\n\n    React.useEffect(() => {\n        if (typeof setIsOverlayShown === 'function') {\n            setIsOverlayShown(state.is_overlay_shown);\n        }\n    }, [state.is_overlay_shown, setIsOverlayShown]);\n\n    const initial_form = {\n        token_name: '',\n        read: false,\n        trade: false,\n        payments: false,\n        trading_information: false,\n        admin: false,\n    };\n\n    const toggleOverlay = () => setState({ is_overlay_shown: !state.is_overlay_shown });\n\n    const validateFields = (values: FormikValues) => {\n        const errors: FormikErrors<FormikValues> = {};\n        const token_name = values.token_name && values.token_name.trim();\n\n        if (!token_name) {\n            errors.token_name = localize('Please enter a token name.');\n        } else if (!/^[A-Za-z0-9\\s_]+$/g.test(token_name)) {\n            errors.token_name = localize('Only letters, numbers, and underscores are allowed.');\n        } else if (token_name.length < MIN_TOKEN) {\n            errors.token_name = localize(\n                'Length of token name must be between {{MIN_TOKEN}} and {{MAX_TOKEN}} characters.',\n                {\n                    MIN_TOKEN,\n                    MAX_TOKEN,\n                }\n            );\n        } else if (token_name.length > MAX_TOKEN) {\n            errors.token_name = localize('Maximum {{MAX_TOKEN}} characters.', { MAX_TOKEN });\n        }\n\n        return errors;\n    };\n\n    const selectedTokenScope = (values: FormikValues) =>\n        Object.keys(values).filter(item => item !== 'token_name' && values[item]);\n    const handleSubmit = async (values: FormikValues, { setSubmitting, setFieldError, resetForm }: any) => {\n        const token_response = await WS.apiToken({\n            api_token: 1,\n            new_token: values.token_name,\n            new_token_scopes: selectedTokenScope(values),\n        });\n\n        if (token_response.error) {\n            setFieldError('token_name', token_response.error.message);\n        } else if (isMounted()) {\n            setState({\n                is_success: true,\n                api_tokens: getPropertyValue(token_response, ['api_token', 'tokens']),\n            });\n            setTimeout(() => {\n                if (isMounted()) setState({ is_success: false });\n            }, 500);\n        }\n\n        resetForm();\n        setSubmitting(false);\n    };\n\n    const populateTokenResponse = (response: import('@deriv/api-types').APITokenResponse) => {\n        if (!isMounted()) return;\n        if (response.error) {\n            setState({\n                is_loading: false,\n                error_message: getPropertyValue(response, ['error', 'message']),\n            });\n        } else {\n            setState({\n                is_loading: false,\n                api_tokens: getPropertyValue(response, ['api_token', 'tokens']),\n            });\n        }\n    };\n\n    const getApiTokens = async () => {\n        setState({ is_loading: true });\n        const token_response = await WS.authorized.apiToken({ api_token: 1 });\n        populateTokenResponse(token_response);\n    };\n\n    const deleteToken = async (token: string) => {\n        setState({ is_delete_loading: true });\n\n        const token_response = await WS.authorized.apiToken({ api_token: 1, delete_token: token });\n\n        populateTokenResponse(token_response);\n\n        if (isMounted()) setState({ is_delete_loading: false, is_delete_success: true });\n\n        setTimeout(() => {\n            if (isMounted()) setState({ is_delete_success: false });\n        }, 500);\n    };\n\n    const { api_tokens, is_loading, is_success, error_message, is_overlay_shown } = state;\n\n    if (is_loading || is_switching) {\n        return <Loading is_fullscreen={false} className='account__initial-loader' />;\n    }\n\n    if (error_message) {\n        return <LoadErrorMessage error_message={error_message} />;\n    }\n\n    const context_value = {\n        api_tokens,\n        toggleOverlay,\n        deleteToken,\n        footer_ref,\n        overlay_ref,\n    };\n\n    return (\n        <React.Fragment>\n            <ApiTokenContext.Provider value={context_value}>\n                <section\n                    className={classNames('da-api-token', {\n                        'da-api-token--app-settings': is_app_settings,\n                    })}\n                >\n                    <div className='da-api-token__wrapper'>\n                        <ThemedScrollbars className='da-api-token__scrollbars' is_bypassed={isMobile()}>\n                            {!is_app_settings && isMobile() && <ApiTokenArticle />}\n                            <Formik initialValues={initial_form} onSubmit={handleSubmit} validate={validateFields}>\n                                {({\n                                    values,\n                                    errors,\n                                    isValid,\n                                    dirty,\n                                    touched,\n                                    handleChange,\n                                    handleBlur,\n                                    isSubmitting,\n                                    setFieldValue,\n                                    setFieldTouched,\n                                }) => (\n                                    <Form noValidate>\n                                        <Timeline className='da-api-token__timeline' line_height='xxxl'>\n                                            <Timeline.Item\n                                                item_title={localize('Select scopes based on the access you need.')}\n                                            >\n                                                <div className='da-api-token__checkbox-wrapper'>\n                                                    <ApiTokenCard\n                                                        name='read'\n                                                        value={values.read}\n                                                        setFieldValue={setFieldValue}\n                                                        display_name={localize('Read')}\n                                                        description={localize(\n                                                            'This scope will allow third-party apps to view your account activity, settings, limits, balance sheets, trade purchase history, and more.'\n                                                        )}\n                                                    />\n                                                    <ApiTokenCard\n                                                        name='trade'\n                                                        value={values.trade}\n                                                        display_name={localize('Trade')}\n                                                        setFieldValue={setFieldValue}\n                                                        description={localize(\n                                                            'This scope will allow third-party apps to buy and sell contracts for you, renew your expired purchases, and top up your demo accounts.'\n                                                        )}\n                                                    />\n                                                    <ApiTokenCard\n                                                        name='payments'\n                                                        value={values.payments}\n                                                        display_name={localize('Payments')}\n                                                        setFieldValue={setFieldValue}\n                                                        description={localize(\n                                                            'This scope will allow third-party apps to withdraw to payment agents and make inter-account transfers for you.'\n                                                        )}\n                                                    />\n                                                    <ApiTokenCard\n                                                        name='trading_information'\n                                                        value={values.trading_information}\n                                                        display_name={localize('Trading information')}\n                                                        setFieldValue={setFieldValue}\n                                                        description={localize(\n                                                            'This scope will allow third-party apps to view your trading history.'\n                                                        )}\n                                                    />\n                                                    <ApiTokenCard\n                                                        name='admin'\n                                                        value={values.admin}\n                                                        display_name={localize('Admin')}\n                                                        setFieldValue={setFieldValue}\n                                                        description={localize(\n                                                            'This scope will allow third-party apps to open accounts for you, manage your settings and token usage, and more. '\n                                                        )}\n                                                    >\n                                                        <InlineNoteWithIcon\n                                                            icon='IcAlertWarning'\n                                                            message={localize(\n                                                                'To avoid loss of funds, do not share tokens with the Admin scope with unauthorised parties.'\n                                                            )}\n                                                            title={localize('Note')}\n                                                        />\n                                                    </ApiTokenCard>\n                                                </div>\n                                            </Timeline.Item>\n                                            <Timeline.Item\n                                                item_title={localize(\n                                                    \"Name your token and click on 'Create' to generate your token.\"\n                                                )}\n                                            >\n                                                <div className='da-api-token__input-group'>\n                                                    <Field name='token_name'>\n                                                        {({ field }: FieldProps<string | boolean>) => (\n                                                            <Input\n                                                                {...field}\n                                                                data-lpignore='true'\n                                                                type='text'\n                                                                className='da-api-token__input dc-input__input-group'\n                                                                label={localize('Token name')}\n                                                                value={values.token_name}\n                                                                onChange={e => {\n                                                                    setFieldTouched('token_name', true);\n                                                                    handleChange(e);\n                                                                }}\n                                                                onBlur={handleBlur}\n                                                                hint={localize(\n                                                                    'Length of token name must be between 2 and 32 characters.'\n                                                                )}\n                                                                required\n                                                                error={touched.token_name && errors.token_name}\n                                                            />\n                                                        )}\n                                                    </Field>\n                                                    <Button\n                                                        className={classNames(\n                                                            'dc-btn__button-group',\n                                                            'da-api-token__button',\n                                                            {\n                                                                'da-api-token__button--success': is_success,\n                                                            }\n                                                        )}\n                                                        type='submit'\n                                                        is_disabled={\n                                                            !dirty ||\n                                                            isSubmitting ||\n                                                            !isValid ||\n                                                            !selectedTokenScope(values).length\n                                                        }\n                                                        has_effect\n                                                        is_loading={isSubmitting}\n                                                        is_submit_success={is_success}\n                                                        text={localize('Create')}\n                                                        primary\n                                                        large\n                                                    />\n                                                </div>\n                                            </Timeline.Item>\n                                            <Timeline.Item\n                                                item_title={localize('Copy and paste the token into the app.')}\n                                            >\n                                                <ApiTokenTable />\n                                            </Timeline.Item>\n                                        </Timeline>\n                                    </Form>\n                                )}\n                            </Formik>\n                        </ThemedScrollbars>\n                        {!is_app_settings && isDesktop() && <ApiTokenArticle />}\n                    </div>\n                </section>\n                {footer_ref && <ApiTokenFooter />}\n                {overlay_ref && is_overlay_shown && <ApiTokenOverlay />}\n            </ApiTokenContext.Provider>\n        </React.Fragment>\n    );\n};\n\nexport default observer(ApiToken);\n","import ApiToken from './api-token';\n\nexport default ApiToken;\n","import React from 'react';\nimport { FormikHelpers, FormikValues } from 'formik';\n\nexport type TSelfExclusionContext = {\n    backFromConfirmLimits?: () => void;\n    currency: string;\n    currency_display?: string;\n    exclusion_texts?: Record<string, string>;\n    footer_ref?: React.RefObject<HTMLElement>;\n    getMaxLength?: (value: string) => void;\n    goToConfirm?: (value: FormikValues) => void;\n    handleSubmit: (values: FormikValues, setSubmitting: FormikHelpers<FormikValues>) => void;\n    is_appstore?: boolean;\n    is_app_settings?: boolean;\n    is_eu?: boolean;\n    is_uk?: boolean;\n    is_mlt?: boolean;\n    is_mx?: boolean;\n    is_mf?: boolean;\n    is_tablet?: boolean;\n    is_wrapper_bypassed?: boolean;\n    overlay_ref: HTMLDivElement;\n    session_duration_digits?: number | boolean;\n    state?: FormikValues;\n    toggleArticle?: () => void;\n    validateFields?: (values: FormikValues) => Record<string, string | null | undefined>;\n};\n\nconst SelfExclusionContext = React.createContext<TSelfExclusionContext>({\n    overlay_ref: document.createElement('div'),\n    currency: '',\n    handleSubmit: () => null,\n});\n\nexport default SelfExclusionContext;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getBrandWebsiteName, getStaticUrl, getPlatformSettings, PlatformContext } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\nimport { Button, Icon, Popup, Text } from '@deriv/components';\nimport SelfExclusionContext from './self-exclusion-context';\n\ntype TSelfExclusionArticleItems = Record<\n    'is_eu' | 'is_uk' | 'is_deriv_crypto' | 'is_app_settings',\n    boolean | undefined\n>;\n\ntype TSelfExclusionArticleContent = {\n    is_in_overlay: boolean;\n};\n\nexport const selfExclusionArticleItems = ({\n    is_eu,\n    is_uk,\n    is_deriv_crypto,\n    is_app_settings,\n}: TSelfExclusionArticleItems) => {\n    const platform_name_trader = getPlatformSettings('trader').name;\n    const platform_name_dbot = getPlatformSettings('dbot').name;\n    const platform_name_bbot = getPlatformSettings('bbot').name;\n    const platform_name_smarttrader = getPlatformSettings('smarttrader').name;\n\n    const getEuItems = () => {\n        const eu_items = [\n            {\n                component: (\n                    <Localize\n                        i18n_default_text='These trading limits and self-exclusion help you control the amount of money and time you spend on {{brand_website_name}} and exercise <0>responsible trading</0>.'\n                        components={[\n                            <a\n                                key={0}\n                                className='link'\n                                rel='noopener noreferrer'\n                                target='_blank'\n                                href={getStaticUrl('/responsible', { is_deriv_crypto })}\n                            />,\n                        ]}\n                        values={{ brand_website_name: getBrandWebsiteName() }}\n                    />\n                ),\n            },\n        ];\n\n        if (is_uk) {\n            eu_items.push({\n                component: (\n                    <Localize i18n_default_text='These trading limits are optional, and you can strengthen them at any time. If you don’t wish to set a specific limit, leave the field blank. If you live in the United Kingdom, Customer Support can only remove or weaken your trading limits after 24 hours of receiving the request. If you live in the Isle of Man, Customer Support can only remove or weaken your trading limits after your trading limit period has expired.' />\n                ),\n            });\n        } else {\n            eu_items.push({\n                component: (\n                    <Localize i18n_default_text='These trading limits are optional, and you can strengthen them at any time. If you don’t wish to set a specific limit, leave the field blank. Customer Support can only remove or weaken your trading limits after 24 hours of receiving the request.' />\n                ),\n            });\n        }\n\n        eu_items.push({\n            component: (\n                <Localize\n                    i18n_default_text='When you set your limits or self-exclusion, they will be aggregated across all your account types in {{platform_name_trader}} and {{platform_name_dbot}}. For example, the losses made on both platforms will add up and be counted towards the loss limit you set.'\n                    values={{ platform_name_trader, platform_name_dbot }}\n                />\n            ),\n        });\n\n        if (is_uk && !is_app_settings) {\n            eu_items.push({\n                component: (\n                    <Localize\n                        i18n_default_text='You can also exclude yourself entirely for a specified duration. This can only be removed once your self-exclusion has expired. If you wish to continue trading once your self-exclusion period expires, you must contact Customer Support by calling <0>+447723580049</0> to lift this self-exclusion. Requests by chat or email shall not be entertained. There will be a 24-hour cooling-off period before you can resume trading.'\n                        components={[\n                            <a\n                                key={0}\n                                className='link'\n                                rel='noopener noreferrer'\n                                target='_blank'\n                                href='tel:+447723580049'\n                            />,\n                        ]}\n                    />\n                ),\n            });\n        } else if (!is_app_settings) {\n            eu_items.push({\n                component: (\n                    <Localize i18n_default_text='You can also exclude yourself entirely for a specified duration. If, at any time, you decide to trade again, you must then contact our Customer Support to remove this self-exclusion. There will be a 24-hour-cooling-off period before you can resume trading. ' />\n                ),\n            });\n        }\n\n        return eu_items;\n    };\n\n    const getNonEuItems = () => [\n        {\n            component: (\n                <Localize\n                    i18n_default_text='These self-exclusion limits help you control the amount of money and time you spend trading on {{platform_name_trader}}, {{platform_name_dbot}}, {{platform_name_smarttrader}} and {{platform_name_bbot}} on Deriv. The limits you set here will help you exercise <0>responsible trading</0>.'\n                    components={[\n                        <a\n                            key={0}\n                            className='link'\n                            rel='noopener noreferrer'\n                            target='_blank'\n                            href={getStaticUrl('/responsible', { is_deriv_crypto })}\n                        />,\n                    ]}\n                    values={{ platform_name_trader, platform_name_dbot, platform_name_smarttrader, platform_name_bbot }}\n                />\n            ),\n        },\n        {\n            component: (\n                <Localize i18n_default_text='These limits are optional, and you can adjust them at any time. You decide how much and how long you’d like to trade. If you don’t wish to set a specific limit, leave the field blank.' />\n            ),\n        },\n        {\n            component: (\n                <Localize\n                    i18n_default_text='When you set your limits, they will be aggregated across all your account types in {{platform_name_trader}}, {{platform_name_dbot}}, {{platform_name_smarttrader}} and {{platform_name_bbot}} on Deriv. For example, the losses made on all four platforms will add up and be counted towards the loss limit you set.'\n                    values={{ platform_name_trader, platform_name_dbot, platform_name_smarttrader, platform_name_bbot }}\n                />\n            ),\n        },\n        ...(!is_app_settings\n            ? [\n                  {\n                      component: (\n                          <Localize\n                              i18n_default_text='You can also exclude yourself entirely for a specified duration. Once the self-exclusion period has ended, you can either extend it further or resume trading immediately. If you wish to reduce or remove the self-exclusion period, contact our <0>Customer Support</0>.'\n                              components={[\n                                  <a\n                                      key={0}\n                                      className='link'\n                                      rel='noopener noreferrer'\n                                      target='_blank'\n                                      href={getStaticUrl('/contact_us', { is_deriv_crypto })}\n                                  />,\n                              ]}\n                          />\n                      ),\n                  },\n              ]\n            : []),\n    ];\n\n    const article_items = is_eu ? getEuItems() : getNonEuItems();\n    return article_items.map((article_item, idx) => ({\n        ...article_item,\n        key: `self_exclusion_desc_${idx}`,\n    }));\n};\n\nconst SelfExclusionArticleContent = ({ is_in_overlay }: Partial<TSelfExclusionArticleContent>) => {\n    const { is_app_settings, toggleArticle, overlay_ref, is_eu, is_uk } = React.useContext(SelfExclusionContext);\n    const { is_deriv_crypto } = React.useContext(PlatformContext);\n\n    const keyed_article_items = selfExclusionArticleItems({ is_eu, is_uk, is_deriv_crypto, is_app_settings });\n    if (is_in_overlay) {\n        return (\n            <Popup.Overlay\n                descriptions={keyed_article_items}\n                done_text={localize('Done')}\n                overlay_ref={overlay_ref}\n                title={localize('Trading limits')}\n                toggleOverlay={toggleArticle}\n            />\n        );\n    }\n\n    return (\n        <div\n            className={classNames('da-self-exclusion-article__content', {\n                'da-self-exclusion-article__content--is-in-modal': !is_in_overlay,\n            })}\n        >\n            <div className='da-self-exclusion-article__content-header-container'>\n                <Text\n                    as='h3'\n                    color='prominent'\n                    size='s'\n                    line_height='l'\n                    weight='bold'\n                    className='da-self-exclusion-article__content-header'\n                >\n                    <Localize i18n_default_text='About trading limits and self-exclusion' />\n                </Text>\n                <Icon icon='IcCross' className='da-self-exclusion-article__content-icon' onClick={toggleArticle} />\n            </div>\n            <ul className='da-self-exclusion-article__content-list'>\n                {keyed_article_items.map(article => (\n                    <li key={article.key}>\n                        <Text as='span' size='xxs'>\n                            {article.component}\n                        </Text>\n                    </li>\n                ))}\n            </ul>\n            {is_app_settings && (\n                <div className='da-self-exclusion-article__content-button'>\n                    <Button secondary large onClick={toggleArticle}>\n                        <Localize i18n_default_text='Done' />\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nSelfExclusionArticleContent.propTypes = {\n    is_in_overlay: PropTypes.bool,\n};\n\nexport default SelfExclusionArticleContent;\n","import * as React from 'react';\nimport { Modal, ThemedScrollbars } from '@deriv/components';\nimport SelfExclusionContext from './self-exclusion-context';\nimport SelfExclusionArticleContent from './self-exclusion-article-content';\n\nconst SelfExclusionModal = () => {\n    const { state, toggleArticle } = React.useContext(SelfExclusionContext);\n\n    return (\n        <Modal className='self_exclusion__article-modal' is_open={state?.show_article} toggleModal={toggleArticle}>\n            <ThemedScrollbars>\n                <SelfExclusionArticleContent />\n            </ThemedScrollbars>\n        </Modal>\n    );\n};\n\nexport default SelfExclusionModal;\n","import * as React from 'react';\nimport { StaticUrl } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport { getBrandWebsiteName, getPlatformSettings, PlatformContext, isDesktop, isMobile } from '@deriv/shared';\nimport AccountArticle from 'Components/article';\nimport { selfExclusionArticleItems } from 'Components/self-exclusion/self-exclusion-article-content';\nimport SelfExclusionContext from './self-exclusion-context';\n\nconst SelfExclusionArticle = () => {\n    const { is_app_settings, toggleArticle, is_eu, is_uk } = React.useContext(SelfExclusionContext);\n    const { is_deriv_crypto } = React.useContext(PlatformContext);\n    const { is_appstore } = React.useContext(PlatformContext);\n    return (\n        <AccountArticle\n            title={localize('Trading limits and self-exclusion')}\n            descriptions={\n                is_appstore && isDesktop()\n                    ? selfExclusionArticleItems({ is_eu, is_uk, is_deriv_crypto, is_app_settings })\n                    : [\n                          is_eu ? (\n                              <Localize\n                                  i18n_default_text='These trading limits and self-exclusion help you control the amount of money and time you spend on {{brand_website_name}} and exercise <0>responsible trading</0>.'\n                                  components={[<StaticUrl key={0} className='link' href='/responsible' />]}\n                                  values={{ brand_website_name: getBrandWebsiteName() }}\n                              />\n                          ) : (\n                              <Localize\n                                  i18n_default_text='These self-exclusion limits help you control the amount of money and time you spend trading on {{platform_name_trader}}, {{platform_name_dbot}}, {{platform_name_smarttrader}} and {{platform_name_bbot}} on Deriv. The limits you set here will help you exercise <0>responsible trading</0>.'\n                                  components={[<StaticUrl key={0} className='link' href='/responsible' />]}\n                                  values={{\n                                      platform_name_trader: getPlatformSettings('trader').name,\n                                      platform_name_dbot: getPlatformSettings('dbot').name,\n                                      platform_name_smarttrader: getPlatformSettings('smarttrader').name,\n                                      platform_name_bbot: getPlatformSettings('bbot').name,\n                                  }}\n                              />\n                          ),\n                      ]\n            }\n            {...((!is_appstore || isMobile()) && { onClickLearnMore: toggleArticle })}\n        />\n    );\n};\n\nexport default SelfExclusionArticle;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { isDesktop, isMobile } from '@deriv/shared';\nimport { Div100vhContainer, ThemedScrollbars } from '@deriv/components';\nimport SelfExclusionArticle from './self-exclusion-article';\nimport SelfExclusionContext from './self-exclusion-context';\n\nconst SelfExclusionWrapper = ({ children }: { children?: React.ReactNode }) => {\n    const { is_app_settings, is_wrapper_bypassed, state } = React.useContext(SelfExclusionContext);\n\n    // \"is_wrapper_bypassed\" is currently used for a <AppSettings> hosted <SelfExclusion>.\n    // It only features the <SelfExclusionArticle> for mobile views, as the <AppSettings> footer\n    // has a link rather than <SelfExclusionArticle> to view the <SelfExclusionArticleContent>.\n    if (is_wrapper_bypassed) {\n        return (\n            <section\n                role='section-self-exclusion-wrapper'\n                className={classNames('da-self-exclusion', {\n                    'da-self-exclusion--app-settings': is_app_settings,\n                })}\n            >\n                {isMobile() && <SelfExclusionArticle />}\n                {children}\n            </section>\n        );\n    }\n\n    return (\n        <Div100vhContainer\n            className={classNames('da-self-exclusion__wrapper', {\n                'da-self-exclusion__wrapper--show-article': state?.show_article,\n            })}\n            is_disabled={isDesktop()}\n            height_offset='80px'\n        >\n            <ThemedScrollbars className='da-self-exclusion__scrollbars' is_bypassed={isMobile()}>\n                {isMobile() && <SelfExclusionArticle />}\n                {children}\n            </ThemedScrollbars>\n            {isDesktop() && <SelfExclusionArticle />}\n        </Div100vhContainer>\n    );\n};\n\nexport default SelfExclusionWrapper;\n","import * as React from 'react';\nimport { Button, Icon, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { useFormikContext } from 'formik';\nimport SelfExclusionContext from './self-exclusion-context';\n\nconst SelfExclusionConfirmLimits = () => {\n    const { backToReview } = React.useContext(SelfExclusionContext);\n    const { handleSubmit, isSubmitting } = useFormikContext();\n\n    return (\n        <div className='da-self-exclusion__confirm-limits'>\n            <Icon icon='IcStop' className='da-self-exclusion__confirm-limits-image' />\n            <Text\n                as='h4'\n                align='center'\n                color='prominent'\n                className='da-self-exclusion__confirm-limits-header'\n                line_height='l'\n                size='s'\n                weight='bold'\n            >\n                <Localize i18n_default_text='Save new limits?' />\n            </Text>\n            <Text\n                as='p'\n                align='center'\n                color='general'\n                className='da-self-exclusion__confirm-limits-desc'\n                line_height='m'\n                size='xs'\n            >\n                <Localize i18n_default_text='Remember: You cannot log in to your account until the selected date.' />\n            </Text>\n            <div className='da-self-exclusion__confirm-limits-buttons'>\n                <Button type='button' secondary large onClick={backToReview}>\n                    <Localize i18n_default_text='No, review my limits' />\n                </Button>\n                <Button\n                    type='submit'\n                    is_loading={isSubmitting}\n                    is_disabled={isSubmitting}\n                    primary\n                    large\n                    onClick={() => handleSubmit()}\n                >\n                    <Localize i18n_default_text='Yes, log me out immediately' />\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default SelfExclusionConfirmLimits;\n","import * as React from 'react';\nimport { Button, Icon, StaticUrl, Text } from '@deriv/components';\nimport { FormikValues, useFormikContext } from 'formik';\nimport { formatMoney, toMoment } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\nimport SelfExclusionContext from './self-exclusion-context';\nimport SelfExclusionConfirmLimits from './self-exclusion-confirm-limits';\n\nconst SelfExclusionConfirmPage = () => {\n    const { backFromConfirmLimits, currency, currency_display, exclusion_texts, is_eu, state } =\n        React.useContext(SelfExclusionContext);\n    const { isSubmitting, values } = useFormikContext<FormikValues>();\n\n    if (state?.show_confirm) {\n        return <SelfExclusionConfirmLimits />;\n    }\n\n    return (\n        <React.Fragment>\n            <div onClick={backFromConfirmLimits} className='da-self-exclusion__back'>\n                <Icon icon='IcArrowLeftBold' />\n                <Text as='p' size='xs' weight='bold'>\n                    <Localize i18n_default_text='Back' />\n                </Text>\n            </div>\n            <div className='da-self-exclusion__confirm'>\n                <Text\n                    className='da-self-exclusion__confirm-header'\n                    as='h2'\n                    size='s'\n                    line_height='l'\n                    weight='bold'\n                    color='prominent'\n                >\n                    <Localize i18n_default_text='You have set the following limits:' />\n                </Text>\n                {state?.changed_attributes.map((key: string, idx: number) => {\n                    const need_date_format = ['exclude_until', 'timeout_until'];\n                    const need_money_format = [\n                        'max_deposit',\n                        'max_7day_deposit',\n                        'max_30day_deposit',\n                        'max_total_stake',\n                        'max_turnover',\n                        'max_losses',\n                        'max_7day_turnover',\n                        'max_7day_losses',\n                        'max_30day_turnover',\n                        'max_30day_losses',\n                        'max_balance',\n                    ];\n                    const need_minutes = ['session_duration_limit'];\n                    const need_amount = ['max_open_bets'];\n\n                    let value = '';\n\n                    if (need_date_format.includes(key)) {\n                        value = toMoment(values[key]).format('DD/MM/YYYY');\n                    } else if (need_money_format.includes(key)) {\n                        value = `${formatMoney(currency, +values[key], true)} ${currency_display}`;\n                    } else if (need_minutes.includes(key)) {\n                        value = localize('{{value}} mins', { value: values[key] });\n                    } else if (need_amount.includes(key)) {\n                        value = `${values[key]}`;\n                    }\n\n                    const checked_value = +values[key] === 0 ? 'Removed' : value;\n\n                    return (\n                        <div key={idx} className='da-self-exclusion__confirm-item'>\n                            <Text as='p' size='xs'>\n                                {exclusion_texts ? exclusion_texts[key] : ''}\n                            </Text>\n                            <Text as='p' size='xs' align='right' weight='bold'>\n                                {checked_value}\n                            </Text>\n                        </div>\n                    );\n                })}\n                <Text as='p' size='xs' align='center' className='da-self-exclusion__confirm-note'>\n                    {is_eu ? (\n                        <Localize\n                            i18n_default_text='You’ll be able to adjust these limits at any time. You can reduce your limits from the <0>self-exclusion page</0>. To increase or remove your limits, please contact our <1>Customer Support team</1>.'\n                            components={[\n                                <Text key={0} size='xs' color='loss-danger' weight='bold' />,\n                                <StaticUrl key={1} className='link link--orange' href='/contact-us' />,\n                            ]}\n                        />\n                    ) : (\n                        <Localize\n                            i18n_default_text='We’ll update your limits. Click <0>Accept</0> to acknowledge that you are fully responsible for your actions, and we are not liable for any addiction or loss.'\n                            components={[<Text key={0} size='xs' weight='bold' />]}\n                        />\n                    )}\n                </Text>\n                <Text as='p' size='xs' align='center' color='loss-danger' className='da-self-exclusion__error'>\n                    {state?.submit_error_message}\n                </Text>\n                {is_eu ? (\n                    <Button is_loading={isSubmitting} is_disabled={isSubmitting} primary large type='submit'>\n                        <Localize i18n_default_text='Confirm my limits' />\n                    </Button>\n                ) : (\n                    <Button is_loading={isSubmitting} is_disabled={isSubmitting} primary large type='submit'>\n                        <Localize i18n_default_text='Accept' />\n                    </Button>\n                )}\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default SelfExclusionConfirmPage;\n","import * as React from 'react';\nimport { createPortal } from 'react-dom';\nimport { useFormikContext } from 'formik';\nimport { Button, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport SelfExclusionContext from './self-exclusion-context';\n\nconst SelfExclusionFooter = () => {\n    const { footer_ref, goToConfirm, toggleArticle } = React.useContext(SelfExclusionContext);\n    const { dirty, isSubmitting, isValid, values } = useFormikContext();\n\n    if (footer_ref) {\n        return createPortal(\n            <>\n                <a className='link link--prominent' onClick={toggleArticle}>\n                    <Text size='xxs' line_height='m' weight='bold'>\n                        <Localize i18n_default_text='Learn more about trading limits' />\n                    </Text>\n                </a>\n                <Button\n                    disabled={!dirty || !isValid || isSubmitting}\n                    primary\n                    className='da-self-exclusion__button'\n                    large\n                    onClick={() => goToConfirm?.(values)}\n                    type='button'\n                >\n                    <Localize i18n_default_text='Next' />\n                </Button>\n            </>,\n            footer_ref\n        );\n    }\n\n    return null;\n};\n\nexport default SelfExclusionFooter;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Button, DatePicker, Icon, Input, Text } from '@deriv/components';\nimport { getBrandWebsiteName, epochToMoment, toMoment, PlatformContext, isMobile } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\nimport {\n    Field,\n    FormikComputedProps,\n    FormikErrors,\n    FormikHandlers,\n    FormikHelpers,\n    FormikState,\n    FormikValues,\n    useFormikContext,\n} from 'formik';\nimport SelfExclusionContext from './self-exclusion-context';\nimport SelfExclusionFooter from './self-exclusion-footer';\n\ntype TSectionTitle = {\n    title: React.ReactElement;\n    has_border_line?: boolean;\n};\n\ntype TFormikContext = {\n    errors: FormikErrors<FormikValues>;\n    handleBlur: FormikHandlers['handleBlur'];\n    handleChange: FormikHandlers['handleChange'];\n    setFieldValue?: FormikHelpers<FormikValues>['setFieldValue'];\n    dirty: FormikComputedProps<FormikValues>['dirty'];\n    isSubmitting: FormikState<FormikValues>['isSubmitting'];\n    isValid: FormikComputedProps<FormikValues>['isValid'];\n    values: FormikValues;\n};\n\nconst SectionTitle = ({ title, has_border_line }: TSectionTitle) => {\n    return (\n        <Text\n            as='h2'\n            weight='bold'\n            size={isMobile() ? 'xxs' : 'xs'}\n            className={classNames('da-self-exclusion__header', {\n                'da-self-exclusion__header-border': has_border_line,\n            })}\n        >\n            {title}\n        </Text>\n    );\n};\n\nconst StakeLossAndLimitsInputs = () => {\n    const { currency_display, getMaxLength } = React.useContext(SelfExclusionContext);\n    const { errors, handleBlur, handleChange, values }: TFormikContext = useFormikContext<TFormikContext>();\n    return (\n        <React.Fragment>\n            <SectionTitle title={<Localize i18n_default_text='Your stake and loss limits' />} />\n            <div className='da-self-exclusion__item-wrapper'>\n                <div className='da-self-exclusion__item'>\n                    <h3 className='da-self-exclusion__item-title'>\n                        <Localize i18n_default_text='24 hours' />\n                    </h3>\n                    <Text as='p' size='xs' className='da-self-exclusion__item-field'>\n                        <Localize i18n_default_text='Max. total stake' />\n                    </Text>\n                    <Field name='max_turnover' data-testid='dt_max_turnover'>\n                        {({ field }: FormikValues) => (\n                            <Input\n                                {...field}\n                                data-lpignore='true'\n                                className='da-self-exclusion__input'\n                                label={currency_display}\n                                value={values.max_turnover ?? ''}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                maxLength={getMaxLength?.('max_turnover')}\n                                required\n                                error={errors.max_turnover}\n                            />\n                        )}\n                    </Field>\n                    <Text as='p' size='xs' className='da-self-exclusion__item-field'>\n                        <Localize i18n_default_text='Max. total loss' />\n                    </Text>\n                    <Field name='max_losses'>\n                        {({ field }: FormikValues) => (\n                            <Input\n                                {...field}\n                                data-lpignore='true'\n                                className='da-self-exclusion__input'\n                                label={currency_display}\n                                value={values.max_losses}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                maxLength={getMaxLength?.('max_losses')}\n                                required\n                                error={errors.max_losses}\n                            />\n                        )}\n                    </Field>\n                </div>\n                <div className='da-self-exclusion__item'>\n                    <h3 className='da-self-exclusion__item-title'>\n                        <Localize i18n_default_text='7 days' />\n                    </h3>\n                    <Text as='p' size='xs' className='da-self-exclusion__item-field'>\n                        <Localize i18n_default_text='Max. total stake' />\n                    </Text>\n                    <Field name='max_7day_turnover'>\n                        {({ field }: FormikValues) => (\n                            <Input\n                                {...field}\n                                data-lpignore='true'\n                                className='da-self-exclusion__input'\n                                label={currency_display}\n                                value={values.max_7day_turnover}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                maxLength={getMaxLength?.('max_7day_turnover')}\n                                required\n                                error={errors.max_7day_turnover}\n                            />\n                        )}\n                    </Field>\n                    <Text as='p' size='xs' className='da-self-exclusion__item-field'>\n                        <Localize i18n_default_text='Max. total loss' />\n                    </Text>\n                    <Field name='max_7day_losses'>\n                        {({ field }: FormikValues) => (\n                            <Input\n                                {...field}\n                                data-lpignore='true'\n                                className='da-self-exclusion__input'\n                                label={currency_display}\n                                value={values.max_7day_losses}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                maxLength={getMaxLength?.('max_7day_losses')}\n                                required\n                                error={errors.max_7day_losses}\n                            />\n                        )}\n                    </Field>\n                </div>\n                <div className='da-self-exclusion__item'>\n                    <h3 className='da-self-exclusion__item-title'>\n                        <Localize i18n_default_text='30 days' />\n                    </h3>\n                    <Text as='p' size='xs' className='da-self-exclusion__item-field'>\n                        <Localize i18n_default_text='Max. total stake' />\n                    </Text>\n                    <Field name='max_30day_turnover'>\n                        {({ field }: FormikValues) => (\n                            <Input\n                                {...field}\n                                data-lpignore='true'\n                                className='da-self-exclusion__input'\n                                label={currency_display}\n                                // value={values.max_30day_turnover}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                maxLength={getMaxLength?.('max_30day_turnover')}\n                                required\n                                error={errors.max_30day_turnover}\n                            />\n                        )}\n                    </Field>\n                    <Text as='p' size='xs' className='da-self-exclusion__item-field'>\n                        <Localize i18n_default_text='Max. total loss' />\n                    </Text>\n                    <Field name='max_30day_losses'>\n                        {({ field }: FormikValues) => (\n                            <Input\n                                {...field}\n                                data-lpignore='true'\n                                className='da-self-exclusion__input'\n                                label={currency_display}\n                                value={values.max_30day_losses}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                maxLength={getMaxLength?.('max_30day_losses')}\n                                required\n                                error={errors.max_30day_losses}\n                            />\n                        )}\n                    </Field>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nconst SessionAndLoginLimitsInputs = () => {\n    const { is_mlt, is_mx, is_tablet, session_duration_digits } = React.useContext(SelfExclusionContext);\n    const { errors, handleBlur, handleChange, setFieldValue, values }: TFormikContext =\n        useFormikContext<TFormikContext>();\n    const { is_appstore } = React.useContext(PlatformContext);\n\n    return (\n        <React.Fragment>\n            <SectionTitle\n                title={<Localize i18n_default_text='Your session and login limits' />}\n                has_border_line={is_appstore}\n            />\n            <div className='da-self-exclusion__item-wrapper'>\n                <div className='da-self-exclusion__item'>\n                    <Text as='p' size='xs' className='da-self-exclusion__item-field'>\n                        <Localize i18n_default_text='You will be automatically logged out from each session after this time limit.' />\n                    </Text>\n                    <Field name='session_duration_limit'>\n                        {({ field }: FormikValues) => (\n                            <Input\n                                {...field}\n                                data-lpignore='true'\n                                className='da-self-exclusion__input'\n                                label={localize('Minutes')}\n                                value={values.session_duration_limit}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                maxLength={session_duration_digits}\n                                required\n                                error={errors.session_duration_limit}\n                            />\n                        )}\n                    </Field>\n                </div>\n                <div className='da-self-exclusion__item'>\n                    <Text as='p' size='xs' className='da-self-exclusion__item-field'>\n                        <Localize i18n_default_text='You will not be able to log in to your account until this date (up to 6 weeks from today).' />\n                    </Text>\n                    <Field name='timeout_until'>\n                        {({ field }: FormikValues) => (\n                            <DatePicker\n                                min_date={toMoment().add(1, 'days').format('YYYY-MM-DD')}\n                                max_date={toMoment().add(6, 'weeks').format('YYYY-MM-DD')}\n                                {...field}\n                                should_show_today={false}\n                                className='da-self-exclusion__input'\n                                label={localize('Date')}\n                                value={values.timeout_until && epochToMoment(values.timeout_until)}\n                                onChange={({ target }: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) =>\n                                    setFieldValue(\n                                        'timeout_until',\n                                        target?.value ? toMoment(target.value).unix() : '',\n                                        true\n                                    )\n                                }\n                                required\n                                readOnly\n                                error={errors.timeout_until}\n                            />\n                        )}\n                    </Field>\n                </div>\n                <div className='da-self-exclusion__item'>\n                    <Text as='p' size='xs' className='da-self-exclusion__item-field'>\n                        <Localize i18n_default_text='Your account will be excluded from the website until this date (at least 6 months, up to 5 years).' />\n                    </Text>\n                    <Field name='exclude_until'>\n                        {({ field }: FormikValues) => (\n                            <DatePicker\n                                min_date={toMoment().add(6, 'months').add(1, 'days').format('YYYY-MM-DD')}\n                                max_date={toMoment().add(5, 'years').format('YYYY-MM-DD')}\n                                {...field}\n                                alignment={is_tablet ? 'bottom' : 'left'}\n                                className='da-self-exclusion__input'\n                                label={localize('Date')}\n                                value={values.exclude_until}\n                                onChange={({ target }: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) =>\n                                    setFieldValue(\n                                        'exclude_until',\n                                        target?.value ? toMoment(target.value).format('YYYY-MM-DD') : '',\n                                        true\n                                    )\n                                }\n                                required\n                                autoComplete='off'\n                                readOnly\n                                error={errors.exclude_until}\n                            />\n                        )}\n                    </Field>\n                </div>\n            </div>\n            {values.exclude_until && (is_mlt || is_mx) && (\n                <div className='da-self-exclusion__warning'>\n                    <Icon icon='IcAlertWarning' className='da-self-exclusion__warning-icon' />\n                    <div className='da-self-exclusion__warning-textbox'>\n                        <Text as='p' size='xxxs'>\n                            <Localize\n                                i18n_default_text='Self-exclusion on the website only applies to your {{brand_website_name}} account and does not include other companies or websites.'\n                                values={{ brand_website_name: getBrandWebsiteName() }}\n                            />\n                        </Text>\n                        <Text as='p' size='xxxs'>\n                            {is_mlt ? (\n                                <Localize\n                                    i18n_default_text='If you are a UK resident, to self-exclude from all online gambling companies licensed in Great Britain, go to <0>www.gamstop.co.uk</0>.'\n                                    components={[\n                                        <a\n                                            key={0}\n                                            className='da-self-exclusion__warning-link'\n                                            rel='noopener noreferrer'\n                                            target='_blank'\n                                            href='https://www.gamstop.co.uk'\n                                        />,\n                                    ]}\n                                />\n                            ) : (\n                                <Localize\n                                    i18n_default_text='To self-exclude from all online gambling companies licensed in Great Britain, go to <0>www.gamstop.co.uk</0>.'\n                                    components={[\n                                        <a\n                                            key={0}\n                                            className='da-self-exclusion__warning-link'\n                                            rel='noopener noreferrer'\n                                            target='_blank'\n                                            href='https://www.gamstop.co.uk'\n                                        />,\n                                    ]}\n                                />\n                            )}\n                        </Text>\n                        <Text as='p' size='xxxs'>\n                            <Localize\n                                i18n_default_text='For more information and assistance to counselling and support services, please visit <0>begambleaware.org</0>.'\n                                components={[\n                                    <a\n                                        key={0}\n                                        className='da-self-exclusion__warning-link'\n                                        rel='noopener noreferrer'\n                                        target='_blank'\n                                        href='https://www.begambleaware.org'\n                                    />,\n                                ]}\n                            />\n                        </Text>\n                    </div>\n                </div>\n            )}\n        </React.Fragment>\n    );\n};\n\nconst MaximumAccountBalanceAndOpenPositionsInputs = () => {\n    const { currency_display, getMaxLength } = React.useContext(SelfExclusionContext);\n    const { errors, handleBlur, handleChange, values }: TFormikContext = useFormikContext<TFormikContext>();\n    const { is_appstore } = React.useContext(PlatformContext);\n\n    return (\n        <React.Fragment>\n            <SectionTitle\n                title={<Localize i18n_default_text='Your maximum account balance and open positions' />}\n                has_border_line={is_appstore}\n            />\n            <div className='da-self-exclusion__item-wrapper'>\n                <div className='da-self-exclusion__item'>\n                    <Text as='p' size='xs' className='da-self-exclusion__item-field'>\n                        <Localize i18n_default_text='Once your account balance reaches this amount, you will not be able to deposit funds into your account.' />\n                    </Text>\n                    <Field name='max_balance'>\n                        {({ field }: FormikValues) => (\n                            <Input\n                                {...field}\n                                data-lpignore='true'\n                                className='da-self-exclusion__input'\n                                label={currency_display}\n                                value={values.max_balance}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                maxLength={getMaxLength?.('max_balance')}\n                                required\n                                error={errors.max_balance}\n                            />\n                        )}\n                    </Field>\n                </div>\n                <div className='da-self-exclusion__item'>\n                    <Text as='p' size='xs' className='da-self-exclusion__item-field'>\n                        <Localize i18n_default_text='Maximum open positions' />\n                    </Text>\n                    <Field name='max_open_bets'>\n                        {({ field }: FormikValues) => (\n                            <Input\n                                {...field}\n                                data-lpignore='true'\n                                className='da-self-exclusion__input'\n                                label={localize('No. of open position(s)')}\n                                value={values.max_open_bets}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                maxLength={getMaxLength?.('max_open_bets')}\n                                required\n                                error={errors.max_open_bets}\n                            />\n                        )}\n                    </Field>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nconst MaximumDepositLimitInputs = () => {\n    const { currency, is_mlt, is_mf, is_mx, getMaxLength } = React.useContext(SelfExclusionContext);\n    const { errors, handleBlur, handleChange, values }: TFormikContext = useFormikContext<TFormikContext>();\n    const { is_appstore } = React.useContext(PlatformContext);\n    const should_render = is_mlt || is_mf || is_mx;\n\n    if (!should_render) {\n        return null;\n    }\n\n    return (\n        <React.Fragment>\n            <SectionTitle\n                title={<Localize i18n_default_text='Your maximum deposit limit' />}\n                has_border_line={is_appstore}\n            />\n            <div className='da-self-exclusion__item-wrapper'>\n                <div className='da-self-exclusion__item'>\n                    <h3 className='da-self-exclusion__item-title'>\n                        <Localize i18n_default_text='24 hours' />\n                    </h3>\n                    <Text as='p' size='xs' className='da-self-exclusion__item-field'>\n                        <Localize i18n_default_text='Max. deposit limit' />\n                    </Text>\n                    <Field name='max_deposit'>\n                        {({ field }: FormikValues) => (\n                            <Input\n                                {...field}\n                                data-lpignore='true'\n                                className='da-self-exclusion__input'\n                                label={currency}\n                                value={values.max_deposit}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                maxLength={getMaxLength?.('max_deposit')}\n                                required\n                                error={errors.max_deposit}\n                            />\n                        )}\n                    </Field>\n                </div>\n                <div className='da-self-exclusion__item'>\n                    <h3 className='da-self-exclusion__item-title'>\n                        <Localize i18n_default_text='7 days' />\n                    </h3>\n                    <Text as='p' size='xs' className='da-self-exclusion__item-field'>\n                        <Localize i18n_default_text='Max. deposit limit' />\n                    </Text>\n                    <Field name='max_7day_deposit'>\n                        {({ field }: FormikValues) => (\n                            <Input\n                                {...field}\n                                data-lpignore='true'\n                                className='da-self-exclusion__input'\n                                label={currency}\n                                value={values.max_7day_deposit}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                maxLength={getMaxLength?.('max_7day_deposit')}\n                                required\n                                error={errors.max_7day_deposit}\n                            />\n                        )}\n                    </Field>\n                </div>\n                <div className='da-self-exclusion__item'>\n                    <h3 className='da-self-exclusion__item-title'>\n                        <Localize i18n_default_text='30 days' />\n                    </h3>\n                    <Text as='p' size='xs' className='da-self-exclusion__item-field'>\n                        <Localize i18n_default_text='Max. deposit limit' />\n                    </Text>\n                    <Field name='max_30day_deposit'>\n                        {({ field }: FormikValues) => (\n                            <Input\n                                {...field}\n                                data-lpignore='true'\n                                className='da-self-exclusion__input'\n                                label={currency}\n                                value={values.max_30day_deposit}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                maxLength={getMaxLength?.('max_30day_deposit')}\n                                required\n                                error={errors.max_30day_deposit}\n                            />\n                        )}\n                    </Field>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nconst SelfExclusionInputs = () => {\n    const { is_appstore } = React.useContext(PlatformContext);\n    const { footer_ref, goToConfirm, is_app_settings } = React.useContext(SelfExclusionContext);\n    const { dirty, isSubmitting, isValid, values }: TFormikContext = useFormikContext<TFormikContext>();\n    const versions: Record<string, { condition: boolean; components: Array<React.FunctionComponent> }> = {\n        // Global settings for account for DWallet.\n        dwallet: {\n            condition: !!is_appstore,\n            components: [\n                SessionAndLoginLimitsInputs,\n                MaximumAccountBalanceAndOpenPositionsInputs,\n                MaximumDepositLimitInputs,\n            ],\n        },\n        // App-specific settings, i.e. user accessing app settings from App Store or\n        // through DWallet App header.\n        app_settings: {\n            condition: !!is_app_settings,\n            components: [StakeLossAndLimitsInputs, MaximumAccountBalanceAndOpenPositionsInputs],\n        },\n        // Legacy Deriv.app, i.e. non-DWallet user accessing app.deriv.com/account/self-exclusion.\n        deriv_app: {\n            condition: !!(!is_appstore && !is_app_settings),\n            components: [\n                StakeLossAndLimitsInputs,\n                SessionAndLoginLimitsInputs,\n                MaximumAccountBalanceAndOpenPositionsInputs,\n                MaximumDepositLimitInputs,\n            ],\n        },\n    };\n\n    return (\n        <React.Fragment>\n            {Object.keys(versions).map((version_name: string, version_idx) => {\n                const version = versions[version_name];\n                if (!version.condition) return null;\n                return (\n                    <React.Fragment key={`${version_name}${version_idx}`}>\n                        {version.components.map((Component, component_idx) => (\n                            <Component key={`${version_name}component${component_idx}`} />\n                        ))}\n                    </React.Fragment>\n                );\n            })}\n            {footer_ref ? (\n                <SelfExclusionFooter />\n            ) : (\n                <div className='da-self-exclusion__button-wrapper'>\n                    <Button\n                        disabled={!dirty || !isValid || isSubmitting}\n                        primary\n                        className='da-self-exclusion__button'\n                        large\n                        onClick={() => goToConfirm?.(values)}\n                        type='button'\n                    >\n                        <Localize i18n_default_text='Next' />\n                    </Button>\n                </div>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default SelfExclusionInputs;\n","import React from 'react';\nimport { Form, Formik } from 'formik';\nimport SelfExclusionContext from './self-exclusion-context';\nimport SelfExclusionConfirmPage from './self-exclusion-confirm-page';\nimport SelfExclusionInputs from './self-exclusion-inputs';\n\nconst SelfExclusionForm = () => {\n    const { handleSubmit, state, validateFields } = React.useContext(SelfExclusionContext);\n\n    return (\n        <Formik initialValues={state?.self_exclusions} onSubmit={handleSubmit} validate={validateFields}>\n            <Form className='da-self-exclusion__form' noValidate>\n                {state?.is_confirm_page ? <SelfExclusionConfirmPage /> : <SelfExclusionInputs />}\n            </Form>\n        </Formik>\n    );\n};\n\nexport default SelfExclusionForm;\n","import * as React from 'react';\nimport { Loading } from '@deriv/components';\nimport {\n    getBrandWebsiteName,\n    getPropertyValue,\n    toMoment,\n    getDecimalPlaces,\n    getCurrencyDisplayCode,\n    validNumber,\n    useIsMounted,\n    WS,\n} from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport DemoMessage from 'Components/demo-message';\nimport LoadErrorMessage from 'Components/load-error-message';\nimport SelfExclusionArticleContent from './self-exclusion-article-content';\nimport SelfExclusionContext from './self-exclusion-context';\nimport SelfExclusionModal from './self-exclusion-modal';\nimport SelfExclusionWrapper from './self-exclusion-wrapper';\nimport SelfExclusionForm from './self-exclusion-form';\nimport { FormikHelpers, FormikValues } from 'formik';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TSelfExclusion = {\n    footer_ref?: React.RefObject<HTMLElement>;\n    is_appstore: boolean;\n    is_app_settings: boolean;\n    is_wrapper_bypassed: boolean;\n    overlay_ref: HTMLDivElement;\n    setIsOverlayShown?: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\ntype TExclusionData = {\n    max_deposit: string;\n    max_turnover: string;\n    max_losses: string;\n    max_7day_deposit: string;\n    max_7day_turnover: string;\n    max_7day_losses: string;\n    max_30day_deposit: string;\n    max_30day_turnover: string;\n    max_30day_losses: string;\n    session_duration_limit: string;\n    timeout_until: string;\n    exclude_until: string;\n    max_balance: string;\n    max_open_bets: string;\n};\n\ntype TExclusionLimits = Partial<{\n    get_limits: {\n        open_positions: number;\n        account_balance: number;\n    };\n}>;\n\ntype TCustomState = Partial<{\n    changed_attributes: string[];\n    error_message: string;\n    is_confirm_page: boolean;\n    is_loading: boolean;\n    is_success: boolean;\n    self_exclusions: Record<string, string>;\n    show_article: boolean;\n    show_confirm: boolean;\n    submit_error_message: string;\n}>;\n\ntype TResponse = {\n    error?: {\n        message: string;\n    };\n};\n\nconst SelfExclusion = ({\n    footer_ref,\n    is_app_settings,\n    is_appstore,\n    overlay_ref,\n    setIsOverlayShown,\n}: TSelfExclusion) => {\n    const { client, ui } = useStore();\n    const { currency, is_virtual, is_switching, standpoint, is_eu, is_uk, logout, landing_company_shortcode } = client;\n    const { is_tablet } = ui;\n    const is_wrapper_bypassed = false;\n    const is_mlt = landing_company_shortcode === 'malta';\n    const is_mf = landing_company_shortcode === 'maltainvest';\n    const is_mx = landing_company_shortcode === 'iom';\n    const is_cr = standpoint.svg;\n    const exclusion_fields_settings = Object.freeze({\n        max_number: 9999999999999,\n        max_open_positions: 999999999,\n        six_weeks: 60480, // in minutes\n    });\n\n    const exclusion_texts = {\n        max_deposit: localize('Max. deposit limit per day'),\n        max_turnover: localize('Max. total stake per day'),\n        max_losses: localize('Max. total loss per day'),\n        max_7day_deposit: localize('Max. deposit limit over 7 days'),\n        max_7day_turnover: localize('Max. total stake over 7 days'),\n        max_7day_losses: localize('Max. total loss over 7 days'),\n        max_30day_deposit: localize('Max. deposit limit over 30 days'),\n        max_30day_turnover: localize('Max. total stake over 30 days'),\n        max_30day_losses: localize('Max. total loss over 30 days'),\n        session_duration_limit: localize('Time limit per session'),\n        timeout_until: localize('Time out until'),\n        exclude_until: localize('Excluded from {{brand_website_name}} until', {\n            brand_website_name: getBrandWebsiteName(),\n        }),\n        max_balance: localize('Max. account balance'),\n        max_open_bets: localize('Max. open positions'),\n    };\n\n    const prev_is_switching = React.useRef<boolean | null>(null);\n    const exclusion_limits = React.useRef<TExclusionLimits>({});\n    const exclusion_data = React.useRef<TExclusionData>({\n        max_deposit: '',\n        max_turnover: '',\n        max_losses: '',\n        max_7day_deposit: '',\n        max_7day_turnover: '',\n        max_7day_losses: '',\n        max_30day_deposit: '',\n        max_30day_turnover: '',\n        max_30day_losses: '',\n        session_duration_limit: '',\n        timeout_until: '',\n        exclude_until: '',\n        max_balance: '',\n        max_open_bets: '',\n    });\n\n    const initial_state: TCustomState = Object.freeze({\n        changed_attributes: [],\n        error_message: '',\n        is_confirm_page: false,\n        is_loading: true,\n        is_success: false,\n        self_exclusions: exclusion_data.current,\n        show_article: false,\n        show_confirm: false,\n        submit_error_message: '',\n    });\n\n    const isMounted = useIsMounted();\n    const [state, setState] = React.useReducer<(prev_state: TCustomState, value: TCustomState) => TCustomState>(\n        (prev_state, value) => {\n            return { ...prev_state, ...value };\n        },\n        initial_state\n    );\n\n    React.useEffect(() => {\n        if (is_virtual) {\n            setState({ is_loading: false });\n        } else {\n            getLimits();\n            getSelfExclusion();\n        }\n\n        return () => {\n            setState({ changed_attributes: [] });\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        if (prev_is_switching.current !== is_switching) {\n            prev_is_switching.current = is_switching;\n\n            resetState();\n            getLimits();\n            getSelfExclusion();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [is_switching]);\n\n    React.useEffect(() => {\n        setIsOverlayShown?.(!!state?.show_article);\n    }, [state.show_article, setIsOverlayShown]);\n\n    const resetState = () => setState(initial_state);\n    const validateFields = (values: FormikValues) => {\n        const errors: Record<string, string | null | undefined> = {};\n\n        // Regex\n        const max_number = exclusion_fields_settings.max_number;\n        const max_open_positions = exclusion_fields_settings.max_open_positions;\n        const six_weeks = exclusion_fields_settings.six_weeks; // in minutes\n\n        const more_than_zero_message = localize('Please input number greater than 0');\n\n        const getSmallestMinValue = (decimals: number) =>\n            decimals === 0\n                ? 1\n                : `0.${Array(decimals - 1)\n                      .fill(0)\n                      .join('')}1`;\n\n        const custom_validation: Array<keyof TExclusionData> = [\n            'max_balance',\n            'max_open_bets',\n            'session_duration_limit',\n        ];\n\n        const only_currency: Array<keyof TExclusionData> = [\n            'max_deposit',\n            'max_7day_deposit',\n            'max_30day_deposit',\n            'max_turnover',\n            'max_losses',\n            'max_7day_turnover',\n            'max_7day_losses',\n            'max_30day_turnover',\n            'max_30day_losses',\n        ];\n\n        if (values.timeout_until) {\n            if (values.timeout_until <= toMoment().unix()) {\n                errors.timeout_until = localize('Timeout time must be greater than current time.');\n            } else if (values.timeout_until > toMoment().add(6, 'week').unix()) {\n                errors.timeout_until = localize('Timeout time cannot be more than 6 weeks.');\n            }\n        }\n\n        if (values.exclude_until) {\n            if (toMoment(values.exclude_until).unix() < toMoment().unix()) {\n                errors.exclude_until = localize('Exclude time must be after today.');\n            } else if (toMoment(values.exclude_until).unix() < toMoment().add(6, 'month').unix()) {\n                errors.exclude_until = localize('Exclude time cannot be less than 6 months.');\n            } else if (toMoment(values.exclude_until).unix() > toMoment().add(5, 'year').unix()) {\n                errors.exclude_until = localize('Exclude time cannot be for more than five years.');\n            }\n        }\n\n        only_currency.forEach(item => {\n            if (values[item]) {\n                const result = validNumber(values[item], {\n                    type: 'float',\n                    decimals: getDecimalPlaces(currency),\n                    min: is_eu ? Number(getSmallestMinValue(getDecimalPlaces(currency))) : 0,\n                    max: Number(is_eu && state.self_exclusions?.[item]) || max_number,\n                });\n                const { is_ok, message } = typeof result === 'object' ? result : { is_ok: result, message: null };\n                if (!is_ok) errors[item] = message;\n            }\n            if (state.self_exclusions?.[item] && !values[item] && !is_cr) {\n                errors[item] = more_than_zero_message;\n            }\n        });\n\n        if (values.session_duration_limit) {\n            const result = validNumber(values.session_duration_limit, {\n                type: 'integer',\n                min: Number(is_eu),\n                max: is_eu ? state.self_exclusions?.session_duration_limit : six_weeks,\n            });\n            const { is_ok, message } = typeof result === 'object' ? result : { is_ok: result, message: null };\n            if (!is_ok) errors.session_duration_limit = message;\n            if (values.session_duration_limit > six_weeks) {\n                errors.session_duration_limit = localize(\n                    'Enter a value in minutes, up to 60480 minutes (equivalent to 6 weeks).'\n                );\n            }\n        }\n\n        if (values.max_open_bets) {\n            const result = validNumber(values.max_open_bets, {\n                type: 'integer',\n                min: Number(is_eu),\n                max: (is_eu && exclusion_limits.current.get_limits?.open_positions) || max_open_positions,\n            });\n            const { is_ok, message } = typeof result === 'object' ? result : { is_ok: result, message: null };\n            if (!is_ok) errors.max_open_bets = message;\n        }\n\n        if (values.max_balance) {\n            const result = validNumber(values.max_balance, {\n                type: 'float',\n                decimals: getDecimalPlaces(currency),\n                min: is_eu ? Number(getSmallestMinValue(getDecimalPlaces(currency))) : 0,\n                max: (is_eu && exclusion_limits.current.get_limits?.account_balance) || max_number,\n            });\n            const { is_ok, message } = typeof result === 'object' ? result : { is_ok: result, message: null };\n            if (!is_ok) errors.max_balance = message;\n        }\n\n        custom_validation.forEach(item => {\n            if (state.self_exclusions?.[item] && !values[item] && !is_cr) {\n                errors[item] = more_than_zero_message;\n            }\n        });\n        return errors;\n    };\n    const handleSubmit = async (values: FormikValues, { setSubmitting }: FormikHelpers<FormikValues>) => {\n        const need_logout_exclusions = ['exclude_until', 'timeout_until'];\n        const string_exclusions = ['exclude_until'];\n        const has_need_logout = state.changed_attributes?.some(attr => need_logout_exclusions.includes(attr));\n\n        const makeRequest = (): Promise<TResponse> =>\n            new Promise(resolve => {\n                const request: { [key: string]: number } = {\n                    set_self_exclusion: 1,\n                };\n\n                state.changed_attributes?.forEach(attr => {\n                    request[attr] = string_exclusions.includes(attr) ? values[attr] : +values[attr];\n                });\n\n                WS.authorized.setSelfExclusion(request).then((response: TResponse) => resolve(response));\n            });\n\n        if (has_need_logout) {\n            if (state.show_confirm) {\n                const response = await makeRequest();\n                if (response.error && isMounted()) {\n                    setState({\n                        show_confirm: false,\n                        submit_error_message: response.error.message,\n                    });\n                } else {\n                    logout();\n                }\n            } else {\n                setState({ show_confirm: true });\n            }\n        } else {\n            const response = await makeRequest();\n\n            if (response.error && isMounted()) {\n                setState({ submit_error_message: response.error.message });\n            } else {\n                setSubmitting(false);\n\n                if (isMounted()) {\n                    setState({ show_confirm: false, is_loading: true, is_confirm_page: false });\n                }\n\n                getLimits();\n                getSelfExclusion();\n            }\n        }\n    };\n\n    const goToConfirm = (values: FormikValues) => {\n        const changed_attributes = Object.keys(values).filter(key => values[key] !== state.self_exclusions?.[key]);\n        setState({ changed_attributes, is_confirm_page: true });\n    };\n\n    const backToReview = () => setState({ show_confirm: false });\n\n    const backFromConfirmLimits = () => setState({ is_confirm_page: false, submit_error_message: '' });\n\n    const objectValuesToString = (object: FormikValues) => {\n        Object.keys(object || {}).forEach(item => {\n            object[item] = `${object[item]}`;\n        });\n\n        return object;\n    };\n\n    const toggleArticle = () => setState({ show_article: !state.show_article });\n\n    const populateExclusionResponse = (response: FormikValues) => {\n        if (response.error && isMounted()) {\n            setState({\n                is_loading: false,\n                error_message: getPropertyValue(response, ['error', 'message']),\n            });\n        } else {\n            const response_to_string = objectValuesToString(getPropertyValue(response, ['get_self_exclusion']));\n\n            if (response_to_string.timeout_until) {\n                response_to_string.timeout_until = +response_to_string.timeout_until;\n            }\n\n            if (isMounted()) {\n                setState({\n                    is_loading: false,\n                    self_exclusions: { ...exclusion_data.current, ...response_to_string },\n                });\n            }\n        }\n    };\n\n    const getSelfExclusion = () => {\n        setState({ is_loading: true });\n\n        WS.authorized.getSelfExclusion({ get_self_exclusion: 1 }).then((self_exclusion_response: FormikValues) => {\n            populateExclusionResponse(self_exclusion_response);\n        });\n    };\n\n    const getLimits = () => {\n        setState({ is_loading: true });\n\n        WS.authorized.getLimits({ get_limits: 1 }).then((limits: FormikValues) => {\n            exclusion_limits.current = limits;\n        });\n    };\n\n    const getMaxLength = (field: string) => {\n        const decimals_length = getDecimalPlaces(currency);\n        const isIntegerField = (value: string) => /session_duration_limit|max_open_bets/.test(value);\n        const getLength = (value: string) =>\n            value.toString().length + (isIntegerField(field) || decimals_length === 0 ? 0 : decimals_length + 1); // add 1 to allow typing dot\n\n        if (/max_open_bets/.test(field) && exclusion_limits.current.get_limits?.open_positions && !is_cr)\n            return getLength(String(exclusion_limits.current.get_limits.open_positions));\n\n        if (/max_balance/.test(field) && exclusion_limits.current.get_limits?.account_balance && !is_cr)\n            return getLength(String(exclusion_limits.current.get_limits.account_balance));\n\n        if (!state.self_exclusions?.[field] || is_cr) {\n            if (/max_open_bets/.test(field)) return 9; // TODO: remove when the error is fixed on BE\n            return getLength(String(exclusion_fields_settings.max_number));\n        }\n\n        return getLength(state.self_exclusions?.[field]);\n    };\n\n    if (is_virtual) {\n        return <DemoMessage has_demo_icon={is_appstore} has_button={is_appstore} />;\n    }\n\n    if (state.is_loading || is_switching) {\n        return <Loading is_fullscreen={false} className='account__initial-loader' />;\n    }\n\n    if (state.error_message) {\n        return <LoadErrorMessage error_message={state.error_message} />;\n    }\n\n    const { six_weeks } = exclusion_fields_settings;\n    const currency_display = getCurrencyDisplayCode(currency);\n    const session_duration_digits = six_weeks.toString().length;\n\n    const context_value = {\n        backFromConfirmLimits,\n        backToReview,\n        currency,\n        currency_display,\n        exclusion_fields_settings,\n        exclusion_limits,\n        exclusion_texts,\n        footer_ref,\n        getMaxLength,\n        goToConfirm,\n        handleSubmit,\n        is_app_settings,\n        is_eu,\n        is_mf,\n        is_mlt,\n        is_mx,\n        is_tablet,\n        is_uk,\n        is_wrapper_bypassed,\n        objectValuesToString,\n        overlay_ref,\n        session_duration_digits,\n        state,\n        toggleArticle,\n        validateFields,\n    };\n\n    return (\n        <SelfExclusionContext.Provider value={context_value}>\n            <SelfExclusionWrapper>\n                {/* Only show the modal in non-\"<AppSettings>\" views, others will\n                    use the overlay provided by <AppSettings> */}\n                {!is_app_settings && <SelfExclusionModal />}\n                <SelfExclusionForm />\n            </SelfExclusionWrapper>\n            {overlay_ref && state.show_article && <SelfExclusionArticleContent is_in_overlay />}\n        </SelfExclusionContext.Provider>\n    );\n};\n\nexport default observer(SelfExclusion);\n","import React from 'react';\nimport { PlatformContext } from '@deriv/shared';\nimport SelfExclusionComponent from 'Components/self-exclusion/self-exclusion';\nimport 'Components/self-exclusion/self-exclusion.scss';\n\nconst SelfExclusion = props => {\n    const { is_appstore } = React.useContext(PlatformContext);\n    return <SelfExclusionComponent is_appstore={is_appstore} {...props} />;\n};\n\nexport default SelfExclusion;\n","import SelfExclusion from './self-exclusion';\n\nexport default SelfExclusion;\n","import 'Styles/account.scss';\nimport {\n    PlatformContext,\n    getSelectedRoute,\n    getStaticUrl,\n    isMobile,\n    matchRoute,\n    routes as shared_routes,\n} from '@deriv/shared';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { VerticalTab, FadeWrapper, PageOverlay, Loading, Text, Icon } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { flatten } from '../Helpers/flatten';\nimport { localize } from '@deriv/translations';\n\nconst onClickLogout = (logout, history) => {\n    history.push(shared_routes.index);\n    logout().then(() => (window.location.href = getStaticUrl('/')));\n};\n\nconst AccountLogout = ({ logout, history }) => {\n    return (\n        <div className='dc-vertical-tab__header account__logout ' onClick={() => onClickLogout(logout, history)}>\n            <div className='dc-vertical-tab__header-group account__logout-tab'>\n                <Text size='xxs' weight='normal'>\n                    {localize('Log out')}\n                </Text>\n            </div>\n        </div>\n    );\n};\n\nconst TradingHubLogout = ({ logout, history }) => {\n    return (\n        <div className='dc-vertical-tab__header-account__logout-tab' onClick={() => onClickLogout(logout, history)}>\n            <div className='dc-vertical-tab__header-account__logout'>\n                <Icon icon='IcLogout' className='dc-vertical-tab__header-account__logout--icon' />\n                <Text size='xs' weight='bold'>\n                    {localize('Log out')}\n                </Text>\n            </div>\n        </div>\n    );\n};\n\nconst PageOverlayWrapper = ({\n    is_from_derivgo,\n    is_appstore,\n    list_groups,\n    logout,\n    onClickClose,\n    selected_route,\n    subroutes,\n    history,\n}) => {\n    const routeToPrevious = () => history.push(shared_routes.traders_hub);\n\n    if (isMobile() && selected_route) {\n        return (\n            <PageOverlay\n                header={selected_route.getTitle()}\n                onClickClose={routeToPrevious}\n                is_from_app={is_from_derivgo}\n            >\n                <selected_route.component component_icon={selected_route.icon_component} />\n            </PageOverlay>\n        );\n    } else if (is_appstore) {\n        return (\n            <VerticalTab\n                title={selected_route.getTitle()}\n                onClickClose={onClickClose}\n                is_collapsible={false}\n                is_grid\n                is_floating\n                className='dashboard'\n                current_path={location.pathname}\n                is_routed\n                is_full_width\n                list={subroutes}\n                list_groups={list_groups}\n                extra_content={is_appstore && <AccountLogout logout={logout} history={history} />}\n            />\n        );\n    }\n\n    return (\n        <PageOverlay header={localize('Settings')} onClickClose={routeToPrevious} is_from_app={is_from_derivgo}>\n            <VerticalTab\n                is_floating\n                current_path={location.pathname}\n                is_routed\n                is_full_width\n                list={subroutes}\n                list_groups={list_groups}\n                extra_content={<TradingHubLogout logout={logout} history={history} />}\n            />\n        </PageOverlay>\n    );\n};\n\nconst Account = observer(({ history, location, routes }) => {\n    const { client, common, ui } = useStore();\n    const {\n        is_virtual,\n        is_logged_in,\n        is_logging_in,\n        is_risky_client,\n        is_pending_proof_of_ownership,\n        landing_company_shortcode,\n        should_allow_authentication,\n        logout,\n    } = client;\n    const { is_from_derivgo, routeBackInApp, platform } = common;\n    const { toggleAccountSettings, is_account_settings_visible } = ui;\n    const { is_appstore } = React.useContext(PlatformContext);\n    const subroutes = flatten(routes.map(i => i.subroutes));\n    let list_groups = [...routes];\n    list_groups = list_groups.map(route_group => ({\n        icon: route_group.icon,\n        label: route_group.getTitle(),\n        subitems: route_group.subroutes.map(sub => subroutes.indexOf(sub)),\n    }));\n    let selected_content = subroutes.find(r => matchRoute(r, location.pathname));\n    const onClickClose = React.useCallback(() => routeBackInApp(history), [routeBackInApp, history]);\n\n    React.useEffect(() => {\n        toggleAccountSettings(true);\n    }, [toggleAccountSettings]);\n\n    routes.forEach(menu_item => {\n        menu_item.subroutes.forEach(route => {\n            if (route.path === shared_routes.financial_assessment) {\n                route.is_disabled = is_virtual || (landing_company_shortcode === 'maltainvest' && !is_risky_client);\n            }\n\n            if (route.path === shared_routes.trading_assessment) {\n                route.is_disabled = is_virtual || landing_company_shortcode !== 'maltainvest';\n            }\n\n            if (route.path === shared_routes.proof_of_identity || route.path === shared_routes.proof_of_address) {\n                route.is_disabled = !should_allow_authentication;\n            }\n\n            if (route.path === shared_routes.proof_of_ownership) {\n                route.is_disabled = is_virtual || !is_pending_proof_of_ownership;\n            }\n        });\n    });\n\n    if (!selected_content) {\n        // fallback\n        selected_content = subroutes[0];\n        history.push(shared_routes.personal_details);\n    }\n\n    if (!is_logged_in && is_logging_in) {\n        return <Loading is_fullscreen className='account__initial-loader' />;\n    }\n\n    const selected_route = getSelectedRoute({ routes: subroutes, pathname: location.pathname });\n\n    return (\n        <FadeWrapper\n            is_visible={is_account_settings_visible}\n            className='account-page-wrapper'\n            keyname='account-page-wrapper'\n        >\n            <div className='account'>\n                <PageOverlayWrapper\n                    is_from_derivgo={is_from_derivgo}\n                    is_appstore={is_appstore}\n                    list_groups={list_groups}\n                    logout={logout}\n                    onClickClose={onClickClose}\n                    platform={platform}\n                    selected_route={selected_route}\n                    subroutes={subroutes}\n                    history={history}\n                />\n            </div>\n        </FadeWrapper>\n    );\n});\n\nAccount.propTypes = {\n    active_account_landing_company: PropTypes.string,\n    history: PropTypes.object,\n    location: PropTypes.object,\n    routes: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default withRouter(Account);\n","export const flatten = arr => [].concat(...arr);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize, Localize } from '@deriv/translations';\nimport { Link } from 'react-router-dom';\nimport { Button, Text, StaticUrl } from '@deriv/components';\nimport { PlatformContext } from '@deriv/shared';\n\nconst ClosingAccountSteps = observer(({ redirectToReasons }) => {\n    const { common } = useStore();\n    const { is_from_derivgo } = common;\n    const { is_appstore } = React.useContext(PlatformContext);\n\n    return (\n        <div>\n            <div className='closing-account__information'>\n                <Text size='xs' weight='bold' className='closing-account__information--bold' as='p'>\n                    <Localize i18n_default_text='Are you sure?' />\n                </Text>\n            </div>\n            <div className='closing-account__steps'>\n                <Text size='xs' as='p' className='closing-account__title'>\n                    <Localize i18n_default_text='If you close your account:' />\n                </Text>\n                <ul>\n                    <li>{localize(\"You can't trade on Deriv.\")}</li>\n                    <li>{localize(\"You can't make transactions.\")}</li>\n                </ul>\n            </div>\n            <div className='closing-account__steps'>\n                <Text size='xs' as='p' line_height='s' className='closing-account__title'>\n                    <Localize i18n_default_text='Before closing your account:' />\n                </Text>\n                <ul>\n                    <li>{localize('Close all your positions.')}</li>\n                    <li>{localize('Withdraw your funds.')}</li>\n                </ul>\n            </div>\n            <div className='closing-account__steps'>\n                <Text size='xs' as='p' line_height='s'>\n                    <Localize\n                        i18n_default_text='We shall delete your personal information as soon as our legal obligations are met, as mentioned in the section on Data Retention in our <0>Security and privacy policy</0>'\n                        components={[\n                            <StaticUrl key={0} className='link' href='tnc/security-and-privacy.pdf' is_document />,\n                        ]}\n                    />\n                </Text>\n            </div>\n            {is_from_derivgo ? (\n                <div className='closing-account__buttons-container'>\n                    <Button\n                        className={classNames('closing-account__button--close-account', {\n                            'closing-account__button--dashboard': is_appstore,\n                        })}\n                        large\n                        onClick={() => redirectToReasons()}\n                        primary\n                    >\n                        <Localize i18n_default_text='Close my account' />\n                    </Button>\n                </div>\n            ) : (\n                <div className='closing-account__buttons-container'>\n                    <Link to='/'>\n                        <Button\n                            className={classNames('closing-account__button--cancel', {\n                                'closing-account__button--dashboard': is_appstore,\n                            })}\n                            large\n                            secondary\n                        >\n                            <Localize i18n_default_text='Cancel' />\n                        </Button>\n                    </Link>\n                    <Button\n                        className={classNames('closing-account__button--close-account', {\n                            'closing-account__button--dashboard': is_appstore,\n                        })}\n                        large\n                        onClick={() => redirectToReasons()}\n                        primary\n                    >\n                        <Localize i18n_default_text='Close my account' />\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n});\nexport default ClosingAccountSteps;\n","import React from 'react';\nimport { Button, Icon, Money, ThemedScrollbars, Text } from '@deriv/components';\nimport { formatMoney, getCFDAccount, getCFDAccountDisplay, CFD_PLATFORMS } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\n\nconst getDerivAccount = (client_accounts, login_id) =>\n    client_accounts.find(client_account => client_account.loginid === login_id);\n\nconst getCurrMT5Account = (mt5_login_list, login_id) =>\n    mt5_login_list.find(account_obj => account_obj.login === login_id);\n\nconst getCurrDxtradeAccount = (dxtrade_accounts_list, login_id) =>\n    dxtrade_accounts_list.find(account_obj => account_obj.account_id === login_id);\n\nconst Wrapper = ({ children, title, desc }) => (\n    <div className='closing-account-error'>\n        <Text as='p' line_height='s' size='xs' weight='bold' color='prominent' className='closing-account-error__title'>\n            {title}\n        </Text>\n        {desc && (\n            <Text as='p' size='xxs' className='closing-account-error__description'>\n                {desc}\n            </Text>\n        )}\n        <div className='closing-account-error__wrapper'>{children}</div>\n    </div>\n);\n\nconst Content = ({ currency_icon, loginid, title, value }) => (\n    <div className='closing-account-error__container'>\n        <div className='closing-account-error__account-details'>\n            <Icon icon={currency_icon} size={24} />\n            <div className='closing-account-error__account'>\n                <Text line_height='s' color='prominent' size='xs'>\n                    {title}\n                </Text>\n                <Text color='prominent' size='xxxs' line_height='xs'>\n                    {loginid}\n                </Text>\n            </div>\n        </div>\n        <Text className='closing-account-error__details' color='prominent' size='xs' line_height='s' align='right'>\n            {value}\n        </Text>\n    </div>\n);\n\nconst AccountHasPendingConditions = ({\n    details,\n    mt5_login_list,\n    dxtrade_accounts_list,\n    client_accounts,\n    onBackClick,\n    is_eu,\n}) => {\n    const deriv_open_positions = [];\n    const deriv_balance = [];\n    const mt5_open_positions = [];\n    const mt5_balance = [];\n    const account_pending_withdrawals = [];\n    const dxtrade_open_positions = [];\n    const dxtrade_balance = [];\n\n    if (details.pending_withdrawals) {\n        Object.keys(details.pending_withdrawals).forEach(login_id => {\n            const info = {\n                withdrawals: details.pending_withdrawals[login_id],\n            };\n            const deriv_account = getDerivAccount(client_accounts, login_id);\n            if (deriv_account) {\n                account_pending_withdrawals.push({ ...deriv_account, ...info });\n            }\n        });\n    }\n    if (details.open_positions) {\n        Object.keys(details.open_positions).forEach(login_id => {\n            const info = {\n                positions: details.open_positions[login_id],\n            };\n            const deriv_account = getDerivAccount(client_accounts, login_id);\n            if (deriv_account) {\n                deriv_open_positions.push({ ...deriv_account, ...info });\n            } else {\n                const mt5_account = getCurrMT5Account(mt5_login_list, login_id);\n                if (mt5_account) {\n                    mt5_open_positions.push({ ...mt5_account, ...info });\n                }\n\n                const dxtrade_account = getCurrDxtradeAccount(dxtrade_accounts_list, login_id);\n                if (dxtrade_account) {\n                    dxtrade_open_positions.push({ ...dxtrade_account, ...info });\n                }\n            }\n        });\n    }\n    if (details.balance) {\n        Object.keys(details.balance).forEach(login_id => {\n            const info = {\n                balance: details.balance[login_id].balance,\n                currency: details.balance[login_id].currency,\n            };\n            const deriv_account = getDerivAccount(client_accounts, login_id);\n            if (deriv_account) {\n                deriv_balance.push({ ...deriv_account, ...info });\n            } else {\n                const mt5_account = getCurrMT5Account(mt5_login_list, login_id);\n                if (mt5_account) {\n                    mt5_balance.push({ ...mt5_account, ...info });\n                }\n\n                const dxtrade_account = getCurrDxtradeAccount(dxtrade_accounts_list, login_id);\n                if (dxtrade_account) {\n                    dxtrade_balance.push({ ...dxtrade_account, ...info });\n                }\n            }\n        });\n    }\n\n    return (\n        <React.Fragment>\n            <ThemedScrollbars autohide={false} width='43rem'>\n                {!!deriv_open_positions.length && (\n                    <Wrapper title={localize('Please close your positions in the following Deriv account(s):')}>\n                        {deriv_open_positions.map(account => (\n                            <Content\n                                key={account.loginid}\n                                currency_icon={`IcCurrency-${account.icon}`}\n                                loginid={account.loginid}\n                                title={account.title}\n                                value={\n                                    <Localize\n                                        i18n_default_text='{{number_of_positions}} position(s)'\n                                        values={{ number_of_positions: account.positions }}\n                                    />\n                                }\n                            />\n                        ))}\n                    </Wrapper>\n                )}\n                {!!deriv_balance.length && (\n                    <Wrapper title={localize('Please withdraw your funds from the following Deriv account(s):')}>\n                        {deriv_balance.map(account => (\n                            <Content\n                                key={account.loginid}\n                                currency_icon={`IcCurrency-${account.icon}`}\n                                loginid={account.loginid}\n                                title={account.title}\n                                value={\n                                    <Money\n                                        currency={account.currency}\n                                        amount={formatMoney(account.currency, account.balance, true)}\n                                        should_format={false}\n                                    />\n                                }\n                            />\n                        ))}\n                    </Wrapper>\n                )}\n                {!!mt5_open_positions.length && (\n                    <Wrapper title={localize('Please close your positions in the following Deriv MT5 account(s):')}>\n                        {mt5_open_positions.map(account => (\n                            <Content\n                                key={account.login}\n                                currency_icon={`IcMt5-${getCFDAccount({\n                                    market_type: account.market_type,\n                                    sub_account_type: account.sub_account_type,\n                                    platform: CFD_PLATFORMS.MT5,\n                                    is_eu,\n                                })}`}\n                                loginid={account.display_login}\n                                title={getCFDAccountDisplay({\n                                    market_type: account.market_type,\n                                    sub_account_type: account.sub_account_type,\n                                    platform: CFD_PLATFORMS.MT5,\n                                    is_eu,\n                                })}\n                                value={\n                                    <Localize\n                                        i18n_default_text='{{number_of_positions}} position(s)'\n                                        values={{ number_of_positions: account.positions }}\n                                    />\n                                }\n                            />\n                        ))}\n                    </Wrapper>\n                )}\n                {!!mt5_balance.length && (\n                    <Wrapper title={localize('Please withdraw your funds from the following Deriv MT5 account(s):')}>\n                        {mt5_balance.map(account => (\n                            <Content\n                                key={account.login}\n                                currency_icon={`IcMt5-${getCFDAccount({\n                                    market_type: account.market_type,\n                                    sub_account_type: account.sub_account_type,\n                                    platform: CFD_PLATFORMS.MT5,\n                                    is_eu,\n                                })}`}\n                                loginid={account.display_login}\n                                title={getCFDAccountDisplay({\n                                    market_type: account.market_type,\n                                    sub_account_type: account.sub_account_type,\n                                    platform: CFD_PLATFORMS.MT5,\n                                    is_eu,\n                                })}\n                                value={\n                                    <Money\n                                        currency={account.currency}\n                                        amount={formatMoney(account.currency, account.balance, true)}\n                                        should_format={false}\n                                    />\n                                }\n                            />\n                        ))}\n                    </Wrapper>\n                )}\n                {!!dxtrade_open_positions.length && (\n                    <Wrapper title={localize('Please close your positions in the following Deriv X account(s):')}>\n                        {dxtrade_open_positions.map(account => (\n                            <Content\n                                key={account.login}\n                                currency_icon={`IcDxtrade-${getCFDAccount({\n                                    market_type: account.market_type,\n                                    sub_account_type: account.sub_account_type,\n                                    platform: CFD_PLATFORMS.DXTRADE,\n                                    is_eu,\n                                })}`}\n                                loginid={account.display_login}\n                                title={getCFDAccountDisplay({\n                                    market_type: account.market_type,\n                                    sub_account_type: account.sub_account_type,\n                                    platform: CFD_PLATFORMS.DXTRADE,\n                                    is_eu,\n                                })}\n                                value={\n                                    <Localize\n                                        i18n_default_text='{{number_of_positions}} position(s)'\n                                        values={{ number_of_positions: account.positions }}\n                                    />\n                                }\n                            />\n                        ))}\n                    </Wrapper>\n                )}\n                {!!dxtrade_balance.length && (\n                    <Wrapper title={localize('Please withdraw your funds from the following Deriv X account(s):')}>\n                        {dxtrade_balance.map(account => (\n                            <Content\n                                key={account.login}\n                                currency_icon={`IcDxtrade-${getCFDAccount({\n                                    market_type: account.market_type,\n                                    sub_account_type: account.sub_account_type,\n                                    platform: CFD_PLATFORMS.DXTRADE,\n                                    is_eu,\n                                })}`}\n                                loginid={account.display_login}\n                                title={getCFDAccountDisplay({\n                                    market_type: account.market_type,\n                                    sub_account_type: account.sub_account_type,\n                                    platform: CFD_PLATFORMS.DXTRADE,\n                                    is_eu,\n                                })}\n                                value={\n                                    <Money\n                                        currency={account.currency}\n                                        amount={formatMoney(account.currency, account.balance, true)}\n                                        should_format={false}\n                                    />\n                                }\n                            />\n                        ))}\n                    </Wrapper>\n                )}\n                {!!account_pending_withdrawals.length && (\n                    <Wrapper\n                        title={localize('Pending withdrawal request:')}\n                        desc={\n                            <Localize\n                                i18n_default_text='We are still processing your withdrawal request.<0 />Please wait for the transaction to be completed before deactivating your account.'\n                                components={[<br key={0} />]}\n                            />\n                        }\n                    >\n                        {account_pending_withdrawals.map(account => (\n                            <Content\n                                key={account.loginid}\n                                currency_icon={`IcCurrency-${account.icon}`}\n                                loginid={account.loginid}\n                                title={account.title}\n                                value={\n                                    <Localize\n                                        i18n_default_text='{{pending_withdrawals}} pending withdrawal(s)'\n                                        values={{ pending_withdrawals: account.withdrawals }}\n                                    />\n                                }\n                            />\n                        ))}\n                    </Wrapper>\n                )}\n            </ThemedScrollbars>\n            <div>\n                <Button className='closing-account-error__button' primary onClick={onBackClick}>\n                    {localize('OK')}\n                </Button>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default AccountHasPendingConditions;\n","import React from 'react';\nimport { Formik, Field } from 'formik';\nimport { Checkbox, Input, FormSubmitButton, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { PlatformContext } from '@deriv/shared';\n\nconst initial_form = {\n    'financial-priorities': false,\n    'stop-trading': false,\n    'not-interested': false,\n    'another-website': false,\n    'not-user-friendly': false,\n    'difficult-transactions': false,\n    'lack-of-features': false,\n    'unsatisfactory-service': false,\n    'other-reasons': false,\n    other_trading_platforms: '',\n    do_to_improve: '',\n};\n\nconst ClosingAccountReasonFrom = ({\n    validateFields,\n    onSubmit,\n    is_checkbox_disabled,\n    onChangeCheckbox,\n    character_limit_no,\n    onInputChange,\n    onInputPaste,\n    remaining_characters,\n    onBackClick,\n}) => {\n    const { is_appstore } = React.useContext(PlatformContext);\n\n    return (\n        <Formik initialValues={initial_form} validate={validateFields} onSubmit={onSubmit}>\n            {({ values, setFieldValue, errors, handleChange, handleSubmit, dirty }) => (\n                <form onSubmit={handleSubmit}>\n                    <Field name='financial-priorities'>\n                        {({ field }) => (\n                            <Checkbox\n                                disabled={is_checkbox_disabled && !values[field.name]}\n                                className='closing-account-reasons__checkbox'\n                                {...field}\n                                label={localize('I have other financial priorities.')}\n                                onChange={() => {\n                                    onChangeCheckbox(values, field.name, setFieldValue);\n                                }}\n                            />\n                        )}\n                    </Field>\n                    <Field name='stop-trading'>\n                        {({ field }) => (\n                            <Checkbox\n                                disabled={is_checkbox_disabled && !values[field.name]}\n                                className='closing-account-reasons__checkbox'\n                                {...field}\n                                label={localize('I want to stop myself from trading.')}\n                                onChange={() => {\n                                    onChangeCheckbox(values, field.name, setFieldValue);\n                                }}\n                            />\n                        )}\n                    </Field>\n                    <Field name='not-interested'>\n                        {({ field }) => (\n                            <Checkbox\n                                disabled={is_checkbox_disabled && !values[field.name]}\n                                className='closing-account-reasons__checkbox'\n                                {...field}\n                                label={localize('I’m no longer interested in trading.')}\n                                onChange={() => {\n                                    onChangeCheckbox(values, field.name, setFieldValue);\n                                }}\n                            />\n                        )}\n                    </Field>\n                    <Field name='another-website'>\n                        {({ field }) => (\n                            <Checkbox\n                                disabled={is_checkbox_disabled && !values[field.name]}\n                                className='closing-account-reasons__checkbox'\n                                {...field}\n                                label={localize('I prefer another trading website.')}\n                                onChange={() => {\n                                    onChangeCheckbox(values, field.name, setFieldValue);\n                                }}\n                            />\n                        )}\n                    </Field>\n                    <Field name='not-user-friendly'>\n                        {({ field }) => (\n                            <Checkbox\n                                disabled={is_checkbox_disabled && !values[field.name]}\n                                className='closing-account-reasons__checkbox'\n                                {...field}\n                                label={localize('The platforms aren’t user-friendly.')}\n                                onChange={() => {\n                                    onChangeCheckbox(values, field.name, setFieldValue);\n                                }}\n                            />\n                        )}\n                    </Field>\n                    <Field name='difficult-transactions'>\n                        {({ field }) => (\n                            <Checkbox\n                                disabled={is_checkbox_disabled && !values[field.name]}\n                                className='closing-account-reasons__checkbox'\n                                {...field}\n                                label={localize('Making deposits and withdrawals is difficult.')}\n                                onChange={() => {\n                                    onChangeCheckbox(values, field.name, setFieldValue);\n                                }}\n                            />\n                        )}\n                    </Field>\n                    <Field name='lack-of-features'>\n                        {({ field }) => (\n                            <Checkbox\n                                disabled={is_checkbox_disabled && !values[field.name]}\n                                className='closing-account-reasons__checkbox'\n                                {...field}\n                                label={localize('The platforms lack key features or functionality.')}\n                                onChange={() => {\n                                    onChangeCheckbox(values, field.name, setFieldValue);\n                                }}\n                            />\n                        )}\n                    </Field>\n                    <Field name='unsatisfactory-service'>\n                        {({ field }) => (\n                            <Checkbox\n                                disabled={is_checkbox_disabled && !values[field.name]}\n                                className='closing-account-reasons__checkbox'\n                                {...field}\n                                label={localize('Customer service was unsatisfactory.')}\n                                onChange={() => {\n                                    onChangeCheckbox(values, field.name, setFieldValue);\n                                }}\n                            />\n                        )}\n                    </Field>\n                    <Field name='other-reasons'>\n                        {({ field }) => (\n                            <Checkbox\n                                disabled={is_checkbox_disabled && !values[field.name]}\n                                className='closing-account-reasons__checkbox'\n                                {...field}\n                                label={localize('I’m closing my account for other reasons.')}\n                                onChange={() => {\n                                    onChangeCheckbox(values, field.name, setFieldValue);\n                                }}\n                            />\n                        )}\n                    </Field>\n                    <Field name='other_trading_platforms'>\n                        {({ field }) => (\n                            <Input\n                                {...field}\n                                className='closing-account-reasons__input'\n                                data-lpignore='true'\n                                autoComplete='off' // prevent chrome autocomplete\n                                type='textarea'\n                                placeholder={localize(\n                                    'If you don’t mind sharing, which other trading platforms do you use?'\n                                )}\n                                name='other_trading_platforms'\n                                value={values.other_trading_platforms}\n                                max_characters={character_limit_no}\n                                onChange={e => onInputChange(e, values.other_trading_platforms, handleChange)}\n                                onPaste={onInputPaste}\n                            />\n                        )}\n                    </Field>\n                    <Field name='do_to_improve'>\n                        {({ field }) => (\n                            <Input\n                                {...field}\n                                className='closing-account-reasons__input'\n                                data-lpignore='true'\n                                autoComplete='off' // prevent chrome autocomplete\n                                type='textarea'\n                                placeholder={localize('What could we do to improve?')}\n                                name='do_to_improve'\n                                value={values.do_to_improve}\n                                max_characters={character_limit_no}\n                                onChange={e => onInputChange(e, values.do_to_improve, handleChange)}\n                                onPaste={onInputPaste}\n                            />\n                        )}\n                    </Field>\n                    <div className='closing-account-reasons__footer'>\n                        <div className='closing-account-reasons__hint-wrapper'>\n                            <Text size='xxs' as='p' color='less-prominent' className='closing-account-reasons__hint'>\n                                {localize('Remaining characters: {{remaining_characters}}', {\n                                    remaining_characters,\n                                })}\n                            </Text>\n                            {Object.keys(errors).length > 0 &&\n                                Object.entries(errors).map(([key, value]) => (\n                                    <Text\n                                        as='p'\n                                        weight='bold'\n                                        size='xs'\n                                        color={is_appstore ? 'blue' : 'loss-danger'}\n                                        className='closing-account-reasons__error'\n                                        key={key}\n                                    >\n                                        {value}\n                                    </Text>\n                                ))}\n                        </div>\n                        <FormSubmitButton\n                            is_disabled={\n                                // eslint-disable-next-line no-unused-vars\n                                !dirty || Object.keys(errors).length > 0\n                            }\n                            label={localize('Continue')}\n                            has_cancel\n                            cancel_label={localize('Back')}\n                            onCancel={onBackClick}\n                        />\n                    </div>\n                </form>\n            )}\n        </Formik>\n    );\n};\n\nexport default ClosingAccountReasonFrom;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { routes, PlatformContext, WS } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { FormSubmitButton, Modal, Icon, Loading, Text, Button } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport AccountHasPendingConditions from './account-has-balance.jsx';\nimport ClosingAccountReasonFrom from './closing-account-reason-form.jsx';\n\nconst preparingReason = values => {\n    let selected_reasons = selectedReasons(values)\n        .map(val => val[0])\n        .toString();\n    const is_other_trading_platform__has_value = !!values.other_trading_platforms.length;\n    const is_to_do_improve_has_value = !!values.do_to_improve.length;\n    if (is_other_trading_platform__has_value) {\n        selected_reasons = `${selected_reasons}, ${values.other_trading_platforms}`;\n    }\n    if (is_to_do_improve_has_value) {\n        selected_reasons = `${selected_reasons}, ${values.do_to_improve}`;\n    }\n\n    return selected_reasons.replace(/(\\r\\n|\\n|\\r)/gm, ' ');\n};\n\nconst selectedReasons = values => {\n    return Object.entries(values).filter(\n        ([key, value]) => !['other_trading_platforms', 'do_to_improve'].includes(key) && value\n    );\n};\n\nconst WarningModal = props => {\n    return (\n        <div className='account-closure-warning-modal'>\n            <Icon icon='IcRedWarning' size={96} />\n            <Text size='xs' line_height='x' weight='bold' className='account-closure-warning-modal__warning-message'>\n                {localize('Close your account?')}\n            </Text>\n            <div className='account-closure-warning-modal__content-wrapper'>\n                <Text as='p' align='center' className='account-closure-warning-modal__content'>\n                    {localize(\n                        'Closing your account will automatically log you out. We shall delete your personal information as soon as our legal obligations are met.'\n                    )}\n                </Text>\n            </div>\n            <FormSubmitButton\n                is_disabled={false}\n                label={localize('Close account')}\n                className='account-closure-warning-modal__close-account-button'\n                has_cancel\n                cancel_label={localize('Go Back')}\n                onClick={() => props.startDeactivating()}\n                onCancel={() => props.closeModal()}\n            />\n        </div>\n    );\n};\n\nconst GeneralErrorContent = ({ message, onClick }) => (\n    <>\n        <div className='closing-account-error__container closing-account-error__container-message'>\n            <div className='closing-account-error__details closing-account-error__details-message'>{message}</div>\n        </div>\n        <div>\n            <Button className='closing-account-error__button' primary onClick={onClick}>\n                {localize('OK')}\n            </Button>\n        </div>\n    </>\n);\n\nconst character_limit_no = 110;\nconst max_allowed_reasons = 3;\n\nconst ClosingAccountReason = observer(({ onBackClick }) => {\n    const { client } = useStore();\n    const { dxtrade_accounts_list, mt5_login_list, account_list } = client;\n    const { is_appstore } = React.useContext(PlatformContext);\n    const [is_account_closed, setIsAccountClosed] = React.useState(false);\n    const [is_loading, setIsLoading] = React.useState(false);\n    const [is_modal_open, setIsModalOpen] = React.useState(false);\n    const [which_modal_should_render, setWhichModalShouldRender] = React.useState();\n    const [reason, setReason] = React.useState(null);\n    const [is_checkbox_disabled, setIsCheckboxDisabled] = React.useState(false);\n    const [total_checkbox_checked, setTotalCheckboxChecked] = React.useState(0);\n    const [remaining_characters, setRemainingCharacters] = React.useState(character_limit_no);\n    const [total_accumulated_characters, setTotalAccumulatedCharacters] = React.useState(0);\n    const [api_error_message, setApiErrorMessage] = React.useState('');\n    const [details, setDetails] = React.useState();\n\n    const validateFields = values => {\n        const error = {};\n        const selected_reason_count = selectedReasons(values).length;\n        const text_inputs_length = (values.other_trading_platforms + values.do_to_improve).length;\n        let remaining_chars = character_limit_no - text_inputs_length;\n\n        if (selected_reason_count) {\n            const final_value = preparingReason(values);\n            remaining_chars = remaining_chars >= 0 ? remaining_chars : 0;\n\n            if (!/^[ a-zA-Z0-9.,'-\\s]*$/.test(final_value)) {\n                error.characters_limits = localize(\"Must be numbers, letters, and special characters . , ' -\");\n            }\n        } else {\n            error.empty_reason = localize('Please select at least one reason');\n        }\n\n        setTotalAccumulatedCharacters(text_inputs_length);\n        setRemainingCharacters(remaining_chars);\n\n        return error;\n    };\n\n    const handleSubmitForm = values => {\n        const final_reason = preparingReason(values);\n\n        setIsModalOpen(true);\n        setWhichModalShouldRender('warning_modal');\n        setReason(final_reason);\n    };\n\n    React.useEffect(() => {\n        if (total_checkbox_checked === max_allowed_reasons) setIsCheckboxDisabled(true);\n        else if (is_checkbox_disabled) setIsCheckboxDisabled(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [total_checkbox_checked]);\n\n    const handleChangeCheckbox = (values, name, setFieldValue) => {\n        if (!values[name]) {\n            setTotalCheckboxChecked(total_checkbox_checked + 1);\n            setFieldValue(name, !values[name]);\n        } else {\n            setTotalCheckboxChecked(total_checkbox_checked - 1);\n            setFieldValue(name, !values[name]);\n        }\n    };\n\n    const handleInputChange = (e, old_value, onChange) => {\n        const value = e.target.value;\n        const is_delete_action = old_value.length > value.length;\n\n        if ((remaining_characters <= 0 || total_accumulated_characters >= character_limit_no) && !is_delete_action) {\n            e.preventDefault();\n        } else {\n            onChange(e);\n        }\n    };\n\n    const handleInputPaste = e => {\n        const clipboardData = (e.clipboardData || window.clipboardData).getData('text');\n\n        if (remaining_characters <= 0 || clipboardData.length > remaining_characters) {\n            e.preventDefault();\n        }\n    };\n\n    const getModalTitle = () => {\n        if (which_modal_should_render === 'error_modal') return localize('An error occurred');\n        if (which_modal_should_render === 'inaccessible_modal') return localize('Inaccessible MT5 account(s)');\n        return which_modal_should_render !== 'warning_modal' ? localize('Action required') : undefined;\n    };\n\n    const startDeactivating = async () => {\n        setIsModalOpen(false);\n        setIsLoading(true);\n        const account_closure_response = await WS.authorized.accountClosure({\n            account_closure: 1,\n            reason,\n        });\n\n        if (account_closure_response.account_closure === 1) {\n            setIsAccountClosed(true);\n        } else {\n            const { code, message, details: errorDetails } = account_closure_response.error;\n            const getModalToRender = () => {\n                if (code === 'AccountHasPendingConditions') {\n                    return 'AccountHasPendingConditions';\n                }\n                if (code === 'MT5AccountInaccessible') {\n                    return 'inaccessible_modal';\n                }\n                return 'error_modal';\n            };\n\n            setWhichModalShouldRender(getModalToRender());\n            setDetails(errorDetails);\n            setApiErrorMessage(message);\n            setIsModalOpen(true);\n            setIsLoading(false);\n        }\n    };\n\n    if (is_account_closed) return <Redirect to={routes.account_closed} />;\n\n    if (is_loading) return <Loading is_fullscreen={false} />;\n\n    return (\n        <div\n            className={classNames('closing-account-reasons', {\n                'closing-account-reasons--dashboard': is_appstore,\n            })}\n        >\n            <Text weight='bold' size='xs' className='closing-account-reasons__title' as='p'>\n                {localize('Please tell us why you’re leaving. (Select up to {{ allowed_reasons }} reasons.)', {\n                    allowed_reasons: max_allowed_reasons,\n                })}\n            </Text>\n            <ClosingAccountReasonFrom\n                validateFields={validateFields}\n                onSubmit={handleSubmitForm}\n                is_checkbox_disabled={is_checkbox_disabled}\n                onChangeCheckbox={handleChangeCheckbox}\n                character_limit_no={character_limit_no}\n                onInputChange={handleInputChange}\n                onInputPaste={handleInputPaste}\n                remaining_characters={remaining_characters}\n                onBackClick={onBackClick}\n            />\n            <Modal\n                className='closing-account-reasons'\n                is_open={is_modal_open}\n                toggleModal={() => setIsModalOpen(!is_modal_open)}\n                title={getModalTitle()}\n            >\n                {which_modal_should_render === 'warning_modal' && (\n                    <WarningModal closeModal={() => setIsModalOpen(false)} startDeactivating={startDeactivating} />\n                )}\n                {which_modal_should_render === 'AccountHasPendingConditions' && (\n                    <AccountHasPendingConditions\n                        details={details}\n                        mt5_login_list={mt5_login_list}\n                        client_accounts={account_list}\n                        dxtrade_accounts_list={dxtrade_accounts_list}\n                        onBackClick={onBackClick}\n                    />\n                )}\n                {which_modal_should_render === 'inaccessible_modal' && (\n                    <GeneralErrorContent message={api_error_message} onClick={() => setIsModalOpen(false)} />\n                )}\n            </Modal>\n        </div>\n    );\n});\n\nexport default ClosingAccountReason;\n","import React, { useState } from 'react';\nimport ClosingAccountSteps from './closing-account-steps.jsx';\nimport ClosingAccountReason from './closing-account-reason.jsx';\n\nconst ClosingAccount = () => {\n    const [render_close_account_reason, setRenderCloseAccountReason] = useState(false);\n    const redirectToReasons = () => {\n        setRenderCloseAccountReason(true);\n    };\n    const redirectToSteps = () => {\n        setRenderCloseAccountReason(false);\n    };\n\n    return (\n        <div className='closing-account'>\n            {render_close_account_reason ? (\n                <ClosingAccountReason onBackClick={() => redirectToSteps()} />\n            ) : (\n                <ClosingAccountSteps redirectToReasons={() => redirectToReasons()} />\n            )}\n        </div>\n    );\n};\n\nexport default ClosingAccount;\n","import ClosingAccount from './closing-account.jsx';\n\nexport default ClosingAccount;\n","import React from 'react';\nimport { localize, Localize } from '@deriv/translations';\nimport AccountArticle from 'Components/article';\n\nconst openAPIManagingWebsite = () => {\n    window.open(\n        'https://community.deriv.com/t/api-tokens-managing-access-on-third-party-applications-and-mobile-apps/29159',\n        '_blank',\n        'noopener'\n    );\n};\n\nconst ConnectedAppsArticle = () => (\n    <AccountArticle\n        className='connected-apps__article'\n        title={localize('Want to know more about APIs?')}\n        descriptions={[\n            <Localize\n                key={0}\n                i18n_default_text='Go to our Deriv community and learn about APIs, API tokens, ways to use Deriv APIs, and more.'\n            />,\n        ]}\n        onClickLearnMore={openAPIManagingWebsite}\n    />\n);\n\nexport default ConnectedAppsArticle;\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport { toMoment } from '@deriv/shared';\nimport { Button, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\ntype Column = {\n    title: string;\n    col_index: 'name' | 'scopes' | 'last_used' | 'app_id';\n    renderCellContent: React.FC<{ cell_value: string & number & string[] }>;\n};\n\ntype TGetConnectedAppsColumnsTemplate = {\n    handleToggleModal: (app_id: number | null) => void;\n};\n\ntype Permissions = {\n    [key: string]: string;\n};\n\nconst GetConnectedAppsColumnsTemplate = (\n    handleToggleModal: TGetConnectedAppsColumnsTemplate['handleToggleModal']\n): Column[] => [\n    {\n        title: localize('Name'),\n        col_index: 'name',\n        renderCellContent: ({ cell_value }) => {\n            return (\n                <Text size='xs' className='name__content'>\n                    {cell_value}\n                </Text>\n            );\n        },\n    },\n    {\n        title: localize('Permission'),\n        col_index: 'scopes',\n        renderCellContent: ({ cell_value }) => {\n            return PrepareConnectedAppsScopes(cell_value);\n        },\n    },\n    {\n        title: localize('Last login'),\n        col_index: 'last_used',\n        renderCellContent: ({ cell_value }) => PrepareConnectedAppsLastLogin(cell_value),\n    },\n    {\n        title: localize('Action'),\n        col_index: 'app_id',\n        renderCellContent: ({ cell_value }) => PrepareConnectedAppsAction(cell_value, handleToggleModal),\n    },\n];\n\nconst PrepareConnectedAppsAction = (\n    app_id: number,\n    handleToggleModal: TGetConnectedAppsColumnsTemplate['handleToggleModal']\n) => {\n    return (\n        <Button className='revoke_access' small secondary onClick={() => handleToggleModal(app_id)}>\n            {localize('Revoke access')}\n        </Button>\n    );\n};\n\nconst PrepareConnectedAppsLastLogin = (last_used: number) => (\n    <Text as='p' size='xs' className='last_used_content'>\n        {toMoment(last_used).format('YYYY-MM-DD HH:mm:ss')}\n    </Text>\n);\n\nconst generatePermissions = (): Permissions => ({\n    read: localize('Read'),\n    trade: localize('Trade'),\n    trading_information: localize('Trading information'),\n    payments: localize('Payments'),\n    admin: localize('Admin'),\n});\n\nconst PrepareConnectedAppsScopes = (permissions_list: string[]) => {\n    const is_trading_information = permissions_list.includes('trading_information');\n    let oauth_apps_list = [];\n    if (is_trading_information) {\n        oauth_apps_list = permissions_list.filter(permission => permission !== 'trading_information');\n        oauth_apps_list.push('trading_information');\n    } else {\n        oauth_apps_list = permissions_list;\n    }\n    const sorted_app_list: string[] = [];\n    oauth_apps_list.forEach((permission, index) => {\n        if (permissions_list.length - 1 !== index) {\n            sorted_app_list.push(`${generatePermissions()[permission]}, `);\n        } else {\n            sorted_app_list.push(generatePermissions()[permission]);\n        }\n    });\n    return <div>{sorted_app_list}</div>;\n};\n\nexport default GetConnectedAppsColumnsTemplate;\n","import React from 'react';\nimport classNames from 'classnames';\nimport {\n    DesktopWrapper,\n    MobileWrapper,\n    Button,\n    Modal,\n    Icon,\n    DataTable,\n    DataList,\n    Loading,\n    Text,\n} from '@deriv/components';\nimport ConnectedAppsArticle from './connected-apps-article';\nimport { PlatformContext, WS } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport ErrorComponent from 'Components/error-component';\nimport GetConnectedAppsColumnsTemplate from './data-table-template';\n\nconst ConnectedApps = () => {\n    const { is_appstore } = React.useContext(PlatformContext);\n    const [is_loading, setLoading] = React.useState(true);\n    const [is_modal_open, setModalVisibility] = React.useState(false);\n    const [selected_app_id, setAppId] = React.useState<number | null>(null);\n    const [is_error, setError] = React.useState(false);\n    const [connected_apps, setConnectedApps] = React.useState([]);\n\n    React.useEffect(() => {\n        /* eslint-disable no-console */\n        fetchConnectedApps().catch(error => console.error('error: ', error));\n    }, []);\n\n    const fetchConnectedApps = async () => {\n        const response_connected_apps = await WS.authorized.send({ oauth_apps: 1 });\n\n        if (!response_connected_apps.error) {\n            setLoading(false);\n            setConnectedApps(response_connected_apps.oauth_apps);\n        }\n    };\n\n    const handleToggleModal = React.useCallback(\n        (app_id: number | null = null) => {\n            setModalVisibility(!is_modal_open);\n            setAppId(app_id);\n        },\n        [is_modal_open]\n    );\n\n    type TColumn = ReturnType<typeof GetConnectedAppsColumnsTemplate>[number];\n\n    const columns_map = React.useMemo(\n        () =>\n            GetConnectedAppsColumnsTemplate(app_id => handleToggleModal(app_id)).reduce((map, item) => {\n                map[item.col_index] = item;\n                return map;\n            }, {} as { [k in TColumn['col_index']]: TColumn }),\n        [handleToggleModal]\n    );\n\n    const mobileRowRenderer = React.useCallback(\n        ({ row }: { row: TColumn['renderCellContent'] }) => (\n            <div className='data-list__row'>\n                <div className='data-list__col'>\n                    <DataList.Cell row={row} column={columns_map.name} />\n                    <DataList.Cell row={row} column={columns_map.scopes} />\n                </div>\n                <div className={is_appstore ? 'data-list__col--dashboard' : 'data-list__col--small'}>\n                    <DataList.Cell row={row} column={columns_map.last_used} />\n                    <DataList.Cell row={row} column={columns_map.app_id} is_footer={!is_appstore} />\n                </div>\n            </div>\n        ),\n        [columns_map, is_appstore]\n    );\n\n    const revokeConnectedApp = React.useCallback(async (app_id: number | null) => {\n        setLoading(true);\n        const response = await WS.authorized.send({ revoke_oauth_app: app_id });\n        if (!response.error) {\n            /* eslint-disable no-console */\n            fetchConnectedApps().catch(error => console.error('error: ', error));\n        } else {\n            setError(true);\n        }\n    }, []);\n\n    const handleRevokeAccess = React.useCallback(() => {\n        setModalVisibility(false);\n        revokeConnectedApp(selected_app_id);\n    }, [revokeConnectedApp, selected_app_id]);\n\n    return (\n        <section\n            className={classNames('connected-apps__wrapper', {\n                'connected-apps__wrapper--dashboard': is_appstore,\n            })}\n        >\n            <Text color='prominent' weight='bold' as='p' className='connected-apps__title'>\n                {localize('Authorised applications')}\n            </Text>\n            {is_error && <ErrorComponent />}\n            <div\n                className={classNames('connected-apps__container', 'connected-apps__wrapper', {\n                    'connected-apps__wrapper--dashboard': is_appstore,\n                })}\n            >\n                {is_loading ? (\n                    <Loading is_fullscreen={false} />\n                ) : (\n                    <React.Fragment>\n                        <DesktopWrapper>\n                            <DataTable\n                                className='connected-apps'\n                                data_source={connected_apps}\n                                columns={GetConnectedAppsColumnsTemplate(handleToggleModal)}\n                            />\n                        </DesktopWrapper>\n                        <MobileWrapper>\n                            <DataList\n                                className='connected-apps'\n                                data_source={connected_apps}\n                                row_gap={is_appstore ? 16 : 10}\n                                rowRenderer={mobileRowRenderer}\n                            />\n                        </MobileWrapper>\n                    </React.Fragment>\n                )}\n\n                {!is_loading && !!connected_apps.length && <ConnectedAppsArticle />}\n            </div>\n\n            <Modal is_open={is_modal_open} className='connected-apps' toggleModal={handleToggleModal}>\n                <Modal.Body>\n                    <div className='connected-app-modal'>\n                        <Icon\n                            icon={is_appstore ? 'IcAccountTrashCanDashboard' : 'IcAccountTrashCan'}\n                            size={128}\n                            className='connected-app-modal__icon'\n                        />\n                        <Text as='p' color='prominent' weight='bold'>\n                            {localize('Confirm revoke access?')}\n                        </Text>\n                        <div\n                            className={classNames('connected-app-modal__confirmation', {\n                                'connected-app-modal__confirmation-dashboard': is_appstore,\n                            })}\n                        >\n                            <Button secondary onClick={handleToggleModal}>\n                                {localize('Back')}\n                            </Button>\n                            <Button primary onClick={handleRevokeAccess}>\n                                {localize('Confirm')}\n                            </Button>\n                        </div>\n                    </div>\n                </Modal.Body>\n            </Modal>\n        </section>\n    );\n};\n\nexport default ConnectedApps;\n","import ConnectedApps from './connected-apps';\n\nexport default ConnectedApps;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Loading, Table, Text, ThemedScrollbars } from '@deriv/components';\nimport Bowser from 'bowser';\nimport { convertDateFormat, isMobile, isDesktop, PlatformContext, WS } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport LoadErrorMessage from 'Components/load-error-message';\n\nconst API_FETCH_LIMIT = 50;\n\nconst getFormattedData = login_history => {\n    const data = [];\n    const fetch_limit = Math.min(API_FETCH_LIMIT, login_history.length);\n    for (let i = 0; i < fetch_limit; i++) {\n        data[i] = {};\n        const environment = login_history[i].environment;\n        const environment_split = environment.split(' ');\n        const mobile_app_UA = environment.match(\n            /(?<date>[0-9a-zA-Z-]+\\s[0-9:]+GMT)[\\s](IP=)(?<ip>[\\w:.]+)\\sIP_COUNTRY=(?<country>([a-zA-Z]{2}))\\s(User_AGENT=)(\\w.*)(?<name>iPhone|Android)([\\W\\w]+)\\s(?<app>Deriv P2P|Deriv GO)(?<version>[\\w\\W]+)\\s(LANG=)([\\w]{2})/\n        );\n        const date = environment_split[0];\n        const time = environment_split[1].replace('GMT', '');\n        const date_time = convertDateFormat(`${date} ${time}`, 'D-MMMM-YY hh:mm:ss', 'YYYY-MM-DD hh:mm:ss');\n        data[i].date = `${date_time} GMT`;\n        data[i].action = login_history[i].action === 'login' ? localize('Login') : localize('Logout');\n        const user_agent = environment.substring(environment.indexOf('User_AGENT'), environment.indexOf('LANG'));\n        const ua = mobile_app_UA ? mobile_app_UA.groups : Bowser.getParser(user_agent)?.getBrowser();\n        data[i].browser = ua ? `${ua.name} ${ua.app || ''} v${ua.version}` : localize('Unknown');\n        data[i].ip = environment_split[2].split('=')[1];\n        data[i].status = login_history[i].status === 1 ? localize('Successful') : localize('Failed');\n        data[i].id = i;\n    }\n    return data;\n};\n\nconst getFields = () => ({\n    date: localize('Date and time'),\n    action: localize('Action'),\n    browser: localize('Browser'),\n    ip: localize('IP address'),\n    status: localize('Status'),\n});\n\nconst LoginHistoryContent = ({ data }) => {\n    const { is_appstore } = React.useContext(PlatformContext);\n    if (isMobile()) {\n        return renderList(getFields(), data, is_appstore);\n    }\n    return renderTable(getFields(), data);\n};\n\nconst renderTable = (fields, login_history) => (\n    <Table fixed className='login-history__table'>\n        <Table.Header>\n            <Table.Row className='login-history__table__header'>\n                <Table.Head>{fields.date}</Table.Head>\n                <Table.Head>{fields.action}</Table.Head>\n                <Table.Head>{fields.browser}</Table.Head>\n                <Table.Head>{fields.ip}</Table.Head>\n                <Table.Head>{fields.status}</Table.Head>\n            </Table.Row>\n        </Table.Header>\n        <Table.Body>\n            {login_history.map(item => (\n                <Table.Row className='login-history__table__row' key={item.id}>\n                    <Table.Cell>\n                        <Text line_height='xs' size='xs'>\n                            {item.date}\n                        </Text>\n                    </Table.Cell>\n                    <Table.Cell className='login-history__table__row__cell login-history__table__row__cell--action'>\n                        {item.action}\n                    </Table.Cell>\n                    <Table.Cell>{item.browser}</Table.Cell>\n                    <Table.Cell>{item.ip}</Table.Cell>\n                    <Table.Cell>{item.status}</Table.Cell>\n                </Table.Row>\n            ))}\n        </Table.Body>\n    </Table>\n);\n\nconst renderList = (fields, login_history, is_appstore) => {\n    return (\n        <Table className='login-history__list'>\n            <Table.Body>\n                {login_history.map(item => (\n                    <div\n                        className={classNames('login-history__list__wrapper', {\n                            'login-history__list__wrapper--dashboard': is_appstore,\n                        })}\n                        key={item.id}\n                    >\n                        <Table.Row className='login-history__list__row login-history__list__row--with-margin'>\n                            <Table.Cell className='login-history__list__row__cell'>\n                                <ListCell title={fields.date} text={item.date} />\n                            </Table.Cell>\n                            {is_appstore && isMobile() && (\n                                <Table.Cell className='login-history__list__row__cell'>\n                                    <ListCell\n                                        className='login-history__list__row__cell--action'\n                                        title={fields.action}\n                                        text={item.action}\n                                        right\n                                    />\n                                </Table.Cell>\n                            )}\n                        </Table.Row>\n                        <Table.Row className='login-history__list__row login-history__list__row--with-margin'>\n                            <Table.Cell className='login-history__list__row__cell'>\n                                <ListCell\n                                    className='login-history__list__row__cell--browser'\n                                    title={fields.browser}\n                                    text={item.browser}\n                                />\n                            </Table.Cell>\n                            {is_appstore && isMobile() ? (\n                                <Table.Cell className='login-history__list__row__cell'>\n                                    <ListCell title={fields.status} text={item.status} right />\n                                </Table.Cell>\n                            ) : (\n                                <Table.Cell className='login-history__list__row__cell'>\n                                    <ListCell\n                                        className='login-history__list__row__cell--action'\n                                        title={fields.action}\n                                        text={item.action}\n                                    />\n                                </Table.Cell>\n                            )}\n                        </Table.Row>\n                        <Table.Row className='login-history__list__row'>\n                            <Table.Cell className='login-history__list__row__cell'>\n                                <ListCell\n                                    className='login-history__list__row__cell--ip-value'\n                                    title={fields.ip}\n                                    text={item.ip}\n                                />\n                            </Table.Cell>\n                            {!is_appstore ||\n                                (isDesktop() && (\n                                    <Table.Cell className='login-history__list__row__cell'>\n                                        <ListCell title={fields.status} text={item.status} />\n                                    </Table.Cell>\n                                ))}\n                        </Table.Row>\n                    </div>\n                ))}\n            </Table.Body>\n        </Table>\n    );\n};\n\nconst ListCell = ({ title, text, className, right }) => (\n    <React.Fragment>\n        <Text as='h3' align={right ? 'right' : 'left'} weight='bold' className='login-history__list__row__cell--title'>\n            {title}\n        </Text>\n        <Text\n            className={classNames(className, { 'login-history__list__row__cell--right': right })}\n            line_height='xs'\n            size='xs'\n            align={right ? 'right' : 'left'}\n        >\n            {text}\n        </Text>\n    </React.Fragment>\n);\n\nconst LoginHistory = observer(() => {\n    const { client } = useStore();\n    const { is_switching } = client;\n    const [is_loading, setLoading] = React.useState(true);\n    const [error, setError] = React.useState('');\n    const [data, setData] = React.useState([]);\n\n    React.useEffect(() => {\n        const fetchData = async () => {\n            const api_res = await WS.authorized.fetchLoginHistory(API_FETCH_LIMIT);\n            setLoading(false);\n            if (api_res.error) {\n                setError(api_res.error.message);\n            } else {\n                const formatted_data = getFormattedData(api_res.login_history);\n                setData(formatted_data);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    if (is_switching) return <Loading />;\n    if (is_loading) return <Loading is_fullscreen={false} className='account__initial-loader' />;\n    if (error) return <LoadErrorMessage error_message={error} />;\n\n    return (\n        <ThemedScrollbars is_bypassed={isMobile()} className='login-history'>\n            {data.length ? <LoginHistoryContent data={data} /> : null}\n        </ThemedScrollbars>\n    );\n});\n\nexport default LoginHistory;\n","import LoginHistory from './login-history.jsx';\n\nexport default LoginHistory;\n","import React from 'react';\nimport { Modal, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport { getStaticUrl, PlatformContext } from '@deriv/shared';\n\nconst AccountClosed = observer(() => {\n    const { client } = useStore();\n    const { logout } = client;\n    const [is_modal_open, setModalState] = React.useState(true);\n    const [timer, setTimer] = React.useState(10);\n    const { is_appstore } = React.useContext(PlatformContext);\n\n    const counter = React.useCallback(() => {\n        if (timer > 0) {\n            setTimer(timer - 1);\n        } else {\n            window.location.href = getStaticUrl('/', { is_appstore });\n        }\n    }, [is_appstore, timer]);\n\n    React.useEffect(() => {\n        window.history.pushState(null, '', '/');\n        logout();\n        const handleInterval = setInterval(() => counter(), 1000);\n        return () => {\n            if (handleInterval) clearInterval(handleInterval);\n        };\n    }, [timer, is_modal_open, logout, counter]);\n\n    return (\n        <Modal\n            is_open={is_modal_open}\n            toggleModal={() => {\n                setModalState(!is_modal_open);\n            }}\n        >\n            <Text as='p' className='account-closed'>\n                <Localize i18n_default_text='We’re sorry to see you leave. Your account is now closed.' /> {timer}\n            </Text>\n        </Modal>\n    );\n});\n\nexport default AccountClosed;\n","import AccountClosed from './account-closed';\n\nexport default AccountClosed;\n","// TODO: Remove once mobile team has changed this link\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { routes } from '@deriv/shared';\n\nconst DeactivateAccount = () => {\n    return <Redirect to={routes.closing_account} />;\n};\n\nexport default DeactivateAccount;\n","// TODO: Remove once mobile team has changed this link\nimport DeactivateAccount from './deactivate-account.jsx';\n\nexport default DeactivateAccount;\n","import React from 'react';\nimport { Text, Icon } from '@deriv/components';\nimport classNames from 'classnames';\nimport { getAllowedLanguages } from '@deriv/translations';\n\nexport type TLanguageRadioButton = {\n    is_current_language: boolean;\n    id: string;\n    language_code: string;\n    name: string;\n    onChange: React.ChangeEventHandler<HTMLInputElement>;\n};\n\nconst LanguageRadioButton = ({ is_current_language, id, language_code, name, onChange }: TLanguageRadioButton) => {\n    const allowed_languages: Record<string, string> = getAllowedLanguages();\n    return (\n        <div\n            className={classNames('settings-language__language-link', {\n                'settings-language__language-link--active': is_current_language,\n            })}\n            id={`dt_settings_${language_code}_button`}\n            data-testid={'dt_language_settings_button'}\n        >\n            <input\n                type='radio'\n                id={id}\n                name={name}\n                onChange={onChange}\n                value={language_code}\n                className='settings-language__language--radio-button'\n            />\n            <label htmlFor={id} className='settings-language__language--center-label'>\n                <div>\n                    <Icon\n                        icon={`IcFlag${id.replace('_', '-')}`}\n                        className='settings-language__language-link-flag settings-language__language-flag'\n                    />\n                </div>\n                <div>\n                    <Text\n                        size='xs'\n                        className={classNames('settings-language__language-name', {\n                            'settings-language__language-name--active': is_current_language,\n                        })}\n                    >\n                        {allowed_languages[language_code]}\n                    </Text>\n                </div>\n            </label>\n        </div>\n    );\n};\n\nexport default LanguageRadioButton;\n","import LanguageRadioButton from './language-radio-button';\n\nexport default LanguageRadioButton;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button, DesktopWrapper } from '@deriv/components';\nimport { localize, getAllowedLanguages } from '@deriv/translations';\nimport FormSubHeader from 'Components/form-sub-header';\nimport { Formik, FormikHandlers, FormikHelpers, FormikValues } from 'formik';\nimport FormFooter from 'Components/form-footer';\nimport LanguageRadioButton from 'Components/language-settings';\nimport { observer, useStore } from '@deriv/stores';\n\nconst LanguageSettings = observer(() => {\n    const { common } = useStore();\n    const { changeSelectedLanguage, current_language, isCurrentLanguage } = common;\n    const { i18n } = useTranslation();\n    const allowed_language_keys: string[] = Object.keys(getAllowedLanguages());\n    const initial_values = { language_code: current_language };\n    return (\n        <Formik\n            initialValues={initial_values}\n            onSubmit={async values => {\n                const { language_code } = values;\n                await changeSelectedLanguage(language_code);\n                await i18n.changeLanguage?.(language_code);\n            }}\n        >\n            {({ handleSubmit, setFieldValue, values }: FormikHandlers & FormikHelpers<FormikValues> & FormikValues) => {\n                return (\n                    <form onSubmit={handleSubmit} className='account-form account-form--language-settings'>\n                        <div className='settings-language'>\n                            <DesktopWrapper>\n                                <FormSubHeader title={localize('Select Language')} />\n                            </DesktopWrapper>\n                            <div className='settings-language__language-container'>\n                                {allowed_language_keys.map(language_key => {\n                                    return (\n                                        <LanguageRadioButton\n                                            key={language_key}\n                                            id={language_key}\n                                            language_code={language_key}\n                                            is_current_language={values.language_code === language_key}\n                                            name='language-radio-group'\n                                            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                                                setFieldValue('language_code', event.target.value)\n                                            }\n                                        />\n                                    );\n                                })}\n                            </div>\n                        </div>\n                        <FormFooter>\n                            <Button\n                                className='account-form__footer-btn'\n                                type='submit'\n                                data-testid={'submit-button'}\n                                has_effect\n                                text={localize('Submit')}\n                                large\n                                primary\n                                is_disabled={isCurrentLanguage(values.language_code)}\n                            />\n                        </FormFooter>\n                    </form>\n                );\n            }}\n        </Formik>\n    );\n});\n\nexport default LanguageSettings;\n","import LanguageSettings from './language-settings';\n\nexport default LanguageSettings;\n","import React from 'react';\nimport { routes, moduleLoader } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport {\n    AccountLimits,\n    Passwords,\n    PersonalDetails,\n    TradingAssessment,\n    FinancialAssessment,\n    ProofOfIdentity,\n    ProofOfAddress,\n    ProofOfOwnership,\n    ApiToken,\n    TwoFactorAuthentication,\n    SelfExclusion,\n    Account,\n    ClosingAccount,\n    ConnectedApps,\n    LoginHistory,\n    AccountClosed,\n    DeactivateAccount,\n    LanguageSettings,\n} from 'Sections';\n\n// Error Routes\nconst Page404 = React.lazy(() => moduleLoader(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404')));\n\n// Order matters\nconst initRoutesConfig = ({ is_appstore }) => [\n    {\n        path: routes.account_closed,\n        component: AccountClosed,\n        is_authenticated: false,\n        // Don't use `Localize` component since native html tag like `option` cannot render them\n        getTitle: () => localize('Account closed'),\n    },\n    {\n        // TODO: Remove once mobile team has changed this link\n        path: routes.deactivate_account,\n        component: DeactivateAccount,\n    },\n    {\n        path: routes.account,\n        component: Account,\n        is_authenticated: true,\n        getTitle: () => localize('Account Settings'),\n        icon_component: 'IcUserOutline',\n        routes: [\n            {\n                getTitle: () => localize('Profile'),\n                icon: 'IcUserOutline',\n                subroutes: [\n                    {\n                        path: routes.personal_details,\n                        component: PersonalDetails,\n                        getTitle: () => localize('Personal details'),\n                        default: true,\n                    },\n                    {\n                        path: routes.languages,\n                        component: LanguageSettings,\n                        getTitle: () => localize('Languages'),\n                    },\n                ],\n            },\n            {\n                getTitle: () => localize('Assessments'),\n                icon: 'IcAssessment',\n                subroutes: [\n                    {\n                        path: routes.trading_assessment,\n                        component: TradingAssessment,\n                        getTitle: () => localize('Trading assessment'),\n                    },\n                    {\n                        path: routes.financial_assessment,\n                        component: FinancialAssessment,\n                        getTitle: () => localize('Financial assessment'),\n                    },\n                ],\n            },\n            {\n                getTitle: () => localize('Verification'),\n                icon: 'IcVerification',\n                subroutes: [\n                    {\n                        path: routes.proof_of_identity,\n                        component: ProofOfIdentity,\n                        getTitle: () => localize('Proof of identity'),\n                    },\n                    {\n                        path: routes.proof_of_address,\n                        component: ProofOfAddress,\n                        getTitle: () => localize('Proof of address'),\n                    },\n                    {\n                        path: routes.proof_of_ownership,\n                        component: ProofOfOwnership,\n                        getTitle: () => localize('Proof of ownership'),\n                    },\n                ],\n            },\n            {\n                getTitle: () => localize('Security and safety'),\n                icon: 'IcSecurity',\n                subroutes: [\n                    {\n                        path: routes.passwords,\n                        component: Passwords,\n                        getTitle: () => localize('Email and passwords'),\n                    },\n                    {\n                        path: routes.self_exclusion,\n                        component: SelfExclusion,\n                        getTitle: () => (is_appstore ? localize('Self-exclusion') : localize('Self exclusion')),\n                    },\n                    {\n                        path: routes.account_limits,\n                        component: AccountLimits,\n                        getTitle: () => (is_appstore ? localize('Withdrawal limits') : localize('Account limits')),\n                    },\n                    {\n                        path: routes.login_history,\n                        component: LoginHistory,\n                        getTitle: () => localize('Login history'),\n                    },\n                    ...(is_appstore\n                        ? []\n                        : [\n                              {\n                                  path: routes.api_token,\n                                  component: ApiToken,\n                                  getTitle: () => localize('API token'),\n                              },\n                          ]),\n                    {\n                        path: routes.connected_apps,\n                        component: ConnectedApps,\n                        getTitle: () => localize('Connected apps'),\n                    },\n                    {\n                        path: routes.two_factor_authentication,\n                        component: TwoFactorAuthentication,\n                        getTitle: () => localize('Two-factor authentication'),\n                    },\n                    {\n                        path: routes.closing_account,\n                        component: ClosingAccount,\n                        getTitle: () => localize('Close your account'),\n                    },\n                ],\n            },\n            // TO DO -- Please remove these comments after changing for dashboard routes\n            // It is possible to add a Deriv Dashboard only path.\n            // ...(is_appstore\n            //     ? [\n            //           {\n            //               component: Home,\n            //               getTitle: () => localize('Dashboard-only path'),\n            //               is_authenticated: false,\n            //               path: routes.resources,\n            //           },\n            //       ]\n            //     : []),\n        ],\n    },\n];\n\nlet routesConfig;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default = { component: Page404, getTitle: () => localize('Error 404') };\n\nconst getRoutesConfig = ({ is_appstore }) => {\n    if (!routesConfig) {\n        routesConfig = initRoutesConfig({ is_appstore });\n        routesConfig.push(route_default);\n    }\n    return routesConfig;\n};\n\nexport default getRoutesConfig;\n","import React from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { Redirect, Route } from 'react-router-dom';\nimport {\n    alternateLinkTagChange,\n    canonicalLinkTagChange,\n    redirectToLogin,\n    isEmptyObject,\n    routes,\n    removeBranchName,\n    default_title,\n} from '@deriv/shared';\nimport { getLanguage } from '@deriv/translations';\nimport { TBinaryRoutes, TRoute, TRouteConfig } from 'Types';\n\ntype TRouteWithSubRoutesProps = TRouteConfig & TBinaryRoutes;\n\nconst RouteWithSubRoutes = (route: TRouteWithSubRoutesProps) => {\n    const renderFactory = (props: RouteComponentProps) => {\n        let result = null;\n\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else if (route.is_authenticated && !route.is_logged_in && !route.is_logging_in) {\n            redirectToLogin(route.is_logged_in, getLanguage());\n        } else {\n            const default_subroute: TRoute = (route.routes ?? []).reduce(\n                (acc, cur) => ({\n                    ...acc,\n                    ...cur.subroutes?.find(subroute => subroute.default),\n                }),\n                {}\n            );\n            const has_default_subroute = !isEmptyObject(default_subroute);\n            const pathname = removeBranchName(location.pathname);\n\n            const RouteComponent = route.component as React.ElementType;\n\n            result = (\n                <React.Fragment>\n                    {has_default_subroute && pathname === route.path && <Redirect to={default_subroute?.path} />}\n                    <RouteComponent {...props} routes={route.routes} />\n                </React.Fragment>\n            );\n        }\n\n        const title = route.getTitle?.() || '';\n        document.title = `${title} | ${default_title}`;\n\n        alternateLinkTagChange();\n        canonicalLinkTagChange();\n\n        return result;\n    };\n\n    return <Route exact={route.exact} path={route.path} render={renderFactory} />;\n};\n\nexport { RouteWithSubRoutes as RouteWithSubRoutesRender }; // For tests\n\nexport default RouteWithSubRoutes;\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport { PlatformContext } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport getRoutesConfig from 'Constants/routes-config';\nimport { TBinaryRoutes, TRoute } from 'Types';\nimport RouteWithSubRoutes from './route-with-sub-routes';\n\nconst BinaryRoutes = (props: TBinaryRoutes) => {\n    const { is_appstore } = React.useContext(PlatformContext);\n\n    return (\n        <React.Suspense\n            fallback={\n                <div>\n                    <Localize i18n_default_text='Loading...' />\n                </div>\n            }\n        >\n            <Switch>\n                {getRoutesConfig({ is_appstore }).map((route: TRoute, idx: number) => (\n                    <RouteWithSubRoutes key={idx} {...route} {...props} />\n                ))}\n            </Switch>\n        </React.Suspense>\n    );\n};\n\nexport default BinaryRoutes;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { BinaryRoutes } from 'Components/Routes';\nimport { observer, useStore } from '@deriv/stores';\nimport ErrorComponent from 'Components/error-component';\n\nconst Routes = observer(props => {\n    const { client, common } = useStore();\n    const { is_logged_in, is_logging_in } = client;\n    const { error, has_error } = common;\n    if (has_error) {\n        return <ErrorComponent {...error} />;\n    }\n\n    return <BinaryRoutes is_logged_in={is_logged_in} is_logging_in={is_logging_in} passthrough={props.passthrough} />;\n});\n\nRoutes.propTypes = {\n    is_virtual: PropTypes.bool,\n    passthrough: PropTypes.object,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(Routes);\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { CFD_PLATFORMS } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport ResetTradingPasswordModal from '../Components/reset-trading-password-modal';\n\nconst ResetTradingPassword = observer(() => {\n    const { ui, client } = useStore();\n    const {\n        enableApp,\n        disableApp,\n        is_reset_trading_password_modal_visible,\n        is_loading,\n        setResetTradingPasswordModalOpen,\n    } = ui;\n    const location = useLocation();\n    const query_params = new URLSearchParams(location.search);\n    const cfd_platform = /^trading_platform_(.*)_password_reset$/.exec(query_params.get('action') || '')?.[1];\n    const [platform] = React.useState(cfd_platform);\n    const verification_code =\n        platform === CFD_PLATFORMS.MT5\n            ? client.verification_code.trading_platform_mt5_password_reset\n            : client.verification_code.trading_platform_dxtrade_password_reset;\n\n    return (\n        <ResetTradingPasswordModal\n            platform={platform}\n            enableApp={enableApp}\n            disableApp={disableApp}\n            toggleResetTradingPasswordModal={setResetTradingPasswordModalOpen}\n            is_visible={is_reset_trading_password_modal_visible}\n            is_loading={is_loading}\n            verification_code={verification_code}\n        />\n    );\n});\n\nexport default ResetTradingPassword;\n","import React from 'react';\nimport Routes from './Containers/routes';\nimport ResetTradingPassword from './Containers/reset-trading-password';\nimport { setWebsocket } from '@deriv/shared';\nimport { StoreProvider } from '@deriv/stores';\nimport { TCoreStores } from '@deriv/stores/types';\n\n// TODO: add correct types for WS after implementing them\ntype TAppProps = {\n    passthrough: {\n        root_store: TCoreStores;\n        WS: Record<string, any>;\n    };\n};\n\nconst App = ({ passthrough }: TAppProps) => {\n    const { root_store, WS } = passthrough;\n    setWebsocket(WS);\n\n    return (\n        <StoreProvider store={root_store}>\n            <Routes />\n            <ResetTradingPassword />\n        </StoreProvider>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Icon, Text, Button } from '@deriv/components';\nimport { isMobile, PlatformContext } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TIconWithMessage = {\n    icon: string;\n    has_button?: boolean;\n    message: string;\n};\n\nconst IconWithMessage = observer(({ has_button, icon, message }: TIconWithMessage) => {\n    const { client, ui } = useStore();\n    const { has_any_real_account: has_real_account } = client;\n    const { toggleAccountsDialog, toggleShouldShowRealAccountsList } = ui;\n    const { is_appstore } = React.useContext(PlatformContext);\n\n    return (\n        <div className={classNames('da-icon-with-message', { 'da-icon-with-message-full-width': is_appstore })}>\n            <Icon icon={icon} size={128} />\n            <Text\n                className='da-icon-with-message__text'\n                as='p'\n                color='general'\n                size={isMobile() ? 'xs' : 's'}\n                line_height='m'\n                weight='bold'\n            >\n                {message}\n            </Text>\n            {has_button && (\n                <Button\n                    primary\n                    onClick={() => {\n                        toggleShouldShowRealAccountsList(true);\n                        toggleAccountsDialog();\n                    }}\n                    className='account__demo-message-button'\n                    data-testid='icon-with-message-button'\n                >\n                    {has_real_account ? localize('Switch to real account') : localize('Add a real account')}\n                </Button>\n            )}\n        </div>\n    );\n});\n\nexport default IconWithMessage;\n","import IconWithMessage from './icon-with-message';\nimport './icon-with-message.scss';\n\nexport default IconWithMessage;\n","import React from 'react';\nimport { localize } from '@deriv/translations';\nimport IconWithMessage from 'Components/icon-with-message';\n\ntype TDemoMessage = {\n    has_demo_icon?: boolean;\n    has_button?: boolean;\n};\n\nconst DemoMessage = ({ has_demo_icon, has_button }: TDemoMessage) => (\n    <IconWithMessage\n        icon={has_demo_icon ? 'IcPoaLockDemo' : 'IcPoaLock'}\n        message={localize('This feature is not available for demo accounts.')}\n        has_button={has_button}\n    />\n);\n\nexport default DemoMessage;\n","import DemoMessage from './demo-message';\n\nexport default DemoMessage;\n","import React from 'react';\nimport { PageError } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { routes } from '@deriv/shared';\n\ntype TErrorComponent = {\n    header: React.ReactElement;\n    message: React.ReactNode;\n    redirect_label: React.ReactElement;\n    redirectOnClick: () => void;\n    should_show_refresh: boolean;\n};\n\nconst ErrorComponent = ({\n    header,\n    message,\n    redirect_label,\n    redirectOnClick,\n    should_show_refresh = true,\n}: Partial<TErrorComponent>) => {\n    const refresh_message: string = should_show_refresh ? localize('Please refresh this page to continue.') : '';\n\n    return (\n        <PageError\n            header={header || localize('Oops, something went wrong.')}\n            messages={\n                message\n                    ? [message, refresh_message]\n                    : [localize('Sorry, an error occured while processing your request.'), refresh_message]\n            }\n            redirect_urls={[routes.trade]}\n            redirect_labels={[redirect_label || localize('Refresh')]}\n            buttonOnClick={redirectOnClick || (() => location.reload())}\n        />\n    );\n};\n\nexport default ErrorComponent;\n","import ErrorComponent from './error-component.tsx';\n\nexport default ErrorComponent;\n","import React from 'react';\nimport classNames from 'classnames';\nimport DocumentUploader from '@binary-com/binary-document-uploader';\nimport { FileDropzone, Icon, useStateCallback } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport {\n    isMobile,\n    compressImageFiles,\n    readFiles,\n    getSupportedFiles,\n    max_document_size,\n    supported_filetypes,\n} from '@deriv/shared';\nimport { TFile } from 'Types';\n\ntype TFileObject = {\n    file: TFile;\n};\n\nconst UploadMessage = () => {\n    return (\n        <React.Fragment>\n            <Icon icon='IcCloudUpload' className='dc-file-dropzone__message-icon' size={50} />\n            <div className='dc-file-dropzone__message-subtitle'>\n                {isMobile() ? localize('Click here to upload') : localize('Drop file or click here to upload')}\n            </div>\n        </React.Fragment>\n    );\n};\n\nconst fileReadErrorMessage = (filename: string) => {\n    return localize('Unable to read file {{name}}', { name: filename });\n};\n\nconst FileUploader = React.forwardRef<\n    HTMLElement,\n    { onFileDrop: (file: TFile | undefined) => void; getSocket: () => WebSocket }\n>(({ onFileDrop, getSocket }, ref) => {\n    const [document_file, setDocumentFile] = useStateCallback({ files: [], error_message: null });\n\n    const handleAcceptedFiles = (files: TFileObject[]) => {\n        if (files.length > 0) {\n            setDocumentFile({ files, error_message: null }, (file: TFile) => {\n                onFileDrop(file);\n            });\n        }\n    };\n\n    const handleRejectedFiles = (files: TFileObject[]) => {\n        const is_file_too_large = files.length > 0 && files[0].file.size > max_document_size;\n        const supported_files = files.filter(each_file => getSupportedFiles(each_file.file.name));\n        const error_message =\n            is_file_too_large && supported_files.length > 0\n                ? localize('File size should be 8MB or less')\n                : localize('File uploaded is not supported');\n\n        setDocumentFile({ files, error_message }, (file: TFile) => onFileDrop(file));\n    };\n\n    const removeFile = () => {\n        setDocumentFile({ files: [], error_message: null }, (file: TFile) => onFileDrop(file));\n    };\n\n    const upload = () => {\n        if (!!document_file.error_message || document_file.files.length < 1) return 0;\n\n        // File uploader instance connected to binary_socket\n        const uploader = new DocumentUploader({ connection: getSocket() });\n\n        let is_any_file_error = false;\n\n        return new Promise((resolve, reject) => {\n            compressImageFiles(document_file.files)\n                .then(files_to_process => {\n                    readFiles(files_to_process, fileReadErrorMessage)\n                        .then(processed_files => {\n                            processed_files.forEach(file => {\n                                if (file.message) {\n                                    is_any_file_error = true;\n                                    reject(file);\n                                }\n                            });\n                            const total_to_upload = processed_files.length;\n                            if (is_any_file_error || !total_to_upload) {\n                                onFileDrop(undefined);\n                                return; // don't start submitting files until all front-end validation checks pass\n                            }\n\n                            // send files\n                            const uploader_promise = uploader\n                                .upload(processed_files[0])\n                                .then((api_response: unknown) => api_response);\n                            resolve(uploader_promise);\n                        })\n                        /* eslint-disable no-console */\n                        .catch(error => console.error('error: ', error));\n                })\n                /* eslint-disable no-console */\n                .catch(error => console.error('error: ', error));\n        });\n    };\n\n    React.useImperativeHandle(ref, () => ({\n        upload,\n    }));\n\n    return (\n        <React.Fragment>\n            <FileDropzone\n                accept={supported_filetypes}\n                error_message={localize('Please upload supported file type.')}\n                filename_limit={26}\n                hover_message={localize('Drop files here..')}\n                max_size={max_document_size}\n                message={<UploadMessage />}\n                multiple={false}\n                onDropAccepted={handleAcceptedFiles}\n                onDropRejected={handleRejectedFiles}\n                validation_error_message={document_file.error_message}\n                value={document_file.files}\n            />\n            {(document_file.files.length > 0 || !!document_file.error_message) && (\n                <div className='account-poa__upload-remove-btn-container'>\n                    <Icon\n                        icon='IcCloseCircle'\n                        className={classNames('account-poa__upload-remove-btn', {\n                            'account-poa__upload-remove-btn--error': !!document_file.error_message,\n                        })}\n                        onClick={removeFile}\n                        color='secondary'\n                        data_testid='dt_remove_file_icon'\n                    />\n                </div>\n            )}\n        </React.Fragment>\n    );\n});\n\nFileUploader.displayName = 'FileUploader';\n\nexport default FileUploader;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Icon, Text } from '@deriv/components';\nimport { PlatformContext, isDesktop, WS } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\nimport FileUploader from './file-uploader';\nimport { TFile, TPlatformContext } from 'Types';\n\nexport type TFileUploaderContainer = {\n    is_description_enabled?: boolean;\n    getSocket: () => WebSocket;\n    onFileDrop: (file: TFile | undefined) => void;\n    onRef: (ref: React.RefObject<unknown> | undefined) => void;\n};\n\nconst FileProperties = () => {\n    const properties = [\n        { name: 'size', icon: 'IcPoaFileEightMb', text: localize('Less than 8MB') },\n        { name: 'format', icon: 'IcPoaFileFormat', text: localize('JPEG  JPG  PNG  PDF  GIF') },\n        { name: 'time', icon: 'IcPoaFileTime', text: localize('1 - 6 months old') },\n        { name: 'clear', icon: 'IcPoaFileClear', text: localize('A clear colour photo or scanned image') },\n        {\n            name: 'with-address',\n            icon: 'IcPoaFileWithAddress',\n            text: localize('Issued under your name with your current address'),\n        },\n    ];\n    return (\n        <div className='account-poa__upload-property'>\n            {properties.map(item => (\n                <div\n                    className={`account-poa__upload-property-item account-poa__upload-property-${item.name}`}\n                    key={item.name}\n                >\n                    <div className='account-poa__upload-property-wrapper'>\n                        <Icon icon={item.icon} className='account-poa__upload-icon-dashboard' size={40} />\n                        <Text size='xxxs' weight='bold' align='center'>\n                            {item.text}\n                        </Text>\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nconst FileUploaderContainer = ({\n    is_description_enabled = true,\n    getSocket,\n    onFileDrop,\n    onRef,\n}: TFileUploaderContainer) => {\n    const { is_appstore } = React.useContext<Partial<TPlatformContext>>(PlatformContext);\n    const ref = React.useRef();\n\n    const getSocketFunc = getSocket ?? WS.getSocket;\n\n    React.useEffect(() => {\n        if (ref) {\n            if (typeof onRef === 'function') onRef(ref);\n        }\n        return () => onRef(undefined);\n    }, [onRef, ref]);\n    if (is_appstore && isDesktop()) {\n        return (\n            <div className='account-poa__upload-section account-poa__upload-section-dashboard'>\n                <div className='account-poa__upload-file account-poa__upload-file-dashboard'>\n                    <FileProperties />\n                    <div className='account-poa__upload-file-zone'>\n                        <FileUploader getSocket={getSocketFunc} ref={ref} onFileDrop={onFileDrop} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    return (\n        <div className='account-poa__upload-section' data-testid='dt_file_uploader_container'>\n            {is_description_enabled && (\n                <ul className='account-poa__upload-list'>\n                    <li className='account-poa__upload-box'>\n                        {is_appstore ? (\n                            <Icon icon='IcPoaFileEightMb' className='account-poa__upload-icon' size={24} />\n                        ) : (\n                            <Icon icon='IcLessThanEight' className='account-poa__upload-icon' size={24} />\n                        )}\n                        <div className='account-poa__upload-item'>\n                            <Localize i18n_default_text='Less than 8MB' />\n                        </div>\n                    </li>\n                    <li className='account-poa__upload-box'>\n                        <Icon icon='IcImage' className='account-poa__upload-icon' size={24} />\n                        <div className='account-poa__upload-item'>\n                            <Localize i18n_default_text='JPEG JPG PNG PDF GIF' />\n                        </div>\n                    </li>\n                    <li className='account-poa__upload-box'>\n                        {is_appstore ? (\n                            <Icon icon='IcPoaFileTime' className='account-poa__upload-icon' size={24} />\n                        ) : (\n                            <Icon icon='IcClock' className='account-poa__upload-icon' size={24} />\n                        )}\n                        <div className='account-poa__upload-item'>\n                            <Localize i18n_default_text='1 - 6 months old' />\n                        </div>\n                    </li>\n                    <li className='account-poa__upload-box'>\n                        {is_appstore ? (\n                            <Icon icon='IcPoaFileClear' className='account-poa__upload-icon' size={24} />\n                        ) : (\n                            <Icon icon='IcEye' className='account-poa__upload-icon' size={24} />\n                        )}\n                        <div className='account-poa__upload-item'>\n                            <Localize i18n_default_text='A clear colour photo or scanned image' />\n                        </div>\n                    </li>\n                    <li className='account-poa__upload-box'>\n                        {is_appstore ? (\n                            <Icon icon='IcPoaFileWithAddress' className='account-poa__upload-icon' size={24} />\n                        ) : (\n                            <Icon icon='IcUser' className='account-poa__upload-icon' size={24} />\n                        )}\n                        <div className='account-poa__upload-item'>\n                            <Localize i18n_default_text='Issued under your name with your current address' />\n                        </div>\n                    </li>\n                </ul>\n            )}\n            <div\n                className={classNames('account-poa__upload-file', {\n                    'account-poa__upload-file--dashboard': isDesktop() && is_appstore,\n                })}\n            >\n                <FileUploader getSocket={getSocketFunc} ref={ref} onFileDrop={onFileDrop} />\n            </div>\n        </div>\n    );\n};\n\nexport default FileUploaderContainer;\n","import FileUploaderContainer from './file-uploader-container';\n\nexport default FileUploaderContainer;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Text } from '@deriv/components';\nimport { PlatformContext, isMobile } from '@deriv/shared';\n\nexport type TFormBodySection = {\n    has_side_note?: boolean;\n    side_note?: string | React.ReactElement;\n};\n\nconst FormBodySection = ({ children, has_side_note, side_note }: React.PropsWithChildren<TFormBodySection>) => {\n    const { is_appstore } = React.useContext(PlatformContext);\n\n    if (has_side_note) {\n        return (\n            <div\n                data-testid='dt_side_note_container'\n                className={classNames('account-form__section', { 'account-form__section--dashboard': is_appstore })}\n            >\n                <div className='account-form__section-side-note'>\n                    {typeof side_note === 'string' ? (\n                        <Text color='less-prominent' size={isMobile() ? 'xxs' : 'xs'} data-testid='side-note-text'>\n                            {side_note}\n                        </Text>\n                    ) : (\n                        side_note\n                    )}\n                </div>\n                <div className='account-form__section-content'>{children}</div>\n            </div>\n        );\n    }\n    return children as JSX.Element;\n};\n\nexport default FormBodySection;\n","import FormBodySection from './form-body-section';\n\nexport default FormBodySection;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { ThemedScrollbars } from '@deriv/components';\nimport { isMobile } from '@deriv/shared';\n\ntype TScrollbarsContainer = {\n    className?: string;\n    scroll_offset?: string;\n};\n\nexport const ScrollbarsContainer = ({\n    children,\n    className,\n    scroll_offset,\n}: React.PropsWithChildren<TScrollbarsContainer>) => (\n    <ThemedScrollbars is_bypassed={isMobile()} height={scroll_offset ? `calc(100% - ${scroll_offset})` : '100%'}>\n        <div\n            className={classNames('account__scrollbars_container', className)}\n            data-testid='dt_scrollbar_container_div'\n        >\n            {children}\n        </div>\n    </ThemedScrollbars>\n);\n","import { FormBody } from './form-body';\n\nexport default FormBody;\n","import React from 'react';\nimport { ScrollbarsContainer } from 'Components/scrollbars-container/scrollbars-container';\nimport { Div100vhContainer, DesktopWrapper, MobileWrapper } from '@deriv/components';\n\ntype TFormBody = {\n    scroll_offset?: string;\n};\n\nexport const FormBody = ({ children, scroll_offset }: React.PropsWithChildren<TFormBody>) => (\n    <React.Fragment>\n        <DesktopWrapper>\n            <ScrollbarsContainer className='account__scrollbars_container--grid-layout' scroll_offset={scroll_offset}>\n                {children}\n            </ScrollbarsContainer>\n        </DesktopWrapper>\n        <MobileWrapper>\n            <Div100vhContainer\n                className='account__scrollbars_container--grid-layout'\n                height_offset={scroll_offset || '200px'}\n            >\n                {children}\n            </Div100vhContainer>\n        </MobileWrapper>\n    </React.Fragment>\n);\n","import React from 'react';\nimport { PlatformContext } from '@deriv/shared';\nimport classNames from 'classnames';\n\nexport type TFormFooter = {\n    className?: string;\n};\n\nconst FormFooter = ({ children, className }: React.PropsWithChildren<TFormFooter>) => {\n    const { is_appstore } = React.useContext(PlatformContext);\n\n    return (\n        <div\n            className={classNames('account-form__footer', className, {\n                'account-form__footer--dashboard': is_appstore,\n            })}\n            data-testid='form-footer-container'\n        >\n            {children}\n        </div>\n    );\n};\n\nexport default FormFooter;\n","import FormFooter from './form-footer';\n\nexport default FormFooter;\n","import { FormSubHeader } from './form-sub-header';\n\nexport default FormSubHeader;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Text } from '@deriv/components';\n\nexport type TFormSubHeader = {\n    description?: string;\n    subtitle?: string;\n    title: string;\n};\n\nexport const FormSubHeader = ({ description, subtitle, title }: TFormSubHeader) => {\n    const title_as_class = title.replace(/\\s+/g, '-').toLowerCase();\n    return (\n        <React.Fragment>\n            <div\n                className={classNames('account-form__header', title_as_class, {\n                    'account-form__header--has-description': !!description,\n                })}\n                data-testid='form-sub-header'\n            >\n                <div className='account-form__header-section'>\n                    <Text as='h1' color='prominent' weight='bold' size='xs' className='account-form__title'>\n                        {title}\n                    </Text>\n                    {subtitle && (\n                        <Text as='h2' size='xxxs' color='prominent' className='account-form__subtitle'>\n                            {subtitle}\n                        </Text>\n                    )}\n                </div>\n            </div>\n            {description && (\n                <Text as='p' className='account-form__description'>\n                    {description}\n                </Text>\n            )}\n        </React.Fragment>\n    );\n};\n","import React from 'react';\nimport { Field } from 'formik';\nimport { DateOfBirthPicker, Input } from '@deriv/components';\nimport { toMoment } from '@deriv/shared';\n\nexport const DateOfBirthField = ({ name, portal_id, ...rest }) => (\n    <Field name={name}>\n        {({ field: { value }, form: { setFieldValue, errors, touched, setFieldTouched } }) => (\n            <DateOfBirthPicker\n                error={touched.date_of_birth && errors.date_of_birth}\n                name={name}\n                onBlur={() => setFieldTouched(name)}\n                onChange={({ target }) =>\n                    setFieldValue(name, target?.value ? toMoment(target.value).format('YYYY-MM-DD') : '', true)\n                }\n                value={value}\n                portal_id={portal_id}\n                {...rest}\n            />\n        )}\n    </Field>\n);\n\nexport const FormInputField = ({ name, optional = false, warn, ...rest }) => (\n    <Field name={name}>\n        {({ field, form: { errors, touched } }) => (\n            <Input\n                type='text'\n                required={!optional}\n                autoComplete='off'\n                error={touched[field.name] && errors[field.name]}\n                warn={warn}\n                {...field}\n                {...rest}\n            />\n        )}\n    </Field>\n);\n","import React from 'react';\nimport { Field } from 'formik';\nimport classNames from 'classnames';\nimport {\n    Autocomplete,\n    Checkbox,\n    Dropdown,\n    DesktopWrapper,\n    MobileWrapper,\n    Popover,\n    RadioGroup,\n    SelectNative,\n    Text,\n} from '@deriv/components';\nimport { getLegalEntityName, isDesktop, isMobile, routes, validPhone } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\nimport FormSubHeader from 'Components/form-sub-header';\nimport PoiNameDobExample from 'Assets/ic-poi-name-dob-example.svg';\nimport InlineNoteWithIcon from 'Components/inline-note-with-icon';\nimport FormBodySection from 'Components/form-body-section';\nimport { DateOfBirthField, FormInputField } from 'Components/forms/form-fields';\nimport { Link } from 'react-router-dom';\nimport { getEmploymentStatusList } from 'Sections/Assessment/FinancialAssessment/financial-information-list';\nimport { isFieldImmutable } from 'Helpers/utils';\n\nconst PersonalDetailsForm = ({\n    errors,\n    touched,\n    values,\n    setFieldValue,\n    handleChange,\n    handleBlur,\n    warning_items,\n    setFieldTouched,\n    ...props\n}) => {\n    const {\n        is_virtual,\n        is_mf,\n        is_svg,\n        is_qualified_for_idv,\n        should_hide_helper_image,\n        is_appstore,\n        editable_fields = [],\n        has_real_account,\n        residence_list,\n        is_fully_authenticated,\n        account_opening_reason_list,\n        closeRealAccountSignup,\n        salutation_list,\n        is_rendered_for_onfido,\n        should_close_tooltip,\n        setShouldCloseTooltip,\n    } = props;\n    const autocomplete_value = 'none';\n    const PoiNameDobExampleIcon = PoiNameDobExample;\n\n    const [is_tax_residence_popover_open, setIsTaxResidencePopoverOpen] = React.useState(false);\n    const [is_tin_popover_open, setIsTinPopoverOpen] = React.useState(false);\n\n    React.useEffect(() => {\n        if (should_close_tooltip) {\n            handleToolTipStatus();\n            setShouldCloseTooltip(false);\n        }\n    }, [should_close_tooltip, handleToolTipStatus, setShouldCloseTooltip]);\n\n    const getNameAndDobLabels = () => {\n        const is_asterisk_needed = is_svg || is_mf || is_rendered_for_onfido || is_qualified_for_idv;\n        const first_name_label = is_appstore || is_asterisk_needed ? localize('First name*') : localize('First name');\n        const last_name_text = is_asterisk_needed ? localize('Last name*') : localize('Last name');\n        const last_name_label = is_appstore ? localize('Family name*') : last_name_text;\n        const dob_label = is_appstore || is_asterisk_needed ? localize('Date of birth*') : localize('Date of birth');\n\n        return {\n            first_name_label,\n            last_name_label,\n            dob_label,\n        };\n    };\n\n    const getFieldHint = field_name =>\n        is_qualified_for_idv || is_rendered_for_onfido ? (\n            <Localize\n                i18n_default_text={'Your {{ field_name }} as in your identity document'}\n                values={{ field_name }}\n            />\n        ) : (\n            <Localize\n                i18n_default_text={'Please enter your {{ field_name }} as in your official identity documents.'}\n                values={{ field_name }}\n            />\n        );\n\n    const handleToolTipStatus = React.useCallback(() => {\n        if (is_tax_residence_popover_open) {\n            setIsTaxResidencePopoverOpen(false);\n        }\n        if (is_tin_popover_open) {\n            setIsTinPopoverOpen(false);\n        }\n    }, [is_tax_residence_popover_open, is_tin_popover_open]);\n\n    const name_dob_clarification_message = (\n        <Localize\n            i18n_default_text='To avoid delays, enter your <0>name</0> and <0>date of birth</0> exactly as they appear on your identity document.'\n            components={[<strong key={0} />]}\n        />\n    );\n\n    return (\n        <div className={classNames({ 'account-form__poi-confirm-example': is_qualified_for_idv })}>\n            {(is_qualified_for_idv || is_rendered_for_onfido) && !should_hide_helper_image && (\n                <InlineNoteWithIcon message={name_dob_clarification_message} font_size={isMobile() ? 'xxxs' : 'xs'} />\n            )}\n            <FormBodySection\n                has_side_note={(is_qualified_for_idv || is_rendered_for_onfido) && !should_hide_helper_image}\n                side_note={<PoiNameDobExampleIcon />}\n            >\n                <fieldset className='account-form__fieldset'>\n                    {'salutation' in values && (\n                        <div>\n                            <Text size={isMobile() ? 'xs' : 'xxs'} align={isMobile() && 'center'}>\n                                {is_virtual ? (\n                                    localize(\n                                        'Please remember that it is your responsibility to keep your answers accurate and up to date. You can update your personal details at any time in your account settings.'\n                                    )\n                                ) : (\n                                    <Localize\n                                        i18n_default_text='Please remember that it is your responsibility to keep your answers accurate and up to date. You can update your personal details at any time in your <0>account settings</0>.'\n                                        components={[\n                                            <Link\n                                                to={routes.personal_details}\n                                                key={0}\n                                                className='link'\n                                                onClick={closeRealAccountSignup}\n                                            />,\n                                        ]}\n                                    />\n                                )}\n                            </Text>\n                        </div>\n                    )}\n                    {!is_qualified_for_idv && !is_appstore && !is_rendered_for_onfido && (\n                        <FormSubHeader title={'salutation' in values ? localize('Title and name') : localize('Name')} />\n                    )}\n                    {'salutation' in values && (\n                        <RadioGroup\n                            className='dc-radio__input'\n                            name='salutation'\n                            selected={values.salutation}\n                            onToggle={e => {\n                                e.persist();\n                                setFieldValue('salutation', e.target.value);\n                            }}\n                            required\n                        >\n                            {salutation_list.map(item => (\n                                <RadioGroup.Item\n                                    key={item.value}\n                                    label={item.label}\n                                    value={item.value}\n                                    disabled={!!values.salutation && isFieldImmutable('salutation', editable_fields)}\n                                />\n                            ))}\n                        </RadioGroup>\n                    )}\n                    {'first_name' in values && (\n                        <FormInputField\n                            name='first_name'\n                            required={is_svg || is_appstore}\n                            label={getNameAndDobLabels().first_name_label}\n                            hint={getFieldHint(localize('first name'))}\n                            disabled={\n                                isFieldImmutable('first_name', editable_fields) ||\n                                (values?.first_name && has_real_account)\n                            }\n                            placeholder={localize('John')}\n                            data-testid='first_name'\n                        />\n                    )}\n                    {'last_name' in values && (\n                        <FormInputField\n                            name='last_name'\n                            required={is_svg || is_appstore}\n                            label={getNameAndDobLabels().last_name_label}\n                            hint={getFieldHint(localize('last name'))}\n                            disabled={\n                                isFieldImmutable('last_name', editable_fields) ||\n                                (values?.last_name && has_real_account)\n                            }\n                            placeholder={localize('Doe')}\n                            data-testid='last_name'\n                        />\n                    )}\n                    {!is_appstore && !is_qualified_for_idv && !is_rendered_for_onfido && (\n                        <FormSubHeader title={localize('Other details')} />\n                    )}\n                    {'date_of_birth' in values && (\n                        <DateOfBirthField\n                            name='date_of_birth'\n                            required={is_svg || is_appstore}\n                            label={getNameAndDobLabels().dob_label}\n                            hint={getFieldHint(localize('date of birth'))}\n                            disabled={\n                                isFieldImmutable('date_of_birth', editable_fields) ||\n                                (values?.date_of_birth && has_real_account)\n                            }\n                            placeholder={localize('01-07-1999')}\n                            portal_id={is_appstore ? '' : 'modal_root'}\n                            data_testid='date_of_birth'\n                        />\n                    )}\n                    {'place_of_birth' in values && (\n                        <Field name='place_of_birth'>\n                            {({ field }) => (\n                                <React.Fragment>\n                                    <DesktopWrapper>\n                                        <Autocomplete\n                                            {...field}\n                                            disabled={isFieldImmutable('place_of_birth', editable_fields)}\n                                            data-lpignore='true'\n                                            autoComplete={autocomplete_value} // prevent chrome autocomplete\n                                            type='text'\n                                            label={is_mf ? localize('Place of birth*') : localize('Place of birth')}\n                                            error={touched.place_of_birth && errors.place_of_birth}\n                                            list_items={residence_list}\n                                            onItemSelection={({ value, text }) =>\n                                                setFieldValue('place_of_birth', value ? text : '', true)\n                                            }\n                                            required\n                                            data-testid='place_of_birth'\n                                        />\n                                    </DesktopWrapper>\n                                    <MobileWrapper>\n                                        <SelectNative\n                                            placeholder={localize('Place of birth')}\n                                            name={field.name}\n                                            disabled={isFieldImmutable('place_of_birth', editable_fields)}\n                                            label={is_mf ? localize('Place of birth*') : localize('Place of birth')}\n                                            list_items={residence_list}\n                                            value={values.place_of_birth}\n                                            use_text={true}\n                                            error={touched.place_of_birth && errors.place_of_birth}\n                                            onChange={e => {\n                                                handleChange(e);\n                                                setFieldValue('place_of_birth', e.target.value, true);\n                                            }}\n                                            {...field}\n                                            list_portal_id='modal_root'\n                                            required\n                                            should_hide_disabled_options={false}\n                                            data_testid='place_of_birth_mobile'\n                                        />\n                                    </MobileWrapper>\n                                </React.Fragment>\n                            )}\n                        </Field>\n                    )}\n                    {'citizen' in values && (\n                        <Field name='citizen'>\n                            {({ field }) => (\n                                <React.Fragment>\n                                    <DesktopWrapper>\n                                        <Autocomplete\n                                            {...field}\n                                            data-lpignore='true'\n                                            autoComplete={autocomplete_value} // prevent chrome autocomplete\n                                            type='text'\n                                            label={is_mf ? localize('Citizenship*') : localize('Citizenship')}\n                                            error={touched.citizen && errors.citizen}\n                                            disabled={\n                                                (values?.citizen && is_fully_authenticated) ||\n                                                isFieldImmutable('citizen', editable_fields) ||\n                                                (values?.citizen && has_real_account)\n                                            }\n                                            list_items={residence_list}\n                                            onItemSelection={({ value, text }) =>\n                                                setFieldValue('citizen', value ? text : '', true)\n                                            }\n                                            list_portal_id='modal_root'\n                                            required\n                                            data-testid='citizenship'\n                                        />\n                                    </DesktopWrapper>\n                                    <MobileWrapper>\n                                        <SelectNative\n                                            placeholder={localize('Citizenship')}\n                                            name={field.name}\n                                            disabled={\n                                                (values?.citizen && is_fully_authenticated) ||\n                                                isFieldImmutable('citizen', editable_fields) ||\n                                                (values?.citizen && has_real_account)\n                                            }\n                                            label={is_mf ? localize('Citizenship*') : localize('Citizenship')}\n                                            list_items={residence_list}\n                                            value={values.citizen}\n                                            use_text={true}\n                                            error={touched.citizen && errors.citizen}\n                                            onChange={e => {\n                                                handleChange(e);\n                                                setFieldValue('citizen', e.target.value, true);\n                                            }}\n                                            {...field}\n                                            required\n                                            should_hide_disabled_options={false}\n                                            data_testid='citizenship_mobile'\n                                        />\n                                    </MobileWrapper>\n                                </React.Fragment>\n                            )}\n                        </Field>\n                    )}\n                    {'phone' in values && (\n                        <FormInputField\n                            name='phone'\n                            label={\n                                is_svg || is_appstore || is_mf ? localize('Phone number*') : localize('Phone number')\n                            }\n                            placeholder={\n                                is_svg || is_appstore || is_mf ? localize('Phone number*') : localize('Phone number')\n                            }\n                            disabled={\n                                isFieldImmutable('phone', editable_fields) ||\n                                (values?.phone &&\n                                    has_real_account &&\n                                    validPhone(values?.phone) &&\n                                    values?.phone?.length >= 9 &&\n                                    values?.phone?.length <= 35)\n                            }\n                            maxLength={50}\n                            data-testid='phone'\n                        />\n                    )}\n                    {('tax_residence' in values || 'tax_identification_number' in values) && (\n                        <React.Fragment>\n                            <FormSubHeader title={localize('Tax information')} />\n                            {'tax_residence' in values && (\n                                <Field name='tax_residence'>\n                                    {({ field }) => (\n                                        <div className='details-form__tax'>\n                                            <DesktopWrapper>\n                                                <Autocomplete\n                                                    {...field}\n                                                    data-lpignore='true'\n                                                    autoComplete={autocomplete_value} // prevent chrome autocomplete\n                                                    type='text'\n                                                    label={\n                                                        is_mf ? localize('Tax residence*') : localize('Tax residence')\n                                                    }\n                                                    error={touched.tax_residence && errors.tax_residence}\n                                                    list_items={residence_list}\n                                                    onItemSelection={({ value, text }) =>\n                                                        setFieldValue('tax_residence', value ? text : '', true)\n                                                    }\n                                                    list_portal_id='modal_root'\n                                                    data-testid='tax_residence'\n                                                    disabled={isFieldImmutable('tax_residence', editable_fields)}\n                                                />\n                                            </DesktopWrapper>\n                                            <MobileWrapper>\n                                                <SelectNative\n                                                    placeholder={localize('Tax residence')}\n                                                    name={field.name}\n                                                    label={\n                                                        is_mf ? localize('Tax residence*') : localize('Tax residence')\n                                                    }\n                                                    list_items={residence_list}\n                                                    value={values.tax_residence}\n                                                    use_text={true}\n                                                    error={touched.tax_residence && errors.tax_residence}\n                                                    onChange={e => {\n                                                        handleChange(e);\n                                                        setFieldValue('tax_residence', e.target.value, true);\n                                                    }}\n                                                    {...field}\n                                                    required\n                                                    data_testid='tax_residence_mobile'\n                                                    disabled={isFieldImmutable('tax_residence', editable_fields)}\n                                                />\n                                            </MobileWrapper>\n                                            <div\n                                                data-testid='tax_residence_pop_over'\n                                                onClick={e => {\n                                                    setIsTaxResidencePopoverOpen(true);\n                                                    setIsTinPopoverOpen(false);\n                                                    e.stopPropagation();\n                                                }}\n                                            >\n                                                <Popover\n                                                    alignment={isDesktop() ? 'right' : 'left'}\n                                                    icon='info'\n                                                    message={localize(\n                                                        'The country in which you meet the criteria for paying taxes. Usually the country in which you physically reside.'\n                                                    )}\n                                                    zIndex={9998}\n                                                    disable_message_icon\n                                                    is_open={is_tax_residence_popover_open}\n                                                />\n                                            </div>\n                                        </div>\n                                    )}\n                                </Field>\n                            )}\n                            {'tax_identification_number' in values && (\n                                <div className='details-form__tax'>\n                                    <FormInputField\n                                        name='tax_identification_number'\n                                        label={\n                                            is_mf\n                                                ? localize('Tax Identification Number*')\n                                                : localize('Tax Identification Number')\n                                        }\n                                        placeholder={localize('Tax Identification Number')}\n                                        warn={warning_items?.tax_identification_number}\n                                        data-testid='tax_identification_number'\n                                        disabled={isFieldImmutable('tax_identification_number', editable_fields)}\n                                    />\n                                    <div\n                                        data-testid='tax_identification_number_pop_over'\n                                        onClick={e => {\n                                            setIsTaxResidencePopoverOpen(false);\n                                            setIsTinPopoverOpen(true);\n                                            if (e.target.tagName !== 'A') e.stopPropagation();\n                                        }}\n                                    >\n                                        <Popover\n                                            alignment={isDesktop() ? 'right' : 'left'}\n                                            icon='info'\n                                            is_open={is_tin_popover_open}\n                                            message={\n                                                <Localize\n                                                    i18n_default_text={\n                                                        \"Don't know your tax identification number? Click <0>here</0> to learn more.\"\n                                                    }\n                                                    components={[\n                                                        <a\n                                                            key={0}\n                                                            className='link link--red'\n                                                            rel='noopener noreferrer'\n                                                            target='_blank'\n                                                            href='https://www.oecd.org/tax/automatic-exchange/crs-implementation-and-assistance/tax-identification-numbers/'\n                                                        />,\n                                                    ]}\n                                                />\n                                            }\n                                            zIndex={9998}\n                                            disable_message_icon\n                                        />\n                                    </div>\n                                </div>\n                            )}\n                            {warning_items?.tax_identification_number && (\n                                <div className='details-form__tin-warn-divider' />\n                            )}\n                            {'employment_status' in values && (\n                                <fieldset className={classNames('account-form__fieldset', 'emp-status')}>\n                                    <DesktopWrapper>\n                                        <Dropdown\n                                            placeholder={\n                                                is_mf ? localize('Employment status*') : localize('Employment status')\n                                            }\n                                            is_align_text_left\n                                            name='employment_status'\n                                            list={getEmploymentStatusList()}\n                                            value={values.employment_status}\n                                            onChange={handleChange}\n                                            handleBlur={handleBlur}\n                                            error={touched.employment_status && errors.employment_status}\n                                            disabled={isFieldImmutable('employment_status', editable_fields)}\n                                        />\n                                    </DesktopWrapper>\n                                    <MobileWrapper>\n                                        <SelectNative\n                                            placeholder={localize('Please select')}\n                                            name='employment_status'\n                                            label={\n                                                is_mf ? localize('Employment status*') : localize('Employment status')\n                                            }\n                                            list_items={getEmploymentStatusList()}\n                                            value={values.employment_status}\n                                            error={touched.employment_status && errors.employment_status}\n                                            onChange={e => {\n                                                setFieldTouched('employment_status', true);\n                                                handleChange(e);\n                                            }}\n                                            disabled={isFieldImmutable('employment_status', editable_fields)}\n                                        />\n                                    </MobileWrapper>\n                                </fieldset>\n                            )}\n                            {'tax_identification_confirm' in values && (\n                                <Checkbox\n                                    name='tax_identification_confirm'\n                                    className='details-form__tin-confirm'\n                                    data-lpignore\n                                    onChange={() =>\n                                        setFieldValue(\n                                            'tax_identification_confirm',\n                                            !values.tax_identification_confirm,\n                                            true\n                                        )\n                                    }\n                                    value={values.tax_identification_confirm}\n                                    label={localize(\n                                        'I hereby confirm that the tax information I provided is true and complete. I will also inform {{legal_entity_name}} about any changes to this information.',\n                                        {\n                                            legal_entity_name: getLegalEntityName('maltainvest'),\n                                        }\n                                    )}\n                                    renderlabel={title => (\n                                        <Text size='xs' line_height='s'>\n                                            {title}\n                                        </Text>\n                                    )}\n                                    withTabIndex={0}\n                                    data-testid='tax_identification_confirm'\n                                />\n                            )}\n                        </React.Fragment>\n                    )}\n                    {'account_opening_reason' in values && (\n                        <React.Fragment>\n                            <FormSubHeader title={localize('Account opening reason')} />\n                            <Field name='account_opening_reason'>\n                                {({ field }) => (\n                                    <React.Fragment>\n                                        <DesktopWrapper>\n                                            <Dropdown\n                                                placeholder={\n                                                    is_mf\n                                                        ? localize('Account opening reason*')\n                                                        : localize('Account opening reason')\n                                                }\n                                                name={field.name}\n                                                disabled={isFieldImmutable('account_opening_reason', editable_fields)}\n                                                is_align_text_left\n                                                list={account_opening_reason_list}\n                                                value={values.account_opening_reason}\n                                                onChange={handleChange}\n                                                handleBlur={handleBlur}\n                                                error={touched.account_opening_reason && errors.account_opening_reason}\n                                                {...field}\n                                                list_portal_id='modal_root'\n                                                required\n                                            />\n                                        </DesktopWrapper>\n                                        <MobileWrapper>\n                                            <SelectNative\n                                                placeholder={localize('Please select')}\n                                                name={field.name}\n                                                label={\n                                                    is_mf\n                                                        ? localize('Account opening reason*')\n                                                        : localize('Account opening reason')\n                                                }\n                                                list_items={account_opening_reason_list}\n                                                value={values.account_opening_reason}\n                                                error={touched.account_opening_reason && errors.account_opening_reason}\n                                                onChange={e => {\n                                                    handleChange(e);\n                                                    setFieldValue('account_opening_reason', e.target.value, true);\n                                                }}\n                                                {...field}\n                                                required\n                                                data_testid='account_opening_reason_mobile'\n                                                disabled={isFieldImmutable('account_opening_reason', editable_fields)}\n                                            />\n                                        </MobileWrapper>\n                                    </React.Fragment>\n                                )}\n                            </Field>\n                        </React.Fragment>\n                    )}\n                </fieldset>\n            </FormBodySection>\n        </div>\n    );\n};\n\nexport default PersonalDetailsForm;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Div100vhContainer, Text } from '@deriv/components';\nimport { isDesktop } from '@deriv/shared';\n\ntype TIconMessageContent = {\n    className?: string;\n    full_width?: boolean;\n    icon: React.ReactElement;\n    message: React.ReactNode;\n    text?: string | React.ReactElement;\n};\n\nconst IconMessageContent = ({\n    children,\n    className,\n    full_width,\n    icon,\n    message,\n    text,\n}: React.PropsWithChildren<TIconMessageContent>) => (\n    <Div100vhContainer\n        className={classNames('account-management__message-wrapper', {\n            'account-management__message-wrapper-full-width': full_width,\n        })}\n        is_disabled={isDesktop()}\n        height_offset='110px'\n    >\n        <div\n            className={classNames('account-management__message-content', {\n                [`${className}__message-content`]: className,\n            })}\n        >\n            {icon && (\n                <div\n                    className={classNames('account-management__message-icon', {\n                        [`${className}__message-icon`]: className,\n                    })}\n                >\n                    {icon}\n                </div>\n            )}\n            <Text\n                as='div'\n                color='general'\n                weight='bold'\n                size='s'\n                align='center'\n                className={classNames('account-management__message', {\n                    [`${className}__message`]: className,\n                })}\n            >\n                {message}\n            </Text>\n            {text && (\n                <div className='account-management__text-container'>\n                    <Text\n                        className={classNames({\n                            [`${className}__text`]: className,\n                        })}\n                        as='p'\n                        size='xs'\n                        align='center'\n                    >\n                        {text}\n                    </Text>\n                </div>\n            )}\n            {children}\n        </div>\n    </Div100vhContainer>\n);\n\nexport default IconMessageContent;\n","import IconMessageContent from './icon-message-content';\n\nexport default IconMessageContent;\n","import InlineNoteWithIcon from './inline-note-with-icon';\nimport './inline-note-with-icon.scss';\n\nexport default InlineNoteWithIcon;\n","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\n\ntype TInlineNoteWithIconExtend = {\n    icon?: string;\n    font_size?: string;\n    message: React.ReactNode;\n    title?: string;\n};\n\nconst InlineNoteWithIcon = ({ icon, message, font_size = 'xxxs', title }: TInlineNoteWithIconExtend) => {\n    return (\n        <div className='da-inline-note-with-icon'>\n            {icon && (\n                <div>\n                    <Icon icon={icon} size={16} />\n                </div>\n            )}\n            <Text as='p' size={font_size} line_height='s'>\n                {title && <strong>{title}: </strong>}\n                {message}\n            </Text>\n        </div>\n    );\n};\n\nexport default InlineNoteWithIcon;\n","import React from 'react';\nimport { useHistory, withRouter } from 'react-router-dom';\nimport { FormikConsumer } from 'formik';\nimport { Button, Icon, Modal } from '@deriv/components';\nimport { isMobile, PlatformContext } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport IconMessageContent from 'Components/icon-message-content';\n\ntype TLeaveConfirmMessage = {\n    back: () => void;\n    leave: () => void;\n};\n\ntype TTransitionBlocker = {\n    dirty: boolean;\n    onDirty: (prop: boolean) => void;\n};\n\nconst LeaveConfirmMessage = ({ back, leave }: TLeaveConfirmMessage) => {\n    const { is_appstore } = React.useContext(PlatformContext);\n\n    return (\n        <IconMessageContent\n            className='leave-confirm'\n            message={localize('Unsaved changes')}\n            text={localize('You have unsaved changes. Are you sure you want to discard changes and leave this page?')}\n            icon={\n                <Icon\n                    icon={is_appstore ? 'IcUnsavedChangesDashboard' : 'IcUnsavedChanges'}\n                    size={isMobile() ? 93 : 128}\n                    data_testid='unsaved_changes_icon'\n                />\n            }\n        >\n            <div className='account-management-flex-wrapper account-management-leave-confirm'>\n                <Button\n                    type='button'\n                    has_effect\n                    onClick={back}\n                    text={localize('Cancel')}\n                    secondary\n                    {...(isMobile() ? { large: true } : {})}\n                />\n                <Button\n                    type='button'\n                    has_effect\n                    onClick={leave}\n                    text={localize('Leave Settings')}\n                    primary\n                    {...(isMobile() ? { large: true } : {})}\n                />\n            </div>\n        </IconMessageContent>\n    );\n};\n/**\n * Blocks routing if Formik form is dirty\n * Has to be a child of <Formik> for FormikConsumer to work\n */\nexport const TransitionBlocker = ({ dirty, onDirty }: TTransitionBlocker) => {\n    const [show, setShow] = React.useState(false);\n    const [next_location, setNextLocation] = React.useState<{ pathname: string } | null>(null);\n    const history = useHistory();\n\n    React.useEffect(() => {\n        return () => unblock();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const unblock = history.block((location: { pathname: string }) => {\n        if (dirty) {\n            if (onDirty) onDirty(false);\n\n            if (show) leave();\n\n            setShow(true);\n            setNextLocation(location);\n        }\n        return !dirty;\n    });\n\n    const leave = () => {\n        if (next_location?.pathname) {\n            const { pathname } = next_location;\n            unblock();\n            history.push(pathname);\n        } else history.push(null);\n    };\n\n    const back = () => {\n        setNextLocation(null);\n        setShow(false);\n        if (onDirty) onDirty(true);\n    };\n\n    return (\n        <>\n            {show && isMobile() ? (\n                <LeaveConfirmMessage back={back} leave={leave} />\n            ) : (\n                <Modal is_open={show} small toggleModal={back}>\n                    <Modal.Body>\n                        <LeaveConfirmMessage back={back} leave={leave} />\n                    </Modal.Body>\n                </Modal>\n            )}\n        </>\n    );\n};\nexport const TransitionBlockerWithRouter = withRouter(TransitionBlocker);\n\nconst LeaveConfirm = ({ onDirty }: { onDirty: (prop: boolean) => void }) => (\n    <FormikConsumer>\n        {formik => <TransitionBlockerWithRouter onDirty={onDirty} dirty={formik.dirty && formik.submitCount === 0} />}\n    </FormikConsumer>\n);\n\nexport default LeaveConfirm;\n","import LeaveConfirm from './leave-confirm';\n\nexport default LeaveConfirm;\n","import React from 'react';\nimport { Icon } from '@deriv/components';\nimport IconMessageContent from 'Components/icon-message-content';\n\ntype TLoadErrorMessage = {\n    error_message: React.ReactNode;\n};\n\nconst LoadErrorMessage = ({ error_message }: TLoadErrorMessage) => (\n    <IconMessageContent message={error_message} icon={<Icon icon='IcPoaLock' size={128} />} />\n);\n\nexport default LoadErrorMessage;\n","import LoadErrorMessage from './load-error-message';\n\nexport default LoadErrorMessage;\n","import { ButtonLink, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport React from 'react';\n\nexport const ContinueTradingButton = () => (\n    <ButtonLink className='account-management__button' to='/'>\n        <Text className='dc-btn__text' as='p' weight='bold' data-testid='continue_btn_text'>\n            {localize('Continue trading')}\n        </Text>\n    </ButtonLink>\n);\n","import { PoaButton } from './poa-button';\n\nexport default PoaButton;\n","import React from 'react';\nimport { ButtonLink, Text } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\ntype TPoaButton = {\n    custom_text?: string;\n};\n\nexport const PoaButton = ({ custom_text = localize('Submit proof of address') }: TPoaButton) => (\n    <ButtonLink className='account-management__button' to={routes.proof_of_address}>\n        <Text className='dc-btn__text' as='p' weight='bold' data-testid='poa_button_text'>\n            {custom_text}\n        </Text>\n    </ButtonLink>\n);\n","import { Expired as PoaExpired } from './expired';\n\nexport default PoaExpired;\n","import { Button, Icon, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport React from 'react';\nimport IconMessageContent from 'Components/icon-message-content';\n\ntype TExpired = {\n    onClick: () => void;\n};\n\nexport const Expired = ({ onClick }: TExpired) => (\n    <IconMessageContent\n        message={localize('New proof of address is needed')}\n        text={localize('Your documents for proof of address is expired. Please submit again.')}\n        icon={<Icon icon='IcPoaUpload' size={128} />}\n    >\n        <Button onClick={onClick} has_effect primary>\n            <Text className='dc-btn__text' size='xs' weight='bold' as='p'>\n                {localize('Resubmit')}\n            </Text>\n        </Button>\n    </IconMessageContent>\n);\n","import { NeedsReview as PoaNeedsReview } from './needs-review';\n\nexport default PoaNeedsReview;\n","import { Icon, Text } from '@deriv/components';\n\nimport { ContinueTradingButton } from 'Components/poa/continue-trading-button/continue-trading-button';\nimport IconMessageContent from 'Components/icon-message-content';\nimport PoiButton from 'Components/poi/poi-button';\nimport React from 'react';\nimport { TPoaStatusProps } from 'Types';\nimport { localize } from '@deriv/translations';\nimport { isNavigationFromP2P, isNavigationFromDerivGO } from '@deriv/shared';\n\nexport const NeedsReview = ({ needs_poi, redirect_button }: TPoaStatusProps) => {\n    const message = localize('Your proof of address was submitted successfully');\n    const is_redirected_from_platform = isNavigationFromP2P() || isNavigationFromDerivGO();\n    if (!needs_poi) {\n        return (\n            <IconMessageContent\n                message={message}\n                text={localize('Your document is being reviewed, please check back in 1-3 days.')}\n                icon={<Icon icon='IcPoaVerified' size={128} />}\n            >\n                {redirect_button || (!is_redirected_from_platform && <ContinueTradingButton />)}\n            </IconMessageContent>\n        );\n    }\n    return (\n        <IconMessageContent message={message} icon={<Icon icon='IcPoaVerified' size={128} />}>\n            <div className='account-management__text-container'>\n                <Text align='center' size='xs' as='p'>\n                    {localize('Your document is being reviewed, please check back in 1-3 days.')}\n                </Text>\n                <Text align='center' size='xs' as='p'>\n                    {localize('You must also submit a proof of identity.')}\n                </Text>\n            </div>\n            <PoiButton />\n        </IconMessageContent>\n    );\n};\n","import { poa_status_codes } from './status-codes';\n\nexport default poa_status_codes;\n","type TPoaStatusCodes = Readonly<Record<'none' | 'pending' | 'rejected' | 'verified' | 'expired' | 'suspected', string>>;\n\nexport const poa_status_codes: TPoaStatusCodes = {\n    none: 'none',\n    pending: 'pending',\n    rejected: 'rejected',\n    verified: 'verified',\n    expired: 'expired',\n    suspected: 'suspected',\n};\n","import { Submitted as PoaSubmitted } from './submitted';\n\nexport default PoaSubmitted;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Icon, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { PlatformContext, isNavigationFromP2P, isNavigationFromDerivGO } from '@deriv/shared';\nimport { TPoaStatusProps } from 'Types';\nimport { ContinueTradingButton } from 'Components/poa/continue-trading-button/continue-trading-button';\nimport PoiButton from 'Components/poi/poi-button';\nimport IconMessageContent from 'Components/icon-message-content';\n\nexport const Submitted = ({ needs_poi, redirect_button }: TPoaStatusProps) => {\n    const { is_appstore } = React.useContext(PlatformContext);\n    const message = localize('Your documents were submitted successfully');\n    const is_redirected_from_platform = isNavigationFromP2P() || isNavigationFromDerivGO();\n    if (needs_poi) {\n        return (\n            <div\n                className={classNames('account-management__container', {\n                    'account-management__container-dashboard': is_appstore,\n                })}\n            >\n                <IconMessageContent\n                    message={message}\n                    icon={<Icon icon='IcPoaVerified' size={128} />}\n                    full_width={is_appstore}\n                >\n                    <div className='account-management__text-container'>\n                        <Text align='center' size='xs' as='p'>\n                            {localize('We’ll review your documents and notify you of its status within 1 to 3 days.')}\n                        </Text>\n                        <Text align='center' size='xs' as='p'>\n                            {localize('You must also submit a proof of identity.')}\n                        </Text>\n                    </div>\n                    <PoiButton />\n                </IconMessageContent>\n            </div>\n        );\n    }\n    return (\n        <div\n            className={classNames('account-management__container', {\n                'account-management__container-dashboard': is_appstore,\n            })}\n        >\n            <IconMessageContent\n                message={message}\n                text={localize('We’ll review your documents and notify you of its status within 1 to 3 days.')}\n                icon={<Icon icon='IcPoaVerified' size={128} />}\n                full_width={is_appstore}\n            >\n                {redirect_button || (!is_redirected_from_platform && <ContinueTradingButton />)}\n            </IconMessageContent>\n        </div>\n    );\n};\n","import { Unverified as PoaUnverified } from './unverified';\n\nexport default PoaUnverified;\n","import React from 'react';\nimport { PlatformContext } from '@deriv/shared';\nimport { Button, Icon, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport IconMessageContent from 'Components/icon-message-content';\n\ntype TUnverified = {\n    onClick: () => void;\n};\n\nexport const Unverified = ({ onClick }: TUnverified) => {\n    const { is_appstore } = React.useContext(PlatformContext);\n\n    return (\n        <IconMessageContent\n            message={localize('We could not verify your proof of address')}\n            text={localize('Please check your email for details.')}\n            icon={<Icon icon={is_appstore ? 'IcPoaErrorDashboard' : 'IcPoaError'} size={128} />}\n        >\n            <Button onClick={onClick} has_effect primary>\n                <Text className='dc-btn__text' size='xs' weight='bold' as='p'>\n                    {localize('Resubmit')}\n                </Text>\n            </Button>\n        </IconMessageContent>\n    );\n};\n","import { TPoaStatusProps } from 'Types';\n\nimport { ContinueTradingButton } from 'Components/poa/continue-trading-button/continue-trading-button';\nimport { Icon } from '@deriv/components';\nimport IconMessageContent from 'Components/icon-message-content';\nimport { PlatformContext, isNavigationFromP2P, isNavigationFromDerivGO } from '@deriv/shared';\nimport { PoiButton } from 'Components/poi/poi-button/poi-button';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { localize } from '@deriv/translations';\n\nexport const Verified = ({ needs_poi, redirect_button }: TPoaStatusProps) => {\n    const { is_appstore } = React.useContext(PlatformContext);\n\n    const message = localize('Your proof of address is verified');\n    const is_redirected_from_platform = isNavigationFromP2P() || isNavigationFromDerivGO();\n    if (needs_poi) {\n        return (\n            <div\n                className={classNames('account-management__container', {\n                    'account-management__container-dashboard': is_appstore,\n                })}\n            >\n                <IconMessageContent\n                    message={message}\n                    text={localize('To continue trading, you must also submit a proof of identity.')}\n                    icon={<Icon icon='IcPoaVerified' size={128} />}\n                    className={classNames({ 'account-management-dashboard': is_appstore })}\n                >\n                    <PoiButton />\n                </IconMessageContent>\n            </div>\n        );\n    }\n    return (\n        <div\n            className={classNames('account-management__container', {\n                'account-management__container-dashboard': is_appstore,\n            })}\n        >\n            <IconMessageContent\n                message={message}\n                icon={<Icon icon='IcPoaVerified' size={128} />}\n                className={classNames({ 'account-management-dashboard': is_appstore })}\n            >\n                {redirect_button || (!is_redirected_from_platform && <ContinueTradingButton />)}\n            </IconMessageContent>\n        </div>\n    );\n};\n\nexport default Verified;\n","import { Verified as PoaVerified } from './verified';\n\nexport default PoaVerified;\n","import React from 'react';\nimport { PlatformContext } from '@deriv/shared';\nimport { ButtonLink, Icon, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport IconMessageContent from 'Components/icon-message-content';\n\ntype TGoToPersonalDetailsButton = {\n    has_invalid_postal_code?: boolean;\n    anchor?: string;\n    from?: string;\n    text?: string;\n};\n\nconst GoToPersonalDetailsButton = ({ anchor, from, text }: TGoToPersonalDetailsButton) => (\n    <ButtonLink to={`/account/personal-details${from ? `?from=${from}` : ''}${anchor ? `#${anchor}` : ''}`}>\n        <Text className='dc-btn__text' weight='bold' as='p'>\n            {text || localize('Go to personal details')}\n        </Text>\n    </ButtonLink>\n);\n\nexport const MissingPersonalDetails = ({ has_invalid_postal_code, from }: TGoToPersonalDetailsButton) => {\n    const { is_appstore } = React.useContext(PlatformContext);\n    if (has_invalid_postal_code)\n        return (\n            <IconMessageContent\n                message={localize('Your postal code is invalid')}\n                text={localize('Please check and update your postal code before submitting proof of identity.')}\n                icon={<Icon icon='IcAccountMissingDetails' size={128} />}\n            >\n                <GoToPersonalDetailsButton\n                    anchor='address_postcode'\n                    from={from}\n                    text={localize('Update postal code')}\n                />\n            </IconMessageContent>\n        );\n    return (\n        <IconMessageContent\n            message={localize('Your personal details are missing')}\n            text={localize('Please complete your personal details before you verify your identity.')}\n            icon={\n                <Icon icon={is_appstore ? 'IcAccountMissingDetailsDashboard' : 'IcAccountMissingDetails'} size={128} />\n            }\n        >\n            <GoToPersonalDetailsButton from={from} />\n        </IconMessageContent>\n    );\n};\n","import { MissingPersonalDetails } from './missing-personal-details';\n\nexport default MissingPersonalDetails;\n","import { PoiButton } from './poi-button';\n\nexport default PoiButton;\n","import { ButtonLink, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport React from 'react';\n\nexport const PoiButton = () => (\n    <ButtonLink className='account-management__button' to='/account/proof-of-identity'>\n        <Text className='dc-btn__text' weight='bold' as='p'>\n            {localize('Proof of identity')}\n        </Text>\n    </ButtonLink>\n);\n","import React from 'react';\nimport { Button, Icon } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport IconMessageContent from 'Components/icon-message-content';\n\ntype TExpired = {\n    handleRequireSubmission: () => void;\n    is_from_external: boolean;\n    redirect_button: React.ReactElement;\n};\n\nconst Expired = ({ handleRequireSubmission, is_from_external, redirect_button }: TExpired) => {\n    return (\n        <IconMessageContent\n            message={localize('New proof of identity document needed')}\n            icon={<Icon icon='IcPoiUpload' size={128} />}\n        >\n            <Button\n                type='button'\n                className='account-management__continue'\n                onClick={handleRequireSubmission}\n                large\n                text={localize('Upload Document')}\n                primary\n            />\n            {!is_from_external && redirect_button}\n        </IconMessageContent>\n    );\n};\n\nexport default Expired;\n","import Expired from './expired';\n\nexport default Expired;\n","import { POILimited } from './limited';\n\nexport default POILimited;\n","import React from 'react';\nimport { Icon } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport IconMessageContent from 'Components/icon-message-content';\n\nexport const POILimited = () => (\n    <IconMessageContent\n        message={localize(\"You've reached the limit for uploading your documents.\")}\n        text={\n            <Localize\n                i18n_default_text='Please contact us via <0>live chat</0>.'\n                components={[\n                    <span key={0} className='link link--orange' onClick={() => window.LC_API.open_chat_window()} />,\n                ]}\n            />\n        }\n        icon={<Icon icon='IcPoiFailed' size={128} />}\n    />\n);\n","import React from 'react';\nimport { Icon } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport IconMessageContent from 'Components/icon-message-content';\n\ntype TUnsupportedFailed = {\n    error?: string;\n};\n\nconst UnsupportedFailed = ({ error }: TUnsupportedFailed) => (\n    <IconMessageContent\n        message={localize('Proof of identity documents upload failed')}\n        text={error}\n        icon={<Icon icon='IcPoiFailed' size={128} />}\n        className='account-management-dashboard'\n    />\n);\n\nexport default UnsupportedFailed;\n","import UnsupportedFailed from './unsupported-failed';\n\nexport default UnsupportedFailed;\n","import DocumentUploader from '@binary-com/binary-document-uploader';\nimport { localize } from '@deriv/translations';\nimport { compressImageFiles, readFiles, DOCUMENT_TYPE, PAGE_TYPE } from '@deriv/shared';\nimport { TFile } from 'Types';\n\ntype TDocumentSettings = {\n    documentType: keyof typeof DOCUMENT_TYPE;\n    pageType: keyof typeof PAGE_TYPE;\n    expirationDate: string;\n    documentId: string;\n    lifetimeValid: boolean;\n};\n\ntype TProcessedFile = TFile & TDocumentSettings & { message: string };\n\nconst fileReadErrorMessage = (filename: string) => {\n    return localize('Unable to read file {{name}}', { name: filename });\n};\n\nconst uploadFile = (file: File, getSocket: () => WebSocket, settings: TDocumentSettings) => {\n    return new Promise((resolve, reject) => {\n        if (!file) {\n            reject();\n        }\n\n        // File uploader instance connected to binary_socket\n        const uploader = new DocumentUploader({ connection: getSocket() });\n\n        let is_file_error = false;\n\n        compressImageFiles([file])\n            .then((files_to_process: File[]) => {\n                readFiles(files_to_process, fileReadErrorMessage, settings)\n                    .then((processed_files: TProcessedFile[]) => {\n                        processed_files.forEach((item: TProcessedFile) => {\n                            if (item.message) {\n                                is_file_error = true;\n                                reject(item);\n                            }\n                        });\n                        const total_to_upload = processed_files.length;\n                        if (is_file_error || !total_to_upload) {\n                            return; // don't start submitting files until all front-end validation checks pass\n                        }\n\n                        // send files\n                        uploader.upload(processed_files[0]).then(resolve).catch(reject);\n                    })\n                    /* eslint-disable no-console */\n                    .catch(error => console.error('error: ', error));\n            })\n            /* eslint-disable no-console */\n            .catch(error => console.error('error: ', error));\n    });\n};\n\nexport default uploadFile;\n","import { localize } from '@deriv/translations';\nimport { FormikValues } from 'formik';\n\nexport const ROOT_CLASS = 'manual-poi-details';\n\nexport const DOCUMENT_TYPES = {\n    NATIONAL_IDENTITY_CARD: 'national_identity_card',\n    NIMC_SLIP: 'nimc_slip',\n    PASSPORT: 'passport',\n    DRIVING_LICENCE: 'driving_licence',\n    BIRTH_CERTIFICATE: 'birth_certificate',\n    SELFIE_WITH_ID: 'selfie_with_id',\n    OTHER: 'other',\n};\n\nconst PAGE_TYPE = {\n    FRONT: 'front',\n    BACK: 'back',\n    PHOTO: 'photo',\n};\n\nexport const SELFIE_DOCUMENT = {\n    document_type: DOCUMENT_TYPES.SELFIE_WITH_ID,\n    pageType: PAGE_TYPE.PHOTO,\n    name: 'selfie_with_id',\n    icon: 'IcSelfie',\n    info: localize('Upload your selfie.'),\n};\n\nconst date_field = {\n    name: 'expiry_date',\n    label: localize('Expiry date'),\n    type: 'date',\n    required: true,\n};\n\nexport const getDocumentIndex = ({ country_code }: FormikValues) => [\n    {\n        onfido_name: 'Passport',\n        card: {\n            title: localize('Passport'),\n            description: localize('Upload the page that contains your photo.'),\n            icon: 'IcPoiPassport',\n        },\n        details: {\n            fields: [\n                {\n                    name: 'document_id',\n                    label: localize('Passport number'),\n                    type: 'text',\n                    required: true,\n                },\n                { ...date_field },\n            ],\n            documents_title: localize('Next, upload the page of your passport that contains your photo.'),\n            documents: [\n                {\n                    document_type: DOCUMENT_TYPES.PASSPORT,\n                    pageType: PAGE_TYPE.FRONT,\n                    name: 'passport',\n                    icon: 'IcPassport',\n                    info: localize('Upload the page of your passport that contains your photo.'),\n                },\n            ],\n        },\n    },\n    {\n        onfido_name: 'Driving Licence',\n        card: {\n            title: localize('Driving licence'),\n            description: localize('Upload the front and back of your driving licence.'),\n            icon: 'IcPoiDrivingLicence',\n        },\n        details: {\n            fields_title: localize('First, enter your driving licence number and the expiry date.'),\n            fields: [\n                {\n                    name: 'document_id',\n                    label: localize('Driving licence number'),\n                    type: 'text',\n                    required: true,\n                },\n                { ...date_field },\n            ],\n            documents_title: localize('Next, upload the front and back of your driving licence.'),\n            documents: [\n                {\n                    document_type: DOCUMENT_TYPES.DRIVING_LICENCE,\n                    pageType: PAGE_TYPE.FRONT,\n                    name: 'driving_licence_front',\n                    icon: 'IcDrivingLicenceFront',\n                    info: localize('Upload the front of your driving licence.'),\n                },\n                {\n                    document_type: DOCUMENT_TYPES.DRIVING_LICENCE,\n                    pageType: PAGE_TYPE.BACK,\n                    name: 'driving_licence_back',\n                    icon: 'IcIdCardBack',\n                    info: localize('Upload the back of your driving licence.'),\n                },\n            ],\n        },\n    },\n    {\n        onfido_name: 'National Identity Card',\n        card: {\n            title: localize('Identity card'),\n            description: localize('Upload the front and back of your identity card.'),\n            icon: 'IcPoiIdentityCard',\n        },\n        details: {\n            fields_title: localize('First, enter your identity card number and the expiry date.'),\n            fields: [\n                {\n                    name: 'document_id',\n                    label: localize('Identity card number'),\n                    type: 'text',\n                    required: true,\n                },\n                { ...date_field },\n            ],\n            documents_title: localize('Next, upload the front and back of your identity card.'),\n            documents: [\n                {\n                    document_type: DOCUMENT_TYPES.NATIONAL_IDENTITY_CARD,\n                    pageType: PAGE_TYPE.FRONT,\n                    name: 'identity_card_front',\n                    icon: 'IcIdCardFront',\n                    info: localize('Upload the front of your identity card.'),\n                },\n                {\n                    document_type: DOCUMENT_TYPES.NATIONAL_IDENTITY_CARD,\n                    pageType: PAGE_TYPE.BACK,\n                    name: 'identity_card_back',\n                    icon: 'IcIdCardBack',\n                    info: localize('Upload the back of your identity card.'),\n                },\n            ],\n        },\n    },\n    ...(country_code === 'ng'\n        ? [\n              {\n                  card: {\n                      title: localize('NIMC slip and proof of age'),\n                      description: localize('Upload both of these documents to prove your identity.'),\n                      icon: 'IcPoiNimcSlip',\n                  },\n                  details: {\n                      fields: [\n                          {\n                              name: 'document_id',\n                              label: localize('NIMC slip number'),\n                              type: 'text',\n                              required: true,\n                          },\n                          { ...date_field, required: false },\n                      ],\n                      documents_title: localize('Next, upload both of the following documents.'),\n                      documents: [\n                          {\n                              document_type: DOCUMENT_TYPES.NIMC_SLIP,\n                              lifetime_valid: true,\n                              pageType: PAGE_TYPE.FRONT,\n                              name: 'nimc_slip',\n                              icon: 'IcPoiNimcSlipHorizontal',\n                              info: localize('Upload your NIMC slip.'),\n                          },\n                          {\n                              document_type: DOCUMENT_TYPES.BIRTH_CERTIFICATE,\n                              pageType: PAGE_TYPE.PHOTO,\n                              name: 'birth_certificate_front',\n                              icon: 'IcDop',\n                              info: localize(\n                                  'Upload your proof of age: birth certificate or age declaration document.'\n                              ),\n                          },\n                      ],\n                  },\n              },\n          ]\n        : []),\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, FormikValues } from 'formik';\nimport { DatePicker, Input } from '@deriv/components';\nimport { toMoment } from '@deriv/shared';\nimport { ROOT_CLASS } from '../constants';\n\nconst InputField = ({ data }: FormikValues) => {\n    const min_date = toMoment().add(6, 'months').format('YYYY-MM-DD');\n    switch (data.type) {\n        case 'text':\n            return (\n                <Field name={data.name}>\n                    {({ field, form: { errors, touched } }: FormikValues) => (\n                        <Input\n                            {...field}\n                            className={`${ROOT_CLASS}__field`}\n                            type='text'\n                            label={`${data.label}${data.required ? '*' : ''}`}\n                            error={touched[field.name] && errors[field.name]}\n                        />\n                    )}\n                </Field>\n            );\n        case 'date':\n            return (\n                <Field name={data.name}>\n                    {({ field, form: { errors, touched } }: FormikValues) => (\n                        <DatePicker\n                            {...field}\n                            className={`${ROOT_CLASS}__field`}\n                            date_format='YYYY-MM-DD'\n                            display_format='DD-MM-YYYY'\n                            start_date={min_date}\n                            min_date={min_date}\n                            should_show_today={false}\n                            name={data.name}\n                            label={`${data.label}${data.required ? '*' : ''}`}\n                            error={touched[field.name] && errors[field.name]}\n                            readOnly\n                        />\n                    )}\n                </Field>\n            );\n        default:\n            return null;\n    }\n};\n\nInputField.propTypes = {\n    data: PropTypes.object,\n};\n\nexport default InputField;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Field, FieldProps, FormikProps, FormikValues } from 'formik';\nimport { localize } from '@deriv/translations';\nimport { isMobile, supported_filetypes, max_document_size } from '@deriv/shared';\nimport { Button, Icon, Text, FileDropzone } from '@deriv/components';\nimport { ROOT_CLASS } from '../constants';\n\nconst DROPZONE_ERRORS = {\n    'file-too-large': localize('File size should be 8MB or less'),\n    'file-invalid-type': localize('File uploaded is not supported'),\n    'too-many-files': localize('Please select one file only'),\n    GENERAL: localize('Sorry, an error occured. Please select another file.'),\n};\ntype TDROPZONE_ERRORS = Readonly<typeof DROPZONE_ERRORS>;\n\ntype TUploader = {\n    data: FormikValues;\n    value: FormikValues;\n    is_full: boolean;\n    has_frame: boolean;\n    onChange: (e: unknown) => void;\n    setFieldValue: FormikProps<FormikValues>['setFieldValue'];\n    handleChange: (file: object | null, setFieldValue: FormikProps<FormikValues>['setFieldValue']) => void;\n};\n\ntype TMessage = {\n    data?: FormikValues;\n    open?: () => void;\n};\n\ntype THandleRejectFiles = Array<{\n    file: File;\n    errors: [\n        {\n            message: string;\n            code: string;\n        }\n    ];\n}>;\n\nconst Message = ({ data, open }: TMessage) => (\n    <div className={`${ROOT_CLASS}__uploader-details`}>\n        <Icon className={`${ROOT_CLASS}__uploader-icon`} icon={data?.icon} size={236} />\n        <Text as='p' size='xs' color='general' align='center'>\n            {data?.info}\n        </Text>\n        <Button\n            medium\n            secondary\n            text={isMobile() ? localize('Tap here to upload') : localize('Drop file or click here to upload')}\n            onClick={open}\n        />\n    </div>\n);\n\nconst Preview = ({ data, setFieldValue, value, has_frame, handleChange }: Partial<TUploader>) => {\n    const [background_url, setBackgroundUrl] = React.useState('');\n\n    React.useEffect(() => {\n        setBackgroundUrl(value?.file ? URL.createObjectURL(value?.file) : '');\n    }, [value]);\n\n    return (\n        <div className={`${ROOT_CLASS}__uploader-details ${ROOT_CLASS}__uploader-details--preview`}>\n            <div\n                className={classNames(`${ROOT_CLASS}__uploader-image`, {\n                    [`${ROOT_CLASS}__uploader-image--has-frame`]: has_frame,\n                })}\n                style={{ backgroundImage: `url(${background_url})` }}\n            >\n                {has_frame && <Icon icon='IcPoiFrame' className={`${ROOT_CLASS}__uploader-frame`} />}\n                {(!background_url || value?.file.type.indexOf('pdf') !== -1) && (\n                    <React.Fragment>\n                        <Icon icon='IcCloudUpload' size={50} />\n                        <Text as='p' size='xs' color='general' align='center'>\n                            {value?.file.name}\n                        </Text>\n                    </React.Fragment>\n                )}\n                <Icon\n                    icon='IcCloseCircle'\n                    className={`${ROOT_CLASS}__uploader-remove`}\n                    onClick={() => {\n                        handleChange?.(null, setFieldValue);\n                    }}\n                    size={16}\n                />\n            </div>\n            <Text as='p' size='xs' color='general' align='center'>\n                {data?.info}\n            </Text>\n        </div>\n    );\n};\n\nconst Uploader = ({ data, value, is_full, onChange, has_frame }: Partial<TUploader>) => {\n    const [image, setImage] = React.useState<FormikValues>();\n\n    React.useEffect(() => {\n        setImage(value);\n    }, [value]);\n\n    const handleChange = (file: object | null, setFieldValue: FormikProps<FormikValues>['setFieldValue']) => {\n        onChange?.(file);\n        setFieldValue?.(data?.name, file);\n    };\n\n    const handleAccept = (files: object[], setFieldValue: FormikProps<FormikValues>['setFieldValue']) => {\n        const file = { file: files[0], errors: [], ...data };\n        handleChange(file, setFieldValue);\n    };\n\n    const handleReject = (files: THandleRejectFiles, setFieldValue: FormikProps<FormikValues>['setFieldValue']) => {\n        const errors = files[0].errors?.map((error: { code: string }) =>\n            DROPZONE_ERRORS[error.code as keyof TDROPZONE_ERRORS]\n                ? DROPZONE_ERRORS[error.code as keyof TDROPZONE_ERRORS]\n                : DROPZONE_ERRORS.GENERAL\n        );\n        const file = { ...files[0], errors, ...data };\n        handleChange(file, setFieldValue);\n    };\n\n    const ValidationErrorMessage: React.ComponentProps<typeof FileDropzone>['validation_error_message'] = open => (\n        <div className={`${ROOT_CLASS}__uploader-details`}>\n            {image?.errors?.map((error: string, index: number) => (\n                <Text key={index} as='p' size='xs' color='secondary' align='center'>\n                    {error}\n                </Text>\n            ))}\n            <Button\n                medium\n                secondary\n                text={isMobile() ? localize('Tap here to upload') : localize('Drop file or click here to upload')}\n                onClick={open}\n            />\n        </div>\n    );\n\n    return (\n        <Field name={data?.name}>\n            {({ form: { setFieldValue } }: FieldProps) => (\n                <div\n                    className={classNames(`${ROOT_CLASS}__uploader`, {\n                        [`${ROOT_CLASS}__uploader--full`]: is_full,\n                    })}\n                >\n                    <FileDropzone\n                        accept={supported_filetypes}\n                        error_message={localize('Please upload supported file type.')}\n                        filename_limit={32}\n                        hover_message={localize('Drop files here..')}\n                        max_size={max_document_size}\n                        message={(open?: () => void) => <Message open={open} data={data} />}\n                        preview_single={\n                            image && (\n                                <Preview\n                                    data={data}\n                                    value={image}\n                                    has_frame={has_frame}\n                                    setFieldValue={setFieldValue}\n                                    handleChange={handleChange}\n                                />\n                            )\n                        }\n                        multiple={false}\n                        onDropAccepted={(files: object[]) => handleAccept(files, setFieldValue)}\n                        onDropRejected={(files: THandleRejectFiles) => handleReject(files, setFieldValue)}\n                        validation_error_message={value?.errors?.length ? ValidationErrorMessage : undefined}\n                        noClick\n                        value={(image ? [image] : []) as unknown as React.ComponentProps<typeof FileDropzone>['value']}\n                    />\n                </div>\n            )}\n        </Field>\n    );\n};\n\nexport default Uploader;\n","import { localize } from '@deriv/translations';\nimport { FormikErrors, FormikValues } from 'formik';\n\nexport const setInitialValues = (fields: FormikValues) => {\n    const values: FormikValues = {};\n    fields.forEach((field: FormikValues) => {\n        values[field.name] = '';\n    });\n    return values;\n};\n\nexport const checkIsEmpty = (value: string | unknown) => {\n    return typeof value === 'string' ? !value.trim() : !value;\n};\n\nexport const validateFields = (values: FormikValues, fields = [], documents = []) => {\n    const errors: FormikErrors<FormikValues> = {};\n\n    fields.forEach((field: { name: string; label: string; type: string; required: boolean }) => {\n        const { name, label, type } = field;\n        const value = values[name];\n\n        if (field.required && checkIsEmpty(value)) {\n            errors[name] = localize('{{label}} is required.', {\n                label,\n            });\n        } else if (type === 'text' && !/^[\\w\\s-]{0,30}$/g.test(value)) {\n            errors[name] = localize('Only letters, numbers, space, underscore, and hyphen are allowed for {{label}}.', {\n                label,\n            });\n        }\n    });\n\n    documents.forEach((document: { name: string; label: string }) => {\n        const { name, label } = document;\n        const value = values[name];\n\n        if (checkIsEmpty(value)) {\n            errors[name] = localize('{{label}} is required.', {\n                label,\n            });\n        } else if (value.errors?.length) {\n            errors[name] = value.errors[0];\n        }\n    });\n\n    return errors;\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Formik, Form, FormikValues } from 'formik';\nimport { localize } from '@deriv/translations';\nimport { isMobile } from '@deriv/shared';\nimport { Button, Icon, Text } from '@deriv/components';\nimport InputField from './input-field';\nimport Uploader from './uploader';\nimport { setInitialValues, validateFields } from './utils';\nimport { ROOT_CLASS } from '../constants';\n\nconst icons = [\n    {\n        icon: 'IcPoiClearPhoto',\n        text: localize('A clear colour photo or scanned image'),\n    },\n    {\n        icon: 'IcPoiFileFormat',\n        text: localize('JPEG, JPG, PNG, PDF, or GIF'),\n    },\n    {\n        icon: 'IcPoiFileSize',\n        text: localize('Less than 8MB'),\n    },\n    {\n        icon: 'IcPoiDocExpiry',\n        text: localize('Must be valid for at least 6 months'),\n    },\n];\n\ntype TDocumentsUpload = {\n    initial_values?: FormikValues;\n    is_from_external?: boolean;\n    goToCards: () => void;\n    onSubmit: () => void;\n};\n\ntype TIconsItem = {\n    data: FormikValues;\n};\n\nconst IconsItem = ({ data }: TIconsItem) => (\n    <div className={`${ROOT_CLASS}__icons-item`}>\n        <Icon icon={data.icon} size={24} />\n        <Text as='p' size='xxxs' align='center'>\n            {data.text}\n        </Text>\n    </div>\n);\n\nconst DocumentsUpload = ({\n    initial_values,\n    is_from_external,\n    data,\n    goToCards,\n    onSubmit,\n}: TDocumentsUpload & TIconsItem) => {\n    const { fields, documents_title, documents } = data;\n\n    const fields_title = localize('First, enter your {{label}} and the expiry date.', {\n        label: fields?.[0].label,\n    });\n\n    return (\n        <div\n            className={classNames(ROOT_CLASS, {\n                [`${ROOT_CLASS}--mobile`]: isMobile(),\n            })}\n        >\n            <Formik\n                initialValues={initial_values || setInitialValues([...(fields || []), ...(documents || [])])}\n                validate={values => validateFields(values, fields, documents)}\n                onSubmit={onSubmit}\n            >\n                {({ values, isValid, touched }: FormikValues) => {\n                    const is_form_touched = Object.keys(touched).length > 0;\n                    const is_form_empty = Object.values(values).some(\n                        (field, key) => (field === null || field === '') && fields?.[key]?.required\n                    );\n\n                    return (\n                        <Form className={`${ROOT_CLASS}__form`}>\n                            <div className={`${ROOT_CLASS}__fields-content`}>\n                                <Text as='h3' size='s' color='prominent'>\n                                    {fields_title}\n                                </Text>\n                                <div className={`${ROOT_CLASS}__fields-wrap`}>\n                                    {fields?.map((field: FormikValues) => (\n                                        <InputField key={field.name} data={field} />\n                                    ))}\n                                </div>\n                                <div className={`${ROOT_CLASS}__divider`} />\n                                <Text as='h3' size='s' color='prominent'>\n                                    {documents_title}\n                                </Text>\n                                <div className={`${ROOT_CLASS}__uploaders-wrap`}>\n                                    {documents?.map((item: FormikValues) => (\n                                        <Uploader\n                                            key={item.name}\n                                            data={item}\n                                            value={values[item.name]}\n                                            is_full={documents.length === 1 || is_from_external}\n                                        />\n                                    ))}\n                                </div>\n                                <div className={`${ROOT_CLASS}__icons`}>\n                                    {icons.map(item => (\n                                        <IconsItem key={item.icon} data={item} />\n                                    ))}\n                                </div>\n                            </div>\n                            <div className={`${ROOT_CLASS}__btns`}>\n                                <Button\n                                    onClick={goToCards}\n                                    secondary\n                                    large\n                                    text={localize('Go back')}\n                                    icon={<Icon icon={'IcButtonBack'} size={16} />}\n                                />\n                                <Button\n                                    type='submit'\n                                    primary\n                                    large\n                                    is_disabled={!isValid || (!is_form_touched && is_form_empty)}\n                                    text={localize('Next')}\n                                />\n                            </div>\n                        </Form>\n                    );\n                }}\n            </Formik>\n        </div>\n    );\n};\n\nexport default DocumentsUpload;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Formik, Form, FormikProps, FormikValues } from 'formik';\nimport { localize } from '@deriv/translations';\nimport { isMobile } from '@deriv/shared';\nimport { Button, Icon, Text } from '@deriv/components';\nimport Uploader from './uploader';\nimport { setInitialValues, validateFields } from './utils';\nimport { ROOT_CLASS, SELFIE_DOCUMENT } from '../constants';\n\ntype TSelfieUpload = {\n    initial_values?: FormikValues;\n    goBack: () => void;\n    onConfirm: () => void;\n    onFileDrop: () => void;\n};\n\nconst SelfieUpload = ({ initial_values, goBack, onConfirm, onFileDrop }: TSelfieUpload) => {\n    return (\n        <div\n            className={classNames(ROOT_CLASS, {\n                [`${ROOT_CLASS}--mobile`]: isMobile(),\n            })}\n        >\n            <Formik\n                initialValues={initial_values || setInitialValues([SELFIE_DOCUMENT])}\n                validate={values => validateFields(values, undefined, [SELFIE_DOCUMENT])}\n                onSubmit={onConfirm}\n            >\n                {({ values, isValid, isSubmitting, touched }: Partial<FormikProps<FormikValues>>) => {\n                    let is_form_touched, is_form_empty;\n                    if (touched) {\n                        is_form_touched = Object.keys(touched).length > 0;\n                    }\n                    if (values) {\n                        is_form_empty = Object.values(values).some(field => field === null || field === '');\n                    }\n\n                    return (\n                        <Form className={`${ROOT_CLASS}__form`}>\n                            <div className={`${ROOT_CLASS}__fields-content`}>\n                                <Text as='h3' size='s' weight='bold' color='prominent'>\n                                    {localize('Upload your selfie')}\n                                </Text>\n                                <div className={`${ROOT_CLASS}__uploaders-wrap`}>\n                                    <Uploader\n                                        data={SELFIE_DOCUMENT}\n                                        value={values ? values[SELFIE_DOCUMENT.name] : ''}\n                                        is_full={true}\n                                        onChange={onFileDrop}\n                                        has_frame\n                                    />\n                                </div>\n                                <div className={`${ROOT_CLASS}__notice`}>\n                                    <Text as='p' size='xs' color='general'>\n                                        {localize(\n                                            'Before uploading, please ensure that you’re facing forward in the selfie, your face is within the frame, and your eyes are clearly visible even if you’re wearing glasses.'\n                                        )}\n                                    </Text>\n                                </div>\n                            </div>\n                            <div className={`${ROOT_CLASS}__btns`}>\n                                <Button\n                                    onClick={goBack}\n                                    secondary\n                                    large\n                                    text={localize('Go back')}\n                                    icon={<Icon icon={'IcButtonBack'} size={16} />}\n                                />\n                                <Button\n                                    type='submit'\n                                    primary\n                                    large\n                                    is_disabled={!isValid || isSubmitting || (!is_form_touched && is_form_empty)}\n                                    text={localize('Confirm and upload')}\n                                />\n                            </div>\n                        </Form>\n                    );\n                }}\n            </Formik>\n        </div>\n    );\n};\n\nexport default SelfieUpload;\n","import React from 'react';\nimport DocumentsUpload from './documents-upload';\nimport SelfieUpload from './selfie-upload';\nimport { SELFIE_DOCUMENT } from '../constants';\nimport './card-details.scss';\nimport { FormikValues } from 'formik';\n\ntype TCardDetails = {\n    data: FormikValues;\n    onComplete: (e: object) => void;\n    goToCards: () => void;\n    is_from_external?: boolean;\n    setIsCfdPoiCompleted?: (is_cfd_poi_completed: boolean) => void;\n};\n\nconst CardDetails = ({ data, goToCards, onComplete, is_from_external, setIsCfdPoiCompleted }: TCardDetails) => {\n    const [documents, setDocuments] = React.useState<FormikValues>();\n    const [selfie, setSelfie] = React.useState<FormikValues>();\n    const [is_selfie_upload, setIsSelfieUpload] = React.useState(false);\n\n    const onSubmitDocuments = (values?: FormikValues) => {\n        setDocuments(values);\n        setIsSelfieUpload(true);\n    };\n\n    const onConfirmDocuments = (values?: FormikValues) => {\n        onComplete({ ...documents, ...values });\n        setIsCfdPoiCompleted?.(true);\n    };\n\n    return (\n        <React.Fragment>\n            {!is_selfie_upload ? (\n                <DocumentsUpload\n                    initial_values={documents}\n                    is_from_external={is_from_external}\n                    data={data}\n                    goToCards={goToCards}\n                    onSubmit={onSubmitDocuments}\n                />\n            ) : (\n                <SelfieUpload\n                    initial_values={selfie}\n                    goBack={() => setIsSelfieUpload(false)}\n                    onConfirm={onConfirmDocuments}\n                    onFileDrop={(value?: string) => setSelfie({ [SELFIE_DOCUMENT.name]: value })}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default CardDetails;\n","import CardDetails from './card-details';\n\nexport default CardDetails;\n","import React from 'react';\nimport { Loading, Icon, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { WS } from '@deriv/shared';\nimport { UploadComplete } from '../upload-complete/upload-complete';\nimport PoiUnsupportedFailed from 'Components/poi-unsupported-failed';\nimport uploadFile from 'Components/file-uploader-container/upload-file';\nimport OnfidoUpload from 'Sections/Verification/ProofOfIdentity/onfido-sdk-view-container';\n\nimport CardDetails from './card-details';\nimport { SELFIE_DOCUMENT } from './constants';\nimport { FormikValues } from 'formik';\n\nconst STATUS = {\n    IS_UPLOADING: 'IS_UPLOADING',\n    IS_COMPLETED: 'IS_COMPLETED',\n    IS_FAILED: 'IS_FAILED',\n};\n\ntype TDetailComponent = {\n    document: {\n        onfido_name?: string;\n        card: {\n            title: string;\n            description: string;\n            icon: string;\n        };\n        details: {\n            fields: {\n                name: string;\n                label: string;\n                type: string;\n                required: boolean;\n            }[];\n            documents_title: string;\n            documents: object[];\n        };\n    };\n    onClickBack: () => void;\n    root_class: string;\n    country_code_key?: string;\n    height?: string | number;\n    handleComplete?: () => void;\n    is_onfido_supported?: boolean;\n    is_from_external?: boolean;\n    setIsCfdPoiCompleted?: () => void;\n    is_mt5?: boolean;\n    handlePOIforMT5Complete?: () => void;\n};\n\nconst DetailComponent = ({\n    document,\n    onClickBack,\n    root_class,\n    country_code_key,\n    height,\n    handleComplete,\n    is_onfido_supported,\n    is_from_external,\n    setIsCfdPoiCompleted,\n    is_mt5,\n    handlePOIforMT5Complete,\n    ...props\n}: TDetailComponent) => {\n    const [status, setStatus] = React.useState('');\n    const [response_error, setError] = React.useState('');\n\n    let is_any_failed = false;\n\n    const uploadFiles = (data: FormikValues) =>\n        new Promise((resolve, reject) => {\n            const docs = document.details.documents.map((item: FormikValues) => item.name);\n            const files = Object.values(data).filter(item => [...docs, SELFIE_DOCUMENT.name].includes(item.name));\n            const files_length = files.length;\n            let file_to_upload_index = 0;\n            const results: object[] = [];\n            const uploadNext = () => {\n                const item = files[file_to_upload_index];\n                const { file, document_type, pageType, lifetime_valid } = item;\n                const expiration_date =\n                    typeof data.expiry_date?.format === 'function' ? data.expiry_date.format('YYYY-MM-DD') : undefined;\n                uploadFile(file, WS.getSocket, {\n                    documentType: document_type,\n                    pageType,\n                    expirationDate: expiration_date,\n                    documentId: data.document_id || '',\n                    lifetimeValid: +(lifetime_valid && !expiration_date),\n                })\n                    .then(response => {\n                        file_to_upload_index += 1;\n                        if (response.warning || response.error) {\n                            is_any_failed = true;\n                            setStatus(STATUS.IS_FAILED);\n                            setError(\n                                response.message || (response.error ? response.error.message : localize('Failed'))\n                            );\n                            if (file_to_upload_index < files_length) {\n                                uploadNext();\n                            }\n                        } else if (file_to_upload_index < files_length) {\n                            results.push(response);\n                            uploadNext();\n                        } else {\n                            resolve(results);\n                        }\n                    })\n                    .catch(error => {\n                        reject(error);\n                    });\n            };\n\n            uploadNext();\n        });\n\n    const onComplete = (values: FormikValues) => {\n        setStatus(STATUS.IS_UPLOADING);\n        uploadFiles(values)\n            .then(() => {\n                if (!is_any_failed) {\n                    if (is_mt5) {\n                        handlePOIforMT5Complete?.();\n                    } else {\n                        setStatus(STATUS.IS_COMPLETED);\n                    }\n                }\n            })\n            .catch(error => {\n                setStatus(STATUS.IS_FAILED);\n                setError(error.message);\n            });\n    };\n\n    switch (status) {\n        case STATUS.IS_UPLOADING:\n            return <Loading is_fullscreen={false} is_slow_loading status={[localize('Uploading documents')]} />;\n        case STATUS.IS_COMPLETED:\n            return <UploadComplete is_from_external={true} needs_poa={false} is_manual_upload />;\n        case STATUS.IS_FAILED:\n            return <PoiUnsupportedFailed error={response_error} />;\n        default:\n            return (\n                <React.Fragment>\n                    {is_onfido_supported ? (\n                        <React.Fragment>\n                            <div className={`${root_class}__detail-header`} onClick={onClickBack}>\n                                <Icon icon='IcArrowLeftBold' />\n                                <Text\n                                    as='p'\n                                    size='xs'\n                                    weight='bold'\n                                    color='prominent'\n                                    className={`${root_class}__back-title`}\n                                >\n                                    {localize('Back')}\n                                </Text>\n                            </div>\n                            <OnfidoUpload\n                                country_code={country_code_key}\n                                documents_supported={[document.onfido_name]}\n                                height={height ?? null}\n                                handleComplete={is_mt5 ? handlePOIforMT5Complete : handleComplete}\n                                {...props}\n                            />\n                        </React.Fragment>\n                    ) : (\n                        <CardDetails\n                            data={document.details}\n                            onComplete={onComplete}\n                            goToCards={onClickBack}\n                            is_from_external={is_from_external}\n                            setIsCfdPoiCompleted={setIsCfdPoiCompleted}\n                        />\n                    )}\n                </React.Fragment>\n            );\n    }\n};\n\nexport default DetailComponent;\n","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { isMobile } from '@deriv/shared';\n\ntype TCardWithArrow = {\n    onClick: () => void;\n    title: string;\n    description: string;\n    icon: string;\n};\n\nconst CardWithArrow = ({ onClick, title, description, icon }: TCardWithArrow) => {\n    return (\n        <div className='manual-poi__card' onClick={onClick}>\n            <Icon className='manual-poi__card-icon' icon={icon} size={64} />\n            <div className='manual-poi__card-content'>\n                <Text as='p' size='xs' weight='bold' color='prominent'>\n                    {title}\n                </Text>\n                <Text as='p' size={isMobile() ? 'xxxs' : 'xxs'}>\n                    {description}\n                </Text>\n            </div>\n\n            <Icon icon='IcChevronRight' size={isMobile() ? 23 : 31} />\n        </div>\n    );\n};\n\nexport { CardWithArrow };\n","import React from 'react';\nimport { Card } from '@deriv/components';\nimport { CardWithArrow } from './card-with-arrow';\nimport { FormikValues } from 'formik';\n\ntype TDocument = {\n    toggleDetail: (index: number) => void;\n    documents: object[];\n};\n\nexport const Documents = ({ toggleDetail, documents }: TDocument) =>\n    documents.map((item: FormikValues, index: number) => (\n        <Card\n            style={{\n                margin: '1.6rem 0',\n                height: '11.2rem',\n            }}\n            key={index}\n            renderContent={() => <CardWithArrow onClick={() => toggleDetail(index)} {...item.card} />}\n        />\n    ));\n","import React from 'react';\nimport classNames from 'classnames';\nimport { localize } from '@deriv/translations';\nimport { Timeline } from '@deriv/components';\nimport { isMobile } from '@deriv/shared';\nimport { identity_status_codes } from 'Sections/Verification/ProofOfIdentity/proof-of-identity-utils';\nimport DetailComponent from './detail-component';\nimport { Documents } from './documents';\nimport { getDocumentIndex, DOCUMENT_TYPES } from './constants';\nimport UploadComplete from '../upload-complete';\nimport { FormikValues } from 'formik';\nimport Verified from 'Components/poi/status/verified';\nimport Limited from 'Components/poi/status/limited';\nimport Expired from 'Components/poi/status/expired';\n\nconst checkNimcStep = (documents: FormikValues) => {\n    let has_nimc = false;\n    documents.forEach((document: FormikValues) => {\n        if (document.document_type === DOCUMENT_TYPES.NIMC_SLIP) {\n            has_nimc = true;\n        }\n    });\n    return has_nimc;\n};\n\ntype TUnsupported = {\n    country_code: string;\n    handlePOIforMT5Complete: () => void;\n    manual: {\n        status: string;\n    };\n    redirect_button: React.ReactElement;\n    needs_poa: boolean;\n    handleRequireSubmission: () => void;\n    allow_poi_resubmission: boolean;\n};\n\nconst Unsupported = ({\n    country_code,\n    handlePOIforMT5Complete,\n    manual,\n    redirect_button,\n    needs_poa,\n    handleRequireSubmission,\n    allow_poi_resubmission,\n    ...props\n}: Partial<TUnsupported>) => {\n    const [detail, setDetail] = React.useState<number | null>(null);\n    const toggleDetail = (index: number) => setDetail(index);\n\n    const documents = getDocumentIndex({\n        country_code,\n    });\n\n    if (manual) {\n        if (manual.status === identity_status_codes.pending)\n            return <UploadComplete is_manual_upload needs_poa={needs_poa} redirect_button={redirect_button} />;\n        else if ([identity_status_codes.rejected, identity_status_codes.suspected].includes(manual.status)) {\n            if (!allow_poi_resubmission) return <Limited />;\n        } else if (manual.status === identity_status_codes.verified) {\n            return <Verified needs_poa={needs_poa} redirect_button={redirect_button} />;\n        } else if (manual.status === identity_status_codes.expired) {\n            return <Expired redirect_button={redirect_button} handleRequireSubmission={handleRequireSubmission} />;\n        }\n    }\n\n    if (detail !== null) {\n        return (\n            <DetailComponent\n                is_onfido_supported={country_code === 'ng' && !checkNimcStep(documents[detail].details.documents)}\n                country_code_key={country_code}\n                document={documents[detail]}\n                root_class='manual-poi'\n                onClickBack={() => setDetail(null)}\n                handlePOIforMT5Complete={handlePOIforMT5Complete}\n                {...props}\n            />\n        );\n    }\n\n    return (\n        <Timeline\n            className={classNames('manual-poi', {\n                'manual-poi--mobile': isMobile(),\n            })}\n            disabled_items={[2]}\n        >\n            <Timeline.Item item_title={localize('Please upload one of the following documents:')}>\n                <Documents documents={documents} toggleDetail={toggleDetail} />\n            </Timeline.Item>\n            <Timeline.Item item_title={localize('Upload your selfie')}>\n                <div />\n            </Timeline.Item>\n        </Timeline>\n    );\n};\nexport default Unsupported;\n","import Unsupported from './unsupported';\nimport './unsupported.scss';\n\nexport default Unsupported;\n","import { UploadComplete } from './upload-complete';\n\nexport default UploadComplete;\n","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { PlatformContext, isNavigationFromP2P, isNavigationFromDerivGO } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport PoaButton from 'Components/poa/poa-button';\nimport { ContinueTradingButton } from 'Components/poa/continue-trading-button/continue-trading-button';\nimport IconMessageContent from 'Components/icon-message-content';\nimport { TPlatformContext, TPOIStatus } from 'Types';\nimport classNames from 'classnames';\n\nexport const UploadComplete = ({\n    needs_poa,\n    redirect_button,\n    is_from_external,\n    is_manual_upload = false,\n}: TPOIStatus) => {\n    const { is_appstore } = React.useContext<TPlatformContext>(PlatformContext);\n    const message = localize('Your documents were submitted successfully');\n    const description = is_manual_upload\n        ? localize('We’ll review your documents and notify you of its status within 1 - 3 working days.')\n        : localize('We’ll review your documents and notify you of its status within 5 minutes.');\n\n    const is_redirected_from_platform = isNavigationFromP2P() || isNavigationFromDerivGO();\n\n    if (!needs_poa) {\n        return (\n            <IconMessageContent\n                message={message}\n                text={description}\n                icon={\n                    is_appstore ? (\n                        <Icon icon='IcPoiVerifiedDashboard' width={273} height={128} />\n                    ) : (\n                        <Icon icon='IcPoiVerified' size={128} />\n                    )\n                }\n                className={classNames({ 'account-management-dashboard': is_appstore })}\n            >\n                {!is_from_external && (redirect_button || (!is_redirected_from_platform && <ContinueTradingButton />))}\n            </IconMessageContent>\n        );\n    }\n    return (\n        <IconMessageContent\n            message={message}\n            icon={\n                is_appstore ? (\n                    <Icon icon='IcPoiVerifiedDashboard' width={273} height={128} />\n                ) : (\n                    <Icon icon='IcPoiVerified' size={128} />\n                )\n            }\n            className={classNames({ 'account-management-dashboard': is_appstore })}\n        >\n            <React.Fragment>\n                <div className='account-management__text-container'>\n                    <Text align='center' size='xs' as={is_appstore ? 'span' : 'p'}>\n                        {description}\n                    </Text>\n                    <Text align='center' size='xs' as={is_appstore ? 'span' : 'p'}>\n                        {localize('You must also submit a proof of address.')}\n                    </Text>\n                </div>\n                <PoaButton />\n            </React.Fragment>\n            {!is_from_external && redirect_button}\n        </IconMessageContent>\n    );\n};\n\nexport default UploadComplete;\n","import React from 'react';\nimport { Icon } from '@deriv/components';\nimport IconMessageContent from 'Components/icon-message-content';\nimport { TPlatformContext, TPOIStatus } from 'Types';\nimport { PlatformContext } from '@deriv/shared';\nimport PoaButton from 'Components/poa/poa-button';\nimport { localize } from '@deriv/translations';\n\nexport const Verified = ({ needs_poa, redirect_button, is_from_external }: TPOIStatus) => {\n    const { is_appstore } = React.useContext<TPlatformContext>(PlatformContext);\n    const message = localize('Your proof of identity is verified');\n\n    if (!needs_poa) {\n        return (\n            <IconMessageContent\n                message={message}\n                icon={\n                    is_appstore ? (\n                        <Icon\n                            icon='IcPoaVerifiedDashboard'\n                            height={128}\n                            width={237}\n                            data_testid='dt_IcPoaVerifiedDashboard'\n                        />\n                    ) : (\n                        <Icon icon='IcPoaVerified' size={128} data_testid='dt_IcPoaVerified' />\n                    )\n                }\n                className='account-management-dashboard'\n            >\n                {!is_from_external && redirect_button}\n            </IconMessageContent>\n        );\n    }\n    return (\n        <IconMessageContent\n            message={message}\n            icon={\n                is_appstore ? (\n                    <Icon icon='IcPoaVerifiedDashboard' height={128} width={237} />\n                ) : (\n                    <Icon icon='IcPoaVerified' size={128} />\n                )\n            }\n            className='account-management-dashboard'\n            text={localize('To continue trading, you must also submit a proof of address.')}\n        >\n            {!is_from_external && (\n                <React.Fragment>\n                    <PoaButton />\n                </React.Fragment>\n            )}\n        </IconMessageContent>\n    );\n};\n\nexport default Verified;\n","import { Verified } from './verified';\n\nexport default Verified;\n","import React, { ChangeEvent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik, Form, FormikValues, FormikErrors } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Dialog, Icon, PasswordInput, PasswordMeter, Text, FormSubmitButton } from '@deriv/components';\nimport { getErrorMessages, validPassword, validLength, WS, getCFDPlatformLabel } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport './reset-trading-password-modal.scss';\n\ntype TResetTradingPassword = {\n    setDialogTitleFunc?: (value: boolean) => void;\n    toggleResetTradingPasswordModal: (value: boolean) => void;\n    verification_code: string;\n    platform: 'dxtrade' | 'mt5' | 'derivez';\n};\n\nconst ResetTradingPassword = ({\n    setDialogTitleFunc,\n    toggleResetTradingPasswordModal,\n    verification_code,\n    platform,\n}: TResetTradingPassword) => {\n    const handleSubmit = (values: FormikValues, actions: FormikValues) => {\n        actions.setSubmitting(true);\n\n        const params = {\n            new_password: values.password,\n            verification_code,\n            platform,\n        };\n\n        WS.tradingPlatformPasswordReset(params).then(async (response: FormikValues) => {\n            if (response.error) {\n                actions.setStatus({ error_msg: response.error.message, error_code: response.error.code });\n                setDialogTitleFunc?.(true);\n            } else {\n                actions.resetForm({ password: '' });\n                actions.setStatus({ reset_complete: true });\n                WS.getAccountStatus();\n            }\n            actions.setSubmitting(false);\n        });\n    };\n\n    const validateReset = (values: FormikValues) => {\n        const errors: FormikErrors<FormikValues> = {};\n\n        if (\n            !validLength(values.password, {\n                min: 8,\n                max: 25,\n            })\n        ) {\n            errors.password = localize('You should enter {{min_number}}-{{max_number}} characters.', {\n                min_number: 8,\n                max_number: 25,\n            });\n        } else if (!validPassword(values.password)) {\n            errors.password = getErrorMessages().password();\n        }\n\n        return errors;\n    };\n\n    const reset_initial_values = { password: '' };\n\n    return (\n        <div className='reset-trading-password'>\n            <Formik\n                initialValues={reset_initial_values}\n                initialStatus={{ reset_complete: false, error_msg: '', error_code: '' }}\n                validate={validateReset}\n                onSubmit={handleSubmit}\n            >\n                {({ handleBlur, errors, values, touched, isSubmitting, setFieldTouched, handleChange, status }) => (\n                    <Form>\n                        <React.Fragment>\n                            {status.error_msg && (\n                                <div className='reset-trading-password__error'>\n                                    <Icon icon='IcMt5Expired' size={128} />\n                                    <Text\n                                        as='p'\n                                        size='xs'\n                                        weight='bold'\n                                        align='center'\n                                        className='reset-trading-password__lead'\n                                    >\n                                        {status.error_msg}\n                                    </Text>\n                                    {status.error_code === 'InvalidToken' && (\n                                        <Text\n                                            as='p'\n                                            color='prominent'\n                                            size='xs'\n                                            align='center'\n                                            className='reset-trading-password__description--is-centered'\n                                        >\n                                            <Localize i18n_default_text='Please request a new password and check your email for the new token.' />\n                                        </Text>\n                                    )}\n                                    <Button\n                                        className='reset-trading-password__confirm-button'\n                                        primary\n                                        large\n                                        onClick={() => toggleResetTradingPasswordModal(false)}\n                                    >\n                                        <Localize i18n_default_text='Ok' />\n                                    </Button>\n                                </div>\n                            )}\n                            {status.reset_complete && (\n                                <div className='reset-trading-password__password-success'>\n                                    <Icon\n                                        className='reset-trading-password__icon'\n                                        icon='IcSuccessResetTradingPassword'\n                                        size={128}\n                                    />\n                                    <Text as='p' weight='bold' className='reset-trading-password__heading'>\n                                        <Localize i18n_default_text='Success' />\n                                    </Text>\n                                    <Text align='center' as='p' size='xs' className='reset-trading-password__subtext'>\n                                        {localize(\n                                            'You have a new {{platform}} password to log in to your {{platform}} accounts on the web and mobile apps.',\n                                            {\n                                                platform: getCFDPlatformLabel(platform),\n                                            }\n                                        )}\n                                    </Text>\n                                    <Button\n                                        type='button'\n                                        onClick={() => toggleResetTradingPasswordModal(false)}\n                                        primary\n                                        large\n                                    >\n                                        <Localize i18n_default_text='Done' />\n                                    </Button>\n                                </div>\n                            )}\n                            {!status.error_msg && !status.reset_complete && (\n                                <div className='reset-trading-password__set-password'>\n                                    <Text as='p' weight='bold' className='reset-trading-password__heading'>\n                                        <Localize\n                                            i18n_default_text='Create a new {{platform}} password'\n                                            values={{\n                                                platform: getCFDPlatformLabel(platform),\n                                            }}\n                                        />\n                                    </Text>\n                                    <fieldset className='reset-trading-password__input-field'>\n                                        <PasswordMeter\n                                            input={values.password}\n                                            has_error={!!(touched.password && errors.password)}\n                                            custom_feedback_messages={getErrorMessages().password_warnings}\n                                        >\n                                            <PasswordInput\n                                                autoComplete='new-password'\n                                                className='reset-trading-password__password-field'\n                                                name='password'\n                                                label={localize('{{platform}} password', {\n                                                    platform: getCFDPlatformLabel(platform),\n                                                })}\n                                                onChange={(e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n                                                    setFieldTouched('password', true);\n                                                    handleChange(e);\n                                                }}\n                                                onBlur={handleBlur}\n                                                error={touched.password ? errors.password : ''}\n                                                value={values.password}\n                                                data-lpignore='true'\n                                                required\n                                            />\n                                        </PasswordMeter>\n                                    </fieldset>\n                                    <Text as='p' size='xs' className='reset-trading-password__hint'>\n                                        <Localize i18n_default_text='Strong passwords contain at least 8 characters that include uppercase and lowercase letters, numbers, and symbols.' />\n                                    </Text>\n                                    <FormSubmitButton\n                                        is_disabled={!values.password || !!errors.password || isSubmitting}\n                                        has_cancel\n                                        cancel_label={localize('Cancel')}\n                                        onCancel={() => toggleResetTradingPasswordModal(false)}\n                                        is_loading={isSubmitting}\n                                        label={localize('Create')}\n                                    />\n                                </div>\n                            )}\n                        </React.Fragment>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    );\n};\n\ntype TResetTradingPasswordModal = {\n    disableApp: () => void;\n    enableApp: () => void;\n    is_loading: boolean;\n    is_visible: boolean;\n} & TResetTradingPassword;\n\nexport const ResetTradingPasswordModal = ({\n    disableApp,\n    enableApp,\n    is_loading,\n    is_visible,\n    toggleResetTradingPasswordModal,\n    verification_code,\n    platform,\n}: TResetTradingPasswordModal) => {\n    const [dialog_title, setDialogTitle] = React.useState('');\n    const history = useHistory();\n    React.useEffect(() => {\n        if (is_visible && history.location.search !== '') {\n            history.replace({\n                search: '',\n                hash: location.hash,\n            });\n        }\n    }, [history, is_visible]);\n\n    const setDialogTitleFunc = (is_invalid_token: boolean) => {\n        setDialogTitle(\n            is_invalid_token\n                ? localize('Reset {{platform}} password', {\n                      platform: getCFDPlatformLabel(platform),\n                  })\n                : ''\n        );\n    };\n\n    return (\n        <Dialog\n            className='reset-trading-password__dialog'\n            disableApp={disableApp}\n            enableApp={enableApp}\n            has_close_icon={!!dialog_title}\n            is_loading={is_loading}\n            is_visible={is_visible}\n            onConfirm={() => toggleResetTradingPasswordModal(false)}\n            title={dialog_title}\n        >\n            <ResetTradingPassword\n                toggleResetTradingPasswordModal={toggleResetTradingPasswordModal}\n                verification_code={verification_code}\n                setDialogTitleFunc={setDialogTitleFunc}\n                platform={platform}\n            />\n        </Dialog>\n    );\n};\n\nResetTradingPasswordModal.propTypes = {\n    disableApp: PropTypes.func,\n    enableApp: PropTypes.func,\n    is_loading: PropTypes.bool,\n    is_visible: PropTypes.bool,\n    toggleResetTradingPasswordModal: PropTypes.func,\n    verification_code: PropTypes.string,\n    platform: PropTypes.string,\n};\n","import { ResetTradingPasswordModal } from './reset-trading-password-modal';\n\nexport default ResetTradingPasswordModal;\n","import React from 'react';\nimport { localize, Localize } from '@deriv/translations';\nimport { Div100vhContainer, Icon, MobileDialog, Modal, SendEmailTemplate, Text, Popover } from '@deriv/components';\nimport { getPlatformSettings, CFD_PLATFORMS, isMobile, isDesktop } from '@deriv/shared';\n\ntype TSentEmailModal = {\n    identifier_title: string;\n    is_modal_when_mobile?: boolean;\n    is_open: boolean;\n    has_live_chat?: boolean;\n    onClickSendEmail: () => void;\n    onClose: () => void;\n};\n\ntype TNoEmailContentItem = {\n    key: string;\n    icon: string;\n    content: string | React.ReactElement;\n};\n\n// TODO replace these types to real after implementing TS for livechat in core\ntype TWindowLiveChatWidget = Window & typeof globalThis & { LiveChatWidget?: { call: (param: string) => void } };\n\nconst getNoEmailContentStrings = (): TNoEmailContentItem[] => {\n    return [\n        {\n            key: 'email_spam',\n            icon: 'IcEmailSpam',\n            content: localize('The email is in your spam folder (Sometimes things get lost there).'),\n        },\n        {\n            key: 'wrong_email',\n            icon: 'IcEmail',\n            content: localize(\n                'You accidentally gave us another email address (Usually a work or a personal one instead of the one you meant).'\n            ),\n        },\n        {\n            key: 'wrong_typo',\n            icon: 'IcEmailTypo',\n            content: localize('The email address you entered had a mistake or typo (happens to the best of us).'),\n        },\n        {\n            key: 'email_firewall',\n            icon: 'IcEmailFirewall',\n            content: localize(\n                'We can’t deliver the email to this address (Usually because of firewalls or filtering).'\n            ),\n        },\n    ];\n};\n\nconst SentEmailModal = ({\n    identifier_title,\n    is_modal_when_mobile = false,\n    is_open,\n    has_live_chat = false,\n    onClickSendEmail,\n    onClose,\n}: TSentEmailModal) => {\n    const getSubtitle = () => {\n        let subtitle: string | React.ReactElement = '';\n        switch (identifier_title) {\n            case CFD_PLATFORMS.DXTRADE:\n                subtitle = (\n                    <Localize\n                        i18n_default_text='Please click on the link in the email to change your <0>{{platform_name_dxtrade}}</0> password.'\n                        components={[<span className='send-email-template__subtitle-platform' key={0} />]}\n                        values={{ platform_name_dxtrade: getPlatformSettings('dxtrade').name }}\n                    />\n                );\n                break;\n            case CFD_PLATFORMS.MT5:\n                subtitle = localize('Please click on the link in the email to change your Deriv MT5 password.');\n                break;\n            case 'Google':\n            case 'Facebook':\n                subtitle = localize(\n                    'Check your {{ identifier_title }} account email and click the link in the email to proceed.',\n                    { identifier_title }\n                );\n                break;\n            case 'Change_Email':\n                subtitle = localize('Check your email and click the link in the email to proceed.');\n                break;\n            default:\n                subtitle = localize('Please click on the link in the email to reset your password.');\n                break;\n        }\n        return subtitle;\n    };\n\n    const onLiveChatClick = () => {\n        onClose();\n\n        // TODO fix types after implementing TS for livechat in core\n        (window as TWindowLiveChatWidget).LiveChatWidget?.call('maximize');\n    };\n\n    const live_chat = has_live_chat ? (\n        <Localize\n            i18n_default_text=\"Still didn't get the email? Please contact us via <0>live chat.</0>\"\n            components={[\n                <span className='send-email-template__footer-live-chat' key={0} onClick={onLiveChatClick}>\n                    <Popover\n                        className='send-email-template__footer-live-chat__link'\n                        classNameBubble='help-centre__tooltip'\n                        alignment='top'\n                        message={localize('Live chat')}\n                        zIndex='9999'\n                    />\n                </span>,\n            ]}\n        />\n    ) : null;\n\n    const sent_email_template: React.ReactElement = (\n        <SendEmailTemplate\n            className='sent-email'\n            subtitle={getSubtitle()}\n            title={localize('We’ve sent you an email')}\n            lbl_no_receive={localize(\"Didn't receive the email?\")}\n            txt_resend={localize('Resend email')}\n            txt_resend_in={localize('Resend email in')}\n            onClickSendEmail={onClickSendEmail}\n            live_chat={live_chat}\n        >\n            {getNoEmailContentStrings().map(item => (\n                <div className='sent-email__content' key={item.key}>\n                    <Icon icon={item.icon} size={32} />\n                    <Text size='xxs' as='p'>\n                        {item.content}\n                    </Text>\n                </div>\n            ))}\n        </SendEmailTemplate>\n    );\n\n    if (isMobile() && !is_modal_when_mobile) {\n        return (\n            <MobileDialog\n                portal_element_id='modal_root'\n                title={localize('We’ve sent you an email')}\n                wrapper_classname='mt5-email-sent'\n                visible={is_open}\n                onClose={onClose}\n                has_content_scroll\n            >\n                {sent_email_template}\n            </MobileDialog>\n        );\n    }\n\n    return (\n        <Modal\n            className={'sent-email__modal'}\n            is_open={is_open}\n            has_close_icon\n            should_header_stick_body\n            title=''\n            toggleModal={onClose}\n            width='440px'\n        >\n            <Div100vhContainer\n                className='account__scrollbars_container-wrapper'\n                is_disabled={isDesktop()}\n                height_offset='80px'\n            >\n                <Modal.Body>\n                    <div\n                        onClick={onClose}\n                        className='send-email-template__close'\n                        data-testid='dt_send_email_template_close'\n                    >\n                        <Icon icon='IcCross' />\n                    </div>\n                    {sent_email_template}\n                </Modal.Body>\n            </Div100vhContainer>\n        </Modal>\n    );\n};\n\nexport default SentEmailModal;\n","import SentEmailModal from './sent-email-modal';\n\nexport default SentEmailModal;\n","import React from 'react';\nimport { Button, Icon, Modal, Text, DesktopWrapper, MobileDialog, MobileWrapper } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\nconst RiskToleranceWarningModal = ({\n    show_risk_modal,\n    handleAcceptRisk,\n    title,\n    button_text,\n    body_content,\n    has_sub_header = false,\n}) => {\n    return (\n        <React.Fragment>\n            <DesktopWrapper>\n                <Modal\n                    width='44rem'\n                    title={title}\n                    height='41rem'\n                    is_open={show_risk_modal}\n                    className='center-risk-modal'\n                    toggleModal={handleAcceptRisk}\n                    has_close_icon={false}\n                >\n                    <Modal.Body>\n                        <Icon icon='IcRedWarning' size='63' />\n                        <Text as='p' size='xs' align='center' line_height='s' className='risk-acceptance__text'>\n                            {body_content}\n                        </Text>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button\n                            type='button'\n                            large\n                            text={button_text || localize('OK')}\n                            primary\n                            onClick={handleAcceptRisk}\n                        />\n                    </Modal.Footer>\n                </Modal>\n            </DesktopWrapper>\n            <MobileWrapper>\n                <MobileDialog\n                    visible={show_risk_modal}\n                    title={has_sub_header ? localize('Trading Experience Assessment') : title}\n                    portal_element_id='modal_root'\n                    has_close_icon={false}\n                >\n                    <Modal.Body className='risk-tolerance-modal'>\n                        {has_sub_header ? (\n                            <Text\n                                size='xs'\n                                line_height='s'\n                                weight='bold'\n                                as='p'\n                                className='risk-tolerance-modal__title'\n                            >\n                                {title}\n                                <div className='risk-tolerance-modal__title--separator' />\n                            </Text>\n                        ) : null}\n                        <div className='risk-tolerance-modal__wrapper'>\n                            <Icon icon='IcRedWarning' size='65' />\n                            <Text as='p' size='xs' align='center' line_height='l' className='risk-acceptance__text'>\n                                {body_content}\n                            </Text>\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer className='risk-tolerance-modal__footer'>\n                        <Button\n                            type='button'\n                            large\n                            text={button_text || localize('OK')}\n                            primary\n                            onClick={handleAcceptRisk}\n                        />\n                    </Modal.Footer>\n                </MobileDialog>\n            </MobileWrapper>\n        </React.Fragment>\n    );\n};\n\nexport default RiskToleranceWarningModal;\n","import React from 'react';\nimport { DesktopWrapper, MobileDialog, MobileWrapper, Modal } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\nconst TestWarningModal = ({ show_risk_modal, body_content, footer_content }) => (\n    <React.Fragment>\n        <MobileWrapper>\n            <MobileDialog\n                wrapper_classname='test-warning'\n                portal_element_id='modal_root'\n                visible={show_risk_modal}\n                title={localize('Appropriateness Test Warning')}\n                has_close_icon={false}\n            >\n                <Modal.Body>{body_content}</Modal.Body>\n                <Modal.Footer>{footer_content}</Modal.Footer>\n            </MobileDialog>\n        </MobileWrapper>\n        <DesktopWrapper>\n            <Modal\n                width='44rem'\n                has_close_icon={false}\n                title={localize('Appropriateness Test Warning')}\n                is_open={show_risk_modal}\n            >\n                <Modal.Body>{body_content}</Modal.Body>\n                <Modal.Footer>{footer_content}</Modal.Footer>\n            </Modal>\n        </DesktopWrapper>\n    </React.Fragment>\n);\n\nexport default TestWarningModal;\n","import { generateValidationFunction, getDefaultFields } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { GetFinancialAssessment, GetSettings } from '@deriv/api-types';\n\ntype TTradingAssessmentConfig = {\n    real_account_signup_target: string;\n    financial_assessment: GetFinancialAssessment;\n    account_settings: GetSettings;\n    setSubSectionIndex: number;\n};\n\nexport const trading_assessment_questions = () => [\n    {\n        question_text: localize(\n            'Do you understand that you could potentially lose 100% of the money you use to trade?'\n        ),\n        section: 'risk_tolerance',\n        answer_options: [\n            { text: localize('Yes'), value: 'Yes' },\n            { text: localize('No'), value: 'No' },\n        ],\n        form_control: 'risk_tolerance',\n        field_type: 'radio',\n    },\n    {\n        question_text: localize('How much knowledge and experience do you have in relation to online trading?'),\n        section: 'source_of_experience',\n        form_control: 'source_of_experience',\n        answer_options: [\n            {\n                text: localize(\n                    'I have an academic degree, professional certification, and/or work experience related to financial services.'\n                ),\n                value: 'I have an academic degree, professional certification, and/or work experience.',\n            },\n            {\n                text: localize(\n                    'I trade forex CFDs and other complex financial instruments regularly on other platforms.'\n                ),\n                value: 'I trade forex CFDs and other complex financial instruments.',\n            },\n            {\n                text: localize('I have attended seminars, training, and/or workshops related to trading.'),\n                value: 'I have attended seminars, training, and/or workshops.',\n            },\n            {\n                text: localize('I am interested in trading but have very little experience.'),\n                value: 'I have little experience.',\n            },\n            {\n                text: localize('I have no knowledge and experience in trading at all.'),\n                value: 'I have no knowledge.',\n            },\n        ],\n        field_type: 'radio',\n    },\n    {\n        section: 'trading_experience',\n        questions: [\n            {\n                question_text: localize('How much experience do you have in CFD trading?'),\n                field_type: 'dropdown',\n                form_control: 'cfd_experience',\n                answer_options: [\n                    {\n                        text: localize('No experience'),\n                        value: 'No experience',\n                    },\n                    {\n                        text: localize('Less than a year'),\n                        value: 'Less than a year',\n                    },\n                    {\n                        text: localize('1 - 2 years'),\n                        value: '1 - 2 years',\n                    },\n                    {\n                        text: localize('Over 3 years'),\n                        value: 'Over 3 years',\n                    },\n                ],\n            },\n            {\n                question_text: localize('How many CFD trades have you placed in the past 12 months?'),\n                field_type: 'dropdown',\n                form_control: 'cfd_frequency',\n                answer_options: [\n                    {\n                        text: localize('None'),\n                        value: 'No transactions in the past 12 months',\n                    },\n                    {\n                        text: '1 - 5',\n                        value: '1 - 5 transactions in the past 12 months',\n                    },\n                    {\n                        text: '6 - 10',\n                        value: '6 - 10 transactions in the past 12 months',\n                    },\n                    {\n                        text: '11 - 39',\n                        value: '11 - 39 transactions in the past 12 months',\n                    },\n                    {\n                        text: localize('40 or more'),\n                        value: '40 transactions or more in the past 12 months',\n                    },\n                ],\n            },\n            {\n                question_text: localize('How much experience do you have with other financial instruments?'),\n                field_type: 'dropdown',\n                form_control: 'trading_experience_financial_instruments',\n                answer_options: [\n                    {\n                        text: localize('No experience'),\n                        value: 'No experience',\n                    },\n                    {\n                        text: localize('Less than a year'),\n                        value: 'Less than a year',\n                    },\n                    {\n                        text: localize('1 - 2 years'),\n                        value: '1 - 2 years',\n                    },\n                    {\n                        text: localize('Over 3 years'),\n                        value: 'Over 3 years',\n                    },\n                ],\n            },\n            {\n                question_text: localize(\n                    'How many trades have you placed with other financial instruments in the past 12 months?'\n                ),\n                form_control: 'trading_frequency_financial_instruments',\n                field_type: 'dropdown',\n                answer_options: [\n                    {\n                        text: localize('None'),\n                        value: 'No transactions in the past 12 months',\n                    },\n                    {\n                        text: '1 - 5',\n                        value: '1 - 5 transactions in the past 12 months',\n                    },\n                    {\n                        text: '6 - 10',\n                        value: '6 - 10 transactions in the past 12 months',\n                    },\n                    {\n                        text: '11 - 39',\n                        value: '11 - 39 transactions in the past 12 months',\n                    },\n                    {\n                        text: localize('40 or more'),\n                        value: '40 transactions or more in the past 12 months',\n                    },\n                ],\n            },\n        ],\n    },\n    {\n        question_text: localize('In your understanding, CFD trading allows you to'),\n        section: 'trading_knowledge',\n        form_control: 'cfd_trading_definition',\n        field_type: 'radio',\n        answer_options: [\n            {\n                text: localize('Purchase commodities or shares of a company.'),\n                value: 'Purchase shares of a company or physical commodities.',\n            },\n            {\n                text: localize(\n                    'Place a position on the price movement of an asset where the outcome is a fixed return or nothing at all.'\n                ),\n                value: 'Place a bet on the price movement.',\n            },\n            {\n                text: localize('Speculate on the price movement of an asset without actually owning it.'),\n                value: 'Speculate on the price movement.',\n            },\n            {\n                text: localize('Make a long-term investment for a guaranteed profit.'),\n                value: 'Make a long-term investment.',\n            },\n        ],\n    },\n    {\n        question_text: localize('How does leverage affect CFD trading?'),\n        section: 'trading_knowledge',\n        form_control: 'leverage_impact_trading',\n        field_type: 'radio',\n        answer_options: [\n            {\n                text: localize('Leverage helps to mitigate risk.'),\n                value: 'Leverage is a risk mitigation technique.',\n            },\n            {\n                text: localize('Leverage prevents you from opening large positions.'),\n                value: 'Leverage prevents you from opening large positions.',\n            },\n            { text: localize('Leverage guarantees profits.'), value: 'Leverage guarantees profits.' },\n            {\n                text: localize(\n                    'Leverage lets you open large positions for a fraction of trade value, which may result in increased profit or loss.'\n                ),\n                value: \"Leverage lets you open larger positions for a fraction of the trade's value.\",\n            },\n        ],\n    },\n    {\n        question_text: localize(\n            \"Leverage trading is high-risk, so it's a good idea to use risk management features such as stop loss. Stop loss allows you to\"\n        ),\n        section: 'trading_knowledge',\n        form_control: 'leverage_trading_high_risk_stop_loss',\n        field_type: 'radio',\n        answer_options: [\n            {\n                text: localize('Cancel your trade at any time within a specified timeframe.'),\n                value: 'Cancel your trade at any time within a chosen timeframe.',\n            },\n            {\n                text: localize(\n                    'Close your trade automatically when the loss is equal to or more than a specified amount, as long as there is adequate market liquidity.'\n                ),\n                value: 'Close your trade automatically when the loss is more than or equal to a specific amount.',\n            },\n            {\n                text: localize(\n                    'Close your trade automatically when the profit is equal to or more than a specified amount, as long as there is adequate market liquidity.'\n                ),\n                value: 'Close your trade automatically when the profit is more than or equal to a specific amount.',\n            },\n            {\n                text: localize('Make a guaranteed profit on your trade.'),\n                value: 'Make a guaranteed profit on your trade.',\n            },\n        ],\n    },\n    {\n        question_text: localize('When are you required to pay an initial margin?'),\n        section: 'trading_knowledge',\n        form_control: 'required_initial_margin',\n        field_type: 'radio',\n        answer_options: [\n            {\n                text: localize('When opening a leveraged CFD trade.'),\n                value: 'When opening a Leveraged CFD trade.',\n            },\n            { text: localize('When trading multipliers.'), value: 'When trading Multipliers.' },\n            {\n                text: localize('When buying shares of a company.'),\n                value: 'When buying shares of a company.',\n            },\n            { text: localize('All of the above.'), value: 'All of the above.' },\n        ],\n    },\n];\n\nconst default_form_config = {\n    supported_in: ['maltainvest'],\n};\n\nexport const getTradingAssessmentFormConfig = (financial_assessment: GetFinancialAssessment) => {\n    return {\n        risk_tolerance: {\n            ...default_form_config,\n            default_value: financial_assessment?.risk_tolerance ?? '',\n        },\n        source_of_experience: {\n            ...default_form_config,\n            default_value: financial_assessment?.source_of_experience ?? '',\n        },\n        cfd_experience: {\n            ...default_form_config,\n            default_value: financial_assessment?.cfd_experience ?? '',\n        },\n        cfd_frequency: {\n            ...default_form_config,\n            default_value: financial_assessment?.cfd_frequency ?? '',\n        },\n        trading_experience_financial_instruments: {\n            ...default_form_config,\n            default_value: financial_assessment?.trading_experience_financial_instruments ?? '',\n        },\n        trading_frequency_financial_instruments: {\n            ...default_form_config,\n            default_value: financial_assessment?.trading_frequency_financial_instruments ?? '',\n        },\n        cfd_trading_definition: {\n            ...default_form_config,\n            default_value: financial_assessment?.cfd_trading_definition ?? '',\n        },\n        leverage_impact_trading: {\n            ...default_form_config,\n            default_value: financial_assessment?.leverage_impact_trading ?? '',\n        },\n        leverage_trading_high_risk_stop_loss: {\n            ...default_form_config,\n            default_value: financial_assessment?.leverage_trading_high_risk_stop_loss ?? '',\n        },\n        required_initial_margin: {\n            ...default_form_config,\n            default_value: financial_assessment?.required_initial_margin ?? '',\n        },\n    };\n};\n\nconst tradingAssessmentConfig = (\n    {\n        real_account_signup_target,\n        financial_assessment,\n        account_settings,\n        setSubSectionIndex,\n    }: TTradingAssessmentConfig,\n    TradingAssessmentNewUser: React.Component\n) => {\n    const trading_assessment_form_config = getTradingAssessmentFormConfig(financial_assessment);\n    return {\n        header: {\n            active_title: localize('Complete your trading assessment'),\n            title: localize('Trading assessment'),\n        },\n        body: TradingAssessmentNewUser,\n        form_value: getDefaultFields(real_account_signup_target, trading_assessment_form_config),\n        props: {\n            validate: generateValidationFunction(real_account_signup_target, trading_assessment_form_config),\n            assessment_questions: trading_assessment_questions(),\n            disabled_items: account_settings?.immutable_fields,\n            setSubSectionIndex,\n        },\n        sub_step_count: trading_assessment_questions().length,\n    };\n};\n\nexport default tradingAssessmentConfig;\n","import {\n    getUrlBase,\n    filterObjProperties,\n    toMoment,\n    validLength,\n    validName,\n    IDV_NOT_APPLICABLE_OPTION,\n} from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { ResidenceList, GetSettings, GetAccountStatus } from '@deriv/api-types';\nimport { FormikErrors, FormikValues } from 'formik';\n\nconst getImageLocation = (image_name: string) => getUrlBase(`/public/images/common/${image_name}`);\n\nexport const documentAdditionalError = (document_additional: string, document_additional_format: string) => {\n    let error_message = null;\n    if (!document_additional) {\n        error_message = localize('Please enter your document number. ');\n    } else {\n        const format_regex = getRegex(document_additional_format);\n        if (!format_regex.test(document_additional)) {\n            error_message = localize('Please enter the correct format. ');\n        }\n    }\n\n    return error_message;\n};\n\n// Unsupported Regex List\nconst regex = [\n    {\n        regex_string: '^(?i)G[a-zA-Z0-9]{7,9}$',\n        value: '^G[a-zA-Z0-9]{7,9}$',\n        flags: 'i',\n    },\n];\n\n// Note: Ensure that the object keys matches BE API's keys. This is simply a mapping for FE templates\nconst idv_document_data = Object.freeze({\n    ke: {\n        alien_card: {\n            new_display_name: '',\n            example_format: '123456',\n            sample_image: getImageLocation('ke_alien_card.png'),\n        },\n        national_id: {\n            new_display_name: '',\n            example_format: '12345678',\n            sample_image: getImageLocation('ke_national_identity_card.png'),\n        },\n        passport: {\n            new_display_name: '',\n            example_format: 'A12345678',\n            sample_image: getImageLocation('ke_passport.png'),\n        },\n    },\n    za: {\n        national_id: {\n            new_display_name: localize('National ID'),\n            example_format: '1234567890123',\n            sample_image: getImageLocation('za_national_identity_card.png'),\n        },\n        national_id_no_photo: {\n            new_display_name: localize('National ID (No Photo)'),\n            example_format: '1234567890123',\n            sample_image: '',\n        },\n    },\n    ng: {\n        bvn: {\n            new_display_name: localize('Bank Verification Number'),\n            example_format: '12345678901',\n            sample_image: '',\n        },\n        cac: {\n            new_display_name: localize('Corporate Affairs Commission'),\n            example_format: '12345678',\n            sample_image: '',\n        },\n        drivers_license: {\n            new_display_name: '',\n            example_format: 'ABC123456789',\n            sample_image: getImageLocation('ng_drivers_license.png'),\n        },\n        nin: {\n            new_display_name: localize('National Identity Number'),\n            example_format: '12345678901',\n            sample_image: '',\n        },\n        nin_slip: {\n            new_display_name: localize('National Identity Number Slip'),\n            example_format: '12345678901',\n            sample_image: getImageLocation('ng_nin_slip.png'),\n        },\n        tin: {\n            new_display_name: localize('Taxpayer identification number'),\n            example_format: '12345678-1234',\n            sample_image: '',\n        },\n        voter_id: {\n            new_display_name: localize('Voter ID'),\n            example_format: '1234567890123456789',\n            sample_image: getImageLocation('ng_voter_id.png'),\n        },\n    },\n    gh: {\n        drivers_license: {\n            new_display_name: '',\n            example_format: 'B1234567',\n            sample_image: '',\n        },\n        national_id: {\n            new_display_name: localize('National ID'),\n            example_format: 'GHA-123456789-1',\n            sample_image: '',\n        },\n        passport: {\n            new_display_name: localize('Passport'),\n            example_format: 'G1234567',\n            sample_image: '',\n        },\n        ssnit: {\n            new_display_name: localize('Social Security and National Insurance Trust'),\n            example_format: 'C123456789012',\n            sample_image: '',\n        },\n        voter_id: {\n            new_display_name: localize('Voter ID'),\n            example_format: '01234567890',\n            sample_image: '',\n        },\n    },\n    br: {\n        cpf: {\n            new_display_name: localize('CPF'),\n            example_format: '123.456.789-12',\n            sample_image: '',\n        },\n    },\n    ug: {\n        national_id: {\n            new_display_name: localize('National ID'),\n            example_format: 'CM12345678PE1D',\n            sample_image: getImageLocation('ug_national_identity_card.png'),\n        },\n        national_id_no_photo: {\n            new_display_name: localize('National ID (No Photo)'),\n            example_format: 'CM12345678PE1D',\n            sample_image: '',\n        },\n    },\n    zw: {\n        national_id: {\n            new_display_name: localize('National ID'),\n            example_format: '081234567F53',\n            sample_image: getImageLocation('zw_national_identity_card.png'),\n        },\n    },\n});\n\ntype TIDVSupportCheck = {\n    residence_list: ResidenceList;\n    account_settings: GetSettings;\n    account_status: GetAccountStatus;\n    real_account_signup_target: string;\n    residence: string;\n};\n\nexport const shouldShowIdentityInformation = ({\n    account_status,\n    account_settings,\n    residence,\n    residence_list,\n    real_account_signup_target,\n}: TIDVSupportCheck) => {\n    const citizen = account_settings.citizen || residence;\n    const country = residence_list.find(item => item.value === citizen);\n    const maltainvest = real_account_signup_target === 'maltainvest';\n    const should_skip_idv = account_status?.status?.some((status: string) => status === 'skip_idv'); //status added by BE when idv should be skipped for the user\n    return Boolean(\n        !maltainvest && citizen && country?.identity?.services?.idv?.is_country_supported && !should_skip_idv\n    );\n};\n\nexport const getDocumentData = (country_code: string, document_type: string) => {\n    return (\n        (Object.keys(idv_document_data).includes(country_code) &&\n            (idv_document_data as any)[country_code][document_type]) || {\n            new_display_name: '',\n            example_format: '',\n            sample_image: '',\n        }\n    );\n};\n\nexport const preventEmptyClipboardPaste = (e: React.ClipboardEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const clipboardData = (e.clipboardData ?? window.clipboardData).getData('text');\n    if (clipboardData.length === 0) {\n        e.preventDefault();\n    }\n};\n\nexport const getRegex = (target_regex: string) => {\n    const output_regex = regex.find(r => r.regex_string === target_regex);\n    if (output_regex) {\n        return new RegExp(output_regex.value, output_regex.flags);\n    }\n    return new RegExp(target_regex);\n};\n\n/**\n * @param {string} selected_doc  - Could be one of the following: 'drivers_license', 'ssnit', 'id_card', 'passport'\n * @returns {string} - Returns the placeholder text for the document number input\n */\nexport const generatePlaceholderText = (selected_doc: string) => {\n    switch (selected_doc) {\n        case 'drivers_license':\n            return localize('Enter Driver License Reference number');\n        case 'ssnit':\n            return localize('Enter your SSNIT number');\n        default:\n            return localize('Enter your document number');\n    }\n};\n\nexport const validate =\n    (errors: Record<string, string>, values: Record<string, string>) =>\n    (fn: (value: string) => string, arr: string[], err_msg: string) => {\n        arr.forEach(field => {\n            const value = values[field];\n            if (!fn(value) && !errors[field]) errors[field] = err_msg;\n        });\n    };\n\nexport const isFieldImmutable = (field: string, mutable_fields: string[] = []) => !mutable_fields.includes(field);\n\nexport const makeSettingsRequest = (values: FormikValues, changeable_fields: string[]) => {\n    const request = filterObjProperties(values, changeable_fields);\n\n    if (request.first_name) {\n        request.first_name = request.first_name.trim();\n    }\n    if (request.last_name) {\n        request.last_name = request.last_name.trim();\n    }\n    if (request.date_of_birth) {\n        request.date_of_birth = toMoment(request.date_of_birth).format('YYYY-MM-DD');\n    }\n\n    return request;\n};\n\nexport const validateName = (name: string) => {\n    if (name) {\n        if (!validLength(name.trim(), { min: 2, max: 50 })) {\n            return localize('You should enter 2-50 characters.');\n        } else if (!validName(name)) {\n            return localize('Letters, spaces, periods, hyphens, apostrophes only.');\n        }\n    }\n    return '';\n};\n\nexport const getExampleFormat = (example_format: string) =>\n    example_format ? localize('Example: ') + example_format : '';\n\nexport const isDocumentTypeValid = (document_type: FormikValues) => {\n    if (!document_type?.text) {\n        return localize('Please select a document type.');\n    }\n    return undefined;\n};\n\nexport const isAdditionalDocumentValid = (document_type: FormikValues, document_additional: string) => {\n    const error_message = documentAdditionalError(document_additional, document_type.additional?.format);\n    if (error_message) {\n        return localize(error_message) + getExampleFormat(document_type.additional?.example_format);\n    }\n    return undefined;\n};\n\nexport const isDocumentNumberValid = (document_number: string, document_type: FormikValues) => {\n    const is_document_number_invalid = document_number === document_type.example_format;\n    if (!document_number) {\n        return localize('Please enter your document number. ') + getExampleFormat(document_type.example_format);\n    } else if (is_document_number_invalid) {\n        return localize('Please enter a valid ID number.');\n    }\n    const format_regex = getRegex(document_type.value);\n    if (!format_regex.test(document_number)) {\n        return localize('Please enter the correct format. ') + getExampleFormat(document_type.example_format);\n    }\n    return undefined;\n};\n\nexport const shouldHideHelperImage = (document_id: string) => document_id === IDV_NOT_APPLICABLE_OPTION.id;\n","import { localize } from '@deriv/translations';\n\nexport const getIncomeSourceList = () => [\n    {\n        text: localize('Salaried Employee'),\n        value: 'Salaried Employee',\n    },\n    {\n        text: localize('Self-Employed'),\n        value: 'Self-Employed',\n    },\n    {\n        text: localize('Investments & Dividends'),\n        value: 'Investments & Dividends',\n    },\n    {\n        text: localize('Pension'),\n        value: 'Pension',\n    },\n    {\n        text: localize('State Benefits'),\n        value: 'State Benefits',\n    },\n    {\n        text: localize('Savings & Inheritance'),\n        value: 'Savings & Inheritance',\n    },\n];\n\nexport const getEmploymentStatusList = () => [\n    {\n        text: localize('Employed'),\n        value: 'Employed',\n    },\n    {\n        text: localize('Pensioner'),\n        value: 'Pensioner',\n    },\n    {\n        text: localize('Self-Employed'),\n        value: 'Self-Employed',\n    },\n    {\n        text: localize('Student'),\n        value: 'Student',\n    },\n    {\n        text: localize('Unemployed'),\n        value: 'Unemployed',\n    },\n];\n\nexport const getEmploymentIndustryList = () => [\n    {\n        text: localize('Construction'),\n        value: 'Construction',\n    },\n    {\n        text: localize('Education'),\n        value: 'Education',\n    },\n    {\n        text: localize('Finance'),\n        value: 'Finance',\n    },\n    {\n        text: localize('Health'),\n        value: 'Health',\n    },\n    {\n        text: localize('Tourism'),\n        value: 'Tourism',\n    },\n    {\n        text: localize('Information & Communications Technology'),\n        value: 'Information & Communications Technology',\n    },\n    {\n        text: localize('Science & Engineering'),\n        value: 'Science & Engineering',\n    },\n    {\n        text: localize('Legal'),\n        value: 'Legal',\n    },\n    {\n        text: localize('Social & Cultural'),\n        value: 'Social & Cultural',\n    },\n    {\n        text: localize('Agriculture'),\n        value: 'Agriculture',\n    },\n    {\n        text: localize('Real Estate'),\n        value: 'Real Estate',\n    },\n    {\n        text: localize('Food Services'),\n        value: 'Food Services',\n    },\n    {\n        text: localize('Manufacturing'),\n        value: 'Manufacturing',\n    },\n    {\n        text: localize('Unemployed'),\n        value: 'Unemployed',\n    },\n];\n\nexport const getOccupationList = () => [\n    {\n        text: localize('Chief Executives, Senior Officials and Legislators'),\n        value: 'Chief Executives, Senior Officials and Legislators',\n    },\n    {\n        text: localize('Managers'),\n        value: 'Managers',\n    },\n    {\n        text: localize('Professionals'),\n        value: 'Professionals',\n    },\n    {\n        text: localize('Clerks'),\n        value: 'Clerks',\n    },\n    {\n        text: localize('Personal Care, Sales and Service Workers'),\n        value: 'Personal Care, Sales and Service Workers',\n    },\n    {\n        text: localize('Agricultural, Forestry and Fishery Workers'),\n        value: 'Agricultural, Forestry and Fishery Workers',\n    },\n    {\n        text: localize('Craft, Metal, Electrical and Electronics Workers'),\n        value: 'Craft, Metal, Electrical and Electronics Workers',\n    },\n    {\n        text: localize('Plant and Machine Operators and Assemblers'),\n        value: 'Plant and Machine Operators and Assemblers',\n    },\n    {\n        text: localize('Cleaners and Helpers'),\n        value: 'Cleaners and Helpers',\n    },\n    {\n        text: localize('Mining, Construction, Manufacturing and Transport Workers'),\n        value: 'Mining, Construction, Manufacturing and Transport Workers',\n    },\n    {\n        text: localize('Armed Forces'),\n        value: 'Armed Forces',\n    },\n    {\n        text: localize('Government Officers'),\n        value: 'Government Officers',\n    },\n    {\n        text: localize('Students'),\n        value: 'Students',\n    },\n    {\n        text: localize('Unemployed'),\n        value: 'Unemployed',\n    },\n];\n\nexport const getSourceOfWealthList = () => [\n    {\n        text: localize('Accumulation of Income/Savings'),\n        value: 'Accumulation of Income/Savings',\n    },\n    {\n        text: localize('Cash Business'),\n        value: 'Cash Business',\n    },\n    {\n        text: localize('Company Ownership'),\n        value: 'Company Ownership',\n    },\n    {\n        text: localize('Divorce Settlement'),\n        value: 'Divorce Settlement',\n    },\n    {\n        text: localize('Inheritance'),\n        value: 'Inheritance',\n    },\n    {\n        text: localize('Investment Income'),\n        value: 'Investment Income',\n    },\n    {\n        text: localize('Sale of Property'),\n        value: 'Sale of Property',\n    },\n];\n\nexport const getEducationLevelList = () => [\n    {\n        text: localize('Primary'),\n        value: 'Primary',\n    },\n    {\n        text: localize('Secondary'),\n        value: 'Secondary',\n    },\n    {\n        text: localize('Tertiary'),\n        value: 'Tertiary',\n    },\n];\n\nexport const getNetIncomeList = () => [\n    {\n        text: localize('Less than $25,000'),\n        value: 'Less than $25,000',\n    },\n    {\n        text: localize('$25,000 - $50,000'),\n        value: '$25,000 - $50,000',\n    },\n    {\n        text: localize('$50,001 - $100,000'),\n        value: '$50,001 - $100,000',\n    },\n    {\n        text: localize('$100,001 - $500,000'),\n        value: '$100,001 - $500,000',\n    },\n    {\n        text: localize('Over $500,000'),\n        value: 'Over $500,000',\n    },\n];\n\nexport const getEstimatedWorthList = () => [\n    {\n        text: localize('Less than $100,000'),\n        value: 'Less than $100,000',\n    },\n    {\n        text: localize('$100,000 - $250,000'),\n        value: '$100,000 - $250,000',\n    },\n    {\n        text: localize('$250,001 - $500,000'),\n        value: '$250,001 - $500,000',\n    },\n    {\n        text: localize('$500,001 - $1,000,000'),\n        value: '$500,001 - $1,000,000',\n    },\n    {\n        text: localize('Over $1,000,000'),\n        value: 'Over $1,000,000',\n    },\n];\n\nexport const getAccountTurnoverList = () => [\n    {\n        text: localize('Less than $25,000'),\n        value: 'Less than $25,000',\n    },\n    {\n        text: localize('$25,000 - $50,000'),\n        value: '$25,000 - $50,000',\n    },\n    {\n        text: localize('$50,001 - $100,000'),\n        value: '$50,001 - $100,000',\n    },\n    {\n        text: localize('$100,001 - $500,000'),\n        value: '$100,001 - $500,000',\n    },\n    {\n        text: localize('Over $500,000'),\n        value: 'Over $500,000',\n    },\n];\n\nexport const getBinaryOptionsTradingExperienceList = () => [\n    {\n        text: localize('0-1 year'),\n        value: '0-1 year',\n    },\n    {\n        text: localize('1-2 years'),\n        value: '1-2 years',\n    },\n    {\n        text: localize('Over 3 years'),\n        value: 'Over 3 years',\n    },\n];\n\nexport const getBinaryOptionsTradingFrequencyList = () => [\n    {\n        text: localize('0-5 transactions in the past 12 months'),\n        value: '0-5 transactions in the past 12 months',\n    },\n    {\n        text: localize('6-10 transactions in the past 12 months'),\n        value: '6-10 transactions in the past 12 months',\n    },\n    {\n        text: localize('11-39 transactions in the past 12 months'),\n        value: '11-39 transactions in the past 12 months',\n    },\n    {\n        text: localize('40 transactions or more in the past 12 months'),\n        value: '40 transactions or more in the past 12 months',\n    },\n];\n\nexport const getCfdTradingExperienceList = () => [\n    {\n        text: localize('0-1 year'),\n        value: '0-1 year',\n    },\n    {\n        text: localize('1-2 years'),\n        value: '1-2 years',\n    },\n    {\n        text: localize('Over 3 years'),\n        value: 'Over 3 years',\n    },\n];\n\nexport const getCfdTradingFrequencyList = () => [\n    {\n        text: localize('0-5 transactions in the past 12 months'),\n        value: '0-5 transactions in the past 12 months',\n    },\n    {\n        text: localize('6-10 transactions in the past 12 months'),\n        value: '6-10 transactions in the past 12 months',\n    },\n    {\n        text: localize('11-39 transactions in the past 12 months'),\n        value: '11-39 transactions in the past 12 months',\n    },\n    {\n        text: localize('40 transactions or more in the past 12 months'),\n        value: '40 transactions or more in the past 12 months',\n    },\n];\n\nexport const getForexTradingExperienceList = () => [\n    {\n        text: localize('0-1 year'),\n        value: '0-1 year',\n    },\n    {\n        text: localize('1-2 years'),\n        value: '1-2 years',\n    },\n    {\n        text: localize('Over 3 years'),\n        value: 'Over 3 years',\n    },\n];\n\nexport const getForexTradingFrequencyList = () => [\n    {\n        text: localize('0-5 transactions in the past 12 months'),\n        value: '0-5 transactions in the past 12 months',\n    },\n    {\n        text: localize('6-10 transactions in the past 12 months'),\n        value: '6-10 transactions in the past 12 months',\n    },\n    {\n        text: localize('11-39 transactions in the past 12 months'),\n        value: '11-39 transactions in the past 12 months',\n    },\n    {\n        text: localize('40 transactions or more in the past 12 months'),\n        value: '40 transactions or more in the past 12 months',\n    },\n];\n\nexport const getOtherInstrumentsTradingExperienceList = () => [\n    {\n        text: localize('0-1 year'),\n        value: '0-1 year',\n    },\n    {\n        text: localize('1-2 years'),\n        value: '1-2 years',\n    },\n    {\n        text: localize('Over 3 years'),\n        value: 'Over 3 years',\n    },\n];\n\nexport const getOtherInstrumentsTradingFrequencyList = () => [\n    {\n        text: localize('0-5 transactions in the past 12 months'),\n        value: '0-5 transactions in the past 12 months',\n    },\n    {\n        text: localize('6-10 transactions in the past 12 months'),\n        value: '6-10 transactions in the past 12 months',\n    },\n    {\n        text: localize('11-39 transactions in the past 12 months'),\n        value: '11-39 transactions in the past 12 months',\n    },\n    {\n        text: localize('40 transactions or more in the past 12 months'),\n        value: '40 transactions or more in the past 12 months',\n    },\n];\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Formik } from 'formik';\nimport { useHistory, withRouter } from 'react-router';\nimport {\n    FormSubmitErrorMessage,\n    Loading,\n    Button,\n    Dropdown,\n    Modal,\n    Icon,\n    DesktopWrapper,\n    MobileWrapper,\n    SelectNative,\n    Text,\n} from '@deriv/components';\nimport { routes, isMobile, isDesktop, platforms, PlatformContext, WS } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport LeaveConfirm from 'Components/leave-confirm';\nimport IconMessageContent from 'Components/icon-message-content';\nimport DemoMessage from 'Components/demo-message';\nimport LoadErrorMessage from 'Components/load-error-message';\nimport FormBody from 'Components/form-body';\nimport FormBodySection from 'Components/form-body-section';\nimport FormSubHeader from 'Components/form-sub-header';\nimport FormFooter from 'Components/form-footer';\nimport {\n    getAccountTurnoverList,\n    getEducationLevelList,\n    getEmploymentIndustryList,\n    getEmploymentStatusList,\n    getEstimatedWorthList,\n    getIncomeSourceList,\n    getNetIncomeList,\n    getOccupationList,\n    getSourceOfWealthList,\n    getBinaryOptionsTradingExperienceList,\n    getBinaryOptionsTradingFrequencyList,\n    getCfdTradingExperienceList,\n    getCfdTradingFrequencyList,\n    getForexTradingExperienceList,\n    getForexTradingFrequencyList,\n    getOtherInstrumentsTradingExperienceList,\n    getOtherInstrumentsTradingFrequencyList,\n} from './financial-information-list';\nimport type { TCoreStores } from '@deriv/stores/types';\nimport { GetFinancialAssessment, GetFinancialAssessmentResponse } from '@deriv/api-types';\n\ntype TConfirmationPage = {\n    toggleModal: (prop: boolean) => void;\n    onSubmit: () => void;\n};\n\ntype TConfirmationModal = {\n    is_visible: boolean;\n} & TConfirmationPage;\n\ntype TSubmittedPage = {\n    platform: keyof typeof platforms;\n    routeBackInApp: TCoreStores['common']['routeBackInApp'];\n};\n\nconst ConfirmationContent = ({ className }: { className?: string }) => {\n    return (\n        <React.Fragment>\n            <Text as='p' size='xs' className={className}>\n                <Localize\n                    i18n_default_text='In providing our services to you, we are required to obtain information from you in order to assess whether a given product or service is appropriate for you (that is, whether you possess the experience and knowledge to understand the risks involved).<0/><1/>'\n                    components={[<br key={0} />, <br key={1} />]}\n                />\n                <Localize\n                    i18n_default_text='On the basis of the information provided in relation to your knowledge and experience, we consider that the investments available via this website are not appropriate for you.<0/><1/>'\n                    components={[<br key={0} />, <br key={1} />]}\n                />\n                <Localize i18n_default_text='By clicking Accept below and proceeding with the Account Opening you should note that you may be exposing yourself to risks (which may be significant, including the risk of loss of the entire sum invested) that you may not have the knowledge and experience to properly assess or mitigate.' />\n            </Text>\n        </React.Fragment>\n    );\n};\n\nconst ConfirmationModal = ({ is_visible, toggleModal, onSubmit }: TConfirmationModal) => (\n    <Modal\n        className='financial-assessment-confirmation'\n        is_open={is_visible}\n        small\n        toggleModal={() => toggleModal(false)}\n        title={localize('Appropriateness Test, WARNING:')}\n    >\n        <Modal.Body>\n            <ConfirmationContent />\n        </Modal.Body>\n        <Modal.Footer>\n            <Button large text={localize('Decline')} onClick={() => toggleModal(false)} secondary />\n            <Button\n                large\n                text={localize('Accept')}\n                onClick={() => {\n                    onSubmit();\n                    toggleModal(false);\n                }}\n                primary\n            />\n        </Modal.Footer>\n    </Modal>\n);\n\nconst ConfirmationPage = ({ toggleModal, onSubmit }: TConfirmationPage) => (\n    <div className='account__confirmation-page'>\n        <Text\n            size='xs'\n            weight='bold'\n            styles={{ color: 'var(--brand-red-coral)' }}\n            className='account__confirmation-page-title'\n        >\n            {localize('Notice')}\n        </Text>\n        <ConfirmationContent className='account__confirmation-page-content' />\n        <div className='account__confirmation-page-footer'>\n            <Button large text={localize('Back')} onClick={() => toggleModal(false)} secondary />\n            <Button\n                large\n                text={localize('Accept')}\n                onClick={() => {\n                    onSubmit();\n                    toggleModal(false);\n                }}\n                primary\n            />\n        </div>\n    </div>\n);\nconst SubmittedPage = ({ platform, routeBackInApp }: TSubmittedPage) => {\n    const history = useHistory();\n\n    const onClickButton = () => {\n        if (platforms[platform].is_hard_redirect) {\n            window.location.href = platforms[platform].url;\n        } else {\n            routeBackInApp(history);\n        }\n    };\n\n    const redirectToPOA = () => {\n        history.push(routes.proof_of_address);\n    };\n\n    if (platform && !!platforms[platform])\n        return (\n            <IconMessageContent\n                className='submit-success'\n                message={localize('Financial assessment submitted successfully')}\n                text={platforms[platform].icon_text}\n                icon={<Icon icon='IcSuccess' width={96} height={90} />}\n            >\n                <div className='account-management-flex-wrapper account-management-submit-success'>\n                    <Button\n                        type='button'\n                        has_effect\n                        text={localize('Back to {{platform_name}}', {\n                            platform_name: platforms[platform].platform_name,\n                        })}\n                        onClick={onClickButton}\n                        primary\n                        large\n                    />\n                </div>\n            </IconMessageContent>\n        );\n\n    return (\n        <IconMessageContent\n            className='submit-success'\n            message={localize('Financial assessment submitted successfully')}\n            text={localize('Let’s continue with providing proofs of address and identity.')}\n            icon={<Icon icon='IcSuccess' width={96} height={90} />}\n        >\n            <div className='account-management-flex-wrapper account-management-submit-success'>\n                <Button\n                    type='button'\n                    has_effect\n                    text={localize('Continue')}\n                    onClick={() => redirectToPOA()}\n                    primary\n                    large\n                />\n            </div>\n        </IconMessageContent>\n    );\n};\n\nconst FinancialAssessment = observer(() => {\n    const { client, common, notifications } = useStore();\n    const {\n        landing_company_shortcode,\n        is_virtual,\n        is_financial_account,\n        is_trading_experience_incomplete,\n        is_svg,\n        setFinancialAndTradingAssessment,\n        updateAccountStatus,\n        is_authentication_needed,\n        is_financial_information_incomplete,\n    } = client;\n    const { platform, routeBackInApp } = common;\n    const { refreshNotifications } = notifications;\n    const is_mf = landing_company_shortcode === 'maltainvest';\n    const history = useHistory();\n    const { is_appstore } = React.useContext(PlatformContext);\n    const [is_loading, setIsLoading] = React.useState(true);\n    const [is_confirmation_visible, setIsConfirmationVisible] = React.useState(false);\n    const [has_trading_experience, setHasTradingExperience] = React.useState(false);\n    const [is_form_visible, setIsFormVisible] = React.useState(true);\n    const [api_initial_load_error, setApiInitialLoadError] = React.useState<React.ReactNode>(null);\n    const [is_btn_loading, setIsBtnLoading] = React.useState(false);\n    const [is_submit_success, setIsSubmitSuccess] = React.useState(false);\n    const [initial_form_values, setInitialFormValues] = React.useState<Partial<GetFinancialAssessment>>({});\n\n    const {\n        income_source,\n        employment_status,\n        employment_industry,\n        occupation,\n        source_of_wealth,\n        education_level,\n        net_income,\n        estimated_worth,\n        account_turnover,\n        binary_options_trading_experience,\n        binary_options_trading_frequency,\n        cfd_trading_experience,\n        cfd_trading_frequency,\n        forex_trading_experience,\n        forex_trading_frequency,\n        other_instruments_trading_experience,\n        other_instruments_trading_frequency,\n    } = initial_form_values;\n\n    React.useEffect(() => {\n        if (is_virtual) {\n            setIsLoading(false);\n            history.push(routes.personal_details);\n        } else {\n            WS.authorized.storage.getFinancialAssessment().then((data: GetFinancialAssessmentResponse) => {\n                WS.wait('get_account_status').then(() => {\n                    setHasTradingExperience(\n                        (is_financial_account || is_trading_experience_incomplete) && !is_svg && !is_mf\n                    );\n                    if (\n                        data &&\n                        'error' in data &&\n                        typeof data.error === 'object' &&\n                        data.error &&\n                        'message' in data.error &&\n                        typeof data.error.message === 'string'\n                    ) {\n                        setApiInitialLoadError(data.error.message);\n                        return;\n                    }\n                    if (data?.get_financial_assessment) setInitialFormValues(data.get_financial_assessment);\n                    setIsLoading(false);\n                });\n            });\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const onSubmit = async (values: FormikValues, { setSubmitting, setStatus }: FormikHelpers<any>) => {\n        setStatus({ msg: '' });\n        setIsBtnLoading(true);\n        const form_payload: any = {\n            financial_information: { ...values },\n        };\n        const data = await setFinancialAndTradingAssessment(form_payload);\n        if (data.error) {\n            setIsBtnLoading(false);\n            if (\n                data &&\n                'error' in data &&\n                typeof data.error === 'object' &&\n                data.error &&\n                'message' in data.error &&\n                typeof data.error.message === 'string'\n            ) {\n                setStatus({ msg: data.error.message });\n            }\n        } else {\n            await updateAccountStatus();\n            WS.authorized.storage.getFinancialAssessment().then((res_data: GetFinancialAssessmentResponse) => {\n                if (res_data?.get_financial_assessment) setInitialFormValues(res_data.get_financial_assessment);\n                setIsSubmitSuccess(true);\n                setIsBtnLoading(false);\n\n                if (isDesktop()) {\n                    setTimeout(() => setIsSubmitSuccess(false), 10000);\n                }\n            });\n            setSubmitting(false);\n            refreshNotifications();\n        }\n    };\n\n    const validateFields = (values: Record<string, unknown>) => {\n        setIsSubmitSuccess(false);\n        const errors: Record<string, string> = {};\n        Object.keys(values).forEach(field => {\n            if (!values[field]) {\n                errors[field] = localize('This field is required');\n            }\n        });\n        return errors;\n    };\n\n    const showForm = (is_visible: boolean) => {\n        setIsFormVisible(is_visible);\n        setIsConfirmationVisible(false);\n    };\n\n    const toggleConfirmationModal = (value: boolean) => {\n        setIsConfirmationVisible(value);\n        if (isMobile()) {\n            setIsFormVisible(!value);\n        }\n    };\n\n    const onClickSubmit = (handleSubmit: () => void) => {\n        const is_confirmation_needed = has_trading_experience && is_trading_experience_incomplete;\n\n        if (is_confirmation_needed) {\n            toggleConfirmationModal(true);\n        } else {\n            handleSubmit();\n        }\n    };\n\n    const getScrollOffset = () => {\n        if (is_mf) {\n            if (isMobile() && is_financial_information_incomplete) return '220px';\n            return is_financial_information_incomplete && !is_submit_success ? '165px' : '160px';\n        } else if (isMobile()) return is_appstore ? '160px' : '200px';\n        return '80px';\n    };\n\n    if (is_loading) return <Loading is_fullscreen={false} className='account__initial-loader' />;\n    if (api_initial_load_error) return <LoadErrorMessage error_message={api_initial_load_error} />;\n    if (is_virtual) return <DemoMessage has_demo_icon={is_appstore} has_button={is_appstore} />;\n    if (isMobile() && is_authentication_needed && !is_mf && is_submit_success)\n        return <SubmittedPage platform={platform} routeBackInApp={routeBackInApp} />;\n\n    const setInitialFormData = () => {\n        const form_data = {\n            income_source,\n            employment_status,\n            employment_industry,\n            occupation,\n            source_of_wealth,\n            education_level,\n            net_income,\n            estimated_worth,\n            account_turnover,\n            ...(has_trading_experience && {\n                binary_options_trading_experience,\n                binary_options_trading_frequency,\n                cfd_trading_experience,\n                cfd_trading_frequency,\n                forex_trading_experience,\n                forex_trading_frequency,\n                other_instruments_trading_experience,\n                other_instruments_trading_frequency,\n            }),\n        };\n        if (!is_mf) {\n            return form_data;\n        }\n        delete form_data.employment_status;\n        return form_data;\n    };\n\n    return (\n        <React.Fragment>\n            <Formik\n                initialValues={setInitialFormData()}\n                enableReinitialize\n                validate={validateFields}\n                onSubmit={onSubmit}\n            >\n                {({\n                    values,\n                    errors,\n                    status,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                    setFieldTouched,\n                    dirty,\n                }) => (\n                    <React.Fragment>\n                        {!is_appstore && isMobile() && is_confirmation_visible && (\n                            <ConfirmationPage toggleModal={toggleConfirmationModal} onSubmit={handleSubmit} />\n                        )}\n                        {(isDesktop() || is_appstore) && (\n                            <ConfirmationModal\n                                is_visible={is_confirmation_visible}\n                                toggleModal={toggleConfirmationModal}\n                                onSubmit={handleSubmit}\n                            />\n                        )}\n                        <LeaveConfirm onDirty={isMobile() ? showForm : () => undefined} />\n                        {is_form_visible && (\n                            <form className='account-form account-form__financial-assessment' onSubmit={handleSubmit}>\n                                {is_mf && is_financial_information_incomplete && !is_submit_success && (\n                                    <div className='financial-banner'>\n                                        <div className='financial-banner__frame'>\n                                            <div className='financial-banner__container'>\n                                                <Icon icon='IcAlertWarning' />\n                                                {isMobile() ? (\n                                                    <Text size='xxxs' line_height='s'>\n                                                        <Localize i18n_default_text='To enable withdrawals, please complete your financial assessment.' />\n                                                    </Text>\n                                                ) : (\n                                                    <Text size='xxs' line_height='l'>\n                                                        <Localize i18n_default_text='You can only make deposits at the moment. To enable withdrawals, please complete your financial assessment.' />\n                                                    </Text>\n                                                )}\n                                            </div>\n                                        </div>\n                                    </div>\n                                )}\n                                <FormBody scroll_offset={getScrollOffset()}>\n                                    <FormSubHeader\n                                        title={localize('Financial information')}\n                                        subtitle={`(${localize('All fields are required')})`}\n                                    />\n                                    <FormBodySection\n                                        has_side_note={is_appstore}\n                                        side_note={localize(\n                                            'We’re legally obliged to ask for your financial information.'\n                                        )}\n                                    >\n                                        <fieldset className='account-form__fieldset'>\n                                            <DesktopWrapper>\n                                                <Dropdown\n                                                    placeholder={localize('Source of income')}\n                                                    is_align_text_left\n                                                    name='income_source'\n                                                    list={getIncomeSourceList()}\n                                                    value={values.income_source}\n                                                    onChange={handleChange}\n                                                    handleBlur={handleBlur}\n                                                    error={touched.income_source && errors.income_source}\n                                                />\n                                            </DesktopWrapper>\n                                            <MobileWrapper>\n                                                <SelectNative\n                                                    placeholder={localize('Please select')}\n                                                    name='income_source'\n                                                    label={localize('Source of income')}\n                                                    list_items={getIncomeSourceList()}\n                                                    value={values.income_source}\n                                                    error={touched.income_source ? errors.income_source : undefined}\n                                                    onChange={e => {\n                                                        setFieldTouched('income_source', true);\n                                                        handleChange(e);\n                                                    }}\n                                                />\n                                            </MobileWrapper>\n                                        </fieldset>\n                                        {!is_mf && (\n                                            <fieldset className='account-form__fieldset'>\n                                                <DesktopWrapper>\n                                                    <Dropdown\n                                                        placeholder={localize('Employment status')}\n                                                        is_align_text_left\n                                                        name='employment_status'\n                                                        list={getEmploymentStatusList()}\n                                                        value={values.employment_status}\n                                                        onChange={handleChange}\n                                                        handleBlur={handleBlur}\n                                                        error={touched.employment_status && errors.employment_status}\n                                                    />\n                                                </DesktopWrapper>\n                                                <MobileWrapper>\n                                                    <SelectNative\n                                                        placeholder={localize('Please select')}\n                                                        name='employment_status'\n                                                        label={localize('Employment status')}\n                                                        list_items={getEmploymentStatusList()}\n                                                        value={values.employment_status}\n                                                        error={\n                                                            touched.employment_status\n                                                                ? errors.employment_status\n                                                                : undefined\n                                                        }\n                                                        onChange={e => {\n                                                            setFieldTouched('employment_status', true);\n                                                            handleChange(e);\n                                                        }}\n                                                    />\n                                                </MobileWrapper>\n                                            </fieldset>\n                                        )}\n                                        <fieldset className='account-form__fieldset'>\n                                            <DesktopWrapper>\n                                                <Dropdown\n                                                    placeholder={localize('Industry of employment')}\n                                                    is_align_text_left\n                                                    name='employment_industry'\n                                                    list={getEmploymentIndustryList()}\n                                                    value={values.employment_industry}\n                                                    onChange={handleChange}\n                                                    handleBlur={handleBlur}\n                                                    error={touched.employment_industry && errors.employment_industry}\n                                                />\n                                            </DesktopWrapper>\n                                            <MobileWrapper>\n                                                <SelectNative\n                                                    placeholder={localize('Please select')}\n                                                    name='employment_industry'\n                                                    label={localize('Industry of employment')}\n                                                    list_items={getEmploymentIndustryList()}\n                                                    value={values.employment_industry}\n                                                    error={\n                                                        touched.employment_industry\n                                                            ? errors.employment_industry\n                                                            : undefined\n                                                    }\n                                                    onChange={e => {\n                                                        setFieldTouched('employment_industry', true);\n                                                        handleChange(e);\n                                                    }}\n                                                />\n                                            </MobileWrapper>\n                                        </fieldset>\n                                        <fieldset className='account-form__fieldset'>\n                                            <DesktopWrapper>\n                                                <Dropdown\n                                                    className='account-form__occupation'\n                                                    placeholder={localize('Occupation')}\n                                                    is_align_text_left\n                                                    name='occupation'\n                                                    list={getOccupationList()}\n                                                    value={values.occupation}\n                                                    onChange={handleChange}\n                                                    handleBlur={handleBlur}\n                                                    error={touched.occupation && errors.occupation}\n                                                />\n                                            </DesktopWrapper>\n                                            <MobileWrapper>\n                                                <SelectNative\n                                                    placeholder={localize('Please select')}\n                                                    name='occupation'\n                                                    label={localize('Occupation')}\n                                                    list_items={getOccupationList()}\n                                                    value={values.occupation}\n                                                    error={touched.occupation ? errors.occupation : undefined}\n                                                    onChange={e => {\n                                                        setFieldTouched('occupation', true);\n                                                        handleChange(e);\n                                                    }}\n                                                />\n                                            </MobileWrapper>\n                                        </fieldset>\n                                        <fieldset className='account-form__fieldset'>\n                                            <DesktopWrapper>\n                                                <Dropdown\n                                                    placeholder={localize('Source of wealth')}\n                                                    is_align_text_left\n                                                    name='source_of_wealth'\n                                                    list={getSourceOfWealthList()}\n                                                    value={values.source_of_wealth}\n                                                    onChange={handleChange}\n                                                    handleBlur={handleBlur}\n                                                    error={touched.source_of_wealth && errors.source_of_wealth}\n                                                />\n                                            </DesktopWrapper>\n                                            <MobileWrapper>\n                                                <SelectNative\n                                                    placeholder={localize('Please select')}\n                                                    name='source_of_wealth'\n                                                    label={localize('Source of wealth')}\n                                                    list_items={getSourceOfWealthList()}\n                                                    value={values.source_of_wealth}\n                                                    error={\n                                                        touched.source_of_wealth ? errors.source_of_wealth : undefined\n                                                    }\n                                                    onChange={e => {\n                                                        setFieldTouched('source_of_wealth', true);\n                                                        handleChange(e);\n                                                    }}\n                                                />\n                                            </MobileWrapper>\n                                        </fieldset>\n                                        <fieldset className='account-form__fieldset'>\n                                            <DesktopWrapper>\n                                                <Dropdown\n                                                    placeholder={localize('Level of education')}\n                                                    is_align_text_left\n                                                    name='education_level'\n                                                    list={getEducationLevelList()}\n                                                    value={values.education_level}\n                                                    onChange={handleChange}\n                                                    handleBlur={handleBlur}\n                                                    error={touched.education_level && errors.education_level}\n                                                />\n                                            </DesktopWrapper>\n                                            <MobileWrapper>\n                                                <SelectNative\n                                                    placeholder={localize('Please select')}\n                                                    name='education_level'\n                                                    label={localize('Level of education')}\n                                                    list_items={getEducationLevelList()}\n                                                    value={values.education_level}\n                                                    error={touched.education_level ? errors.education_level : undefined}\n                                                    onChange={e => {\n                                                        setFieldTouched('education_level', true);\n                                                        handleChange(e);\n                                                    }}\n                                                />\n                                            </MobileWrapper>\n                                        </fieldset>\n                                        <fieldset className='account-form__fieldset'>\n                                            <DesktopWrapper>\n                                                <Dropdown\n                                                    placeholder={localize('Net annual income')}\n                                                    is_align_text_left\n                                                    name='net_income'\n                                                    list={getNetIncomeList()}\n                                                    value={values.net_income}\n                                                    onChange={handleChange}\n                                                    handleBlur={handleBlur}\n                                                    error={touched.net_income && errors.net_income}\n                                                />\n                                            </DesktopWrapper>\n                                            <MobileWrapper>\n                                                <SelectNative\n                                                    placeholder={localize('Please select')}\n                                                    name='net_income'\n                                                    label={localize('Net annual income')}\n                                                    list_items={getNetIncomeList()}\n                                                    value={values.net_income}\n                                                    error={touched.net_income ? errors.net_income : undefined}\n                                                    onChange={e => {\n                                                        setFieldTouched('net_income', true);\n                                                        handleChange(e);\n                                                    }}\n                                                />\n                                            </MobileWrapper>\n                                        </fieldset>\n                                        <fieldset className='account-form__fieldset'>\n                                            <DesktopWrapper>\n                                                <Dropdown\n                                                    placeholder={localize('Estimated net worth')}\n                                                    is_alignment_top\n                                                    is_align_text_left\n                                                    name='estimated_worth'\n                                                    list={getEstimatedWorthList()}\n                                                    value={values.estimated_worth}\n                                                    onChange={handleChange}\n                                                    handleBlur={handleBlur}\n                                                    error={touched.estimated_worth && errors.estimated_worth}\n                                                />\n                                            </DesktopWrapper>\n                                            <MobileWrapper>\n                                                <SelectNative\n                                                    placeholder={localize('Please select')}\n                                                    name='estimated_worth'\n                                                    label={localize('Estimated net worth')}\n                                                    list_items={getEstimatedWorthList()}\n                                                    value={values.estimated_worth}\n                                                    error={touched.estimated_worth ? errors.estimated_worth : undefined}\n                                                    onChange={e => {\n                                                        setFieldTouched('estimated_worth', true);\n                                                        handleChange(e);\n                                                    }}\n                                                />\n                                            </MobileWrapper>\n                                        </fieldset>\n                                        <fieldset className='account-form__fieldset'>\n                                            <DesktopWrapper>\n                                                <Dropdown\n                                                    placeholder={localize('Anticipated account turnover')}\n                                                    is_alignment_top\n                                                    is_align_text_left\n                                                    name='account_turnover'\n                                                    list={getAccountTurnoverList()}\n                                                    value={values.account_turnover}\n                                                    onChange={handleChange}\n                                                    handleBlur={handleBlur}\n                                                    error={touched.account_turnover && errors.account_turnover}\n                                                />\n                                            </DesktopWrapper>\n                                            <MobileWrapper>\n                                                <SelectNative\n                                                    placeholder={localize('Please select')}\n                                                    name='account_turnover'\n                                                    label={localize('Anticipated account turnover')}\n                                                    list_items={getAccountTurnoverList()}\n                                                    value={values.account_turnover}\n                                                    error={\n                                                        touched.account_turnover ? errors.account_turnover : undefined\n                                                    }\n                                                    onChange={e => {\n                                                        setFieldTouched('account_turnover', true);\n                                                        handleChange(e);\n                                                    }}\n                                                />\n                                            </MobileWrapper>\n                                        </fieldset>\n                                        {/* Trading experience fieldset */}\n                                    </FormBodySection>\n                                    {has_trading_experience && (\n                                        <>\n                                            <FormSubHeader\n                                                title={localize('Trading experience')}\n                                                subtitle={`(${localize('All fields are required')})`}\n                                            />\n                                            <FormBodySection\n                                                has_side_note={is_appstore}\n                                                side_note={localize('Tell us about your trading experience.')}\n                                            >\n                                                <fieldset className='account-form__fieldset'>\n                                                    <DesktopWrapper>\n                                                        <Dropdown\n                                                            placeholder={localize('Forex trading experience')}\n                                                            is_align_text_left\n                                                            name='forex_trading_experience'\n                                                            list={getForexTradingExperienceList()}\n                                                            value={values.forex_trading_experience}\n                                                            onChange={handleChange}\n                                                            handleBlur={handleBlur}\n                                                            error={\n                                                                touched.forex_trading_experience &&\n                                                                errors.forex_trading_experience\n                                                            }\n                                                        />\n                                                    </DesktopWrapper>\n                                                    <MobileWrapper>\n                                                        <SelectNative\n                                                            placeholder={localize('Please select')}\n                                                            name='forex_trading_experience'\n                                                            label={localize('Forex trading experience')}\n                                                            list_items={getForexTradingExperienceList()}\n                                                            value={values.forex_trading_experience}\n                                                            error={\n                                                                touched.forex_trading_experience\n                                                                    ? errors.forex_trading_experience\n                                                                    : undefined\n                                                            }\n                                                            onChange={e => {\n                                                                setFieldTouched('forex_trading_experience', true);\n                                                                handleChange(e);\n                                                            }}\n                                                        />\n                                                    </MobileWrapper>\n                                                </fieldset>\n                                                <fieldset className='account-form__fieldset'>\n                                                    <DesktopWrapper>\n                                                        <Dropdown\n                                                            placeholder={localize('Forex trading frequency')}\n                                                            is_align_text_left\n                                                            name='forex_trading_frequency'\n                                                            list={getForexTradingFrequencyList()}\n                                                            value={values.forex_trading_frequency}\n                                                            onChange={handleChange}\n                                                            handleBlur={handleBlur}\n                                                            error={\n                                                                touched.forex_trading_frequency &&\n                                                                errors.forex_trading_frequency\n                                                            }\n                                                        />\n                                                    </DesktopWrapper>\n                                                    <MobileWrapper>\n                                                        <SelectNative\n                                                            placeholder={localize('Please select')}\n                                                            name='forex_trading_frequency'\n                                                            label={localize('Forex trading frequency')}\n                                                            list_items={getForexTradingFrequencyList()}\n                                                            value={values.forex_trading_frequency}\n                                                            error={\n                                                                touched.forex_trading_frequency\n                                                                    ? errors.forex_trading_frequency\n                                                                    : undefined\n                                                            }\n                                                            onChange={e => {\n                                                                setFieldTouched('forex_trading_frequency', true);\n                                                                handleChange(e);\n                                                            }}\n                                                        />\n                                                    </MobileWrapper>\n                                                </fieldset>\n                                                <fieldset className='account-form__fieldset'>\n                                                    <DesktopWrapper>\n                                                        <Dropdown\n                                                            placeholder={localize('Binary options trading experience')}\n                                                            is_align_text_left\n                                                            name='binary_options_trading_experience'\n                                                            list={getBinaryOptionsTradingExperienceList()}\n                                                            value={values.binary_options_trading_experience}\n                                                            onChange={handleChange}\n                                                            handleBlur={handleBlur}\n                                                            error={\n                                                                touched.binary_options_trading_experience &&\n                                                                errors.binary_options_trading_experience\n                                                            }\n                                                        />\n                                                    </DesktopWrapper>\n                                                    <MobileWrapper>\n                                                        <SelectNative\n                                                            placeholder={localize('Please select')}\n                                                            name='binary_options_trading_experience'\n                                                            label={localize('Binary options trading experience')}\n                                                            list_items={getBinaryOptionsTradingExperienceList()}\n                                                            value={values.binary_options_trading_experience}\n                                                            error={\n                                                                touched.binary_options_trading_experience\n                                                                    ? errors.binary_options_trading_experience\n                                                                    : undefined\n                                                            }\n                                                            onChange={e => {\n                                                                setFieldTouched(\n                                                                    'binary_options_trading_experience',\n                                                                    true\n                                                                );\n                                                                handleChange(e);\n                                                            }}\n                                                        />\n                                                    </MobileWrapper>\n                                                </fieldset>\n                                                <fieldset className='account-form__fieldset'>\n                                                    <DesktopWrapper>\n                                                        <Dropdown\n                                                            placeholder={localize('Binary options trading frequency')}\n                                                            is_align_text_left\n                                                            name='binary_options_trading_frequency'\n                                                            list={getBinaryOptionsTradingFrequencyList()}\n                                                            value={values.binary_options_trading_frequency}\n                                                            onChange={handleChange}\n                                                            handleBlur={handleBlur}\n                                                            error={\n                                                                touched.binary_options_trading_frequency &&\n                                                                errors.binary_options_trading_frequency\n                                                            }\n                                                        />\n                                                    </DesktopWrapper>\n                                                    <MobileWrapper>\n                                                        <SelectNative\n                                                            placeholder={localize('Please select')}\n                                                            name='binary_options_trading_frequency'\n                                                            label={localize('Binary options trading frequency')}\n                                                            list_items={getBinaryOptionsTradingFrequencyList()}\n                                                            value={values.binary_options_trading_frequency}\n                                                            error={\n                                                                touched.binary_options_trading_frequency\n                                                                    ? errors.binary_options_trading_frequency\n                                                                    : undefined\n                                                            }\n                                                            onChange={e => {\n                                                                setFieldTouched(\n                                                                    'binary_options_trading_frequency',\n                                                                    true\n                                                                );\n                                                                handleChange(e);\n                                                            }}\n                                                        />\n                                                    </MobileWrapper>\n                                                </fieldset>\n                                                <fieldset className='account-form__fieldset'>\n                                                    <DesktopWrapper>\n                                                        <Dropdown\n                                                            placeholder={localize('CFD trading experience')}\n                                                            is_align_text_left\n                                                            name='cfd_trading_experience'\n                                                            list={getCfdTradingExperienceList()}\n                                                            value={values.cfd_trading_experience}\n                                                            onChange={handleChange}\n                                                            handleBlur={handleBlur}\n                                                            error={\n                                                                touched.cfd_trading_experience &&\n                                                                errors.cfd_trading_experience\n                                                            }\n                                                        />\n                                                    </DesktopWrapper>\n                                                    <MobileWrapper>\n                                                        <SelectNative\n                                                            placeholder={localize('Please select')}\n                                                            name='cfd_trading_experience'\n                                                            label={localize('CFD trading experience')}\n                                                            list_items={getCfdTradingExperienceList()}\n                                                            value={values.cfd_trading_experience}\n                                                            error={\n                                                                touched.cfd_trading_experience\n                                                                    ? errors.cfd_trading_experience\n                                                                    : undefined\n                                                            }\n                                                            onChange={e => {\n                                                                setFieldTouched('cfd_trading_experience', true);\n                                                                handleChange(e);\n                                                            }}\n                                                        />\n                                                    </MobileWrapper>\n                                                </fieldset>\n                                                <fieldset className='account-form__fieldset'>\n                                                    <DesktopWrapper>\n                                                        <Dropdown\n                                                            placeholder={localize('CFD trading frequency')}\n                                                            is_align_text_left\n                                                            name='cfd_trading_frequency'\n                                                            list={getCfdTradingFrequencyList()}\n                                                            value={values.cfd_trading_frequency}\n                                                            onChange={handleChange}\n                                                            handleBlur={handleBlur}\n                                                            error={\n                                                                touched.cfd_trading_frequency &&\n                                                                errors.cfd_trading_frequency\n                                                            }\n                                                        />\n                                                    </DesktopWrapper>\n                                                    <MobileWrapper>\n                                                        <SelectNative\n                                                            placeholder={localize('Please select')}\n                                                            name='cfd_trading_frequency'\n                                                            label={localize('CFD trading frequency')}\n                                                            list_items={getCfdTradingFrequencyList()}\n                                                            value={values.cfd_trading_frequency}\n                                                            error={\n                                                                touched.cfd_trading_frequency\n                                                                    ? errors.cfd_trading_frequency\n                                                                    : undefined\n                                                            }\n                                                            onChange={e => {\n                                                                setFieldTouched('cfd_trading_frequency', true);\n                                                                handleChange(e);\n                                                            }}\n                                                        />\n                                                    </MobileWrapper>\n                                                </fieldset>\n                                                <fieldset className='account-form__fieldset'>\n                                                    <DesktopWrapper>\n                                                        <Dropdown\n                                                            placeholder={localize(\n                                                                'Other trading instruments experience'\n                                                            )}\n                                                            is_align_text_left\n                                                            name='other_instruments_trading_experience'\n                                                            list={getOtherInstrumentsTradingExperienceList()}\n                                                            value={values.other_instruments_trading_experience}\n                                                            onChange={handleChange}\n                                                            handleBlur={handleBlur}\n                                                            error={\n                                                                touched.other_instruments_trading_experience &&\n                                                                errors.other_instruments_trading_experience\n                                                            }\n                                                        />\n                                                    </DesktopWrapper>\n                                                    <MobileWrapper>\n                                                        <SelectNative\n                                                            placeholder={localize('Please select')}\n                                                            name='other_instruments_trading_experience'\n                                                            label={localize('Other trading instruments experience')}\n                                                            list_items={getOtherInstrumentsTradingExperienceList()}\n                                                            value={values.other_instruments_trading_experience}\n                                                            error={\n                                                                touched.other_instruments_trading_experience\n                                                                    ? errors.other_instruments_trading_experience\n                                                                    : undefined\n                                                            }\n                                                            onChange={e => {\n                                                                setFieldTouched(\n                                                                    'other_instruments_trading_experience',\n                                                                    true\n                                                                );\n                                                                handleChange(e);\n                                                            }}\n                                                        />\n                                                    </MobileWrapper>\n                                                </fieldset>\n                                                <fieldset className='account-form__fieldset'>\n                                                    <DesktopWrapper>\n                                                        <Dropdown\n                                                            placeholder={localize(\n                                                                'Other trading instruments frequency'\n                                                            )}\n                                                            is_alignment_top\n                                                            is_align_text_left\n                                                            name='other_instruments_trading_frequency'\n                                                            list={getOtherInstrumentsTradingFrequencyList()}\n                                                            value={values.other_instruments_trading_frequency}\n                                                            onChange={handleChange}\n                                                            handleBlur={handleBlur}\n                                                            error={\n                                                                touched.other_instruments_trading_frequency &&\n                                                                errors.other_instruments_trading_frequency\n                                                            }\n                                                        />\n                                                    </DesktopWrapper>\n                                                    <MobileWrapper>\n                                                        <SelectNative\n                                                            placeholder={localize('Please select')}\n                                                            name='other_instruments_trading_frequency'\n                                                            label={localize('Other trading instruments frequency')}\n                                                            list_items={getOtherInstrumentsTradingFrequencyList()}\n                                                            value={values.other_instruments_trading_frequency}\n                                                            error={\n                                                                touched.other_instruments_trading_frequency\n                                                                    ? errors.other_instruments_trading_frequency\n                                                                    : undefined\n                                                            }\n                                                            onChange={e => {\n                                                                setFieldTouched(\n                                                                    'other_instruments_trading_frequency',\n                                                                    true\n                                                                );\n                                                                handleChange(e);\n                                                            }}\n                                                        />\n                                                    </MobileWrapper>\n                                                </fieldset>\n                                            </FormBodySection>\n                                        </>\n                                    )}\n                                </FormBody>\n                                <FormFooter>\n                                    {status && status.msg && <FormSubmitErrorMessage message={status.msg} />}\n                                    {isMobile() && !is_appstore && !is_mf && (\n                                        <Text\n                                            align='center'\n                                            size='xxs'\n                                            className='account-form__footer-all-fields-required'\n                                        >\n                                            {localize('All fields are required')}\n                                        </Text>\n                                    )}\n                                    <Button\n                                        type='button'\n                                        className={classNames('account-form__footer-btn', {\n                                            'dc-btn--green': is_submit_success,\n                                        })}\n                                        onClick={() => onClickSubmit(handleSubmit)}\n                                        is_disabled={\n                                            isSubmitting || !dirty || is_btn_loading || Object.keys(errors).length > 0\n                                        }\n                                        has_effect\n                                        is_loading={is_btn_loading}\n                                        is_submit_success={is_submit_success}\n                                        text={is_appstore ? localize('Save') : localize('Submit')}\n                                        large\n                                        primary\n                                    />\n                                </FormFooter>\n                            </form>\n                        )}\n                    </React.Fragment>\n                )}\n            </Formik>\n        </React.Fragment>\n    );\n});\n\nexport default withRouter(FinancialAssessment);\n","import FinancialAssessment from './financial-assessment';\n\nexport default FinancialAssessment;\n","import React from 'react';\nimport { localize, Localize } from '@deriv/translations';\nimport FormBody from 'Components/form-body';\nimport FormSubHeader from 'Components/form-sub-header';\nimport { RiskToleranceWarningModal, TestWarningModal } from 'Components/trading-assessment';\nimport { trading_assessment_questions } from 'Configs/trading-assessment-config';\nimport {\n    DesktopWrapper,\n    Dropdown,\n    MobileWrapper,\n    SelectNative,\n    Text,\n    FormSubmitButton,\n    Button,\n    Loading,\n} from '@deriv/components';\nimport FormFooter from 'Components/form-footer';\nimport { isMobile, routes, WS } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useHistory, withRouter } from 'react-router';\nimport { Formik, Form } from 'formik';\n\nconst populateData = form_data => {\n    return {\n        risk_tolerance: form_data.risk_tolerance,\n        source_of_experience: form_data.source_of_experience,\n        cfd_experience: form_data.cfd_experience,\n        cfd_frequency: form_data.cfd_frequency,\n        trading_experience_financial_instruments: form_data.trading_experience_financial_instruments,\n        trading_frequency_financial_instruments: form_data.trading_frequency_financial_instruments,\n        cfd_trading_definition: form_data.cfd_trading_definition,\n        leverage_impact_trading: form_data.leverage_impact_trading,\n        leverage_trading_high_risk_stop_loss: form_data.leverage_trading_high_risk_stop_loss,\n        required_initial_margin: form_data.required_initial_margin,\n    };\n};\n\nconst TradingAssessment = observer(() => {\n    const { client } = useStore();\n    const { is_virtual, setFinancialAndTradingAssessment } = client;\n    const history = useHistory();\n    const [is_loading, setIsLoading] = React.useState(true);\n    const [is_btn_loading, setIsBtnLoading] = React.useState(false);\n    const [is_submit_success, setIsSubmitSuccess] = React.useState(false);\n    const [initial_form_values, setInitialFormValues] = React.useState({});\n    const [should_accept_risk, setShouldAcceptRisk] = React.useState(false);\n    const [should_show_warning_modal, setShouldShowWarningModal] = React.useState(false);\n    const [form_data, setFormData] = React.useState({});\n\n    React.useEffect(() => {\n        if (is_virtual) {\n            setIsLoading(false);\n            history.push(routes.personal_details);\n        } else {\n            WS.authorized.storage.getFinancialAssessment().then(data => {\n                // set initial form data\n                setInitialFormValues(() => populateData(data.get_financial_assessment));\n                setIsLoading(false);\n                setIsSubmitSuccess(false);\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handleSubmit = async values => {\n        setFormData(values);\n        setIsBtnLoading(false);\n        setIsSubmitSuccess(true);\n        if (values.risk_tolerance === 'No') {\n            setShouldAcceptRisk(true);\n        } else {\n            setIsBtnLoading(true);\n            const response = await WS.authorized.storage.getFinancialAssessment();\n            const { trading_score: prev_score } = response?.get_financial_assessment;\n            const form_payload = {\n                trading_experience_regulated: {\n                    cfd_experience: values.cfd_experience,\n                    cfd_frequency: values.cfd_frequency,\n                    cfd_trading_definition: values.cfd_trading_definition,\n                    leverage_impact_trading: values.leverage_impact_trading,\n                    leverage_trading_high_risk_stop_loss: values.leverage_trading_high_risk_stop_loss,\n                    required_initial_margin: values.required_initial_margin,\n                    risk_tolerance: values.risk_tolerance,\n                    source_of_experience: values.source_of_experience,\n                    trading_experience_financial_instruments: values.trading_experience_financial_instruments,\n                    trading_frequency_financial_instruments: values.trading_frequency_financial_instruments,\n                },\n            };\n            const data = await setFinancialAndTradingAssessment(form_payload);\n            const { trading_score } = data?.set_financial_assessment;\n            setShouldShowWarningModal(prev_score > 0 && trading_score === 0);\n\n            WS.authorized.storage.getFinancialAssessment().then(res_data => {\n                setInitialFormValues(res_data.get_financial_assessment);\n            });\n            setIsBtnLoading(false);\n            setTimeout(() => setIsSubmitSuccess(false), 10000);\n        }\n    };\n\n    const handleAcceptRisk = async () => {\n        await handleSubmit({ ...form_data, risk_tolerance: 'Yes' });\n        setShouldAcceptRisk(false);\n        setIsBtnLoading(false);\n        setIsSubmitSuccess(false);\n    };\n\n    if (is_loading) return <Loading is_fullscreen={false} className='account__initial-loader' />;\n    if (should_accept_risk) {\n        return (\n            <RiskToleranceWarningModal\n                show_risk_modal\n                title={localize('Risk Tolerance Warning')}\n                button_text={localize('Yes, I understand the risk.')}\n                handleAcceptRisk={handleAcceptRisk}\n                body_content={\n                    <Localize\n                        i18n_default_text='CFDs and other financial instruments come with a high risk of losing money rapidly due to leverage. You should consider whether you understand how CFDs and other financial instruments work and whether you can afford to take the high risk of losing your money. <0/><0/> To continue, you must confirm that you understand your capital is at risk.'\n                        components={[<br key={0} />]}\n                    />\n                }\n            />\n        );\n    }\n    if (should_show_warning_modal) {\n        return (\n            <TestWarningModal\n                show_risk_modal={should_show_warning_modal}\n                body_content={\n                    <Text as='p' size='xs'>\n                        <Localize\n                            i18n_default_text='In providing our services to you, we are required to ask you for some information to assess if a given product or service is appropriate for you and whether you have the experience and knowledge to understand the risks involved.<0/><0/>'\n                            components={[<br key={0} />]}\n                        />\n                        <Localize\n                            i18n_default_text='Based on your answers, it looks like you have insufficient knowledge and experience in trading CFDs. CFD trading is risky and you could potentially lose all of your capital.<0/><0/>'\n                            components={[<br key={0} />]}\n                        />\n                        <Localize i18n_default_text='Please note that by clicking ‘OK’, you may be exposing yourself to risks. You may not have the knowledge or experience to properly assess or mitigate these risks, which may be significant, including the risk of losing the entire sum you have invested.' />\n                    </Text>\n                }\n                footer_content={\n                    <Button\n                        type='button'\n                        large\n                        text={localize('OK')}\n                        primary\n                        onClick={() => setShouldShowWarningModal(false)}\n                    />\n                }\n            />\n        );\n    }\n\n    return (\n        <Formik\n            initialValues={initial_form_values}\n            enableReinitialize\n            initialTouched={false}\n            onSubmit={values => {\n                handleSubmit(values);\n            }}\n        >\n            {({ values, dirty, isSubmitting, handleChange, handleBlur }) => {\n                return (\n                    <Form className='account-form account-form__trading-assessment'>\n                        <FormBody scroll_offset={isMobile() ? '150px' : '80px'}>\n                            <FormSubHeader\n                                title={localize('Trading Experience')}\n                                subtitle={localize('All fields are required')}\n                            />\n                            {trading_assessment_questions().map(item => {\n                                const form_control = item.form_control;\n                                if (item.field_type === 'radio') {\n                                    return (\n                                        <fieldset className='account-form__question' key={form_control}>\n                                            <DesktopWrapper>\n                                                <Text\n                                                    as='h1'\n                                                    color='prominent'\n                                                    weight='bold'\n                                                    size='xs'\n                                                    className='account-form__question--text'\n                                                >\n                                                    {item.question_text}\n                                                </Text>\n                                                <Dropdown\n                                                    is_align_text_left\n                                                    name={form_control}\n                                                    value={values[form_control]}\n                                                    list={item?.answer_options}\n                                                    onChange={handleChange}\n                                                    handleBlur={handleBlur}\n                                                />\n                                            </DesktopWrapper>\n                                            <MobileWrapper>\n                                                <Text\n                                                    as='h1'\n                                                    color='prominent'\n                                                    weight='bold'\n                                                    size='xs'\n                                                    line_height='xl'\n                                                    className='account-form__question--text'\n                                                >\n                                                    {item?.question_text}\n                                                </Text>\n                                                <SelectNative\n                                                    value={values[form_control]}\n                                                    name={form_control}\n                                                    list_items={item?.answer_options}\n                                                    onChange={e => handleChange(e)}\n                                                    should_show_empty_option={false}\n                                                />\n                                            </MobileWrapper>\n                                        </fieldset>\n                                    );\n                                    // eslint-disable-next-line no-else-return\n                                } else {\n                                    return (\n                                        <div key={form_control}>\n                                            {item.questions.map(items => {\n                                                const sub_form_control = items.form_control;\n                                                return (\n                                                    <fieldset key={sub_form_control} className='account-form__question'>\n                                                        <DesktopWrapper>\n                                                            <Text\n                                                                as='h1'\n                                                                color='prominent'\n                                                                weight='bold'\n                                                                size='xs'\n                                                                className='account-form__question--text'\n                                                            >\n                                                                {items.question_text}\n                                                            </Text>\n                                                            <Dropdown\n                                                                is_align_text_left\n                                                                name={sub_form_control}\n                                                                value={values[sub_form_control]}\n                                                                list={items?.answer_options}\n                                                                onChange={handleChange}\n                                                                handleBlur={handleBlur}\n                                                            />\n                                                        </DesktopWrapper>\n                                                        <MobileWrapper>\n                                                            <Text\n                                                                as='h1'\n                                                                color='prominent'\n                                                                weight='bold'\n                                                                size='xs'\n                                                                line_height='xl'\n                                                                className='account-form__question--text'\n                                                            >\n                                                                {items?.question_text}\n                                                            </Text>\n                                                            <SelectNative\n                                                                value={values[sub_form_control]}\n                                                                name={sub_form_control}\n                                                                list_items={items?.answer_options}\n                                                                onChange={e => handleChange(e)}\n                                                                should_show_empty_option={false}\n                                                            />\n                                                        </MobileWrapper>\n                                                    </fieldset>\n                                                );\n                                            })}\n                                        </div>\n                                    );\n                                }\n                            })}\n                        </FormBody>\n                        <FormFooter>\n                            <FormSubmitButton\n                                is_disabled={isSubmitting || !dirty || is_btn_loading}\n                                is_loading={is_btn_loading}\n                                has_effect\n                                is_absolute={isMobile()}\n                                is_submit_success={is_submit_success && !dirty}\n                                green={is_submit_success && !dirty}\n                                label={localize('Submit')}\n                            />\n                        </FormFooter>\n                    </Form>\n                );\n            }}\n        </Formik>\n    );\n});\n\nexport default withRouter(TradingAssessment);\n","import TradingAssessment from './trading-assessment.jsx';\n\nexport default TradingAssessment;\n","export const populateVerificationStatus = account_status => {\n    const { attempts, document, identity, needs_verification } = account_status.authentication;\n    const has_poa = !(document && document.status === 'none');\n    const has_poi = !(identity && identity.status === 'none');\n    const needs_poa = needs_verification.length && needs_verification.includes('document');\n    const needs_poi = needs_verification.length && needs_verification.includes('identity');\n\n    const allow_document_upload = account_status.status.some(status => status === 'allow_document_upload');\n    const allow_poi_resubmission = account_status.status.some(status => status === 'allow_poi_resubmission');\n    const allow_poa_resubmission = account_status.status.some(status => status === 'allow_poa_resubmission');\n    const is_age_verified = account_status.status.some(status => status === 'age_verification');\n    const is_idv_disallowed = account_status.status.some(status => status === 'idv_disallowed');\n    const poa_address_mismatch = account_status.status.some(status => status === 'poa_address_mismatch');\n\n    const identity_status = identity.status;\n    const document_status = document.status;\n\n    const { idv, onfido, manual } = identity.services;\n    const identity_last_attempt = attempts.latest;\n    const has_attempted_idv = !!(attempts.history.length && attempts.history.find(h => h.service === 'idv'));\n\n    return {\n        allow_document_upload,\n        allow_poa_resubmission,\n        allow_poi_resubmission,\n        has_attempted_idv,\n        has_poa,\n        has_poi,\n        identity_last_attempt,\n        identity_status,\n        document_status,\n        idv,\n        is_age_verified,\n        is_idv_disallowed,\n        manual,\n        needs_poa,\n        needs_poi,\n        needs_verification,\n        onfido,\n        poa_address_mismatch,\n    };\n};\n","import { NotRequired as PoaNotRequired } from './not-required';\n\nexport default PoaNotRequired;\n","import React from 'react';\nimport { Icon } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport IconMessageContent from 'Components/icon-message-content';\n\nexport const NotRequired = () => (\n    <IconMessageContent\n        message={localize('Proof of address verification not required')}\n        text={localize(\n            'Your account does not need address verification at this time. We will inform you if address verification is required in the future.'\n        )}\n        icon={<Icon icon='IcPoaVerified' size={128} />}\n    />\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Autocomplete,\n    Loading,\n    Button,\n    Input,\n    DesktopWrapper,\n    MobileWrapper,\n    SelectNative,\n    FormSubmitErrorMessage,\n    Text,\n    useStateCallback,\n} from '@deriv/components';\nimport { Formik, Field } from 'formik';\nimport { localize, Localize } from '@deriv/translations';\nimport {\n    isMobile,\n    removeEmptyPropertiesFromObject,\n    validAddress,\n    validPostCode,\n    validLetterSymbol,\n    validLength,\n    getLocation,\n    WS,\n} from '@deriv/shared';\nimport FormFooter from 'Components/form-footer';\nimport FormBody from 'Components/form-body';\nimport FormBodySection from 'Components/form-body-section';\nimport FormSubHeader from 'Components/form-sub-header';\nimport LoadErrorMessage from 'Components/load-error-message';\nimport LeaveConfirm from 'Components/leave-confirm';\nimport FileUploaderContainer from 'Components/file-uploader-container';\nimport { observer, useStore } from '@deriv/stores';\n\nconst validate = (errors, values) => (fn, arr, err_msg) => {\n    arr.forEach(field => {\n        const value = values[field];\n        if (!fn(value) && !errors[field] && err_msg !== true) errors[field] = err_msg;\n    });\n};\n\nlet file_uploader_ref = null;\n\nconst UploaderSideNote = () => (\n    <div className='account-poa__upload-box account-poa__upload-box-dashboard'>\n        <Text color='less-prominent' size={isMobile() ? 'xxs' : 'xs'} line_height='s'>\n            <Localize i18n_default_text='A recent utility bill (e.g. electricity, water or gas)' />\n        </Text>\n        <Text color='less-prominent' size={isMobile() ? 'xxs' : 'xs'} line_height='s'>\n            <Localize i18n_default_text='A recent bank statement or government-issued letter with your name and address.' />\n        </Text>\n    </div>\n);\n\nconst ProofOfAddressForm = observer(({ is_resubmit, onSubmit }) => {\n    const { client, notifications } = useStore();\n    const { account_settings, fetchResidenceList, fetchStatesList, is_eu, states_list } = client;\n    const {\n        addNotificationMessageByKey: addNotificationByKey,\n        removeNotificationMessage,\n        removeNotificationByKey,\n    } = notifications;\n    const [document_file, setDocumentFile] = React.useState({ files: [], error_message: null });\n    const [is_loading, setIsLoading] = React.useState(true);\n    const [form_values, setFormValues] = useStateCallback({});\n    const [api_initial_load_error, setAPIInitialLoadError] = React.useState(null);\n    const [form_state, setFormState] = useStateCallback({ should_show_form: true });\n\n    React.useEffect(() => {\n        fetchResidenceList().then(() => {\n            Promise.all([fetchStatesList(), WS.wait('get_settings')]).then(() => {\n                const { citizen, tax_identification_number, tax_residence } = account_settings;\n                setFormValues(\n                    {\n                        ...account_settings,\n                        ...(is_eu ? { citizen, tax_identification_number, tax_residence } : {}),\n                    },\n                    () => setIsLoading(false)\n                );\n            });\n        });\n    }, [account_settings, fetchResidenceList, fetchStatesList, is_eu, setFormValues]);\n\n    const validateFields = values => {\n        Object.entries(values).forEach(([key, value]) => (values[key] = value.trim()));\n\n        setFormState({ ...form_state, ...{ should_allow_submit: false } });\n        const errors = {};\n        const validateValues = validate(errors, values);\n\n        const required_fields = ['address_line_1', 'address_city'];\n        validateValues(val => val, required_fields, localize('This field is required'));\n\n        const address_line_1_validation_result = validAddress(values.address_line_1, { is_required: true });\n        if (!address_line_1_validation_result.is_ok) {\n            errors.address_line_1 = address_line_1_validation_result.message;\n        }\n        const address_line_2_validation_result = validAddress(values.address_line_2);\n        if (!address_line_2_validation_result.is_ok) {\n            errors.address_line_2 = address_line_2_validation_result.message;\n        }\n\n        const validation_letter_symbol_message = localize(\n            'Only letters, space, hyphen, period, and apostrophe are allowed.'\n        );\n\n        if (values.address_city && !validLetterSymbol(values.address_city)) {\n            errors.address_city = validation_letter_symbol_message;\n        }\n\n        // only add state/province validation for countries that don't have states list fetched from API\n        if (values.address_state && !validLetterSymbol(values.address_state) && states_list?.length < 1) {\n            errors.address_state = validation_letter_symbol_message;\n        }\n\n        if (values.address_postcode) {\n            if (!validLength(values.address_postcode, { min: 0, max: 20 })) {\n                errors.address_postcode = localize('Please enter a {{field_name}} under {{max_number}} characters.', {\n                    field_name: localize('Postal/ZIP code'),\n                    max_number: 20,\n                    interpolation: { escapeValue: false },\n                });\n            } else if (!validPostCode(values.address_postcode)) {\n                errors.address_postcode = localize('Only letters, numbers, space, and hyphen are allowed.');\n            }\n        }\n\n        return errors;\n    };\n\n    const showForm = bool => {\n        setFormState({ ...form_state, ...{ should_show_form: bool } });\n    };\n\n    // Settings update is handled here\n    const onSubmitValues = (values, { setStatus, setSubmitting }) => {\n        setStatus({ msg: '' });\n        setFormState({ ...form_state, ...{ is_btn_loading: true } });\n        let settings_values = { ...values };\n\n        if (values.address_state && states_list.length) {\n            settings_values.address_state = getLocation(states_list, values.address_state, 'value') || '';\n        }\n\n        if (is_eu) {\n            const { citizen, tax_residence, tax_identification_number } = form_values;\n            settings_values = removeEmptyPropertiesFromObject({\n                ...settings_values,\n                citizen,\n                tax_identification_number,\n                tax_residence,\n            });\n        }\n\n        WS.setSettings(settings_values).then(data => {\n            if (data.error) {\n                setStatus({ msg: data.error.message });\n                setFormState({ ...form_state, ...{ is_btn_loading: false } });\n                setSubmitting(false);\n            } else {\n                // force request to update settings cache since settings have been updated\n                WS.authorized.storage\n                    .getSettings()\n                    .then(({ error, get_settings }) => {\n                        if (error) {\n                            setAPIInitialLoadError(error.message);\n                            setSubmitting(false);\n                            return;\n                        }\n                        const { address_line_1, address_line_2, address_city, address_state, address_postcode } =\n                            get_settings;\n\n                        setFormValues(\n                            {\n                                address_line_1,\n                                address_line_2,\n                                address_city,\n                                address_state,\n                                address_postcode,\n                            },\n                            () => setIsLoading(false)\n                        );\n                    })\n                    .then(() => {\n                        // upload files\n                        file_uploader_ref?.current\n                            .upload()\n                            .then(api_response => {\n                                if (api_response.warning) {\n                                    setStatus({ msg: api_response.message });\n                                    setFormState({ ...form_state, ...{ is_btn_loading: false } });\n                                } else {\n                                    WS.authorized.storage.getAccountStatus().then(({ error, get_account_status }) => {\n                                        if (error) {\n                                            setAPIInitialLoadError(error.message);\n                                            setSubmitting(false);\n                                            return;\n                                        }\n                                        setFormState(\n                                            { ...form_state, ...{ is_submit_success: true, is_btn_loading: false } },\n                                            () => {\n                                                const { identity, needs_verification } =\n                                                    get_account_status.authentication;\n                                                const has_poi = !(identity && identity.status === 'none');\n                                                // TODO: clean all of this up by simplifying the manually toggled notifications functions\n                                                const needs_poi =\n                                                    needs_verification.length &&\n                                                    needs_verification.includes('identity');\n                                                onSubmit({ has_poi });\n                                                removeNotificationMessage({ key: 'authenticate' });\n                                                removeNotificationByKey({ key: 'authenticate' });\n                                                removeNotificationMessage({ key: 'needs_poa' });\n                                                removeNotificationByKey({ key: 'needs_poa' });\n                                                removeNotificationMessage({ key: 'poa_expired' });\n                                                removeNotificationByKey({ key: 'poa_expired' });\n                                                if (needs_poi) {\n                                                    addNotificationByKey('needs_poi');\n                                                }\n                                            }\n                                        );\n                                    });\n                                }\n                            })\n                            .catch(error => {\n                                setStatus({ msg: error.message });\n                                setFormState({ ...form_state, ...{ is_btn_loading: false } });\n                            })\n                            .then(() => {\n                                setSubmitting(false);\n                                setFormState({ ...form_state, ...{ is_btn_loading: false } });\n                            });\n                    });\n            }\n        });\n    };\n\n    const { address_line_1, address_line_2, address_city, address_state, address_postcode } = form_values;\n\n    const form_initial_values = {\n        address_line_1,\n        address_line_2,\n        address_city,\n        address_state,\n        address_postcode,\n    };\n\n    if (api_initial_load_error) {\n        return <LoadErrorMessage error_message={api_initial_load_error} />;\n    }\n    if (is_loading) return <Loading is_fullscreen={false} className='account__initial-loader' />;\n    const mobile_scroll_offset = status && status.msg ? '200px' : '154px';\n\n    if (form_initial_values.address_state) {\n        form_initial_values.address_state = states_list.length\n            ? getLocation(states_list, form_initial_values.address_state, 'text')\n            : form_initial_values.address_state;\n    } else {\n        form_initial_values.address_state = '';\n    }\n\n    return (\n        <Formik initialValues={form_initial_values} onSubmit={onSubmitValues} validate={validateFields}>\n            {({\n                values,\n                errors,\n                status,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                isSubmitting,\n                setFieldValue,\n            }) => (\n                <>\n                    <LeaveConfirm onDirty={isMobile() ? showForm : null} />\n                    {form_state.should_show_form && (\n                        <form noValidate className='account-form account-form_poa' onSubmit={handleSubmit}>\n                            <FormBody scroll_offset={isMobile() ? mobile_scroll_offset : '80px'}>\n                                {is_resubmit && (\n                                    <Text size='xs' align='left' color='loss-danger'>\n                                        {localize(\n                                            'We were unable to verify your address with the details you provided. Please check and resubmit or choose a different document type.'\n                                        )}\n                                    </Text>\n                                )}\n                                <FormSubHeader\n                                    title={localize('1. Address')}\n                                    subtitle={localize('(All fields are required)')}\n                                />\n                                <FormBodySection\n                                    has_side_note\n                                    side_note={localize(\n                                        'An accurate and complete address helps to speed up your verification process.'\n                                    )}\n                                >\n                                    <div className='account-poa__details-section'>\n                                        <div className='account-poa__details-fields'>\n                                            <fieldset className='account-form__fieldset'>\n                                                <Input\n                                                    data-lpignore='true'\n                                                    autoComplete='off' // prevent chrome autocomplete\n                                                    type='text'\n                                                    maxLength={70}\n                                                    name='address_line_1'\n                                                    label={localize('First line of address')}\n                                                    value={values.address_line_1}\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    error={touched.address_line_1 && errors.address_line_1}\n                                                    required\n                                                />\n                                            </fieldset>\n                                            <fieldset className='account-form__fieldset'>\n                                                <Input\n                                                    data-lpignore='true'\n                                                    autoComplete='off' // prevent chrome autocomplete\n                                                    type='text'\n                                                    maxLength={70}\n                                                    name='address_line_2'\n                                                    label={localize('Second line of address (optional)')}\n                                                    value={values.address_line_2}\n                                                    error={touched.address_line_2 && errors.address_line_2}\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                />\n                                            </fieldset>\n                                            <fieldset className='account-form__fieldset'>\n                                                <Input\n                                                    data-lpignore='true'\n                                                    autoComplete='off' // prevent chrome autocomplete\n                                                    type='text'\n                                                    name='address_city'\n                                                    label={localize('Town/City')}\n                                                    value={values.address_city}\n                                                    error={touched.address_city && errors.address_city}\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    required\n                                                />\n                                            </fieldset>\n                                            <fieldset className='account-form__fieldset'>\n                                                {states_list.length ? (\n                                                    <React.Fragment>\n                                                        <DesktopWrapper>\n                                                            <Field name='address_state'>\n                                                                {({ field }) => (\n                                                                    <Autocomplete\n                                                                        {...field}\n                                                                        data-lpignore='true'\n                                                                        autoComplete='new-password' // prevent chrome autocomplete\n                                                                        type='text'\n                                                                        label={localize('State/Province')}\n                                                                        error={\n                                                                            touched.address_state &&\n                                                                            errors.address_state\n                                                                        }\n                                                                        list_items={states_list}\n                                                                        onItemSelection={({ value, text }) =>\n                                                                            setFieldValue(\n                                                                                'address_state',\n                                                                                value ? text : '',\n                                                                                true\n                                                                            )\n                                                                        }\n                                                                    />\n                                                                )}\n                                                            </Field>\n                                                        </DesktopWrapper>\n                                                        <MobileWrapper>\n                                                            <SelectNative\n                                                                placeholder={localize('Please select')}\n                                                                label={localize('State/Province')}\n                                                                value={values.address_state}\n                                                                list_items={states_list}\n                                                                error={touched.address_state && errors.address_state}\n                                                                use_text={true}\n                                                                onChange={e =>\n                                                                    setFieldValue('address_state', e.target.value, true)\n                                                                }\n                                                            />\n                                                        </MobileWrapper>\n                                                    </React.Fragment>\n                                                ) : (\n                                                    <Input\n                                                        data-lpignore='true'\n                                                        autoComplete='off' // prevent chrome autocomplete\n                                                        type='text'\n                                                        name='address_state'\n                                                        label={localize('State/Province')}\n                                                        value={values.address_state}\n                                                        error={touched.address_state && errors.address_state}\n                                                        onChange={handleChange}\n                                                        onBlur={handleBlur}\n                                                    />\n                                                )}\n                                            </fieldset>\n                                            <fieldset className='account-form__fieldset'>\n                                                <Input\n                                                    data-lpignore='true'\n                                                    autoComplete='off' // prevent chrome autocomplete\n                                                    type='text'\n                                                    name='address_postcode'\n                                                    label={localize('Postal/ZIP code')}\n                                                    value={values.address_postcode}\n                                                    error={touched.address_postcode && errors.address_postcode}\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                />\n                                            </fieldset>\n                                        </div>\n                                    </div>\n                                </FormBodySection>\n\n                                <FormSubHeader title={localize('2. Please upload one of the following:')} />\n                                <FormBodySection has_side_note side_note={<UploaderSideNote />}>\n                                    <FileUploaderContainer\n                                        onRef={ref => (file_uploader_ref = ref)}\n                                        onFileDrop={df =>\n                                            setDocumentFile({ files: df.files, error_message: df.error_message })\n                                        }\n                                        getSocket={WS.getSocket}\n                                    />\n                                </FormBodySection>\n                            </FormBody>\n                            <FormFooter className='account-form__footer-poa'>\n                                {status && status.msg && <FormSubmitErrorMessage message={status.msg} />}\n                                <Button\n                                    className='account-form__footer-btn'\n                                    type='submit'\n                                    is_disabled={\n                                        isSubmitting ||\n                                        !!(\n                                            errors.address_line_1 ||\n                                            !values.address_line_1 ||\n                                            errors.address_line_2 ||\n                                            errors.address_city ||\n                                            !values.address_city ||\n                                            errors.address_postcode\n                                        ) ||\n                                        (document_file.files && document_file.files.length < 1) ||\n                                        !!document_file.error_message\n                                    }\n                                    has_effect\n                                    is_loading={form_state.is_btn_loading}\n                                    is_submit_success={form_state.is_submit_success}\n                                    text={localize('Save and submit')}\n                                    primary\n                                />\n                            </FormFooter>\n                        </form>\n                    )}\n                </>\n            )}\n        </Formik>\n    );\n});\n\nProofOfAddressForm.propTypes = {\n    is_resubmit: PropTypes.bool,\n    onSubmit: PropTypes.func,\n};\n\nexport default ProofOfAddressForm;\n","import { Button, Loading, useStateCallback } from '@deriv/components';\nimport { WS, getPlatformRedirect, platforms } from '@deriv/shared';\n\nimport Expired from 'Components/poa/status/expired';\nimport { Localize } from '@deriv/translations';\nimport NeedsReview from 'Components/poa/status/needs-review';\nimport NotRequired from 'Components/poa/status/not-required';\nimport PoaStatusCodes from 'Components/poa/status/status-codes';\nimport ProofOfAddressForm from './proof-of-address-form.jsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Submitted from 'Components/poa/status/submitted';\nimport Unverified from 'Components/poa/status/unverified';\nimport Verified from 'Components/poa/status/verified';\nimport { populateVerificationStatus } from '../Helpers/verification';\n\nconst ProofOfAddressContainer = ({\n    is_mx_mlt,\n    is_switching,\n    has_restricted_mt5_account,\n    refreshNotifications,\n    app_routing_history,\n}) => {\n    const [is_loading, setIsLoading] = React.useState(true);\n    const [authentication_status, setAuthenticationStatus] = useStateCallback({\n        allow_document_upload: false,\n        allow_poi_resubmission: false,\n        needs_poi: false,\n        needs_poa: false,\n        has_poi: false,\n        resubmit_poa: false,\n        has_submitted_poa: false,\n        document_status: null,\n        is_age_verified: false,\n        poa_address_mismatch: false,\n    });\n\n    React.useEffect(() => {\n        if (!is_switching) {\n            WS.authorized.getAccountStatus().then(response => {\n                const { get_account_status } = response;\n                const {\n                    allow_document_upload,\n                    allow_poa_resubmission,\n                    needs_poi,\n                    needs_poa,\n                    document_status,\n                    is_age_verified,\n                    poa_address_mismatch,\n                } = populateVerificationStatus(get_account_status);\n                const has_submitted_poa = document_status === PoaStatusCodes.pending && !allow_poa_resubmission;\n\n                setAuthenticationStatus(\n                    {\n                        ...authentication_status,\n                        ...{\n                            allow_document_upload,\n                            allow_poa_resubmission,\n                            needs_poi,\n                            needs_poa,\n                            document_status,\n                            has_submitted_poa,\n                            is_age_verified,\n                            poa_address_mismatch,\n                        },\n                    },\n                    () => {\n                        setIsLoading(false);\n                        refreshNotifications();\n                    }\n                );\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [is_switching]);\n\n    const handleResubmit = () => {\n        setAuthenticationStatus({ ...authentication_status, ...{ resubmit_poa: true } });\n    };\n\n    const onSubmit = ({ needs_poi }) => {\n        setAuthenticationStatus({ ...authentication_status, ...{ has_submitted_poa: true, needs_poi } });\n    };\n\n    const {\n        allow_document_upload,\n        allow_poa_resubmission,\n        document_status,\n        needs_poi,\n        resubmit_poa,\n        has_submitted_poa,\n        is_age_verified,\n        poa_address_mismatch,\n    } = authentication_status;\n\n    const from_platform = getPlatformRedirect(app_routing_history);\n\n    const should_show_redirect_btn = Object.keys(platforms).includes(from_platform?.ref);\n\n    const redirect_button = should_show_redirect_btn ? (\n        <Button\n            primary\n            className='proof-of-identity__redirect'\n            onClick={() => {\n                const url = platforms[from_platform.ref]?.url;\n                window.location.href = url;\n                window.sessionStorage.removeItem('config.platform');\n            }}\n        >\n            <Localize i18n_default_text='Back to {{platform_name}}' values={{ platform_name: from_platform.name }} />\n        </Button>\n    ) : null;\n\n    if (is_loading) return <Loading is_fullscreen={false} className='account__initial-loader' />;\n    if (\n        !allow_document_upload ||\n        (!is_age_verified && !allow_poa_resubmission && document_status === 'none' && is_mx_mlt)\n    )\n        return <NotRequired />;\n    if (has_submitted_poa && !poa_address_mismatch)\n        return <Submitted needs_poi={needs_poi} redirect_button={redirect_button} />;\n    if (\n        resubmit_poa ||\n        allow_poa_resubmission ||\n        (has_restricted_mt5_account && ['expired', 'rejected', 'suspected'].includes(document_status)) ||\n        poa_address_mismatch\n    ) {\n        return <ProofOfAddressForm is_resubmit onSubmit={() => onSubmit({ needs_poi })} />;\n    }\n\n    switch (document_status) {\n        case PoaStatusCodes.none:\n            return <ProofOfAddressForm onSubmit={() => onSubmit({ needs_poi })} />;\n        case PoaStatusCodes.pending:\n            return <NeedsReview needs_poi={needs_poi} redirect_button={redirect_button} />;\n        case PoaStatusCodes.verified:\n            return <Verified needs_poi={needs_poi} redirect_button={redirect_button} />;\n        case PoaStatusCodes.expired:\n            return <Expired onClick={handleResubmit} />;\n        case PoaStatusCodes.rejected:\n        case PoaStatusCodes.suspected:\n            return <Unverified onClick={handleResubmit} />;\n        default:\n            return null;\n    }\n};\n\nProofOfAddressContainer.propTypes = {\n    is_mx_mlt: PropTypes.bool,\n    has_restricted_mt5_account: PropTypes.bool,\n    is_switching: PropTypes.bool,\n    refreshNotifications: PropTypes.func,\n};\n\nexport default ProofOfAddressContainer;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\n\nconst getOnfidoPhrases = () => ({\n    country_select: {\n        alert_dropdown: {\n            country_not_found: <Localize i18n_default_text='Country not found' />,\n        },\n        alert: {\n            another_doc: (\n                <Localize i18n_default_text='Documents from that country are not currently supported — <fallback>try another document type</fallback>' />\n            ),\n        },\n        button_primary: <Localize i18n_default_text='Submit document' />,\n        search: {\n            accessibility: <Localize i18n_default_text='Select country' />,\n            input_placeholder: <Localize i18n_default_text='e.g. United States' />,\n            label: <Localize i18n_default_text='Search for country' />,\n        },\n        title: <Localize i18n_default_text='Select issuing country' />,\n    },\n    cross_device_checklist: {\n        button_primary: <Localize i18n_default_text='Submit verification' />,\n        info: <Localize i18n_default_text='Tips' />,\n        list_item_doc_multiple: <Localize i18n_default_text='Documents uploaded' />,\n        list_item_doc_one: <Localize i18n_default_text='Document uploaded' />,\n        list_item_selfie: <Localize i18n_default_text='Selfie uploaded' />,\n        subtitle: <Localize i18n_default_text=\"We're now ready to verify your identity\" />,\n        title: <Localize i18n_default_text=\"Great, that's everything we need\" />,\n    },\n    cross_device_error_desktop: {\n        subtitle: <Localize i18n_default_text='The link only works on mobile devices' />,\n        title: <Localize i18n_default_text=\"Something's gone wrong\" />,\n    },\n    cross_device_error_restart: {\n        subtitle: <Localize i18n_default_text=\"You'll need to restart your verification on your computer\" />,\n        title: <Localize i18n_default_text=\"Something's gone wrong\" />,\n    },\n    cross_device_intro: {\n        button_primary: <Localize i18n_default_text='Get secure link' />,\n        list_accessibility: <Localize i18n_default_text='Steps required to continue verification on your mobile' />,\n        list_item_finish: <Localize i18n_default_text='Check back here to finish the submission' />,\n        list_item_open_link: <Localize i18n_default_text='Open the link and complete the tasks' />,\n        list_item_send_phone: <Localize i18n_default_text='Send a secure link to your phone' />,\n        subtitle: <Localize i18n_default_text=\"Here's how to do it:\" />,\n        title: <Localize i18n_default_text='Continue on your phone' />,\n    },\n    cross_device_return: {\n        body: <Localize i18n_default_text='Your computer may take a few seconds to update' />,\n        subtitle: <Localize i18n_default_text='You can now return to your computer to continue' />,\n        title: <Localize i18n_default_text='Uploads successful' />,\n    },\n    doc_confirmation: {\n        alert: {\n            blur_detail: <Localize i18n_default_text='Make sure everything is clear' />,\n            blur_title: <Localize i18n_default_text='Blurry photo detected' />,\n            crop_detail: <Localize i18n_default_text='Make sure full document is visible' />,\n            crop_title: <Localize i18n_default_text='Cut-off image detected' />,\n            glare_detail: <Localize i18n_default_text='Move away from direct light' />,\n            glare_title: <Localize i18n_default_text='Glare detected' />,\n            no_doc_detail: <Localize i18n_default_text='Make sure all of the document is in the photo' />,\n            no_doc_title: <Localize i18n_default_text='No document detected' />,\n        },\n        body_id: <Localize i18n_default_text='Make sure your card details are clear to read, with no blur or glare' />,\n        body_image_medium: <Localize i18n_default_text='It’ll take longer to verify you if we can’t read it' />,\n        body_image_poor: <Localize i18n_default_text='To smoothly verify you, we need a better photo' />,\n        body_license: (\n            <Localize i18n_default_text='Make sure your license details are clear to read, with no blur or glare' />\n        ),\n        body_passport: (\n            <Localize i18n_default_text='Make sure your passport details are clear to read, with no blur or glare' />\n        ),\n        body_permit: (\n            <Localize i18n_default_text='Make sure your permit details are clear to read, with no blur or glare' />\n        ),\n        body_tax_letter: <Localize i18n_default_text='Make sure details are clear to read, with no blur or glare' />,\n        button_close: <Localize i18n_default_text='Close' />,\n        button_primary_redo: <Localize i18n_default_text='Redo' />,\n        button_primary_upload: <Localize i18n_default_text='Confirm' />,\n        button_primary_upload_anyway: <Localize i18n_default_text='Upload anyway' />,\n        button_secondary_redo: <Localize i18n_default_text='Redo' />,\n        button_zoom: <Localize i18n_default_text='Enlarge image' />,\n        image_accessibility: <Localize i18n_default_text='Photo of your document' />,\n        title: <Localize i18n_default_text='Check your image' />,\n    },\n    doc_select: {\n        button_id: <Localize i18n_default_text='Identity card' />,\n        button_id_detail: <Localize i18n_default_text='Front and back' />,\n        button_license: <Localize i18n_default_text=\"Driver's license\" />,\n        button_license_detail: <Localize i18n_default_text='Front and back' />,\n        button_passport: <Localize i18n_default_text='Passport' />,\n        button_passport_detail: <Localize i18n_default_text='Face photo page' />,\n        button_permit: <Localize i18n_default_text='Residence permit' />,\n        button_permit_detail: <Localize i18n_default_text='Front and back' />,\n        extra_no_mobile: <Localize i18n_default_text='Sorry, no mobile phone bills' />,\n        list_accessibility: <Localize i18n_default_text='Documents you can use to verify your identity' />,\n        subtitle: <Localize i18n_default_text='It must be an official photo ID' />,\n        subtitle_poa: (\n            <Localize i18n_default_text='These are the documents most likely to show your current home address' />\n        ),\n        title: <Localize i18n_default_text='Choose document' />,\n        title_poa: <Localize i18n_default_text='Select a %{country} document' />,\n    },\n    doc_submit: {\n        button_link_upload: <Localize i18n_default_text='or upload photo – no scans or photocopies' />,\n        button_primary: <Localize i18n_default_text='Continue on phone' />,\n        subtitle: <Localize i18n_default_text='Take a photo with your phone' />,\n        title_id_back: <Localize i18n_default_text='Submit identity card (back)' />,\n        title_id_front: <Localize i18n_default_text='Submit identity card (front)' />,\n        title_license_back: <Localize i18n_default_text='Submit license (back)' />,\n        title_license_front: <Localize i18n_default_text='Submit license (front)' />,\n        title_passport: <Localize i18n_default_text='Submit passport photo page' />,\n        title_permit_back: <Localize i18n_default_text='Submit residence permit (back)' />,\n        title_permit_front: <Localize i18n_default_text='Submit residence permit (front)' />,\n    },\n    error_unsupported_browser: {\n        subtitle_android: <Localize i18n_default_text='Restart the process on the latest version of Google Chrome' />,\n        subtitle_ios: <Localize i18n_default_text='Restart the process on the latest version of Safari' />,\n        title_android: <Localize i18n_default_text='Unsupported browser' />,\n        title_ios: <Localize i18n_default_text='Unsupported browser' />,\n    },\n    generic: {\n        accessibility: {\n            close_sdk_screen: <Localize i18n_default_text='Close identity verification screen' />,\n            dismiss_alert: <Localize i18n_default_text='Dismiss alert' />,\n        },\n        back: <Localize i18n_default_text='back' />,\n        close: <Localize i18n_default_text='close' />,\n        errors: {\n            interrupted_flow_error: {\n                instruction: <Localize i18n_default_text='Restart process on a different device' />,\n                message: <Localize i18n_default_text='Camera not detected' />,\n            },\n            invalid_size: {\n                instruction: <Localize i18n_default_text='Must be under 10MB.' />,\n                message: <Localize i18n_default_text='File size exceeded.' />,\n            },\n            invalid_type: {\n                instruction: <Localize i18n_default_text='Try using another file type.' />,\n                message: <Localize i18n_default_text='File not uploaded.' />,\n            },\n            lazy_loading: {\n                message: <Localize i18n_default_text='An error occurred while loading the component' />,\n            },\n            multiple_faces: {\n                instruction: <Localize i18n_default_text='Only your face can be in the selfie' />,\n                message: <Localize i18n_default_text='Multiple faces found' />,\n            },\n            no_face: {\n                instruction: <Localize i18n_default_text='Your face is needed in the selfie' />,\n                message: <Localize i18n_default_text='No face found' />,\n            },\n            request_error: {\n                instruction: <Localize i18n_default_text='Please try again' />,\n                message: <Localize i18n_default_text='Connection lost' />,\n            },\n            sms_failed: {\n                instruction: <Localize i18n_default_text='Copy the link to your phone' />,\n                message: <Localize i18n_default_text=\"Something's gone wrong\" />,\n            },\n            sms_overuse: {\n                instruction: <Localize i18n_default_text='Copy the link to your phone' />,\n                message: <Localize i18n_default_text='Too many failed attempts' />,\n            },\n            unsupported_file: {\n                instruction: <Localize i18n_default_text='Try using a JPG or PNG file' />,\n                message: <Localize i18n_default_text='File type not supported' />,\n            },\n        },\n        lazy_load_placeholder: <Localize i18n_default_text='Loading...' />,\n        loading: <Localize i18n_default_text='Loading' />,\n    },\n    get_link: {\n        alert_wrong_number: <Localize i18n_default_text='Check that your number is correct' />,\n        button_copied: <Localize i18n_default_text='Copied' />,\n        button_copy: <Localize i18n_default_text='Copy' />,\n        button_submit: <Localize i18n_default_text='Send link' />,\n        info_qr_how: <Localize i18n_default_text='How to scan a QR code' />,\n        info_qr_how_list_item_camera: <Localize i18n_default_text='Point your phone’s camera at the QR code' />,\n        info_qr_how_list_item_download: (\n            <Localize i18n_default_text='If it doesn’t work, download a QR code scanner from Google Play or the App Store' />\n        ),\n        link_divider: <Localize i18n_default_text='or' />,\n        link_qr: <Localize i18n_default_text='Scan QR code' />,\n        link_sms: <Localize i18n_default_text='Get link via SMS' />,\n        link_url: <Localize i18n_default_text='Copy link' />,\n        loader_sending: <Localize i18n_default_text='Sending' />,\n        number_field_input_placeholder: <Localize i18n_default_text='Enter mobile number' />,\n        number_field_label: <Localize i18n_default_text='Enter your mobile number:' />,\n        subtitle_qr: <Localize i18n_default_text='Scan the QR code with your phone' />,\n        subtitle_sms: <Localize i18n_default_text='Send this one-time link to your phone' />,\n        subtitle_url: <Localize i18n_default_text='Open the link on your mobile' />,\n        title: <Localize i18n_default_text='Get your secure link' />,\n        url_field_label: <Localize i18n_default_text='Copy the link to your mobile browser' />,\n    },\n    linked_computer: {\n        button_primary: <Localize i18n_default_text='Continue' />,\n        info: <Localize i18n_default_text='Make sure§' />,\n        list_item_desktop_open: <Localize i18n_default_text='2. Your desktop window stays open' />,\n        list_item_sent_by_you: <Localize i18n_default_text='1. This link was sent by you' />,\n        subtitle: <Localize i18n_default_text='Continue with the verification' />,\n        title: <Localize i18n_default_text='Linked to your computer' />,\n    },\n    mobilePhrases: {\n        photo_upload: {\n            body_id_back: <Localize i18n_default_text='Take a photo of the back of your card' />,\n            body_id_front: <Localize i18n_default_text='Take a photo of the front of your card' />,\n            body_license_back: <Localize i18n_default_text='Take a photo of the back of your license' />,\n            body_license_front: <Localize i18n_default_text='Take a photo of the front of your license' />,\n            body_passport: <Localize i18n_default_text='Take a photo of your passport photo page' />,\n            body_selfie: <Localize i18n_default_text='Take a selfie showing your face' />,\n        },\n        selfie_capture: {\n            alert: {\n                camera_inactive: {\n                    detail: (\n                        <Localize i18n_default_text='Take a photo using the <fallback>basic camera mode</fallback> instead' />\n                    ),\n                },\n                camera_not_working: {\n                    detail: (\n                        <Localize i18n_default_text='Take a photo using the <fallback>basic camera mode</fallback> instead' />\n                    ),\n                },\n            },\n        },\n        upload_guide: {\n            button_primary: <Localize i18n_default_text='Take a photo' />,\n            title: <Localize i18n_default_text='Passport photo page' />,\n        },\n    },\n    outro: {\n        body: <Localize i18n_default_text='Thank you' />,\n        title: <Localize i18n_default_text='Verification complete' />,\n    },\n    permission_recovery: {\n        button_primary: <Localize i18n_default_text='Refresh' />,\n        info: <Localize i18n_default_text='Recovery' />,\n        list_header_cam: <Localize i18n_default_text='Follow these steps to recover camera access:' />,\n        list_item_action_cam: (\n            <Localize i18n_default_text='Refresh this page to restart the identity verification process' />\n        ),\n        list_item_how_to_cam: <Localize i18n_default_text='Grant access to your camera from your browser settings' />,\n        subtitle_cam: <Localize i18n_default_text='Recover camera access to continue face verification' />,\n        title_cam: <Localize i18n_default_text='Camera access is denied' />,\n    },\n    permission: {\n        body_cam: <Localize i18n_default_text='We cannot verify you without using your camera' />,\n        button_primary_cam: <Localize i18n_default_text='Enable camera' />,\n        subtitle_cam: <Localize i18n_default_text='When prompted, you must enable camera access to continue' />,\n        title_cam: <Localize i18n_default_text='Allow camera access' />,\n    },\n    photo_upload: {\n        body_bank_statement: <Localize i18n_default_text='Provide the whole document page for best results' />,\n        body_benefits_letter: <Localize i18n_default_text='Provide the whole document page for best results' />,\n        body_bill: <Localize i18n_default_text='Provide the whole document page for best results' />,\n        body_government_letter: <Localize i18n_default_text='Provide the whole document page for best results' />,\n        body_id_back: <Localize i18n_default_text='Upload back of card from your computer' />,\n        body_id_front: <Localize i18n_default_text='Upload front of card from your computer' />,\n        body_license_back: <Localize i18n_default_text='Upload back of license from your computer' />,\n        body_license_front: <Localize i18n_default_text='Upload front of license from your computer' />,\n        body_passport: <Localize i18n_default_text='Upload passport photo page from your computer' />,\n        body_selfie: <Localize i18n_default_text='Upload a selfie from your computer' />,\n        body_tax_letter: <Localize i18n_default_text='Provide the whole document page for best results' />,\n        button_take_photo: <Localize i18n_default_text='Take photo' />,\n        button_upload: <Localize i18n_default_text='Upload' />,\n        title_selfie: <Localize i18n_default_text='Selfie' />,\n    },\n    selfie_capture: {\n        alert: {\n            camera_inactive: {\n                detail: (\n                    <Localize i18n_default_text='Check that it is connected and functional. You can also <fallback>continue verification on your phone</fallback>' />\n                ),\n                detail_no_fallback: <Localize i18n_default_text='Make sure your device has a working camera' />,\n                title: <Localize i18n_default_text='Camera not working?' />,\n            },\n            camera_not_working: {\n                detail: (\n                    <Localize i18n_default_text='It may be disconnected. <fallback>Try using your phone instead</fallback>.' />\n                ),\n                detail_no_fallback: <Localize i18n_default_text=\"Make sure your device's camera works\" />,\n                title: <Localize i18n_default_text='Camera not working' />,\n            },\n            timeout: {\n                detail: (\n                    <Localize i18n_default_text=\"Remember to press stop when you're done. <fallback>Redo video actions</fallback>\" />\n                ),\n                title: <Localize i18n_default_text='Looks like you took too long' />,\n            },\n        },\n        button_accessibility: <Localize i18n_default_text='Take a photo' />,\n        frame_accessibility: <Localize i18n_default_text='View from camera' />,\n        title: <Localize i18n_default_text='Take a selfie' />,\n    },\n    selfie_confirmation: {\n        image_accessibility: <Localize i18n_default_text='Photo of your face' />,\n        subtitle: <Localize i18n_default_text='Make sure your selfie clearly shows your face' />,\n        title: <Localize i18n_default_text='Check selfie' />,\n    },\n    selfie_intro: {\n        button_primary: <Localize i18n_default_text='Continue' />,\n        list_accessibility: <Localize i18n_default_text='Tips to take a good selfie' />,\n        list_item_face_forward: (\n            <Localize i18n_default_text='Face forward and make sure your eyes are clearly visible' />\n        ),\n        list_item_no_glasses: <Localize i18n_default_text='Remove your glasses, if necessary' />,\n        subtitle: <Localize i18n_default_text=\"We'll compare it with your document\" />,\n        title: <Localize i18n_default_text='Take a selfie' />,\n    },\n    sms_sent: {\n        info: <Localize i18n_default_text='Tips' />,\n        info_link_expire: <Localize i18n_default_text='Your link will expire in one hour' />,\n        info_link_window: <Localize i18n_default_text='Keep this window open while using your mobile' />,\n        link: <Localize i18n_default_text='Resend link' />,\n        subtitle: <Localize i18n_default_text=\"We've sent a secure link to %{number}\" />,\n        subtitle_minutes: <Localize i18n_default_text='It may take a few minutes to arrive' />,\n        title: <Localize i18n_default_text='Check your mobile' />,\n    },\n    switch_phone: {\n        info: <Localize i18n_default_text='Tips' />,\n        info_link_expire: <Localize i18n_default_text='Your mobile link will expire in one hour' />,\n        info_link_refresh: <Localize i18n_default_text=\"Don't refresh this page\" />,\n        info_link_window: <Localize i18n_default_text='Keep this window open while using your mobile' />,\n        link: <Localize i18n_default_text='Cancel' />,\n        subtitle: <Localize i18n_default_text=\"Once you\\'ve finished we'll take you to the next step\" />,\n        title: <Localize i18n_default_text='Connected to your mobile' />,\n    },\n    upload_guide: {\n        button_primary: <Localize i18n_default_text='Upload photo' />,\n        image_detail_blur_alt: <Localize i18n_default_text='Example of a blurry document' />,\n        image_detail_blur_label: <Localize i18n_default_text='All details must be clear — nothing blurry' />,\n        image_detail_cutoff_alt: <Localize i18n_default_text='Example of a cut-off document' />,\n        image_detail_cutoff_label: <Localize i18n_default_text='Show all details — including the bottom 2 lines' />,\n        image_detail_glare_alt: <Localize i18n_default_text='Example of a document with glare' />,\n        image_detail_glare_label: <Localize i18n_default_text='Move away from direct light — no glare' />,\n        image_detail_good_alt: <Localize i18n_default_text='Document example' />,\n        image_detail_good_label: <Localize i18n_default_text='The photo should clearly show your document' />,\n        subtitle: <Localize i18n_default_text='Scans and photocopies are not accepted' />,\n        title: <Localize i18n_default_text='Upload passport photo page' />,\n    },\n});\n\nexport default getOnfidoPhrases;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Form, Formik, FormikHelpers } from 'formik';\nimport { GetSettings } from '@deriv/api-types';\nimport { Checkbox, HintBox, Loading, Text } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport {\n    filterObjProperties,\n    isEmptyObject,\n    isMobile,\n    removeEmptyPropertiesFromObject,\n    toMoment,\n    WS,\n} from '@deriv/shared';\nimport FormBody from 'Components/form-body';\nimport LoadErrorMessage from 'Components/load-error-message';\nimport PersonalDetailsForm from 'Components/forms/personal-details-form';\nimport { makeSettingsRequest, validate, validateName } from 'Helpers/utils';\nimport { TInputFieldValues } from 'Types';\n\ntype TRestState = {\n    api_error: string;\n    show_form: boolean;\n    errors?: boolean;\n    form_initial_values: TInputFieldValues;\n    changeable_fields: string[];\n};\n\ntype TPoiConfirmWithExampleFormContainer = {\n    account_settings: GetSettings;\n    getChangeableFields: () => string[];\n    onFormConfirm?: () => void;\n};\n\nconst PoiConfirmWithExampleFormContainer = ({\n    account_settings,\n    getChangeableFields,\n    onFormConfirm,\n}: TPoiConfirmWithExampleFormContainer) => {\n    const [is_loading, setIsLoading] = React.useState(true);\n    const [checked, setChecked] = React.useState(false);\n    const [rest_state, setRestState] = React.useState<TRestState>({\n        show_form: true,\n        form_initial_values: { first_name: '', last_name: '', date_of_birth: '' },\n        changeable_fields: [],\n        api_error: '',\n    });\n\n    React.useEffect(() => {\n        const initializeFormValues = () => {\n            WS.wait('get_settings').then(() => {\n                const visible_settings = ['first_name', 'last_name', 'date_of_birth'];\n                const form_initial_values = filterObjProperties(account_settings, visible_settings);\n                if (form_initial_values.date_of_birth) {\n                    form_initial_values.date_of_birth = toMoment(form_initial_values.date_of_birth).format(\n                        'YYYY-MM-DD'\n                    );\n                }\n                setRestState({\n                    ...rest_state,\n                    changeable_fields: getChangeableFields(),\n                    form_initial_values,\n                });\n                setIsLoading(false);\n            });\n        };\n\n        initializeFormValues();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [account_settings]);\n\n    const onSubmit = async (\n        values: TInputFieldValues,\n        { setStatus, setSubmitting }: FormikHelpers<TInputFieldValues>\n    ) => {\n        if (checked) return;\n        setStatus({ error_msg: '' });\n        const request = makeSettingsRequest(\n            values,\n            rest_state?.changeable_fields ? [...rest_state.changeable_fields] : []\n        );\n        const data = await WS.setSettings(request);\n\n        if (data.error) {\n            setStatus({ error_msg: data.error.message });\n            setSubmitting(false);\n        } else {\n            const response = await WS.authorized.storage.getSettings();\n            if (response.error) {\n                setRestState({ ...rest_state, api_error: response.error.message });\n                return;\n            }\n            setRestState({ ...rest_state, ...response.get_settings });\n            setChecked(true);\n            setIsLoading(false);\n\n            if (onFormConfirm) {\n                setTimeout(() => {\n                    onFormConfirm();\n                }, 500);\n            }\n        }\n    };\n\n    const validateFields = (values: TInputFieldValues) => {\n        const errors: TInputFieldValues = {};\n        const validateValues = validate(errors, values);\n\n        const required_fields = ['first_name', 'last_name', 'date_of_birth'];\n\n        validateValues(val => val, required_fields, localize('This field is required'));\n\n        if (values.first_name) {\n            errors.first_name = validateName(values.first_name);\n        }\n        if (values.last_name) {\n            errors.last_name = validateName(values.last_name);\n        }\n\n        setRestState({ ...rest_state, errors: !isEmptyObject(removeEmptyPropertiesFromObject(errors)) });\n        return removeEmptyPropertiesFromObject(errors);\n    };\n\n    const {\n        form_initial_values: { ...form_initial_values },\n        api_error,\n    } = rest_state;\n\n    if (api_error) return <LoadErrorMessage error_message={api_error} />;\n\n    if (is_loading) {\n        return <Loading is_fullscreen={false} className='account__initial-loader' />;\n    }\n\n    return (\n        <Formik initialValues={form_initial_values} enableReinitialize onSubmit={onSubmit} validate={validateFields}>\n            {({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                isSubmitting,\n                setFieldValue,\n                setFieldTouched,\n                status,\n            }) => (\n                <Form className='account-form__poi-confirm-example' onSubmit={handleSubmit}>\n                    <FormBody>\n                        <PersonalDetailsForm\n                            errors={errors}\n                            touched={touched}\n                            values={values}\n                            handleChange={handleChange}\n                            handleBlur={handleBlur}\n                            setFieldValue={setFieldValue}\n                            setFieldTouched={setFieldTouched}\n                            editable_fields={rest_state.changeable_fields}\n                            is_rendered_for_onfido\n                            warning_items={undefined}\n                        />\n                        <button\n                            type='submit'\n                            className={classNames('account-form__poi-confirm-example--button', {\n                                'account-form__poi-confirm-example--button__disabled':\n                                    checked || !isEmptyObject(errors),\n                            })}\n                        >\n                            <Checkbox\n                                value={checked}\n                                label={\n                                    <Text size={isMobile() ? 'xxs' : 'xs'}>\n                                        {localize(\n                                            'I confirm that the name and date of birth above match my chosen identity document (see below)'\n                                        )}\n                                    </Text>\n                                }\n                                disabled={isSubmitting}\n                            />\n                        </button>\n                        {status?.error_msg && (\n                            <div className='account-form__poi-confirm-example--status-message'>\n                                <HintBox\n                                    icon='IcAlertDanger'\n                                    icon_height={16}\n                                    icon_width={16}\n                                    message={\n                                        <Text as='p' size='xxxs'>\n                                            <Localize i18n_default_text='Sorry, an internal error occurred. Hit the above checkbox to try again.' />\n                                        </Text>\n                                    }\n                                    is_danger\n                                />\n                            </div>\n                        )}\n                    </FormBody>\n                </Form>\n            )}\n        </Formik>\n    );\n};\n\nexport default PoiConfirmWithExampleFormContainer;\n","import PoiConfirmWithExampleFormContainer from './poi-confirm-with-example-form-container';\n\nexport default PoiConfirmWithExampleFormContainer;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { CSSTransition } from 'react-transition-group';\nimport { HintBox, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\n\ntype TOnfidoSdkView = {\n    is_onfido_disabled: boolean;\n    is_onfido_container_hidden?: boolean;\n    onfido_element_id?: string;\n    is_confirmed: boolean;\n    data_testid?: string;\n    is_onfido_initialized?: boolean;\n};\n\nconst OnfidoSdkView = ({\n    is_onfido_disabled,\n    is_onfido_container_hidden,\n    onfido_element_id = 'onfido',\n    is_confirmed,\n    data_testid,\n    is_onfido_initialized,\n}: TOnfidoSdkView) => {\n    const [is_status_message_visible, setIsStatusMessageVisible] = React.useState(false);\n    const transition_in_timeout_ref = React.useRef<ReturnType<typeof setTimeout>>();\n    const transition_out_timeout_ref = React.useRef<ReturnType<typeof setTimeout>>();\n\n    React.useEffect(() => {\n        const onConfirm = () => {\n            transition_in_timeout_ref.current = setTimeout(() => {\n                setIsStatusMessageVisible(true);\n            }, 800);\n            transition_out_timeout_ref.current = setTimeout(() => {\n                setIsStatusMessageVisible(false);\n                // the requirement is to hide the message after 5 sec, 4650 here + 350 in CSSTransition to make it smoother\n            }, 4650);\n        };\n\n        if (is_confirmed) {\n            onConfirm();\n        }\n    }, [is_confirmed]);\n\n    React.useEffect(() => {\n        return () => {\n            clearTimeout(transition_in_timeout_ref.current);\n            clearTimeout(transition_out_timeout_ref.current);\n        };\n    }, []);\n\n    return (\n        <div className='onfido-container-view_wrapper'>\n            <div className={classNames({ 'onfido-container__status-message_container': !is_onfido_disabled })}>\n                <CSSTransition\n                    appear={is_status_message_visible}\n                    in={is_status_message_visible}\n                    timeout={{\n                        exit: 350,\n                    }}\n                    classNames={{\n                        exit: 'onfido-container__status-message--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <HintBox\n                        className='onfido-container__status-message'\n                        icon='IcAlertAnnounce'\n                        icon_height={16}\n                        icon_width={16}\n                        message={\n                            <Text as='p' size='xxxs'>\n                                <Localize i18n_default_text='Your personal details have been saved successfully.' />\n                            </Text>\n                        }\n                        is_info\n                    />\n                </CSSTransition>\n            </div>\n            {is_onfido_disabled && is_onfido_initialized && (\n                <HintBox\n                    className='onfido-container__info-message'\n                    icon='IcInfoBlue'\n                    icon_height={16}\n                    icon_width={16}\n                    message={\n                        <Text as='p' size='xxxs'>\n                            <Localize i18n_default_text='Hit the checkbox above to choose your document.' />\n                        </Text>\n                    }\n                    is_info\n                />\n            )}\n            <div\n                data-testid={data_testid}\n                id={onfido_element_id}\n                className={classNames({\n                    'onfido-container__disabled': is_onfido_disabled,\n                    'onfido-container__hidden': is_onfido_container_hidden,\n                })}\n            />\n        </div>\n    );\n};\n\nexport default OnfidoSdkView;\n","import React, { useCallback } from 'react';\nimport countries from 'i18n-iso-countries';\nimport * as Cookies from 'js-cookie';\nimport { init, SdkHandle, SdkResponse, SupportedLanguages } from 'onfido-sdk-ui';\nimport { CSSTransition } from 'react-transition-group';\nimport { GetSettings, ResidenceList } from '@deriv/api-types';\nimport { Loading, ThemedScrollbars } from '@deriv/components';\nimport { cryptoMathRandom, isMobile, WS } from '@deriv/shared';\nimport { getLanguage } from '@deriv/translations';\nimport ErrorMessage from 'Components/error-component';\nimport getOnfidoPhrases from 'Constants/onfido-phrases';\nimport MissingPersonalDetails from 'Components/poi/missing-personal-details';\nimport PoiConfirmWithExampleFormContainer from 'Components/poi/poi-confirm-with-example-form-container';\nimport OnfidoSdkView from 'Sections/Verification/ProofOfIdentity/onfido-sdk-view';\n\ntype TAPIError = {\n    code?: string;\n    message?: string;\n    type?: string;\n};\n\ntype TServiceToken = {\n    error?: TAPIError;\n    service_token?: { onfido?: { token: string } };\n};\n\ntype TOnfidoSdkViewContainer = {\n    account_settings: GetSettings;\n    country_code: string;\n    documents_supported:\n        | string[]\n        | DeepRequired<ResidenceList>[0]['identity']['services']['onfido']['documents_supported'];\n    getChangeableFields: () => string[];\n    handleViewComplete: () => void;\n    height?: number | string;\n};\n\nconst OnfidoSdkViewContainer = ({\n    account_settings,\n    country_code,\n    documents_supported,\n    getChangeableFields,\n    handleViewComplete,\n    height,\n}: TOnfidoSdkViewContainer) => {\n    const [api_error, setAPIError] = React.useState<TAPIError>();\n    const [missing_personal_details, setMissingPersonalDetails] = React.useState('');\n    const [is_status_loading, setStatusLoading] = React.useState(true);\n    const [retry_count, setRetryCount] = React.useState(0);\n    const [is_onfido_disabled, setIsOnfidoDisabled] = React.useState(true);\n    const token_timeout_ref = React.useRef<ReturnType<typeof setTimeout>>();\n    const [is_confirmed, setIsConfirmed] = React.useState(false);\n    const [is_onfido_initialized, setIsOnfidoInitialized] = React.useState(false);\n    // IDV country code - Alpha ISO2. Onfido country code - Alpha ISO3\n    // Ensures that any form of country code passed here is supported.\n    const onfido_country_code =\n        country_code.length !== 3 ? countries.alpha2ToAlpha3(country_code.toUpperCase()) : country_code;\n\n    // Service Token country code - Alpha ISO2\n    const token_country_code =\n        country_code.length !== 2 ? countries.alpha3ToAlpha2(country_code.toUpperCase()) : country_code;\n\n    // Onfido `document_supported` checks are made for an array of string.\n    // Ensure that `document_supported` passed respects this no the matter source.\n    const onfido_documents = Array.isArray(documents_supported)\n        ? documents_supported\n        : Object.keys(documents_supported).map(d => documents_supported[d].display_name);\n\n    const onfido_init = React.useRef<SdkHandle>();\n\n    const onComplete = React.useCallback(\n        (data: Omit<SdkResponse, 'data'> & { data?: { id?: string } }) => {\n            onfido_init?.current?.tearDown();\n            const document_ids = Object.keys(data).map(key => data[key as keyof SdkResponse]?.id);\n            WS.notificationEvent({\n                notification_event: 1,\n                category: 'authentication',\n                event: 'poi_documents_uploaded',\n                args: {\n                    documents: document_ids,\n                },\n            }).then(() => {\n                handleViewComplete();\n            });\n        },\n        [handleViewComplete]\n    );\n\n    const initOnfido = React.useCallback(\n        async (service_token: string) => {\n            if (!service_token) return;\n            try {\n                onfido_init.current = await init({\n                    containerId: 'onfido',\n                    language: {\n                        locale: (getLanguage().toLowerCase() as SupportedLanguages) || 'en',\n                        phrases: getOnfidoPhrases(),\n                        mobilePhrases: getOnfidoPhrases(),\n                    },\n                    token: service_token,\n                    useModal: false,\n                    useMemoryHistory: true,\n                    onComplete,\n                    steps: [\n                        {\n                            type: 'document',\n                            options: {\n                                documentTypes: {\n                                    passport: onfido_documents.some(doc => /Passport/g.test(doc)),\n                                    driving_licence: onfido_documents.some(doc => /Driving Licence/g.test(doc))\n                                        ? {\n                                              country: onfido_country_code,\n                                          }\n                                        : false,\n                                    national_identity_card: onfido_documents.some(doc =>\n                                        /National Identity Card/g.test(doc)\n                                    )\n                                        ? {\n                                              country: onfido_country_code,\n                                          }\n                                        : false,\n                                },\n                                hideCountrySelection: true,\n                            },\n                        },\n                        'face',\n                    ],\n                });\n                setIsOnfidoInitialized(true);\n            } catch (err) {\n                setAPIError(err as TAPIError);\n                setIsOnfidoDisabled(true);\n                onfido_init.current = undefined;\n            }\n        },\n        [onComplete, onfido_documents, onfido_country_code]\n    );\n\n    const getOnfidoServiceToken = React.useCallback(\n        (): Promise<string | { error: TAPIError }> =>\n            new Promise(resolve => {\n                const onfido_cookie_name = 'onfido_token';\n                const onfido_cookie = Cookies.get(onfido_cookie_name);\n\n                if (!onfido_cookie) {\n                    WS.serviceToken({\n                        service_token: 1,\n                        service: 'onfido',\n                        country: token_country_code,\n                    }).then((response: TServiceToken) => {\n                        if (response.error) {\n                            resolve({ error: response.error });\n                            return;\n                        }\n                        if (response.service_token?.onfido) {\n                            const { token } = response.service_token.onfido;\n                            const in_90_minutes = 1 / 16;\n                            Cookies.set(onfido_cookie_name, token, {\n                                expires: in_90_minutes,\n                                secure: true,\n                                sameSite: 'strict',\n                            });\n                            resolve(token);\n                        }\n                    });\n                } else {\n                    resolve(onfido_cookie);\n                }\n            }),\n        [token_country_code]\n    );\n\n    const handleError = (error: TAPIError) => {\n        switch (error.code) {\n            case 'MissingPersonalDetails':\n                setMissingPersonalDetails('all');\n                break;\n            case 'InvalidPostalCode':\n                setMissingPersonalDetails('postal_code');\n                break;\n            default:\n                setAPIError(error);\n                break;\n        }\n    };\n\n    const onConfirm = useCallback(() => {\n        setIsConfirmed(true);\n        setIsOnfidoDisabled(false);\n    }, []);\n\n    React.useEffect(() => {\n        const fetchServiceToken = () => {\n            if (onfido_init.current) return;\n            getOnfidoServiceToken().then(response_token => {\n                if (typeof response_token !== 'string' && response_token?.error) {\n                    handleError(response_token.error);\n                    setStatusLoading(false);\n                    setRetryCount(retry_count + 1);\n                    onfido_init.current = undefined;\n                } else if (typeof response_token === 'string') {\n                    initOnfido(response_token).then(() => {\n                        setStatusLoading(false);\n                    });\n                }\n                if (token_timeout_ref.current) clearTimeout(token_timeout_ref.current);\n            });\n        };\n\n        // retry state will re-run the token fetching\n        if (retry_count === 0) {\n            fetchServiceToken();\n        } else if (retry_count !== 0 && retry_count < 3) {\n            // Incorporating Exponential_backoff algo to prevent immediate throttling\n            token_timeout_ref.current = setTimeout(() => {\n                fetchServiceToken();\n            }, Math.pow(2, retry_count) + cryptoMathRandom() * 1000);\n        }\n        return () => {\n            clearTimeout(token_timeout_ref.current);\n        };\n    }, [getOnfidoServiceToken, initOnfido, retry_count]);\n\n    let component_to_load;\n\n    if (is_status_loading) {\n        component_to_load = <Loading is_fullscreen={false} />;\n    } else if (missing_personal_details) {\n        component_to_load = (\n            <MissingPersonalDetails\n                has_invalid_postal_code={missing_personal_details === 'postal_code'}\n                from='proof_of_identity'\n            />\n        );\n    } else if (retry_count >= 3 && api_error) {\n        // Error message will only display if retry count exceeds 3\n        component_to_load = <ErrorMessage error_message={(api_error as TAPIError)?.message ?? api_error} />;\n    }\n\n    return (\n        <ThemedScrollbars is_bypassed={isMobile()} height={height}>\n            <div className={'onfido-container'}>\n                {component_to_load || (\n                    <CSSTransition\n                        appear={is_onfido_disabled}\n                        in={is_onfido_disabled}\n                        timeout={{\n                            exit: 350,\n                        }}\n                        classNames={{\n                            exit: 'account-form__poi-confirm-example_wrapper--exit',\n                        }}\n                        unmountOnExit\n                    >\n                        <div className='account-form__poi-confirm-example_wrapper account-form__poi-confirm-example_container'>\n                            <PoiConfirmWithExampleFormContainer\n                                account_settings={account_settings}\n                                getChangeableFields={getChangeableFields}\n                                onFormConfirm={onConfirm}\n                            />\n                        </div>\n                    </CSSTransition>\n                )}\n                <OnfidoSdkView\n                    is_onfido_disabled={is_onfido_disabled}\n                    is_confirmed={is_confirmed}\n                    is_onfido_container_hidden={!!component_to_load}\n                    is_onfido_initialized={is_onfido_initialized}\n                />\n            </div>\n        </ThemedScrollbars>\n    );\n};\n\nexport default OnfidoSdkViewContainer;\n","import React from 'react';\nimport { Button, Icon, Text } from '@deriv/components';\nimport { isMobile } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\ntype TIdvExpired = {\n    handleRequireSubmission: () => void;\n};\n\nconst IdvExpired = ({ handleRequireSubmission }: TIdvExpired) => {\n    return (\n        <div className='proof-of-identity__container' data-testid='idv_expired_container'>\n            <Icon icon='IcPoiFailed' className='icon' size={128} />\n            <Text className='proof-of-identity__text btm-spacer' align='center' weight='bold'>\n                {isMobile() ? localize('ID verification failed') : localize('Verification of document number failed')}\n            </Text>\n            <Text className='proof-of-identity__text btm-spacer' align='center' size='xs'>\n                {isMobile()\n                    ? localize('The ID you submitted is expired.')\n                    : localize(\n                          'It looks like your identity document has expired. Please try again with a valid document.'\n                      )}\n            </Text>\n            <Button\n                type='button'\n                className='account-management__continue'\n                onClick={handleRequireSubmission}\n                large\n                text={localize('Try Again')}\n                primary\n            />\n        </div>\n    );\n};\n\nexport default IdvExpired;\n","import IdvExpired from './idv-expired';\n\nexport default IdvExpired;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg viewBox=\"0 0 115 123\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M92.84 120.37H20.65V3.49h72.19a7.81 7.81 0 017.81 7.81v101.25a7.83 7.83 0 01-7.81 7.82z\" fill=\"#C6E4E4\" /><path d=\"M60.65 22.43A19.75 19.75 0 1080.4 42.18a19.75 19.75 0 00-19.75-19.75zm-18 20.28h7.83c.01 3.18.46 6.35 1.34 9.41h-6.2a18 18 0 01-3-9.41h.03zm18.84-12.78v-5.72c2.09.45 4 2.58 5.36 5.72h-5.36zm6 1.68A32.25 32.25 0 0169.16 41h-7.67v-9.39h6zm-7.71-7.4v5.72h-5.33c1.38-3.14 3.27-5.27 5.36-5.72h-.03zm0 7.4V41h-7.64a32.07 32.07 0 011.64-9.41l6 .02zM50.45 41h-7.8A18 18 0 0146 31.61h6A33.62 33.62 0 0050.45 41zm1.67 1.69h7.69v9.41h-6.24a33.21 33.21 0 01-1.45-9.39v-.02zm7.69 11.11v6.35c-2.23-.49-4.23-2.87-5.63-6.35h5.63zm1.68 6.35V53.8h5.63c-1.4 3.48-3.4 5.86-5.63 6.35zm0-8v-9.44h7.69a33 33 0 01-1.45 9.41l-6.24.03zm9.37-9.41h7.83a17.92 17.92 0 01-3 9.41h-6.2a34.7 34.7 0 001.37-9.44v.03zm0-1.69a34.53 34.53 0 00-1.52-9.41h5.94A18 18 0 0178.66 41l-7.8.05zm3-11.09h-5.14a16.29 16.29 0 00-3.13-5.11 18 18 0 018.29 5.08l-.02.03zm-18.15-5.14a16.29 16.29 0 00-3.13 5.11h-5.16a18 18 0 018.29-5.11zm-8.87 29h5.5a16.73 16.73 0 003.37 5.74 18.06 18.06 0 01-8.87-5.76v.02zm18.75 5.74A16.82 16.82 0 0069 53.8h5.5a18.07 18.07 0 01-8.91 5.74v.02zM87.3 78.41H34.55a4.17 4.17 0 00-4.17 4.17v2.14a4.17 4.17 0 004.17 4.17H87.3a4.17 4.17 0 004.17-4.17v-2.14a4.17 4.17 0 00-4.17-4.17z\" fill=\"#fff\" /><path d=\"M103 50.98H13.06a5.5 5.5 0 00-5.5 5.5V107a5.5 5.5 0 005.5 5.5H103a5.5 5.5 0 005.5-5.5V56.48a5.5 5.5 0 00-5.5-5.5z\" fill=\"#fff\" /><path d=\"M103 51.48a5 5 0 015 5V107a5 5 0 01-5 5H13.06a5 5 0 01-5-5V56.48a5 5 0 015-5H103zm0-1H13.06a6 6 0 00-6 6V107a6 6 0 006 6H103a6 6 0 006-6V56.48a6 6 0 00-6-6z\" fill=\"#F2F2F2\" /><path d=\"M45.91 61.24H18.87a3 3 0 00-3 3v35.17a3 3 0 003 3h27.04a3 3 0 003-3V64.24a3 3 0 00-3-3z\" fill=\"#F2F2F2\" /><path d=\"M89.75 70.37H59.58a1.55 1.55 0 00-1.55 1.55v1.95c0 .86.7 1.55 1.55 1.55h30.17a1.55 1.55 0 001.55-1.55v-1.95a1.55 1.55 0 00-1.55-1.55zm.2 11.37H59.38a1.35 1.35 0 00-1.35 1.35v1.68c0 .75.6 1.35 1.35 1.35h30.57a1.35 1.35 0 001.35-1.35v-1.68a1.35 1.35 0 00-1.35-1.35zm0 6.82H59.38a1.35 1.35 0 00-1.35 1.35v1.68c0 .75.6 1.35 1.35 1.35h30.57a1.35 1.35 0 001.35-1.35v-1.68a1.35 1.35 0 00-1.35-1.35z\" fill=\"#E3E4E3\" /><path d=\"M32.45 81.79a6.77 6.77 0 100-13.54 6.77 6.77 0 000 13.54zm-5.45.28S28.48 84 32.45 84s5.27-1.93 5.27-1.93 6.06 2.33 6.06 8.7c0 0-3.14 4.63-11.14 4.63S21 90.77 21 90.77s.19-6.86 6-8.7z\" fill=\"#84ABAE\" /><path d=\"M100.55 126a21.45 21.45 0 100-42.9 21.45 21.45 0 000 42.9z\" fill=\"#EC3F3F\" /><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M103.34 110h-4.68L98 91h6l-.66 19zm-2.35 3c.9 0 1.63.28 2.18.85.55.56.83 1.28.83 2.16 0 .87-.28 1.58-.83 2.15-.55.56-1.27.84-2.18.84-.9 0-1.61-.28-2.16-.84A2.94 2.94 0 0198 116a2.87 2.87 0 013-3.01z\" fill=\"#fff\" /></svg>);","import React from 'react';\nimport { Button, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport IdvDocumentRejected from 'Assets/ic-idv-document-rejected.svg';\n\ntype TIdvNoSubmission = {\n    handleRequireSubmission: () => void;\n};\n\nconst IdvNoSubmissions = ({ handleRequireSubmission }: TIdvNoSubmission) => {\n    return (\n        <div className='proof-of-identity__container'>\n            <IdvDocumentRejected className='icon' size={128} />\n            <Text className='proof-of-identity__text btm-spacer' align='center' weight='bold'>\n                {localize('ID verification failed')}\n            </Text>\n            <Text className='proof-of-identity__text btm-spacer' align='center' size='xs'>\n                {localize('We were unable to verify your ID with the details you provided. ')}\n                {localize('Please upload your identity document.')}\n            </Text>\n            <Button\n                type='button'\n                className='account-management__continue'\n                onClick={handleRequireSubmission}\n                large\n                text={localize('Upload identity document')}\n                primary\n            />\n        </div>\n    );\n};\n\nexport default IdvNoSubmissions;\n","import IdvNoSubmissions from './idv-limited';\n\nexport default IdvNoSubmissions;\n","import React from 'react';\nimport { Button, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport IdvDocumentRejected from 'Assets/ic-idv-document-rejected.svg';\n\ntype TIdvRejected = {\n    handleRequireSubmission: () => void;\n};\n\nconst IdvRejected = ({ handleRequireSubmission }: TIdvRejected) => {\n    return (\n        <div className='proof-of-identity__container'>\n            <IdvDocumentRejected className='icon' size={128} />\n            <Text className='proof-of-identity__text btm-spacer' align='center' weight='bold'>\n                {localize('ID verification failed')}\n            </Text>\n            <Text className='proof-of-identity__text btm-spacer' align='center' size='xs'>\n                {localize('We were unable to verify your ID with the details you provided.')}\n            </Text>\n            <Button\n                type='button'\n                className='account-management__continue'\n                onClick={handleRequireSubmission}\n                large\n                text={localize('Try again')}\n                primary\n            />\n        </div>\n    );\n};\n\nexport default IdvRejected;\n","import IdvRejected from './idv-rejected';\n\nexport default IdvRejected;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg viewBox=\"0 0 123 123\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M85.84 117.37H13.65V.49h72.19a7.81 7.81 0 017.81 7.81v101.25a7.83 7.83 0 01-7.81 7.82z\" fill=\"#C6E4E4\" /><path d=\"M53.65 19.43A19.75 19.75 0 1073.4 39.18a19.75 19.75 0 00-19.75-19.75zm-18 20.28h7.83c.01 3.18.46 6.35 1.34 9.41h-6.2a18 18 0 01-3-9.41h.03zm18.84-12.78v-5.72c2.09.45 4 2.58 5.36 5.72h-5.36zm6 1.68A32.25 32.25 0 0162.16 38h-7.67v-9.39h6zm-7.71-7.4v5.72h-5.33c1.38-3.14 3.27-5.27 5.36-5.72h-.03zm0 7.4V38h-7.64a32.07 32.07 0 011.64-9.41l6 .02zM43.45 38h-7.8A18 18 0 0139 28.61h6A33.62 33.62 0 0043.45 38zm1.67 1.69h7.69v9.41h-6.24a33.21 33.21 0 01-1.45-9.39v-.02zm7.69 11.11v6.35c-2.23-.49-4.23-2.87-5.63-6.35h5.63zm1.68 6.35V50.8h5.63c-1.4 3.48-3.4 5.86-5.63 6.35zm0-8v-9.44h7.69a33 33 0 01-1.45 9.41l-6.24.03zm9.37-9.41h7.83a17.92 17.92 0 01-3 9.41h-6.2a34.7 34.7 0 001.37-9.44v.03zm0-1.69a34.53 34.53 0 00-1.52-9.41h5.94A18 18 0 0171.66 38l-7.8.05zm3-11.09h-5.14a16.29 16.29 0 00-3.13-5.11 18 18 0 018.29 5.08l-.02.03zm-18.15-5.14a16.29 16.29 0 00-3.13 5.11h-5.16a18 18 0 018.29-5.11zm-8.87 29h5.5a16.73 16.73 0 003.37 5.74 18.06 18.06 0 01-8.87-5.76v.02zm18.75 5.74A16.82 16.82 0 0062 50.8h5.5a18.07 18.07 0 01-8.91 5.74v.02zM80.3 75.41H27.55a4.17 4.17 0 00-4.17 4.17v2.14a4.17 4.17 0 004.17 4.17H80.3a4.17 4.17 0 004.17-4.17v-2.14a4.17 4.17 0 00-4.17-4.17z\" fill=\"#fff\" /><path d=\"M96 47.98H6.06a5.5 5.5 0 00-5.5 5.5V104a5.5 5.5 0 005.5 5.5H96a5.5 5.5 0 005.5-5.5V53.48a5.5 5.5 0 00-5.5-5.5z\" fill=\"#fff\" /><path d=\"M96 48.48a5 5 0 015 5V104a5 5 0 01-5 5H6.06a5 5 0 01-5-5V53.48a5 5 0 015-5H96zm0-1H6.06a6 6 0 00-6 6V104a6 6 0 006 6H96a6 6 0 006-6V53.48a6 6 0 00-6-6z\" fill=\"#F2F2F2\" /><path d=\"M38.91 58.24H11.87a3 3 0 00-3 3v35.17a3 3 0 003 3h27.04a3 3 0 003-3V61.24a3 3 0 00-3-3z\" fill=\"#F2F2F2\" /><path d=\"M82.75 67.37H52.58a1.55 1.55 0 00-1.55 1.55v1.95c0 .86.7 1.55 1.55 1.55h30.17a1.55 1.55 0 001.55-1.55v-1.95a1.55 1.55 0 00-1.55-1.55zm.2 11.37H52.38a1.35 1.35 0 00-1.35 1.35v1.68c0 .75.6 1.35 1.35 1.35h30.57a1.35 1.35 0 001.35-1.35v-1.68a1.35 1.35 0 00-1.35-1.35zm0 6.82H52.38a1.35 1.35 0 00-1.35 1.35v1.68c0 .75.6 1.35 1.35 1.35h30.57a1.35 1.35 0 001.35-1.35v-1.68a1.35 1.35 0 00-1.35-1.35z\" fill=\"#E3E4E3\" /><path d=\"M25.45 78.79a6.77 6.77 0 100-13.54 6.77 6.77 0 000 13.54zm-5.45.28S21.48 81 25.45 81s5.27-1.93 5.27-1.93 6.06 2.33 6.06 8.7c0 0-3.14 4.63-11.14 4.63S14 87.77 14 87.77s.19-6.86 6-8.7z\" fill=\"#84ABAE\" /><path d=\"M93.55 123a21.45 21.45 0 100-42.9 21.45 21.45 0 000 42.9z\" fill=\"#FF6444\" /><path d=\"M93.55 86.62l-.01 14.93h13.95\" stroke=\"#fff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" /></svg>);","import IdvDocumentPending from 'Assets/ic-idv-document-pending.svg';\nimport PoaButton from 'Components/poa/poa-button';\nimport React from 'react';\nimport { Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\ntype TIdvSubmitComplete = {\n    needs_poa: boolean;\n    is_from_external: boolean;\n    redirect_button: React.ReactElement;\n};\n\nconst IdvSubmitComplete = ({ needs_poa, is_from_external, redirect_button }: TIdvSubmitComplete) => {\n    const poa_button = !is_from_external && <PoaButton custom_text={localize('Submit proof of address')} />;\n\n    return (\n        <div className='proof-of-identity__container'>\n            <IdvDocumentPending className='icon' />\n            <Text className='proof-of-identity__text btm-spacer' align='center' weight='bold'>\n                {localize('Your documents were submitted successfully')}\n            </Text>\n            <Text className='proof-of-identity__text text' size='xs' align='center'>\n                {localize('We’ll review your documents and notify you of its status within 5 minutes.')}\n            </Text>\n            {needs_poa ? (\n                <React.Fragment>\n                    <Text className='text' size='xs' align='center'>\n                        {localize(\"Next, we'll need your proof of address.\")}\n                    </Text>\n                    {poa_button}\n                </React.Fragment>\n            ) : (\n                <div className='proof-of-identity__redirection'>{redirect_button}</div>\n            )}\n        </div>\n    );\n};\n\nexport default IdvSubmitComplete;\n","import IdvSubmitComplete from './idv-submit-complete';\n\nexport default IdvSubmitComplete;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg viewBox=\"0 0 115 123\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M85.29 117.37H18.71c-5.92 0-10.71-4.48-10.71-10V10.49c0-5.52 4.79-10 10.71-10h66.58a8.1 8.1 0 018.36 7.81v101.25a8.11 8.11 0 01-8.36 7.82z\" fill=\"#C6E4E4\" /><path d=\"M53.65 19.43A19.75 19.75 0 1073.4 39.18a19.75 19.75 0 00-19.75-19.75zm-18 20.28h7.83c.01 3.18.46 6.35 1.34 9.41h-6.2a18 18 0 01-3-9.41h.03zm18.84-12.78v-5.72c2.09.45 4 2.58 5.36 5.72h-5.36zm6 1.68A32.25 32.25 0 0162.16 38h-7.67v-9.39h6zm-7.71-7.4v5.72h-5.33c1.38-3.14 3.27-5.27 5.36-5.72h-.03zm0 7.4V38h-7.64a32.07 32.07 0 011.64-9.41l6 .02zM43.45 38h-7.8A18 18 0 0139 28.61h6A33.62 33.62 0 0043.45 38zm1.67 1.69h7.69v9.41h-6.24a33.21 33.21 0 01-1.45-9.39v-.02zm7.69 11.11v6.35c-2.23-.49-4.23-2.87-5.63-6.35h5.63zm1.68 6.35V50.8h5.63c-1.4 3.48-3.4 5.86-5.63 6.35zm0-8v-9.44h7.69a33 33 0 01-1.45 9.41l-6.24.03zm9.37-9.41h7.83a17.92 17.92 0 01-3 9.41h-6.2a34.7 34.7 0 001.37-9.44v.03zm0-1.69a34.53 34.53 0 00-1.52-9.41h5.94A18 18 0 0171.66 38l-7.8.05zm3-11.09h-5.14a16.3 16.3 0 00-3.13-5.11 18 18 0 018.29 5.08l-.02.03zm-18.15-5.14a16.29 16.29 0 00-3.13 5.11h-5.16a18 18 0 018.29-5.11zm-8.87 29h5.5a16.73 16.73 0 003.37 5.74 18.06 18.06 0 01-8.87-5.76v.02zm18.75 5.74A16.82 16.82 0 0062 50.8h5.5a18.07 18.07 0 01-8.91 5.74v.02zM80.3 75.41H27.55a4.17 4.17 0 00-4.17 4.17v2.14a4.17 4.17 0 004.17 4.17H80.3a4.17 4.17 0 004.17-4.17v-2.14a4.17 4.17 0 00-4.17-4.17z\" fill=\"#fff\" /><path d=\"M96 47.98H6.06a5.5 5.5 0 00-5.5 5.5V104a5.5 5.5 0 005.5 5.5H96a5.5 5.5 0 005.5-5.5V53.48a5.5 5.5 0 00-5.5-5.5z\" fill=\"#fff\" /><path d=\"M96 48.48a5 5 0 015 5V104a5 5 0 01-5 5H6.06a5 5 0 01-5-5V53.48a5 5 0 015-5H96zm0-1H6.06a6 6 0 00-6 6V104a6 6 0 006 6H96a6 6 0 006-6V53.48a6 6 0 00-6-6z\" fill=\"#F2F2F2\" /><path d=\"M38.91 58.24H11.87a3 3 0 00-3 3v35.17a3 3 0 003 3h27.04a3 3 0 003-3V61.24a3 3 0 00-3-3z\" fill=\"#F2F2F2\" /><path d=\"M82.75 67.37H52.58a1.55 1.55 0 00-1.55 1.55v1.95c0 .86.7 1.55 1.55 1.55h30.17a1.55 1.55 0 001.55-1.55v-1.95a1.55 1.55 0 00-1.55-1.55zm.2 9.26H52.38a1.35 1.35 0 00-1.35 1.35v1.68c0 .75.6 1.35 1.35 1.35h30.57a1.35 1.35 0 001.35-1.35v-1.68a1.35 1.35 0 00-1.35-1.35zm0 8.93H52.38a1.35 1.35 0 00-1.35 1.35v1.68c0 .74.6 1.35 1.35 1.35h30.57a1.35 1.35 0 001.35-1.35v-1.68a1.35 1.35 0 00-1.35-1.35z\" fill=\"#E3E4E3\" /><path d=\"M25.45 78.79a6.77 6.77 0 100-13.54 6.77 6.77 0 000 13.54zm-5.45.28S21.48 81 25.45 81s5.27-1.93 5.27-1.93 6.06 2.33 6.06 8.7c0 0-3.14 4.63-11.14 4.63S14 87.77 14 87.77s.19-6.86 6-8.7z\" fill=\"#84ABAE\" /><path d=\"M91.99 123A23 23 0 1092 77a23 23 0 00-.01 46z\" fill=\"#4BB4B3\" /><path d=\"M90.38 107.38c-.25 0-.49-.09-.68-.24l-6.06-5a1.09 1.09 0 01-.15-1.51 1.07 1.07 0 011.51-.15l5.23 4.28 9.45-11.61a1.07 1.07 0 111.66 1.35L91.22 107a1.08 1.08 0 01-.73.39l-.11-.01z\" fill=\"#fff\" /></svg>);","import IdvDocumentVerified from 'Assets/ic-idv-verified.svg';\nimport PoaButton from 'Components/poa/poa-button';\nimport React from 'react';\nimport { Text } from '@deriv/components';\nimport { isMobile } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\ntype TIdvVerified = {\n    needs_poa: boolean;\n    is_from_external: boolean;\n    redirect_button: React.ReactNode;\n};\n\nconst IdvVerified = ({ needs_poa, is_from_external, redirect_button }: Partial<TIdvVerified>) => {\n    const header_Text = needs_poa\n        ? localize('Your ID is verified. You will also need to submit proof of your address.')\n        : localize('ID verification passed');\n\n    return (\n        <div className='proof-of-identity__container' data-testid='poi_idv_verified_container'>\n            <IdvDocumentVerified className='icon' />\n            <Text className='proof-of-identity__text btm-spacer' align='center' weight='bold'>\n                {header_Text}\n            </Text>\n            {needs_poa ? (\n                <React.Fragment>\n                    {!isMobile() && (\n                        <Text className='text' size='xs' align='center'>\n                            {localize(\"Next, we'll need your proof of address.\")}\n                        </Text>\n                    )}\n                    {!is_from_external && <PoaButton custom_text={localize('Submit proof of address')} />}\n                </React.Fragment>\n            ) : (\n                redirect_button\n            )}\n        </div>\n    );\n};\n\nexport default IdvVerified;\n","import IdvVerified from './idv-verified';\n\nexport default IdvVerified;\n","import IdvExpired from 'Components/poi/idv-status/idv-expired';\nimport IdvNoSubmissions from 'Components/poi/idv-status/idv-limited';\nimport IdvRejected from 'Components/poi/idv-status/idv-rejected';\nimport IdvSubmitComplete from 'Components/poi/idv-status/idv-submit-complete';\nimport IdvVerified from 'Components/poi/idv-status/idv-verified';\nimport React from 'react';\nimport { identity_status_codes } from './proof-of-identity-utils';\n\nconst Idv = ({ handleRequireSubmission, idv, is_from_external, needs_poa, redirect_button }) => {\n    const { status, submissions_left } = idv;\n\n    switch (status) {\n        case identity_status_codes.pending:\n            return (\n                <IdvSubmitComplete\n                    is_from_external={is_from_external}\n                    needs_poa={needs_poa}\n                    redirect_button={redirect_button}\n                />\n            );\n        case identity_status_codes.rejected:\n        case identity_status_codes.suspected:\n            if (Number(submissions_left) < 1)\n                return <IdvNoSubmissions handleRequireSubmission={handleRequireSubmission} />;\n            return <IdvRejected handleRequireSubmission={handleRequireSubmission} />;\n        case identity_status_codes.verified:\n            return (\n                <IdvVerified\n                    is_from_external={is_from_external}\n                    needs_poa={needs_poa}\n                    redirect_button={redirect_button}\n                />\n            );\n        case identity_status_codes.expired:\n            return <IdvExpired redirect_button={redirect_button} handleRequireSubmission={handleRequireSubmission} />;\n        default:\n            return null;\n    }\n};\n\nexport default Idv;\n","import { OnfidoNotRequired } from './not-required';\n\nexport default OnfidoNotRequired;\n","import React from 'react';\nimport { Icon } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport IconMessageContent from 'Components/icon-message-content';\n\nexport const OnfidoNotRequired = () => (\n    <IconMessageContent\n        message={localize('Proof of identity verification not required')}\n        text={localize(\n            'Your account does not need identity verification at this time. We will inform you if identity verification is required in the future.'\n        )}\n        icon={<Icon icon='IcPoiVerified' size={128} />}\n    />\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { localize } from '@deriv/translations';\nimport { Div100vhContainer, Text, Button, Icon, ThemedScrollbars } from '@deriv/components';\nimport { isDesktop, isMobile } from '@deriv/shared';\n\ntype TListItem = {\n    text?: string;\n};\n\ntype TMessage_list = {\n    message_list?: string[];\n};\n\ntype TIconMessageList = TMessage_list & {\n    className: string;\n    icon: React.ReactElement;\n    message: string;\n    onContinue: () => void;\n};\n\nconst ListItem = ({ text }: TListItem) => (\n    <div className='account-management__list-message'>\n        <div className='account-management__list-icon'>\n            <Icon icon='IcCloseCircle' color='red' />\n        </div>\n        <div className='account-management__list-text-container'>\n            <Text size='xs' className='account-management__list-text'>\n                {text}\n            </Text>\n        </div>\n    </div>\n);\n\nconst IconMessageList = ({ className, icon, message, message_list = [], onContinue }: Partial<TIconMessageList>) => {\n    const has_maximum_list = message_list.length > 3;\n    return (\n        <ThemedScrollbars is_bypassed={isMobile()}>\n            <Div100vhContainer\n                className='account-management__message-wrapper'\n                is_disabled={isDesktop()}\n                height_offset='110px'\n            >\n                <div\n                    className={classNames('account-management__message-content', {\n                        [`${className}__message-content`]: className,\n                    })}\n                    data-testid='dt_icon_message_list'\n                >\n                    {icon && (\n                        <div\n                            className={classNames('account-management__message-icon', {\n                                [`${className}__message-icon`]: className,\n                            })}\n                        >\n                            {icon}\n                        </div>\n                    )}\n                    <Text\n                        as='div'\n                        weight='bold'\n                        className={classNames('account-management__message', {\n                            [`${className}__message`]: className,\n                        })}\n                    >\n                        {message}\n                    </Text>\n\n                    {message_list && (\n                        <div className='account-management__list-container'>\n                            {has_maximum_list ? (\n                                <MaximumList message_list={message_list} />\n                            ) : (\n                                message_list.map((text, idx) => <ListItem key={idx} text={text} />)\n                            )}\n                        </div>\n                    )}\n                    {onContinue && (\n                        <Button\n                            type='button'\n                            className='account-management__continue'\n                            onClick={onContinue}\n                            large\n                            text={localize('Upload Document')}\n                            primary\n                        />\n                    )}\n                </div>\n            </Div100vhContainer>\n        </ThemedScrollbars>\n    );\n};\n\nconst MaximumList = ({ message_list }: TMessage_list) => {\n    const [show_more, setShowMore] = React.useState(false);\n    const maximum_list = message_list.slice(0, 3);\n\n    return show_more ? (\n        <React.Fragment>\n            {message_list.map((text, idx) => (\n                <ListItem key={idx} text={text} />\n            ))}\n            <Button\n                type='button'\n                className='account-management__list-button'\n                onClick={() => setShowMore(false)}\n                large\n                text={localize('Show less')}\n                tertiary\n            />\n        </React.Fragment>\n    ) : (\n        <React.Fragment>\n            {maximum_list.map((text, idx) => (\n                <ListItem key={idx} text={text} />\n            ))}\n            <Button\n                type='button'\n                className='account-management__list-button'\n                onClick={() => setShowMore(true)}\n                large\n                text={localize('Show more')}\n                tertiary\n            />\n        </React.Fragment>\n    );\n};\n\nexport default IconMessageList;\n","import IconMessageList from './icon-message-list';\n\nexport default IconMessageList;\n","import { RejectedReasons } from './rejected-reasons';\n\nexport default RejectedReasons;\n","import React from 'react';\nimport { Icon } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport IconMessageList from 'Components/icon-message-list';\n\ntype TIconMessageList = {\n    handleRequireSubmission: () => void;\n    rejected_reasons: string[];\n};\n\nexport const RejectedReasons = ({ handleRequireSubmission, rejected_reasons }: TIconMessageList) => (\n    <IconMessageList\n        message={localize('Your proof of identity submission failed because:')}\n        icon={<Icon icon='IcPoiFailed' size={128} />}\n        message_list={rejected_reasons}\n        onContinue={handleRequireSubmission}\n    />\n);\n","import React from 'react';\nimport UploadComplete from 'Components/poi/status/upload-complete';\nimport Expired from 'Components/poi/status/expired';\nimport Verified from 'Components/poi/status/verified';\nimport RejectedReasons from 'Components/poi/status/rejected-reasons';\nimport Unsupported from 'Components/poi/status/unsupported';\nimport { identity_status_codes } from './proof-of-identity-utils';\n\nconst Onfido = ({\n    handleRequireSubmission,\n    is_from_external,\n    needs_poa,\n    onfido,\n    redirect_button,\n    manual,\n    setIsCfdPoiCompleted,\n}) => {\n    const { status, submissions_left, last_rejected: rejected_reasons } = onfido;\n\n    switch (status) {\n        case identity_status_codes.pending:\n            return (\n                <UploadComplete\n                    is_from_external={is_from_external}\n                    needs_poa={needs_poa}\n                    redirect_button={redirect_button}\n                />\n            );\n        case identity_status_codes.rejected:\n        case identity_status_codes.suspected:\n            if (Number(submissions_left) < 1) {\n                return (\n                    <Unsupported\n                        manual={manual}\n                        is_from_external={is_from_external}\n                        setIsCfdPoiCompleted={setIsCfdPoiCompleted}\n                    />\n                );\n            }\n            return (\n                <RejectedReasons\n                    rejected_reasons={rejected_reasons}\n                    handleRequireSubmission={handleRequireSubmission}\n                />\n            );\n        case identity_status_codes.verified:\n            return (\n                <Verified is_from_external={is_from_external} needs_poa={needs_poa} redirect_button={redirect_button} />\n            );\n        case identity_status_codes.expired:\n            return (\n                <Expired\n                    is_from_external={is_from_external}\n                    redirect_button={redirect_button}\n                    handleRequireSubmission={handleRequireSubmission}\n                />\n            );\n        default:\n            return null;\n    }\n};\n\nexport default Onfido;\n","import React from 'react';\nimport { Autocomplete, Button, DesktopWrapper, MobileWrapper, Text, SelectNative } from '@deriv/components';\nimport { Formik, Field, FormikErrors, FormikValues, FormikHelpers } from 'formik';\nimport { localize } from '@deriv/translations';\nimport classNames from 'classnames';\nimport FormFooter from 'Components/form-footer';\n\ntype TCountry = Record<string, string>;\n\ntype TCountrySelector = {\n    handleSelectionNext: () => void;\n    is_from_external: boolean;\n    residence_list: TCountry[];\n    selected_country: string;\n    setSelectedCountry: (value: TCountry) => void;\n};\n\nconst CountrySelector = ({\n    handleSelectionNext,\n    is_from_external,\n    residence_list,\n    selected_country,\n    setSelectedCountry,\n}: TCountrySelector) => {\n    const [country_list, setCountryList] = React.useState<TCountry[]>([]);\n\n    const initial_form_values: FormikValues = {\n        country_input: '',\n    };\n\n    const validateFields = (values: FormikValues) => {\n        const errors: FormikErrors<FormikValues> = {};\n        const { country_input } = values;\n\n        if (!country_input) {\n            errors.country_input = localize('Please select the country of document issuance.');\n        } else if (!country_list.find((c: FormikValues) => c.text === country_input)) {\n            errors.country_input = localize('Please select a valid country of document issuance.');\n        }\n\n        return errors;\n    };\n\n    const updateSelectedCountry = (country_name: string) => {\n        const matching_country: TCountry | undefined = country_list.find((c: FormikValues) => c.text === country_name);\n        if (matching_country) {\n            setSelectedCountry?.(matching_country);\n        }\n    };\n\n    const submitHandler = (values: FormikValues, { setSubmitting }: FormikHelpers<FormikValues>) => {\n        updateSelectedCountry(values.country_input);\n        setSubmitting(false);\n        handleSelectionNext?.();\n    };\n\n    React.useEffect(() => {\n        setCountryList(residence_list);\n    }, [residence_list]);\n\n    return (\n        <Formik initialValues={initial_form_values} validate={validateFields} onSubmit={submitHandler}>\n            {({\n                dirty,\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                isSubmitting,\n                isValid,\n                setFieldValue,\n                touched,\n                values,\n            }) => (\n                <React.Fragment>\n                    <div\n                        className={classNames('proof-of-identity__container', {\n                            'min-height': !is_from_external,\n                        })}\n                    >\n                        <Text className='proof-of-identity__header' align='center' weight='bold'>\n                            {localize('Proof of identity')}\n                        </Text>\n                        <Text className='proof-of-identity__country-text ' size='xs'>\n                            {localize('In which country was your document issued?')}\n                        </Text>\n                        <fieldset className='proof-of-identity__fieldset'>\n                            <Field name='country_input'>\n                                {({ field }: FormikValues) => (\n                                    <React.Fragment>\n                                        <DesktopWrapper>\n                                            <Autocomplete\n                                                className={classNames({ 'external-dropdown': is_from_external })}\n                                                {...field}\n                                                data_testid='dt_external_dropdown'\n                                                name='country_input'\n                                                data-lpignore='true'\n                                                error={touched.country_input && errors.country_input}\n                                                autoComplete='off'\n                                                type='text'\n                                                label={localize('Country')}\n                                                list_items={country_list}\n                                                value={values.country_input}\n                                                onBlur={(e: FormikValues) => {\n                                                    handleBlur(e);\n                                                    const current_input = e.target.value;\n                                                    if (\n                                                        !country_list.find(\n                                                            (c: FormikValues) => c.text === current_input\n                                                        )\n                                                    ) {\n                                                        setFieldValue('country_input', '', true);\n                                                        updateSelectedCountry('');\n                                                    }\n                                                }}\n                                                onChange={handleChange}\n                                                onItemSelection={({ text }: FormikValues) => {\n                                                    const select_value =\n                                                        text === 'No results found' || !text ? '' : text;\n                                                    setFieldValue('country_input', select_value, true);\n                                                    updateSelectedCountry(text);\n                                                }}\n                                                required\n                                            />\n                                        </DesktopWrapper>\n                                        <MobileWrapper>\n                                            <div className='proof-of-identity__dropdown-container'>\n                                                <SelectNative\n                                                    {...field}\n                                                    name='country_input'\n                                                    error={touched.country_input && errors.country_input}\n                                                    label={localize('Country')}\n                                                    placeholder={localize('Please select')}\n                                                    list_items={country_list}\n                                                    value={values.country_input}\n                                                    onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                                                        handleChange(e);\n                                                        updateSelectedCountry(e.target.value);\n                                                    }}\n                                                    use_text={true}\n                                                    required\n                                                />\n                                            </div>\n                                        </MobileWrapper>\n                                    </React.Fragment>\n                                )}\n                            </Field>\n                        </fieldset>\n                    </div>\n                    <FormFooter\n                        className={classNames('proof-of-identity__footer', { 'external-footer': is_from_external })}\n                    >\n                        <Button\n                            className='proof-of-identity__submit-button'\n                            type='submit'\n                            onClick={() => handleSubmit()}\n                            has_effect\n                            is_disabled={!dirty || isSubmitting || !isValid || !selected_country}\n                            is_loading={false}\n                            text={localize('Next')}\n                            large\n                            primary\n                        />\n                    </FormFooter>\n                </React.Fragment>\n            )}\n        </Formik>\n    );\n};\n\nexport default CountrySelector;\n","import CountrySelector from './poi-country-selector';\n\nexport default CountrySelector;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"16\" height=\"16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><g clipPath=\"url(#clip0)\"><path d=\"M8.7.3a1 1 0 010 1.4L3.42 7H15a1 1 0 110 2H3.41l5.3 5.3a1 1 0 11-1.42 1.4l-7-7-.07-.08.07.09A1 1 0 010 8.09 1.03 1.03 0 010 8v-.02-.07V8a1 1 0 01.21-.62.97.97 0 01.08-.09l7-7a1 1 0 011.42 0z\" fill=\"#333\" /></g><defs><clipPath id=\"clip0\"><path fill=\"#fff\" d=\"M0 0h16v16H0z\" /></clipPath></defs></svg>);","import React from 'react';\nimport classNames from 'classnames';\nimport { Field, FormikProps, FormikHandlers, FieldProps } from 'formik';\nimport { ResidenceList } from '@deriv/api-types';\nimport { localize } from '@deriv/translations';\nimport { formatInput, IDV_NOT_APPLICABLE_OPTION } from '@deriv/shared';\nimport { Autocomplete, DesktopWrapper, Input, MobileWrapper, SelectNative, Text } from '@deriv/components';\nimport { getDocumentData, preventEmptyClipboardPaste, generatePlaceholderText, getExampleFormat } from 'Helpers/utils';\n\ntype TDocumentList = Array<{\n    id: string;\n    text: string;\n    value?: string;\n    sample_image?: string;\n    example_format?: string;\n    additional?: any;\n}>;\n\ntype TFormProps = {\n    document_type: TDocumentList[0];\n    document_number: string;\n    document_additional?: string;\n    error_message?: string;\n};\n\ntype TIDVForm = {\n    selected_country: ResidenceList[0];\n    hide_hint?: boolean;\n    class_name?: string;\n    can_skip_document_verification: boolean;\n} & Partial<FormikHandlers> &\n    FormikProps<TFormProps>;\n\nconst IDVForm = ({\n    errors,\n    touched,\n    values,\n    handleBlur,\n    handleChange,\n    setFieldValue,\n    class_name,\n    selected_country,\n    hide_hint,\n    can_skip_document_verification = false,\n}: TIDVForm) => {\n    const [document_list, setDocumentList] = React.useState<TDocumentList>([]);\n    const [document_image, setDocumentImage] = React.useState<string | null>(null);\n    const [selected_doc, setSelectedDoc] = React.useState('');\n\n    const { documents_supported: document_data, has_visual_sample } = selected_country?.identity?.services?.idv ?? {};\n\n    const default_document = {\n        id: '',\n        text: '',\n        value: '',\n        example_format: '',\n        sample_image: '',\n    };\n\n    React.useEffect(() => {\n        if (document_data && selected_country && selected_country.value) {\n            const document_types = Object.keys(document_data);\n            if (document_types.length === 0) return;\n            const filtered_documents = ['gh', 'ng'].includes(selected_country.value)\n                ? document_types.filter(d => d !== 'voter_id')\n                : document_types;\n\n            const new_document_list = filtered_documents.map(key => {\n                const { display_name, format } = document_data[key];\n                const { new_display_name, example_format, sample_image } = getDocumentData(\n                    selected_country.value ?? '',\n                    key\n                );\n                const needs_additional_document = !!document_data[key].additional;\n\n                if (needs_additional_document) {\n                    return {\n                        id: key,\n                        text: new_display_name || display_name,\n                        additional: {\n                            display_name: document_data[key].additional?.display_name,\n                            format: document_data[key].additional?.format,\n                        },\n                        value: format,\n                        sample_image,\n                        example_format,\n                    };\n                }\n                return {\n                    id: key,\n                    text: new_display_name || display_name,\n                    value: format,\n                    sample_image,\n                    example_format,\n                };\n            });\n            if (can_skip_document_verification) {\n                setDocumentList([...new_document_list, IDV_NOT_APPLICABLE_OPTION]);\n            } else {\n                setDocumentList([...new_document_list]);\n            }\n        }\n    }, [document_data, selected_country, can_skip_document_verification]);\n\n    const resetDocumentItemSelected = () => {\n        setFieldValue('document_type', default_document, true);\n    };\n\n    const getDocument = (text: string) => {\n        return document_list.find(d => d.text === text) ?? default_document;\n    };\n\n    const onKeyUp = (e: { target: HTMLInputElement }, document_name: string) => {\n        const { example_format } =\n            document_name === 'document_number' ? values.document_type : values.document_type.additional;\n        let current_input: string | null = null;\n        current_input = example_format.includes('-')\n            ? formatInput(example_format, current_input ?? e.target.value, '-')\n            : e.target.value;\n        setFieldValue(document_name, current_input, true);\n    };\n\n    const bindDocumentData = (item: TDocumentList[0]) => {\n        setFieldValue('document_type', item, true);\n        setSelectedDoc(item?.id);\n        if (item?.id === IDV_NOT_APPLICABLE_OPTION.id) {\n            setFieldValue('document_number', '', true);\n            setFieldValue('document_additional', '', true);\n        }\n        if (has_visual_sample) {\n            setDocumentImage(item.sample_image ?? '');\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <section className={classNames('idv-form', class_name)}>\n                <div className='details-form'>\n                    <div className='poi-form-on-signup__fields'>\n                        <div\n                            className={classNames('proof-of-identity__container', {\n                                'proof-of-identity__container--idv': hide_hint,\n                            })}\n                        >\n                            <div\n                                className={classNames('proof-of-identity__inner-container', {\n                                    'proof-of-identity__inner-container--incl-image': document_image,\n                                })}\n                            >\n                                <div className='proof-of-identity__fieldset-container'>\n                                    <fieldset className={classNames({ 'proof-of-identity__fieldset': !hide_hint })}>\n                                        <Field name='document_type'>\n                                            {({ field }: FieldProps) => (\n                                                <React.Fragment>\n                                                    <DesktopWrapper>\n                                                        <div className='document-dropdown'>\n                                                            <Autocomplete\n                                                                {...field}\n                                                                name='document_type'\n                                                                data-lpignore='true'\n                                                                error={touched.document_type && errors.document_type}\n                                                                autoComplete='off'\n                                                                type='text'\n                                                                label={localize('Choose the document type')}\n                                                                list_items={document_list}\n                                                                value={values.document_type.text}\n                                                                onBlur={(e: { target: HTMLInputElement }) => {\n                                                                    handleBlur(e);\n                                                                    if (!getDocument(e.target.value)) {\n                                                                        resetDocumentItemSelected();\n                                                                    }\n                                                                }}\n                                                                onChange={handleChange}\n                                                                onItemSelection={(item: TDocumentList[0]) => {\n                                                                    if (\n                                                                        item.text === 'No results found' ||\n                                                                        !item.text\n                                                                    ) {\n                                                                        setSelectedDoc('');\n                                                                        resetDocumentItemSelected();\n                                                                    } else {\n                                                                        bindDocumentData(item);\n                                                                    }\n                                                                }}\n                                                                required\n                                                            />\n                                                        </div>\n                                                    </DesktopWrapper>\n                                                    <MobileWrapper>\n                                                        <SelectNative\n                                                            {...field}\n                                                            name='document_type'\n                                                            error={\n                                                                touched.document_type &&\n                                                                (errors.document_type as string | undefined)\n                                                            }\n                                                            label={localize('Choose the document type')}\n                                                            placeholder={localize('Please select')}\n                                                            list_items={document_list}\n                                                            value={values.document_type.text}\n                                                            onChange={e => {\n                                                                handleChange(e);\n                                                                const selected_document = getDocument(e.target.value);\n                                                                bindDocumentData(selected_document);\n                                                            }}\n                                                            use_text={true}\n                                                            required\n                                                        />\n                                                    </MobileWrapper>\n                                                </React.Fragment>\n                                            )}\n                                        </Field>\n                                    </fieldset>\n                                    <fieldset\n                                        className={classNames({\n                                            'proof-of-identity__fieldset-input': !hide_hint,\n                                        })}\n                                    >\n                                        <Field name='document_number'>\n                                            {({ field }: FieldProps) => (\n                                                <React.Fragment>\n                                                    <Input\n                                                        {...field}\n                                                        name='document_number'\n                                                        bottom_label={\n                                                            values.document_type &&\n                                                            getExampleFormat(values.document_type.example_format ?? '')\n                                                        }\n                                                        disabled={\n                                                            !values.document_type.id ||\n                                                            values.document_type.id === IDV_NOT_APPLICABLE_OPTION.id\n                                                        }\n                                                        error={\n                                                            (touched.document_number && errors.document_number) ||\n                                                            errors.error_message\n                                                        }\n                                                        autoComplete='off'\n                                                        placeholder={generatePlaceholderText(selected_doc)}\n                                                        value={values.document_number}\n                                                        onPaste={preventEmptyClipboardPaste}\n                                                        onBlur={handleBlur}\n                                                        onChange={handleChange}\n                                                        onKeyUp={(e: { target: HTMLInputElement }) =>\n                                                            onKeyUp(e, 'document_number')\n                                                        }\n                                                        required\n                                                        label={generatePlaceholderText(selected_doc)}\n                                                    />\n                                                    {values.document_type.additional?.display_name && (\n                                                        <Input\n                                                            {...field}\n                                                            name='document_additional'\n                                                            bottom_label={\n                                                                values.document_type.additional &&\n                                                                getExampleFormat(\n                                                                    values.document_type.additional?.example_format\n                                                                )\n                                                            }\n                                                            disabled={\n                                                                !values.document_type.id ||\n                                                                values.document_type.id === IDV_NOT_APPLICABLE_OPTION.id\n                                                            }\n                                                            error={\n                                                                (touched.document_additional &&\n                                                                    errors.document_additional) ||\n                                                                errors.error_message\n                                                            }\n                                                            autoComplete='off'\n                                                            placeholder={`Enter your ${values.document_type.additional?.display_name.toLowerCase()}`}\n                                                            value={values.document_additional}\n                                                            onPaste={preventEmptyClipboardPaste}\n                                                            onBlur={handleBlur}\n                                                            onChange={handleChange}\n                                                            onKeyUp={(e: { target: HTMLInputElement }) =>\n                                                                onKeyUp(e, 'document_additional')\n                                                            }\n                                                            required\n                                                        />\n                                                    )}\n                                                </React.Fragment>\n                                            )}\n                                        </Field>\n                                    </fieldset>\n                                </div>\n                                {document_image && (\n                                    <div className='proof-of-identity__sample-container'>\n                                        <Text size='xxs' weight='bold'>\n                                            {localize('Sample:')}\n                                        </Text>\n                                        <div className='proof-of-identity__image-container'>\n                                            <img\n                                                className='proof-of-identity__image'\n                                                src={document_image}\n                                                alt='document sample image'\n                                            />\n                                        </div>\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </React.Fragment>\n    );\n};\n\nexport default IDVForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Button } from '@deriv/components';\nimport { Formik } from 'formik';\nimport { localize } from '@deriv/translations';\nimport {\n    WS,\n    IDV_NOT_APPLICABLE_OPTION,\n    toMoment,\n    filterObjProperties,\n    isDesktop,\n    removeEmptyPropertiesFromObject,\n} from '@deriv/shared';\nimport { documentAdditionalError, getRegex, validate, makeSettingsRequest, validateName } from 'Helpers/utils';\nimport FormFooter from 'Components/form-footer';\nimport BackButtonIcon from 'Assets/ic-poi-back-btn.svg';\nimport IDVForm from 'Components/forms/idv-form';\nimport PersonalDetailsForm from 'Components/forms/personal-details-form';\nimport FormSubHeader from 'Components/form-sub-header';\n\nconst IdvDocumentSubmit = ({\n    handleBack,\n    handleViewComplete,\n    selected_country,\n    is_from_external,\n    account_settings,\n    getChangeableFields,\n}) => {\n    const visible_settings = ['first_name', 'last_name', 'date_of_birth'];\n    const form_initial_values = filterObjProperties(account_settings, visible_settings) || {};\n\n    if (form_initial_values.date_of_birth) {\n        form_initial_values.date_of_birth = toMoment(form_initial_values.date_of_birth).format('YYYY-MM-DD');\n    }\n\n    const changeable_fields = [...getChangeableFields()];\n\n    const initial_values = {\n        document_type: {\n            id: '',\n            text: '',\n            value: '',\n            example_format: '',\n            sample_image: '',\n        },\n        document_number: '',\n        ...form_initial_values,\n    };\n\n    const getExampleFormat = example_format => {\n        return example_format ? localize('Example: ') + example_format : '';\n    };\n\n    const shouldHideHelperImage = document_id => document_id === IDV_NOT_APPLICABLE_OPTION.id;\n\n    const isDocumentTypeValid = document_type => {\n        if (!document_type?.text) {\n            return localize('Please select a document type.');\n        }\n        return undefined;\n    };\n\n    const isAdditionalDocumentValid = (document_type, document_additional) => {\n        const error_message = documentAdditionalError(document_additional, document_type.additional?.format);\n        if (error_message) {\n            return localize(error_message) + getExampleFormat(document_type.additional?.example_format);\n        }\n        return undefined;\n    };\n\n    const isDocumentNumberValid = (document_number, document_type) => {\n        const is_document_number_invalid = document_number === document_type.example_format;\n        if (!document_number) {\n            return localize('Please enter your document number. ') + getExampleFormat(document_type.example_format);\n        } else if (is_document_number_invalid) {\n            return localize('Please enter a valid ID number.');\n        }\n        const format_regex = getRegex(document_type.value);\n        if (!format_regex.test(document_number)) {\n            return localize('Please enter the correct format. ') + getExampleFormat(document_type.example_format);\n        }\n        return undefined;\n    };\n\n    const validateFields = values => {\n        const errors = {};\n        const { document_type, document_number, document_additional } = values;\n        const needs_additional_document = !!document_type.additional;\n\n        errors.document_type = isDocumentTypeValid(document_type);\n        if (!shouldHideHelperImage(document_type?.id)) {\n            if (needs_additional_document) {\n                errors.document_additional = isAdditionalDocumentValid(document_type, document_additional);\n            }\n            errors.document_number = isDocumentNumberValid(document_number, document_type);\n        }\n        const required_fields = ['first_name', 'last_name', 'date_of_birth'];\n        const validateValues = validate(errors, values);\n        validateValues(val => val, required_fields, localize('This field is required'));\n\n        if (values.first_name) {\n            errors.first_name = validateName(values.first_name);\n        }\n        if (values.last_name) {\n            errors.last_name = validateName(values.last_name);\n        }\n\n        return removeEmptyPropertiesFromObject(errors);\n    };\n\n    const submitHandler = async (values, { setSubmitting, setErrors }) => {\n        setSubmitting(true);\n\n        const request = makeSettingsRequest(values, changeable_fields);\n\n        const data = await WS.setSettings(request);\n\n        if (data.error) {\n            setErrors({ error_message: data.error.message });\n            setSubmitting(false);\n            return;\n        }\n        const get_settings = WS.authorized.storage.getSettings();\n        if (get_settings.error) {\n            setErrors({ error_message: data.error.message });\n            setSubmitting(false);\n            return;\n        }\n        const submit_data = {\n            identity_verification_document_add: 1,\n            document_number: values.document_number,\n            document_additional: values.document_additional || '',\n            document_type: values.document_type.id,\n            issuing_country: selected_country.value,\n        };\n\n        if (submit_data.document_type === IDV_NOT_APPLICABLE_OPTION.id) {\n            return;\n        }\n        WS.send(submit_data).then(response => {\n            setSubmitting(false);\n            if (response.error) {\n                setErrors({ error_message: response.error.message });\n                return;\n            }\n            handleViewComplete();\n        });\n    };\n\n    return (\n        <Formik initialValues={{ ...initial_values }} validate={validateFields} onSubmit={submitHandler}>\n            {({\n                dirty,\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                isSubmitting,\n                isValid,\n                setFieldValue,\n                setFieldTouched,\n                touched,\n                values,\n            }) => (\n                <div className='proof-of-identity__container proof-of-identity__container--reset'>\n                    <section className='form-body'>\n                        <FormSubHeader title={localize('Identity verification')} />\n                        <IDVForm\n                            errors={errors}\n                            touched={touched}\n                            values={values}\n                            handleChange={handleChange}\n                            handleBlur={handleBlur}\n                            setFieldValue={setFieldValue}\n                            hide_hint={false}\n                            selected_country={selected_country}\n                            is_from_external={is_from_external}\n                            class_name='idv-layout'\n                        />\n\n                        <FormSubHeader title={localize('Details')} />\n                        <div\n                            className={classNames({\n                                'account-form__poi-confirm-example_container': !shouldHideHelperImage(\n                                    values?.document_type?.id\n                                ),\n                            })}\n                        >\n                            <PersonalDetailsForm\n                                errors={errors}\n                                touched={touched}\n                                values={values}\n                                handleChange={handleChange}\n                                handleBlur={handleBlur}\n                                setFieldValue={setFieldValue}\n                                setFieldTouched={setFieldTouched}\n                                is_qualified_for_idv={true}\n                                is_appstore\n                                should_hide_helper_image={shouldHideHelperImage(values?.document_type?.id)}\n                                editable_fields={changeable_fields}\n                            />\n                        </div>\n                    </section>\n                    <FormFooter className='proof-of-identity__footer'>\n                        {isDesktop() && (\n                            <Button className='back-btn' onClick={handleBack} type='button' has_effect large secondary>\n                                <BackButtonIcon className='back-btn-icon' /> {localize('Go Back')}\n                            </Button>\n                        )}\n                        <Button\n                            className='proof-of-identity__submit-button'\n                            type='submit'\n                            onClick={handleSubmit}\n                            has_effect\n                            is_disabled={!dirty || isSubmitting || !isValid}\n                            text={localize('Verify')}\n                            large\n                            primary\n                        />\n                    </FormFooter>\n                </div>\n            )}\n        </Formik>\n    );\n};\n\nIdvDocumentSubmit.propTypes = {\n    account_settings: PropTypes.object,\n    getChangeableFields: PropTypes.func,\n    handleBack: PropTypes.func,\n    handleViewComplete: PropTypes.func,\n    is_from_external: PropTypes.bool,\n    selected_country: PropTypes.object,\n};\n\nexport default IdvDocumentSubmit;\n","import IdvDocumentSubmit from './idv-document-submit';\n\nexport default IdvDocumentSubmit;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react';\nimport { WS } from '@deriv/shared';\nimport CountrySelector from 'Components/poi/poi-country-selector';\nimport IdvDocumentSubmit from 'Components/poi/idv-document-submit';\nimport IdvUploadComplete from 'Components/poi/idv-status/idv-submit-complete';\nimport Unsupported from 'Components/poi/status/unsupported';\nimport UploadComplete from 'Components/poi/status/upload-complete';\nimport OnfidoUpload from './onfido-sdk-view-container';\nimport { identity_status_codes, submission_status_code, service_code } from './proof-of-identity-utils';\n\nconst POISubmission = ({\n    account_settings,\n    allow_poi_resubmission,\n    has_require_submission,\n    height,\n    getChangeableFields,\n    identity_last_attempt,\n    idv,\n    is_from_external,\n    is_idv_disallowed,\n    needs_poa,\n    onfido,\n    onStateChange,\n    redirect_button,\n    refreshNotifications,\n    residence_list,\n    setIsCfdPoiCompleted,\n}) => {\n    const [submission_status, setSubmissionStatus] = React.useState(); // selecting, submitting, complete\n    const [submission_service, setSubmissionService] = React.useState();\n    const [selected_country, setSelectedCountry] = React.useState({});\n\n    const handleSelectionNext = () => {\n        if (Object.keys(selected_country).length) {\n            const { submissions_left: idv_submissions_left } = idv;\n            const { submissions_left: onfido_submissions_left } = onfido;\n            const is_idv_supported = selected_country.identity.services.idv.is_country_supported;\n            const is_onfido_supported =\n                selected_country.identity.services.onfido.is_country_supported && selected_country.value !== 'ng';\n\n            if (is_idv_supported && Number(idv_submissions_left) > 0 && !is_idv_disallowed) {\n                setSubmissionService(service_code.idv);\n            } else if (onfido_submissions_left && is_onfido_supported) {\n                setSubmissionService(service_code.onfido);\n            } else {\n                setSubmissionService(service_code.manual);\n            }\n            setSubmissionStatus(submission_status_code.submitting);\n        }\n    };\n\n    const handleViewComplete = () => {\n        if (onStateChange && typeof onStateChange === 'function') {\n            onStateChange(identity_status_codes.pending);\n        }\n        setSubmissionStatus(submission_status_code.complete);\n\n        WS.authorized.getAccountStatus().then(() => {\n            refreshNotifications();\n        });\n    };\n\n    const handleBack = () => setSubmissionStatus(submission_status_code.selecting);\n\n    const getCountryFromResidence = React.useCallback(\n        country_code => residence_list.find(residence => residence.value === country_code),\n        [residence_list]\n    );\n\n    React.useEffect(() => {\n        if (submission_status !== submission_status_code.complete) {\n            if ((has_require_submission || allow_poi_resubmission) && identity_last_attempt) {\n                switch (identity_last_attempt.service) {\n                    case service_code.idv: {\n                        if (Number(idv.submissions_left) > 0 || Number(onfido.submissions_left) > 0) {\n                            setSubmissionStatus(submission_status_code.selecting);\n                        } else {\n                            setSubmissionService(service_code.manual);\n                            setSubmissionStatus(submission_status_code.submitting);\n                        }\n                        break;\n                    }\n                    case service_code.onfido: {\n                        if (Number(onfido.submissions_left) > 0) {\n                            setSubmissionStatus(submission_status_code.selecting);\n                        } else {\n                            setSubmissionService(service_code.manual);\n                            setSubmissionStatus(submission_status_code.submitting);\n                        }\n                        break;\n                    }\n                    case service_code.manual: {\n                        setSelectedCountry(getCountryFromResidence(identity_last_attempt.country_code));\n                        setSubmissionStatus(submission_status_code.submitting);\n                        setSubmissionService(service_code.manual);\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            } else {\n                setSubmissionStatus(submission_status_code.selecting);\n            }\n        }\n    }, [\n        allow_poi_resubmission,\n        getCountryFromResidence,\n        has_require_submission,\n        identity_last_attempt,\n        idv.submissions_left,\n        onfido.submissions_left,\n    ]);\n\n    switch (submission_status) {\n        case submission_status_code.selecting: {\n            return (\n                <CountrySelector\n                    handleSelectionNext={handleSelectionNext}\n                    is_from_external={is_from_external}\n                    residence_list={residence_list}\n                    selected_country={selected_country}\n                    setSelectedCountry={setSelectedCountry}\n                />\n            );\n        }\n        case submission_status_code.submitting: {\n            switch (submission_service) {\n                case service_code.idv:\n                    return (\n                        <IdvDocumentSubmit\n                            handleViewComplete={handleViewComplete}\n                            handleBack={handleBack}\n                            selected_country={selected_country}\n                            account_settings={account_settings}\n                            getChangeableFields={getChangeableFields}\n                        />\n                    );\n                case service_code.onfido: {\n                    const country_code = selected_country.value;\n                    const doc_obj = selected_country.identity.services.onfido.documents_supported;\n                    const documents_supported = Object.keys(doc_obj).map(d => doc_obj[d].display_name);\n\n                    return (\n                        <OnfidoUpload\n                            account_settings={account_settings}\n                            country_code={country_code}\n                            documents_supported={documents_supported}\n                            getChangeableFields={getChangeableFields}\n                            handleViewComplete={handleViewComplete}\n                            height={height}\n                        />\n                    );\n                }\n                case service_code.manual:\n                    return (\n                        <Unsupported\n                            country_code={selected_country.value}\n                            is_from_external={is_from_external}\n                            setIsCfdPoiCompleted={setIsCfdPoiCompleted}\n                            allow_poi_resubmission={allow_poi_resubmission}\n                        />\n                    );\n                default:\n                    return null;\n            }\n        }\n        case submission_status_code.complete: {\n            switch (submission_service) {\n                case service_code.idv:\n                    return (\n                        <IdvUploadComplete\n                            is_from_external={is_from_external}\n                            needs_poa={needs_poa}\n                            redirect_button={redirect_button}\n                        />\n                    );\n                // This will be replaced in the next Manual Upload Project\n                case service_code.manual:\n                    return (\n                        <UploadComplete\n                            is_from_external={is_from_external}\n                            needs_poa={needs_poa}\n                            redirect_button={redirect_button}\n                            is_manual_upload\n                        />\n                    );\n                case service_code.onfido:\n                    return (\n                        <UploadComplete\n                            is_from_external={is_from_external}\n                            needs_poa={needs_poa}\n                            redirect_button={redirect_button}\n                        />\n                    );\n                default:\n                    return null;\n            }\n        }\n        default:\n            return null;\n    }\n};\n\nexport default POISubmission;\n","import { Button, Loading } from '@deriv/components';\nimport { WS, getPlatformRedirect, platforms } from '@deriv/shared';\nimport { identity_status_codes, service_code } from './proof-of-identity-utils';\nimport DemoMessage from 'Components/demo-message';\nimport ErrorMessage from 'Components/error-component';\nimport Expired from 'Components/poi/status/expired';\nimport IdvContainer from './idv.jsx';\nimport Limited from 'Components/poi/status/limited';\nimport { Localize } from '@deriv/translations';\nimport NotRequired from 'Components/poi/status/not-required';\nimport Onfido from './onfido.jsx';\nimport POISubmission from './proof-of-identity-submission.jsx';\nimport React from 'react';\nimport Unsupported from 'Components/poi/status/unsupported';\nimport UploadComplete from 'Components/poi/status/upload-complete';\nimport Verified from 'Components/poi/status/verified';\nimport { populateVerificationStatus } from '../Helpers/verification';\nimport { useHistory } from 'react-router';\n\nconst ProofOfIdentityContainer = ({\n    account_settings,\n    account_status,\n    app_routing_history,\n    fetchResidenceList,\n    getChangeableFields,\n    height,\n    is_from_external,\n    is_switching,\n    is_virtual,\n    is_high_risk,\n    is_withdrawal_lock,\n    onStateChange,\n    refreshNotifications,\n    routeBackInApp,\n    should_allow_authentication,\n    setIsCfdPoiCompleted,\n    updateAccountStatus,\n}) => {\n    const history = useHistory();\n    const [api_error, setAPIError] = React.useState();\n    const [has_require_submission, setHasRequireSubmission] = React.useState(false);\n    const [residence_list, setResidenceList] = React.useState();\n    const [is_status_loading, setStatusLoading] = React.useState(true);\n\n    const from_platform = getPlatformRedirect(app_routing_history);\n\n    const should_show_redirect_btn = Object.keys(platforms).includes(from_platform?.ref);\n\n    const routeBackTo = redirect_route => routeBackInApp(history, [redirect_route]);\n    const handleRequireSubmission = () => setHasRequireSubmission(true);\n\n    React.useEffect(() => {\n        // only re-mount logic when switching is done\n        if (!is_switching) {\n            WS.authorized.getAccountStatus().then(response_account_status => {\n                if (response_account_status.error) {\n                    setAPIError(response_account_status.error);\n                    setStatusLoading(false);\n                    return;\n                }\n\n                fetchResidenceList().then(response_residence_list => {\n                    if (response_residence_list.error) {\n                        setAPIError(response_residence_list.error);\n                    } else {\n                        setResidenceList(response_residence_list.residence_list);\n                    }\n                    setStatusLoading(false);\n                });\n            });\n        }\n    }, [fetchResidenceList, is_switching]);\n\n    if (is_status_loading || is_switching) {\n        return <Loading is_fullscreen={false} />;\n    } else if (is_virtual) {\n        return <DemoMessage />;\n    } else if (api_error) {\n        return <ErrorMessage error_message={api_error?.message || api_error} />;\n    }\n\n    const verification_status = populateVerificationStatus(account_status);\n    const {\n        idv,\n        allow_poi_resubmission,\n        identity_last_attempt,\n        identity_status,\n        is_age_verified,\n        is_idv_disallowed,\n        manual,\n        needs_poa,\n        onfido,\n    } = verification_status;\n    const last_attempt_status = identity_last_attempt?.status;\n    const is_last_attempt_idv = identity_last_attempt?.service === 'idv';\n    const is_last_attempt_onfido = identity_last_attempt?.service === 'onfido';\n    const should_ignore_idv = is_high_risk && is_withdrawal_lock;\n\n    if (!should_allow_authentication && !is_age_verified) {\n        return <NotRequired />;\n    }\n\n    const onClickRedirectButton = () => {\n        const platform = platforms[from_platform.ref];\n        const { is_hard_redirect = false, url = '' } = platform ?? {};\n        if (is_hard_redirect) {\n            window.location.href = url;\n            window.sessionStorage.removeItem('config.platform');\n        } else {\n            routeBackTo(from_platform.route);\n        }\n    };\n\n    const redirect_button = should_show_redirect_btn && (\n        <Button primary className='proof-of-identity__redirect' onClick={onClickRedirectButton}>\n            <Localize i18n_default_text='Back to {{platform_name}}' values={{ platform_name: from_platform.name }} />\n        </Button>\n    );\n\n    if (\n        identity_status === identity_status_codes.none ||\n        has_require_submission ||\n        allow_poi_resubmission ||\n        (should_ignore_idv && is_last_attempt_idv && manual?.status !== 'verified' && manual?.status !== 'pending') ||\n        (should_ignore_idv && is_last_attempt_onfido && last_attempt_status === 'rejected')\n    ) {\n        return (\n            <POISubmission\n                account_settings={account_settings}\n                allow_poi_resubmission={allow_poi_resubmission}\n                has_require_submission={has_require_submission}\n                height={height ?? null}\n                getChangeableFields={getChangeableFields}\n                identity_last_attempt={identity_last_attempt}\n                idv={idv}\n                is_from_external={!!is_from_external}\n                is_idv_disallowed={is_idv_disallowed || should_ignore_idv}\n                manual={manual}\n                needs_poa={needs_poa}\n                onfido={onfido}\n                onStateChange={onStateChange}\n                redirect_button={redirect_button}\n                refreshNotifications={refreshNotifications}\n                residence_list={residence_list}\n                setIsCfdPoiCompleted={setIsCfdPoiCompleted}\n                updateAccountStatus={updateAccountStatus}\n            />\n        );\n    } else if (\n        !identity_last_attempt ||\n        // Prioritise verified status from back office. How we know this is if there is mismatch between current statuses (Should be refactored)\n        (identity_status === identity_status_codes.verified && identity_status !== identity_last_attempt.status)\n    ) {\n        switch (identity_status) {\n            case identity_status_codes.pending:\n                return (\n                    <UploadComplete\n                        is_from_external={!!is_from_external}\n                        needs_poa={needs_poa}\n                        redirect_button={redirect_button}\n                        is_manual_upload={manual?.status === 'pending'}\n                    />\n                );\n            case identity_status_codes.verified:\n                return (\n                    <Verified\n                        is_from_external={!!is_from_external}\n                        needs_poa={needs_poa}\n                        redirect_button={redirect_button}\n                    />\n                );\n            case identity_status_codes.expired:\n                return (\n                    <Expired\n                        is_from_external={!!is_from_external}\n                        redirect_button={redirect_button}\n                        handleRequireSubmission={handleRequireSubmission}\n                    />\n                );\n            case identity_status_codes.rejected:\n            case identity_status_codes.suspected:\n                return <Limited handleRequireSubmission={handleRequireSubmission} />;\n            default:\n                break;\n        }\n    }\n\n    switch (identity_last_attempt.service) {\n        case service_code.idv:\n            return (\n                <IdvContainer\n                    handleRequireSubmission={handleRequireSubmission}\n                    idv={idv}\n                    is_from_external={!!is_from_external}\n                    needs_poa={needs_poa}\n                    redirect_button={redirect_button}\n                />\n            );\n        case service_code.onfido:\n            return (\n                <Onfido\n                    handleRequireSubmission={handleRequireSubmission}\n                    is_from_external={!!is_from_external}\n                    needs_poa={needs_poa}\n                    onfido={onfido}\n                    manual={manual}\n                    setIsCfdPoiCompleted={setIsCfdPoiCompleted}\n                    redirect_button={redirect_button}\n                />\n            );\n        case service_code.manual:\n            return (\n                <Unsupported\n                    manual={manual}\n                    is_from_external={is_from_external}\n                    setIsCfdPoiCompleted={setIsCfdPoiCompleted}\n                    needs_poa={needs_poa}\n                    redirect_button={redirect_button}\n                    handleRequireSubmission={handleRequireSubmission}\n                />\n            );\n        default:\n            return null;\n    }\n};\n\nexport default ProofOfIdentityContainer;\n","export const identity_status_codes = {\n    none: 'none',\n    pending: 'pending',\n    rejected: 'rejected',\n    verified: 'verified',\n    expired: 'expired',\n    suspected: 'suspected',\n} as const;\n\nexport const submission_status_code = {\n    selecting: 'selecting',\n    submitting: 'submitting',\n    complete: 'complete',\n} as const;\n\nexport const service_code = {\n    idv: 'idv',\n    onfido: 'onfido',\n    manual: 'manual',\n} as const;\n","import { AutoHeightWrapper } from '@deriv/components';\nimport ProofOfIdentityContainer from './proof-of-identity-container.jsx';\nimport React from 'react';\nimport { changeMetaTagWithOG } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { withRouter } from 'react-router-dom';\n\nconst ProofOfIdentity = observer(({ is_from_external, onStateChange }) => {\n    const { client, common, notifications } = useStore();\n    const {\n        account_status,\n        account_settings,\n        fetchResidenceList,\n        getChangeableFields,\n        is_switching,\n        is_high_risk,\n        is_withdrawal_lock,\n        should_allow_authentication,\n        is_virtual,\n        updateAccountStatus,\n    } = client;\n    const { refreshNotifications } = notifications;\n    const { app_routing_history, routeBackInApp } = common;\n    // next useEffect implements seo requirements\n    React.useEffect(() => {\n        const description_content = 'Submit your proof of identity documents to verify your account and start trading';\n        const title_content = 'Account Verification | Deriv app';\n\n        const restoreMetaTagWithOGDescription = changeMetaTagWithOG('description', description_content);\n        const restoreMetaTagWithOGTitle = changeMetaTagWithOG('title', title_content);\n\n        return () => {\n            restoreMetaTagWithOGDescription();\n            restoreMetaTagWithOGTitle();\n        };\n    }, []);\n\n    return (\n        <AutoHeightWrapper default_height={200}>\n            {({ setRef, height }) => (\n                <div ref={setRef} className='proof-of-identity'>\n                    <div className='proof-of-identity__main-container'>\n                        <ProofOfIdentityContainer\n                            height={height}\n                            account_settings={account_settings}\n                            account_status={account_status}\n                            app_routing_history={app_routing_history}\n                            fetchResidenceList={fetchResidenceList}\n                            getChangeableFields={getChangeableFields}\n                            is_from_external={is_from_external}\n                            is_switching={is_switching}\n                            is_virtual={is_virtual}\n                            is_high_risk={is_high_risk}\n                            is_withdrawal_lock={is_withdrawal_lock}\n                            onStateChange={onStateChange}\n                            refreshNotifications={refreshNotifications}\n                            routeBackInApp={routeBackInApp}\n                            should_allow_authentication={should_allow_authentication}\n                            is_description_enabled\n                            updateAccountStatus={updateAccountStatus}\n                        />\n                    </div>\n                </div>\n            )}\n        </AutoHeightWrapper>\n    );\n});\n\nexport default withRouter(ProofOfIdentity);\n","import React, { PropsWithChildren } from 'react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\n// import { ReactQueryDevtools } from '@tanstack/react-query-devtools';\n\nconst queryClient = new QueryClient();\n\nconst APIProvider = ({ children }: PropsWithChildren<unknown>) => (\n    <QueryClientProvider client={queryClient}>\n        {children}\n        {/*Temporary disabled due to the problem on codecov, You can uncomment to use in development environment, DO NOT COMMIT THIS UNCOMMENTED*/}\n        {/*<ReactQueryDevtools />*/}\n    </QueryClientProvider>\n);\n\nexport default APIProvider;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { useWS } from '@deriv/shared';\nimport type {\n    TSocketAcceptableProps,\n    TSocketRequestPayload,\n    TSocketResponseData,\n    TSocketSubscribableEndpointNames,\n} from '../types';\n\nconst useSubscription = <T extends TSocketSubscribableEndpointNames>(name: T) => {\n    const [is_loading, setIsLoading] = useState(false);\n    const [is_subscribed, setSubscribed] = useState(false);\n    const [error, setError] = useState<unknown>();\n    const [data, setData] = useState<TSocketResponseData<T>>();\n    const subscriber = useRef<{ unsubscribe?: VoidFunction }>();\n    const WS = useWS();\n\n    const subscribe = useCallback(\n        (...props: TSocketAcceptableProps<T>) => {\n            const prop = props?.[0];\n            const payload = prop && 'payload' in prop ? (prop.payload as TSocketRequestPayload<T>) : undefined;\n\n            setIsLoading(true);\n            setSubscribed(true);\n\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const onData = (response: any) => {\n                setData(response);\n                setIsLoading(false);\n            };\n\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const onError = (response: any) => {\n                setError(response.error);\n                setIsLoading(false);\n            };\n\n            try {\n                subscriber.current = WS.subscribe({ [name]: 1, subscribe: 1, ...(payload || {}) }).subscribe(\n                    onData,\n                    onError\n                );\n            } catch (e) {\n                setError(e);\n            }\n        },\n        [WS, name]\n    );\n\n    const unsubscribe = useCallback(() => {\n        subscriber.current?.unsubscribe?.();\n        setSubscribed(false);\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            unsubscribe();\n        };\n    }, [unsubscribe]);\n\n    return { subscribe, unsubscribe, is_loading, is_subscribed, error, data };\n};\n\nexport default useSubscription;\n","import React, { useEffect } from 'react';\nimport { useSubscription } from '@deriv/api';\nimport merge from 'lodash.merge';\nimport { observer } from 'mobx-react-lite';\nimport useStore from '../useStore';\n\nconst ExchangeRatesProvider = observer(({ children }: React.PropsWithChildren<unknown>) => {\n    const { data, subscribe } = useSubscription('exchange_rates');\n    const {\n        exchange_rates: { update },\n    } = useStore();\n\n    useEffect(() => {\n        subscribe({ payload: { base_currency: 'USD' } });\n    }, [subscribe]);\n\n    useEffect(() => {\n        if (data) {\n            const { exchange_rates } = data;\n\n            if (exchange_rates) update(prev => merge(prev, exchange_rates));\n        }\n    }, [update, data]);\n\n    return <>{children}</>;\n});\n\nexport default ExchangeRatesProvider;\n","import { createContext } from 'react';\nimport type { TStores } from '../types';\n\nconst StoreContext = createContext<TStores | null>(null);\n\nexport default StoreContext;\n","import React, { useEffect, useMemo } from 'react';\nimport { ExchangeRatesProvider } from './providers';\nimport StoreContext from './storeContext';\nimport { ExchangeRatesStore, FeatureFlagsStore } from './stores';\nimport type { TCoreStores, TStores } from '../types';\n\nconst StoreProvider = ({ children, store }: React.PropsWithChildren<{ store: TCoreStores }>) => {\n    const memoizedValue: TStores = useMemo(() => {\n        // If the store is mocked for testing purposes, then return the mocked value.\n        if ('is_mock' in store && store.is_mock) return store as unknown as TStores;\n\n        // Otherwise, instantiate store and return it.\n        return {\n            ...store,\n            exchange_rates: new ExchangeRatesStore(),\n            feature_flags: new FeatureFlagsStore(),\n        };\n    }, [store]);\n\n    useEffect(() => {\n        return () => {\n            Object.values(memoizedValue).forEach(value => {\n                if (typeof value === 'object' && 'unmount' in value) value.unmount();\n            });\n        };\n    }, [memoizedValue]);\n\n    return (\n        <StoreContext.Provider value={memoizedValue}>\n            <ExchangeRatesProvider>{children}</ExchangeRatesProvider>\n        </StoreContext.Provider>\n    );\n};\n\nexport default StoreProvider;\n","import { action, makeObservable, observable } from 'mobx';\nimport { makePersistable, stopPersisting } from 'mobx-persist-store';\n\nexport default class BaseStore<T> {\n    data: T | undefined = undefined;\n\n    constructor(name: string, onHydrationDone?: VoidFunction) {\n        makeObservable(this, {\n            data: observable,\n            update: action.bound,\n            unmount: action.bound,\n        });\n\n        makePersistable(this, { name, properties: ['data'], storage: window.localStorage }).then(() =>\n            onHydrationDone?.()\n        );\n    }\n\n    update(data: NonNullable<T> | ((previous?: T) => NonNullable<T>)) {\n        this.data = data instanceof Function ? data(this.data) : data;\n    }\n\n    unmount() {\n        stopPersisting(this);\n    }\n}\n","import BaseStore from './BaseStore';\nimport type { ExchangeRatesResponse } from '@deriv/api-types';\n\nexport default class ExchangeRatesStore extends BaseStore<ExchangeRatesResponse['exchange_rates']> {\n    constructor() {\n        super('ExchangeRatesStore');\n    }\n}\n","import BaseStore from './BaseStore';\n\nconst FLAGS = {\n    foo: false,\n    bar: false,\n    baz: false,\n    // Add your flag here 🚀\n} satisfies Record<string, boolean>;\n\nexport default class FeatureFlagsStore extends BaseStore<{ [k in keyof typeof FLAGS]: boolean }> {\n    constructor() {\n        super('FeatureFlagsStore', () => {\n            // Set the default values for the first time.\n            if (!this.data) this.update(FLAGS);\n\n            // Update the store data if a new flag was added or removed.\n            if (this.data && Object.keys(this.data).length !== Object.keys(FLAGS).length) {\n                this.update(old => {\n                    const data = FLAGS;\n\n                    Object.keys(FLAGS).forEach(flag => {\n                        // @ts-expect-error flag key is always present in the object, Hence can ignore the TS error.\n                        if (old[flag] !== undefined) data[flag] = old[flag];\n                    });\n\n                    return data;\n                });\n            }\n        });\n    }\n}\n","import { useContext } from 'react';\nimport StoreContext from './storeContext';\n\nconst useStore = () => {\n    const store = useContext(StoreContext);\n\n    if (!store) {\n        throw new Error('useStore must be used within StoreProvider');\n    }\n\n    return store;\n};\n\nexport default useStore;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"284\" height=\"158\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><g clipPath=\"url(#a)\"><rect x=\"25\" y=\".5\" width=\"218\" height=\"131\" rx=\"8\" fill=\"#fff\" /><g opacity=\".8\" filter=\"url(#b)\"><circle cx=\"195\" cy=\"186.5\" r=\"128\" fill=\"#CFCFCF\" /></g><g opacity=\".8\" filter=\"url(#c)\"><circle cx=\"267\" cy=\"34.5\" r=\"64\" fill=\"#D6DADB\" /></g><g opacity=\".8\" filter=\"url(#d)\"><circle cx=\"41\" cy=\"16.5\" r=\"40\" fill=\"#CFCFCF\" /></g><path d=\"M252.08-8.6L112.84 13.51 87.31 131.5h139.25L252.08-8.6z\" fill=\"#fff\" style={{\n      mixBlendMode: \"overlay\"\n    }} opacity=\".16\" /></g><rect x=\"41\" y=\"16.5\" width=\"64\" height=\"40\" rx=\"4\" fill=\"#E0E0E0\" /><rect x=\"41\" y=\"83.5\" width=\"64\" height=\"12\" rx=\"4\" fill=\"#E0E0E0\" /><rect x=\"41\" y=\"99.5\" width=\"101\" height=\"16\" rx=\"4\" fill=\"#E0E0E0\" /><g clipPath=\"url(#e)\"><path d=\"M211.06 47.53l1.47-3.54c.6.53.7 1.2.51 1.77a49.47 49.47 0 01-1.78 5.07c-.4.94-1.26.98-1.87.2-1-1.32-1.94-2.7-2.9-4.04-.06-.08-.14-.17-.14-.26.02-.26.07-.52.1-.79.23.03.53-.02.66.11.47.42.88.91 1.3 1.38.23.24.45.48.92.65-.06-.5-.1-1.02-.18-1.52a22.09 22.09 0 00-19.92-18.7c-1.32-.13-2.65-.09-3.97-.13l-1.38-.09-.08-.32c.25-.18.48-.46.74-.5.92-.17 1.86-.32 2.78-.35 9.4-.32 18.11 5.48 21.69 14.51.68 1.72 1.04 3.58 1.54 5.38.1.37.15.76.23 1.14l.27.03z\" fill=\"#000\" /></g><g clipPath=\"url(#f)\"><path d=\"M114.24 78.33l3.23 2.06a1.6 1.6 0 01-1.82.2 49.82 49.82 0 01-4.69-2.62c-.86-.56-.75-1.42.13-1.88 1.47-.76 2.98-1.45 4.47-2.16.09-.05.2-.11.27-.1.26.07.51.16.77.25-.07.2-.07.5-.22.62-.5.38-1.05.7-1.58 1.05-.28.18-.56.36-.8.78.5.04 1.02.09 1.53.09a22.08 22.08 0 0021.84-16.42c.35-1.27.54-2.59.81-3.88l.32-1.35.33-.02c.13.28.38.55.37.82 0 .93 0 1.88-.13 2.8-1.3 9.31-8.51 16.9-18.02 18.87-1.82.37-3.71.41-5.57.6-.38.03-.77.01-1.16.02l-.08.27z\" fill=\"#000\" /></g><g filter=\"url(#g)\"><rect x=\"3\" y=\"66\" width=\"100\" height=\"24\" rx=\"4\" fill=\"#fff\" /><rect x=\"11\" y=\"70\" width=\"16\" height=\"16\" rx=\"8\" fill=\"#4BB4B3\" /><path d=\"M17 80.8l-2.33-2.33a.66.66 0 00-.94 0 .66.66 0 000 .93l2.8 2.8c.26.25.68.25.94 0l7.06-7.07a.66.66 0 000-.93.66.66 0 00-.93 0L17 80.8z\" fill=\"#fff\" /><path d=\"M35.88 82.5v-.74h1.95v-5.62h-.07L36 77.78l-.49-.53 1.85-1.73h1.31v6.24h1.8v.74h-4.59zm7.73-4.02c.47 0 .82-.1 1.06-.32.24-.22.36-.5.36-.84v-.07c0-.37-.12-.64-.35-.82a1.37 1.37 0 00-.9-.28c-.36 0-.66.08-.88.24a1.78 1.78 0 00-.56.63l-.62-.48c.08-.14.19-.28.3-.41a2.16 2.16 0 011.03-.63 2.8 2.8 0 011.58.02c.26.07.48.19.67.34a1.62 1.62 0 01.62 1.3 1.61 1.61 0 01-.4 1.08 1.98 1.98 0 01-.94.55v.04a2.04 2.04 0 011 .55 1.72 1.72 0 01.46 1.21c0 .3-.05.58-.16.83a1.88 1.88 0 01-.48.64 2.33 2.33 0 01-.75.41 3 3 0 01-.97.15c-.3 0-.57-.03-.8-.1a2.39 2.39 0 01-.62-.27 2.72 2.72 0 01-.48-.38 3.72 3.72 0 01-.36-.44l.63-.48c.08.14.18.27.28.38a1.68 1.68 0 00.78.48c.16.04.34.06.56.06.49 0 .86-.11 1.12-.33.25-.23.38-.55.38-.96v-.08c0-.41-.13-.73-.38-.95-.26-.23-.63-.34-1.12-.34h-.82v-.73h.76zm4.07 1.41v-.86h2.61v.86h-2.6zm6.3 2.73c-.83 0-1.44-.32-1.82-.95a5.19 5.19 0 01-.57-2.66c0-1.14.19-2.03.57-2.66.38-.63 1-.95 1.83-.95.83 0 1.44.32 1.82.95.38.63.58 1.52.58 2.66 0 1.14-.2 2.03-.58 2.66-.38.63-.99.95-1.82.95zm0-.73c.28 0 .51-.06.7-.17a1.29 1.29 0 00.48-.48c.12-.2.2-.45.26-.73.06-.28.09-.59.09-.93v-1.14c0-.34-.03-.65-.1-.93a2.3 2.3 0 00-.25-.73 1.3 1.3 0 00-.47-.48 1.36 1.36 0 00-.7-.17c-.28 0-.51.06-.7.17a1.3 1.3 0 00-.47.48c-.12.2-.21.45-.27.73-.06.28-.08.59-.08.93v1.14c0 .34.02.65.08.93s.15.52.27.73a1.3 1.3 0 00.47.48c.19.11.42.17.7.17zm7.98-5.63H58.9l-.2 2.66h.07c.17-.23.36-.42.56-.56.22-.14.5-.21.87-.21.3 0 .58.05.83.15a1.9 1.9 0 011.1 1.1c.1.27.15.57.15.91 0 .34-.05.65-.16.94-.1.28-.26.52-.47.73a2.1 2.1 0 01-.74.47 2.65 2.65 0 01-.98.17 2.76 2.76 0 01-.78-.1 2.28 2.28 0 01-.59-.27 2.59 2.59 0 01-.46-.38 4.42 4.42 0 01-.35-.44l.63-.48.27.38c.1.11.2.21.32.29a1.56 1.56 0 00.96.25c.48 0 .85-.13 1.1-.38.24-.25.36-.61.36-1.07v-.1c0-.46-.12-.82-.37-1.07-.24-.25-.6-.38-1.09-.38-.32 0-.57.06-.76.18a2.39 2.39 0 00-.49.41l-.7-.1.24-3.84h3.74v.74zm1.7 3.63v-.86h2.62v.86h-2.61zm4.2 2.61v-.74h1.94v-5.62h-.07l-1.76 1.64-.49-.53 1.85-1.73h1.31v6.24h1.8v.74h-4.59zm10.44-4.42c0 .52-.08 1.01-.23 1.47a5.62 5.62 0 01-1.4 2.25c-.3.29-.58.52-.86.7h-1.08c.37-.27.7-.54 1-.8a5.2 5.2 0 001.7-2.82l-.05-.02a2.32 2.32 0 01-.65.72c-.26.19-.6.28-1.03.28-.3 0-.58-.05-.83-.15a1.8 1.8 0 01-.65-.43 2.1 2.1 0 01-.43-.67c-.1-.27-.15-.57-.15-.9 0-.34.05-.65.16-.93a2.11 2.11 0 011.2-1.21c.28-.11.6-.17.96-.17s.68.06.97.19c.3.12.54.3.74.53.2.23.36.5.47.84.1.33.16.7.16 1.12zm-2.33 1.07c.46 0 .82-.13 1.07-.38.26-.25.39-.62.39-1.09v-.08c0-.47-.13-.84-.4-1.09a1.45 1.45 0 00-1.06-.38c-.46 0-.82.13-1.08.38-.25.25-.38.62-.38 1.09v.08c0 .47.13.84.38 1.09.26.25.62.38 1.08.38zm8.33-1.07c0 .52-.08 1.01-.23 1.47a5.53 5.53 0 01-.6 1.25 6 6 0 01-1.66 1.7h-1.08c.37-.27.7-.54 1-.8a5.2 5.2 0 001.7-2.82l-.05-.02a2.32 2.32 0 01-.65.72c-.26.19-.6.28-1.03.28-.3 0-.58-.05-.83-.15-.26-.1-.47-.24-.65-.43a2.1 2.1 0 01-.43-.67c-.1-.27-.15-.57-.15-.9 0-.34.05-.65.16-.93a2.11 2.11 0 011.2-1.21c.28-.11.6-.17.96-.17s.68.06.97.19c.29.12.53.3.73.53.21.23.37.5.47.84.11.33.16.7.16 1.12zm-2.33 1.07c.46 0 .81-.13 1.07-.38s.39-.62.39-1.09v-.08c0-.47-.13-.84-.4-1.09a1.45 1.45 0 00-1.06-.38c-.46 0-.82.13-1.08.38-.26.25-.38.62-.38 1.09v.08c0 .47.12.84.38 1.09.26.25.62.38 1.08.38zm5.6-.67c.47 0 .83-.1 1.06-.32.24-.22.36-.5.36-.84v-.07c0-.37-.12-.64-.35-.82a1.37 1.37 0 00-.9-.28c-.36 0-.65.08-.88.24a1.78 1.78 0 00-.56.63l-.62-.48c.09-.14.2-.28.31-.41a2.16 2.16 0 011.02-.63 2.8 2.8 0 011.58.02c.26.07.48.19.67.34a1.62 1.62 0 01.62 1.3 1.61 1.61 0 01-.39 1.08 1.98 1.98 0 01-.95.55v.04a2.04 2.04 0 011.01.55 1.72 1.72 0 01.46 1.21c0 .3-.06.58-.17.83a1.88 1.88 0 01-.48.64 2.33 2.33 0 01-.75.41 3 3 0 01-.97.15c-.3 0-.57-.03-.8-.1a2.39 2.39 0 01-.62-.27 2.72 2.72 0 01-.48-.38 3.72 3.72 0 01-.36-.44l.63-.48c.09.14.18.27.28.38a1.68 1.68 0 00.78.48c.16.04.35.06.56.06.5 0 .87-.11 1.12-.33.25-.23.38-.55.38-.96v-.08c0-.41-.13-.73-.38-.95-.25-.23-.63-.34-1.12-.34h-.82v-.73h.76z\" fill=\"#333\" /></g><g filter=\"url(#h)\"><rect x=\"3\" y=\"98\" width=\"100\" height=\"24\" rx=\"4\" fill=\"#fff\" /><rect x=\"11\" y=\"102\" width=\"16\" height=\"16\" rx=\"8\" fill=\"#EC3F3F\" /><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M16.15 107.15a.5.5 0 01.7 0l2.15 2.14 2.15-2.14a.5.5 0 01.63-.06l.07.06a.5.5 0 010 .7L19.71 110l2.14 2.15a.5.5 0 01.06.63l-.06.07a.5.5 0 01-.7 0L19 110.71l-2.15 2.14a.5.5 0 01-.63.06l-.07-.06a.5.5 0 010-.7l2.14-2.15-2.14-2.15a.5.5 0 01-.06-.63l.06-.07z\" fill=\"#fff\" /><path d=\"M38 114.62c-.83 0-1.44-.32-1.83-.95a5.19 5.19 0 01-.57-2.66c0-1.14.19-2.03.57-2.66.39-.63 1-.95 1.83-.95.83 0 1.44.32 1.82.95.39.63.58 1.52.58 2.66 0 1.14-.2 2.03-.58 2.66-.38.63-.99.95-1.82.95zm0-.73c.27 0 .5-.06.7-.17.2-.11.35-.27.47-.48.12-.2.2-.45.26-.73.06-.28.09-.59.09-.93v-1.14c0-.34-.03-.65-.09-.93a2.3 2.3 0 00-.26-.73 1.3 1.3 0 00-.47-.48 1.36 1.36 0 00-.7-.17c-.27 0-.5.06-.7.17-.2.11-.35.27-.47.48-.12.2-.21.45-.27.73-.05.28-.08.59-.08.93v1.14c0 .34.03.65.08.93.06.28.15.52.27.73.12.2.28.37.47.48.2.11.43.17.7.17zm7.98-5.63h-3.06l-.2 2.66h.07c.16-.23.35-.42.56-.56.2-.14.5-.21.87-.21.3 0 .57.05.83.15a1.92 1.92 0 011.09 1.1 2.67 2.67 0 010 1.85c-.11.28-.27.52-.47.73a2.1 2.1 0 01-.74.47c-.3.11-.62.17-.98.17a2.76 2.76 0 01-.78-.1 2.3 2.3 0 01-.6-.27 2.57 2.57 0 01-.45-.38 4.44 4.44 0 01-.35-.44l.63-.48c.08.14.17.27.27.38.1.11.2.21.32.29a1.56 1.56 0 00.96.25c.48 0 .84-.13 1.09-.38.24-.25.37-.61.37-1.07v-.1c0-.46-.13-.82-.37-1.07-.25-.25-.61-.38-1.1-.38-.31 0-.57.06-.75.18a2.38 2.38 0 00-.5.41l-.7-.1.25-3.84h3.74v.74zm1.7 3.63v-.86h2.61v.86h-2.6zm4.19 2.61v-.74h1.95v-5.62h-.07l-1.76 1.64-.5-.53 1.86-1.73h1.3v6.24h1.8v.74h-4.58zm7.72-4.02c.48 0 .83-.1 1.06-.32.24-.22.36-.5.36-.84v-.07c0-.37-.11-.64-.35-.82a1.37 1.37 0 00-.9-.28c-.36 0-.65.08-.88.24a1.77 1.77 0 00-.56.63l-.62-.48c.09-.14.2-.28.31-.41a2.17 2.17 0 011.02-.63 2.8 2.8 0 011.58.02 1.81 1.81 0 011.12.89c.12.22.17.47.17.75 0 .23-.03.43-.1.61a1.44 1.44 0 01-.29.47 1.67 1.67 0 01-.43.34 2 2 0 01-.52.21v.04a2.04 2.04 0 011.01.55 1.72 1.72 0 01.46 1.21 1.87 1.87 0 01-.65 1.47c-.2.17-.45.31-.75.41-.3.1-.61.15-.97.15-.3 0-.56-.03-.8-.1a2.41 2.41 0 01-.62-.27 2.72 2.72 0 01-.48-.38 3.74 3.74 0 01-.36-.44l.63-.48c.09.14.18.27.28.38a1.7 1.7 0 00.78.48c.16.04.35.06.56.06.5 0 .87-.11 1.12-.33.26-.23.38-.55.38-.96v-.08c0-.41-.12-.73-.38-.95-.25-.23-.62-.34-1.12-.34h-.82v-.73h.76zm4.08 1.41v-.86h2.6v.86h-2.6zm4.18 2.61v-.74h1.95v-5.62h-.07l-1.76 1.64-.49-.53 1.85-1.73h1.31v6.24h1.8v.74h-4.59zm10.45-4.42c0 .52-.08 1.01-.23 1.47a5.62 5.62 0 01-1.4 2.25c-.3.29-.58.52-.86.7h-1.08c.37-.27.7-.54 1-.8a5.2 5.2 0 001.7-2.82l-.05-.02a2.31 2.31 0 01-.65.72c-.26.19-.6.28-1.03.28-.3 0-.58-.05-.83-.15a1.8 1.8 0 01-.65-.43 2.1 2.1 0 01-.43-.67c-.1-.27-.15-.57-.15-.9 0-.34.05-.65.16-.93a2.11 2.11 0 011.2-1.21c.28-.11.6-.17.96-.17s.68.06.97.19c.3.12.54.3.74.53.2.23.36.5.47.84.1.33.16.7.16 1.12zm-2.33 1.07c.46 0 .81-.13 1.07-.38s.39-.62.39-1.09v-.08c0-.47-.13-.84-.4-1.09a1.45 1.45 0 00-1.06-.38c-.46 0-.82.13-1.08.38-.26.25-.38.62-.38 1.09v.08c0 .47.12.84.38 1.09.26.25.62.38 1.08.38zm8.32-1.07c0 .52-.07 1.01-.23 1.47a5.53 5.53 0 01-.6 1.25 6 6 0 01-1.66 1.7h-1.08c.38-.27.71-.54 1-.8a5.2 5.2 0 001.7-2.82l-.05-.02a2.31 2.31 0 01-.65.72c-.26.19-.6.28-1.03.28-.3 0-.57-.05-.83-.15-.25-.1-.47-.24-.65-.43a2.1 2.1 0 01-.43-.67c-.1-.27-.15-.57-.15-.9 0-.34.06-.65.16-.93a2.11 2.11 0 011.2-1.21c.3-.11.61-.17.96-.17.36 0 .69.06.97.19.3.12.54.3.74.53.21.23.37.5.47.84.11.33.16.7.16 1.12zm-2.33 1.07c.46 0 .82-.13 1.07-.38.26-.25.4-.62.4-1.09v-.08c0-.47-.14-.84-.4-1.09a1.45 1.45 0 00-1.07-.38c-.46 0-.82.13-1.08.38-.25.25-.38.62-.38 1.09v.08c0 .47.13.84.38 1.09.26.25.62.38 1.08.38zm5.61-.67c.47 0 .83-.1 1.06-.32.24-.22.36-.5.36-.84v-.07c0-.37-.12-.64-.35-.82a1.37 1.37 0 00-.9-.28c-.36 0-.65.08-.88.24a1.77 1.77 0 00-.56.63l-.62-.48c.09-.14.2-.28.31-.41a2.17 2.17 0 011.02-.63 2.8 2.8 0 011.58.02c.26.07.48.19.67.34a1.62 1.62 0 01.62 1.3c0 .23-.04.43-.1.61a1.44 1.44 0 01-.29.47 1.67 1.67 0 01-.43.34 2 2 0 01-.52.21v.04a2.04 2.04 0 011.01.55 1.72 1.72 0 01.46 1.21 1.87 1.87 0 01-.65 1.47 2.33 2.33 0 01-.75.41 3 3 0 01-.97.15c-.3 0-.57-.03-.8-.1a2.41 2.41 0 01-.62-.27 2.72 2.72 0 01-.48-.38 3.74 3.74 0 01-.36-.44l.63-.48c.09.14.18.27.28.38a1.7 1.7 0 00.78.48c.16.04.35.06.56.06.5 0 .87-.11 1.12-.33.25-.23.38-.55.38-.96v-.08c0-.41-.13-.73-.38-.95-.25-.23-.63-.34-1.12-.34h-.82v-.73h.76z\" fill=\"#333\" /></g><g filter=\"url(#i)\"><rect x=\"3\" y=\"130\" width=\"100\" height=\"24\" rx=\"4\" fill=\"#fff\" /><rect x=\"11\" y=\"134\" width=\"16\" height=\"16\" rx=\"8\" fill=\"#EC3F3F\" /><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M16.15 139.15a.5.5 0 01.7 0l2.15 2.14 2.15-2.14a.5.5 0 01.63-.06l.07.06a.5.5 0 010 .7L19.71 142l2.14 2.15a.5.5 0 01.06.63l-.06.07a.5.5 0 01-.7 0L19 142.71l-2.15 2.14a.5.5 0 01-.63.06l-.07-.06a.5.5 0 010-.7l2.14-2.15-2.14-2.15a.5.5 0 01-.06-.63l.06-.07z\" fill=\"#fff\" /><path d=\"M35.88 146.5v-.74h1.95v-5.62h-.07L36 141.78l-.49-.53 1.85-1.73h1.31v6.24h1.8v.74h-4.59zm10.45-4.42c0 .52-.08 1.01-.23 1.47a5.53 5.53 0 01-.6 1.25 6 6 0 01-.8 1 5.48 5.48 0 01-.86.7h-1.08c.37-.27.7-.54 1-.8a5.13 5.13 0 001.7-2.82l-.05-.02a2.31 2.31 0 01-.65.72c-.26.19-.6.28-1.03.28-.3 0-.58-.05-.83-.15-.26-.1-.47-.24-.65-.43a2.1 2.1 0 01-.43-.67c-.1-.27-.15-.57-.15-.9 0-.34.05-.65.16-.93a2.11 2.11 0 011.2-1.21 2.6 2.6 0 01.96-.17c.36 0 .68.06.97.19.29.12.54.3.74.53.2.23.36.5.47.84.1.33.16.7.16 1.12zM44 143.15c.46 0 .81-.13 1.07-.38s.39-.62.39-1.09v-.08c0-.47-.13-.84-.4-1.09a1.45 1.45 0 00-1.06-.38c-.46 0-.82.13-1.08.38-.26.25-.38.62-.38 1.09v.08c0 .47.12.84.38 1.09.26.25.62.38 1.08.38zm8.32-1.07c0 .52-.07 1.01-.23 1.47a5.53 5.53 0 01-.6 1.25c-.24.37-.5.7-.8 1a5.48 5.48 0 01-.86.7h-1.08c.38-.27.7-.54 1-.8a5.13 5.13 0 001.7-2.82l-.05-.02a2.31 2.31 0 01-.65.72c-.26.19-.6.28-1.03.28-.3 0-.57-.05-.83-.15-.25-.1-.47-.24-.65-.43a2.1 2.1 0 01-.43-.67c-.1-.27-.15-.57-.15-.9 0-.34.06-.65.16-.93a2.11 2.11 0 011.2-1.21 2.6 2.6 0 01.96-.17c.36 0 .69.06.97.19.3.12.54.3.74.53.2.23.37.5.47.84.1.33.16.7.16 1.12zM50 143.15c.46 0 .82-.13 1.07-.38.26-.25.4-.62.4-1.09v-.08c0-.47-.14-.84-.4-1.09a1.45 1.45 0 00-1.07-.38c-.46 0-.82.13-1.08.38-.25.25-.38.62-.38 1.09v.08c0 .47.13.84.38 1.09.26.25.62.38 1.08.38zm5.6-.67c.48 0 .84-.1 1.07-.32.24-.22.36-.5.36-.84v-.07c0-.37-.12-.64-.35-.82a1.37 1.37 0 00-.9-.28c-.36 0-.65.08-.88.24a1.77 1.77 0 00-.56.63l-.62-.48c.09-.14.19-.28.3-.41a2.17 2.17 0 011.03-.63 2.8 2.8 0 011.58.02 1.81 1.81 0 011.12.89c.11.22.17.47.17.75a1.6 1.6 0 01-.82 1.42 2 2 0 01-.52.21v.04a2.04 2.04 0 011 .55 1.72 1.72 0 01.46 1.21 2 2 0 01-.16.83 1.88 1.88 0 01-.48.64c-.2.17-.46.31-.75.41-.3.1-.62.15-.97.15-.3 0-.57-.03-.8-.1a2.41 2.41 0 01-.62-.27 2.72 2.72 0 01-.48-.38 3.72 3.72 0 01-.36-.44l.63-.48c.09.14.18.27.28.38a1.7 1.7 0 00.78.48c.16.04.35.06.56.06.5 0 .87-.11 1.12-.33.25-.23.38-.55.38-.96v-.08c0-.41-.13-.73-.38-.95-.25-.23-.63-.34-1.12-.34h-.82v-.73h.76zm4.08 1.41v-.86h2.61v.86h-2.6zm6.3 2.73c-.82 0-1.43-.32-1.82-.95a5.19 5.19 0 01-.57-2.66c0-1.14.19-2.03.57-2.66.39-.63 1-.95 1.83-.95.83 0 1.44.32 1.82.95.39.63.58 1.52.58 2.66 0 1.14-.2 2.03-.58 2.66-.38.63-.99.95-1.82.95zm0-.73c.28 0 .52-.06.7-.17a1.29 1.29 0 00.48-.48c.12-.2.2-.45.26-.73.06-.28.09-.59.09-.93v-1.14c0-.34-.03-.65-.1-.93a2.3 2.3 0 00-.25-.73 1.3 1.3 0 00-.47-.48 1.36 1.36 0 00-.7-.17c-.27 0-.5.06-.7.17-.2.11-.35.27-.47.48-.12.2-.21.45-.27.73-.05.28-.08.59-.08.93v1.14c0 .34.03.65.08.93.06.28.15.52.27.73.12.2.28.37.47.48.2.11.43.17.7.17zm7.99-5.63H70.9l-.2 2.66h.07c.16-.23.35-.42.56-.56.2-.14.5-.21.87-.21.3 0 .57.05.83.15a1.92 1.92 0 011.09 1.1 2.7 2.7 0 010 1.85 2.07 2.07 0 01-.47.73 2.1 2.1 0 01-.74.47 2.66 2.66 0 01-.98.17 2.75 2.75 0 01-.78-.1 2.3 2.3 0 01-.6-.27 2.57 2.57 0 01-.45-.38 4.44 4.44 0 01-.35-.44l.63-.48c.08.14.17.27.27.38a1.55 1.55 0 001.28.54c.48 0 .84-.13 1.09-.38.24-.25.37-.61.37-1.07v-.1c0-.46-.13-.82-.37-1.07-.25-.25-.61-.38-1.1-.38-.32 0-.57.06-.76.18a2.38 2.38 0 00-.49.41l-.7-.1.25-3.84h3.74v.74zm1.7 3.63v-.86h2.61v.86h-2.6zm4.19 2.61v-.74h1.95v-5.62h-.07l-1.76 1.64-.5-.53 1.86-1.73h1.3v6.24h1.8v.74h-4.58zm7.72-4.02c.47 0 .83-.1 1.06-.32.24-.22.36-.5.36-.84v-.07c0-.37-.12-.64-.35-.82a1.37 1.37 0 00-.9-.28c-.36 0-.65.08-.88.24a1.77 1.77 0 00-.56.63l-.62-.48c.09-.14.2-.28.31-.41a2.17 2.17 0 011.02-.63 2.8 2.8 0 011.58.02c.26.07.48.19.67.34a1.62 1.62 0 01.62 1.3c0 .23-.04.43-.1.61a1.44 1.44 0 01-.29.47 1.67 1.67 0 01-.43.34 2 2 0 01-.52.21v.04a2.04 2.04 0 011.01.55 1.72 1.72 0 01.46 1.21 1.87 1.87 0 01-.65 1.47 2.33 2.33 0 01-.75.41 3 3 0 01-.97.15c-.3 0-.57-.03-.8-.1a2.41 2.41 0 01-.62-.27 2.72 2.72 0 01-.48-.38 3.74 3.74 0 01-.36-.44l.63-.48c.09.14.18.27.28.38a1.7 1.7 0 00.78.48c.16.04.35.06.56.06.5 0 .87-.11 1.12-.33.25-.23.38-.55.38-.96v-.08c0-.41-.13-.73-.38-.95-.25-.23-.63-.34-1.12-.34h-.82v-.73h.76z\" fill=\"#333\" /></g><path d=\"M116.86 25.26v4.96c0 .32-.05.61-.16.88-.1.26-.25.48-.45.67-.2.18-.44.32-.73.43-.28.1-.6.15-.96.15a2.78 2.78 0 01-.92-.14 2.03 2.03 0 01-.68-.4 2.14 2.14 0 01-.46-.62 2.75 2.75 0 01-.25-.8l1.42-.28c.11.6.4.91.87.91a.8.8 0 00.56-.2c.16-.15.24-.37.24-.67v-3.67h-2.12v-1.22h3.64zm3.55 7.1a2.7 2.7 0 01-1.04-.19 2.12 2.12 0 01-.77-.55 2.54 2.54 0 01-.48-.87 3.6 3.6 0 01-.17-1.14c0-.42.05-.8.17-1.14a2.43 2.43 0 01.48-.86c.2-.24.47-.42.77-.55.3-.13.65-.19 1.04-.19s.73.06 1.03.2c.3.12.56.3.77.54.2.23.37.52.49.86.1.34.17.72.17 1.14 0 .42-.06.8-.17 1.14-.12.34-.28.63-.5.87a2 2 0 01-.76.55c-.3.13-.65.2-1.03.2zm0-1.17c.29 0 .52-.09.68-.27.16-.18.24-.44.24-.77v-1.07c0-.33-.08-.59-.24-.77a.86.86 0 00-.68-.27c-.3 0-.52.1-.68.27-.16.18-.24.44-.24.77v1.07c0 .33.08.6.24.77.16.18.38.27.68.27zm3.51-6.35h1.48v3.04h.06a1.62 1.62 0 01.49-.7c.23-.2.56-.3.97-.3.54 0 .95.17 1.22.53.28.36.42.87.42 1.54v3.3h-1.48v-3.18c0-.34-.05-.59-.16-.75-.1-.17-.3-.25-.57-.25-.12 0-.24.02-.35.05a.88.88 0 00-.31.14.78.78 0 00-.21.25.66.66 0 00-.08.33v3.4h-1.48v-7.4zm5.96 7.4V27h1.48v.9h.06c.1-.28.25-.52.49-.72.23-.2.55-.3.97-.3.54 0 .94.18 1.22.54.28.36.42.87.42 1.54v3.3h-1.48v-3.18c0-.34-.06-.59-.16-.75-.1-.17-.3-.25-.57-.25-.12 0-.24.02-.35.05a.86.86 0 00-.31.14.76.76 0 00-.21.25.65.65 0 00-.08.33v3.4h-1.48zm8.4-6.98h2.63c.46 0 .88.07 1.26.22s.7.37.97.66c.26.29.47.65.62 1.1.14.42.22.93.22 1.51s-.08 1.1-.22 1.53a3.06 3.06 0 01-.62 1.1 2.57 2.57 0 01-.97.64c-.38.15-.8.22-1.26.22h-2.63v-6.98zm2.63 5.63c.45 0 .8-.13 1.07-.38.26-.25.39-.66.39-1.22v-1.08c0-.56-.13-.97-.4-1.22a1.47 1.47 0 00-1.06-.38h-1.11v4.28h1.1zm4.72 1.46c-.3 0-.52-.07-.67-.22a.83.83 0 01-.21-.58v-.2a.8.8 0 01.21-.57c.15-.15.37-.23.67-.23.3 0 .52.08.66.23a.77.77 0 01.22.57v.2a.8.8 0 01-.22.58c-.14.15-.36.22-.66.22zm6.94.01c-.61 0-1.13-.1-1.56-.3a3.63 3.63 0 01-1.1-.83l1-1c.48.52 1.07.8 1.76.8.37 0 .65-.09.83-.24a.76.76 0 00.27-.6.72.72 0 00-.16-.49c-.1-.13-.32-.22-.65-.27l-.7-.09a2.7 2.7 0 01-1.62-.67 1.95 1.95 0 01-.51-1.4c0-.32.06-.6.18-.87s.29-.48.5-.67c.24-.19.5-.33.83-.43a3.57 3.57 0 011.1-.16c.54 0 1 .08 1.4.25.4.17.74.41 1.03.73l-1.01 1.02a1.95 1.95 0 00-.61-.47 1.85 1.85 0 00-.9-.19c-.33 0-.58.06-.75.18a.58.58 0 00-.25.5c0 .24.06.41.19.52.13.1.35.18.64.23l.69.11c.72.11 1.25.34 1.6.67.35.33.52.8.52 1.4 0 .33-.06.64-.18.92s-.3.52-.53.72c-.23.2-.51.36-.85.47-.34.1-.73.16-1.16.16zm3.9-.12V27h1.48v.9h.06a1.58 1.58 0 01.48-.72c.23-.2.54-.3.93-.3.36 0 .67.1.92.27.25.18.44.44.55.8h.03a1.42 1.42 0 01.57-.76c.14-.1.3-.17.47-.22.17-.06.36-.09.56-.09.5 0 .9.18 1.16.54.27.36.4.87.4 1.54v3.3h-1.47v-3.18c0-.67-.24-1-.72-1-.22 0-.42.06-.6.2s-.27.31-.27.57v3.4h-1.48v-3.17c0-.67-.24-1-.72-1-.1 0-.21.02-.32.05a.8.8 0 00-.28.14.84.84 0 00-.2.25.74.74 0 00-.07.33v3.4h-1.48zm9.68-5.8c-.3 0-.52-.08-.66-.2a.74.74 0 01-.2-.54v-.22a.7.7 0 01.2-.52c.14-.14.36-.2.66-.2.3 0 .51.06.65.2.14.13.2.3.2.52v.22c0 .21-.06.4-.2.53s-.35.2-.65.2zm-.74.55h1.48v5.25h-1.48V27zm4.7 5.25c-.52 0-.9-.13-1.17-.39-.26-.26-.4-.64-.4-1.14v-2.57h-.73V27h.37c.2 0 .33-.05.4-.14a.7.7 0 00.12-.42v-.86h1.33V27h1.04v1.15h-1.04v2.95h.96v1.15h-.88zm1.98-7.4h1.48v3.04h.06a1.62 1.62 0 01.5-.7c.23-.2.55-.3.96-.3.54 0 .95.17 1.22.53.28.36.42.87.42 1.54v3.3h-1.48v-3.18c0-.34-.05-.59-.16-.75-.1-.17-.3-.25-.57-.25-.12 0-.23.02-.35.05a.88.88 0 00-.3.14.78.78 0 00-.22.25.66.66 0 00-.08.33v3.4h-1.48v-7.4zM112.7 48.71v-.6h1.56v-4.49h-.05l-1.41 1.31-.4-.42 1.49-1.39h1.05v5h1.44v.59h-3.68zm6.18-3.22c.38 0 .67-.08.85-.25a.87.87 0 00.3-.68v-.05c0-.3-.1-.51-.29-.66a1.1 1.1 0 00-.72-.22c-.29 0-.52.06-.7.19-.18.12-.33.29-.45.5l-.5-.38a2.3 2.3 0 01.25-.33 1.73 1.73 0 01.82-.5 2.07 2.07 0 01.6-.08c.23 0 .45.03.66.1.2.05.39.14.54.27a1.29 1.29 0 01.5 1.04c0 .18-.04.34-.1.48a1.15 1.15 0 01-.22.38 1.58 1.58 0 01-.76.44v.03a1.62 1.62 0 01.8.44 1.38 1.38 0 01.37.97c0 .24-.04.46-.13.66a1.51 1.51 0 01-.38.52 1.84 1.84 0 01-.6.32c-.24.08-.5.12-.78.12-.24 0-.45-.02-.64-.08a1.9 1.9 0 01-.5-.21 2.2 2.2 0 01-.38-.3 2.9 2.9 0 01-.29-.36l.5-.38.23.3a1.34 1.34 0 00.63.39c.12.03.27.04.44.04.4 0 .7-.08.9-.26.2-.18.3-.44.3-.77v-.06c0-.33-.1-.59-.3-.76-.2-.18-.5-.27-.9-.27h-.65v-.59h.6zm9.7-1.49h-.04l-.47.94-1.34 2.43-1.33-2.43-.48-.94h-.04v4.7h-.65v-5.58h.9l1.6 3.01h.03l1.61-3h.87v5.58h-.66V44zm5.08 4.7c-.24 0-.42-.06-.52-.18a.96.96 0 01-.2-.48h-.04a1.07 1.07 0 01-.44.57 1.4 1.4 0 01-.75.2c-.44 0-.78-.12-1.02-.34a1.19 1.19 0 01-.36-.91c0-.4.14-.7.42-.9.3-.2.74-.31 1.34-.31h.81v-.41c0-.3-.08-.52-.24-.67-.16-.16-.4-.23-.73-.23-.25 0-.46.05-.63.16a1.4 1.4 0 00-.42.45l-.38-.36c.1-.22.29-.41.53-.57.25-.16.56-.24.93-.24.5 0 .9.13 1.17.37.28.25.41.59.41 1.03v2.27h.48v.56h-.36zm-1.84-.44c.16 0 .3-.02.44-.06a1.06 1.06 0 00.34-.16.8.8 0 00.22-.24.58.58 0 00.08-.3v-.67h-.84c-.37 0-.64.05-.81.16a.52.52 0 00-.25.46v.17c0 .2.07.36.22.47.15.11.35.17.6.17zm5.61-3.68h.64l-1.85 5.09a2.05 2.05 0 01-.15.3.6.6 0 01-.17.2.7.7 0 01-.27.1 1.87 1.87 0 01-.37.04h-.33v-.56h.65l.31-.88-1.54-4.29h.64l.99 2.8.2.68h.03l.22-.67 1-2.81zm3.37 4.13v-.6h1.56v-4.49h-.06l-1.4 1.31-.4-.42 1.48-1.39h1.05v5h1.44v.59h-3.67zm8.35-3.54c0 .42-.06.81-.18 1.18a4.47 4.47 0 01-.48 1 4.82 4.82 0 01-.64.8c-.23.23-.46.41-.69.56h-.86c.3-.22.56-.43.8-.64.23-.21.44-.43.62-.65a4.13 4.13 0 00.44-.73 4.43 4.43 0 00.3-.88l-.04-.01c-.13.23-.3.42-.52.57-.2.15-.48.23-.82.23-.24 0-.47-.04-.67-.12a1.45 1.45 0 01-.52-.35 1.68 1.68 0 01-.34-.53 2.04 2.04 0 01-.12-.72c0-.28.04-.52.13-.75a1.69 1.69 0 01.96-.97 2.07 2.07 0 01.76-.13c.3 0 .55.05.78.15.23.1.43.24.6.42a1.8 1.8 0 01.37.68c.08.26.13.56.13.9zm-1.86.86c.37 0 .65-.1.86-.3.2-.2.3-.5.3-.88v-.06c0-.38-.1-.67-.3-.87-.2-.2-.5-.3-.86-.3s-.66.1-.86.3c-.2.2-.3.49-.3.87v.06c0 .38.1.67.3.87.2.2.5.3.86.3zm6.66-.86c0 .42-.06.81-.18 1.18a4.47 4.47 0 01-.48 1 4.82 4.82 0 01-.64.8c-.24.23-.47.41-.69.56h-.86c.3-.22.56-.43.8-.64.23-.21.44-.43.61-.65a4.13 4.13 0 00.45-.73 4.43 4.43 0 00.3-.88l-.04-.01c-.14.23-.31.42-.52.57-.21.15-.49.23-.83.23-.24 0-.46-.04-.66-.12a1.45 1.45 0 01-.52-.35 1.68 1.68 0 01-.35-.53 2.04 2.04 0 01-.12-.72c0-.28.05-.52.13-.75a1.69 1.69 0 01.96-.97 2.07 2.07 0 01.77-.13c.29 0 .55.05.78.15.23.1.43.24.59.42a1.8 1.8 0 01.37.68c.09.26.13.56.13.9zm-1.86.86c.37 0 .65-.1.85-.3.21-.2.32-.5.32-.88v-.06c0-.38-.1-.67-.32-.87-.2-.2-.48-.3-.85-.3s-.66.1-.87.3c-.2.2-.3.49-.3.87v.06c0 .38.1.67.3.87.21.2.5.3.87.3zm4.48-.54c.38 0 .66-.08.85-.25a.87.87 0 00.29-.68v-.05c0-.3-.1-.51-.28-.66a1.1 1.1 0 00-.72-.22c-.29 0-.52.06-.7.19-.19.12-.34.29-.45.5l-.5-.38c.07-.11.15-.22.25-.33a1.75 1.75 0 01.81-.5 2.07 2.07 0 01.6-.08c.24 0 .46.03.67.1.2.05.38.14.53.27.16.11.28.26.36.44.1.17.14.37.14.6 0 .18-.03.34-.09.48a1.15 1.15 0 01-.22.38 1.57 1.57 0 01-.76.44v.03a1.6 1.6 0 01.8.44c.12.11.2.25.27.42a1.6 1.6 0 01-.03 1.22c-.1.2-.22.36-.39.5a1.84 1.84 0 01-.6.33c-.23.08-.49.12-.77.12-.24 0-.45-.02-.64-.08a1.92 1.92 0 01-.5-.21 2.2 2.2 0 01-.38-.3 3.1 3.1 0 01-.29-.36l.5-.38a2.3 2.3 0 00.23.3 1.35 1.35 0 00.62.39c.13.03.28.04.45.04.4 0 .7-.08.9-.26.2-.18.3-.44.3-.77v-.06c0-.33-.1-.59-.3-.76-.2-.18-.5-.27-.9-.27h-.66v-.59h.61z\" fill=\"#333\" /><g filter=\"url(#j)\"><rect x=\"178\" y=\"56.5\" width=\"100\" height=\"24\" rx=\"4\" fill=\"#fff\" /><rect x=\"184.5\" y=\"60.5\" width=\"16\" height=\"16\" rx=\"8\" fill=\"#4BB4B3\" /><path d=\"M190.5 71.3l-2.33-2.33a.66.66 0 00-.94 0 .66.66 0 000 .93l2.8 2.8c.26.25.68.25.94 0l7.06-7.07a.66.66 0 000-.93.66.66 0 00-.93 0l-6.6 6.6z\" fill=\"#fff\" /><path d=\"M212.72 66.02v5.17c0 .3-.05.56-.15.8-.1.24-.23.44-.41.61a1.82 1.82 0 01-.63.39 2.43 2.43 0 01-.81.13c-.54 0-.98-.14-1.31-.43-.33-.3-.54-.68-.63-1.16l.76-.18c.07.3.2.55.38.74.19.19.46.28.82.28.36 0 .64-.11.84-.33.2-.22.3-.55.3-1v-4.28h-2.4v-.74h3.24zm3.68 7.1c-.35 0-.67-.06-.95-.19a2.12 2.12 0 01-.74-.54 2.68 2.68 0 01-.47-.85 3.45 3.45 0 01-.17-1.12c0-.4.05-.78.17-1.11.11-.33.27-.62.47-.85.2-.24.45-.42.74-.55.28-.13.6-.19.95-.19.34 0 .66.06.94.19.28.13.53.31.74.55.2.23.36.52.48.85.11.33.17.7.17 1.11 0 .41-.06.79-.17 1.12a2.61 2.61 0 01-.48.85 2.13 2.13 0 01-.74.54c-.28.13-.6.19-.94.19zm0-.71c.43 0 .78-.13 1.06-.4.27-.27.4-.67.4-1.22v-.74c0-.55-.13-.95-.4-1.22-.28-.27-.63-.4-1.06-.4-.44 0-.79.13-1.06.4-.28.27-.41.67-.41 1.22v.74c0 .55.13.95.4 1.22.28.27.63.4 1.07.4zm3.64-6.81h.8v3.08h.04c.13-.3.3-.53.53-.7.24-.17.55-.26.93-.26.54 0 .96.17 1.26.52.32.34.47.82.47 1.45V73h-.8v-3.17c0-.93-.39-1.39-1.17-1.39-.16 0-.31.02-.47.06-.14.04-.28.1-.4.18a.93.93 0 00-.29.31.88.88 0 00-.1.43V73h-.8v-7.4zm5.69 7.4v-5.16h.8v.84h.04c.12-.3.3-.53.53-.7.23-.17.54-.26.93-.26.53 0 .95.17 1.26.52.31.34.47.82.47 1.45V73h-.8v-3.17c0-.93-.4-1.39-1.17-1.39-.16 0-.32.02-.47.06-.15.04-.28.1-.4.18a.92.92 0 00-.3.31.87.87 0 00-.1.43V73h-.8zm8.12-6.98h2.34c.44 0 .83.07 1.18.22.36.15.66.37.9.66.26.29.45.65.58 1.09.14.43.2.94.2 1.52a5.3 5.3 0 01-.2 1.53 3 3 0 01-.58 1.09 2.37 2.37 0 01-.9.65c-.35.15-.74.22-1.18.22h-2.34v-6.98zm2.34 6.24c.29 0 .55-.05.8-.14a1.76 1.76 0 001.01-1.11c.1-.27.15-.58.15-.93v-1.14c0-.35-.05-.65-.15-.92a1.92 1.92 0 00-.4-.69 1.66 1.66 0 00-.62-.42c-.24-.1-.5-.15-.79-.15h-1.5v5.5h1.5zm4.5.86c-.21 0-.37-.05-.47-.16a.62.62 0 01-.14-.42v-.13c0-.17.05-.31.14-.42.1-.1.26-.16.47-.16.21 0 .37.05.46.16.1.1.15.25.15.42v.13a.59.59 0 01-.15.42c-.1.1-.25.16-.46.16zm6.62 0c-.57 0-1.05-.1-1.45-.32-.4-.22-.74-.52-1.02-.9l.62-.52c.25.33.52.58.82.75.3.17.65.25 1.06.25.5 0 .88-.12 1.14-.36.27-.24.4-.56.4-.96 0-.33-.1-.59-.3-.77-.2-.18-.53-.32-1-.43l-.56-.13a3.4 3.4 0 01-1.47-.66 1.6 1.6 0 01-.5-1.26c0-.3.05-.58.17-.82.11-.24.27-.44.47-.6.2-.16.45-.28.73-.36.28-.09.6-.13.94-.13a2.6 2.6 0 012.31 1.14l-.63.46a2.17 2.17 0 00-.7-.63 2.06 2.06 0 00-1.02-.23c-.45 0-.8.1-1.06.29-.26.19-.38.47-.38.85 0 .33.1.59.32.76.22.17.55.3.99.4l.57.13c.68.15 1.18.39 1.49.7.3.31.46.73.46 1.25 0 .32-.06.61-.17.87-.1.26-.26.48-.47.66-.2.18-.46.32-.76.42-.3.1-.63.15-1 .15zm3.77-.12v-5.16h.8v.84h.04l.2-.37c.08-.12.17-.22.28-.31a1.53 1.53 0 01.9-.28c.35 0 .66.08.95.25.28.16.5.43.64.8h.02c.1-.28.26-.52.52-.73a1.6 1.6 0 011.05-.32c.52 0 .93.17 1.23.52.3.34.45.82.45 1.45V73h-.8v-3.17c0-.46-.1-.8-.27-1.04-.18-.23-.47-.35-.86-.35-.16 0-.32.02-.46.06-.14.04-.27.1-.38.18a.85.85 0 00-.27.31.87.87 0 00-.1.43V73h-.8v-3.17c0-.46-.1-.8-.27-1.04-.18-.23-.46-.35-.84-.35-.16 0-.32.02-.46.06-.15.04-.28.1-.4.18a.95.95 0 00-.27.31.87.87 0 00-.1.43V73h-.8zm9.13-6.37c-.17 0-.3-.04-.38-.12a.5.5 0 01-.11-.33v-.13c0-.13.04-.24.1-.32.09-.09.22-.13.39-.13s.3.04.37.13c.08.08.12.19.12.32v.13c0 .13-.04.24-.12.33-.07.08-.2.12-.37.12zm-.4 1.21h.8V73h-.8v-5.16zm3.64 5.16c-.28 0-.5-.08-.64-.23a.9.9 0 01-.21-.62v-3.61h-.85v-.7h.48c.17 0 .29-.03.35-.1.07-.07.1-.2.1-.37v-.96h.72v1.43h1.13v.7h-1.13v3.76h1.05v.7h-1zm2.37-7.4h.8v3.08h.04c.12-.3.3-.53.53-.7.23-.17.54-.26.93-.26.53 0 .95.17 1.26.52.3.34.47.82.47 1.45V73h-.8v-3.17c0-.93-.4-1.39-1.17-1.39-.16 0-.32.02-.47.06-.15.04-.29.1-.4.18a.92.92 0 00-.3.31.87.87 0 00-.1.43V73h-.8v-7.4z\" fill=\"#333\" /></g><g filter=\"url(#k)\"><rect x=\"178\" y=\"88.5\" width=\"100\" height=\"24\" rx=\"4\" fill=\"#fff\" /><rect x=\"186\" y=\"92.5\" width=\"16\" height=\"16\" rx=\"8\" fill=\"#EC3F3F\" /><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M191.15 97.65a.5.5 0 01.7 0l2.15 2.14 2.15-2.14a.5.5 0 01.63-.06l.07.06a.5.5 0 010 .7l-2.14 2.15 2.14 2.15a.5.5 0 01.06.63l-.06.07a.5.5 0 01-.7 0l-2.15-2.14-2.15 2.14a.5.5 0 01-.63.06l-.07-.06a.5.5 0 010-.7l2.14-2.15-2.14-2.15a.5.5 0 01-.06-.63l.06-.07z\" fill=\"#fff\" /><path d=\"M214.22 98.02v5.17c0 .3-.05.56-.15.8-.1.24-.23.44-.41.61a1.81 1.81 0 01-.63.39c-.25.09-.52.13-.81.13-.54 0-.98-.14-1.31-.43-.33-.3-.54-.68-.63-1.16l.76-.18c.07.3.2.55.38.74.19.19.46.28.82.28.36 0 .64-.11.84-.33.2-.22.3-.55.3-1v-4.28h-2.4v-.74h3.24zm3.68 7.1c-.35 0-.67-.06-.95-.19a2.12 2.12 0 01-.74-.54 2.68 2.68 0 01-.47-.85 3.45 3.45 0 01-.17-1.12c0-.4.05-.78.17-1.11.11-.33.27-.62.47-.85.2-.24.45-.42.74-.55.28-.13.6-.19.95-.19.34 0 .66.06.94.19.28.13.53.31.74.55.2.23.36.52.48.85.11.33.17.7.17 1.11 0 .41-.06.79-.17 1.12a2.6 2.6 0 01-.48.85 2.14 2.14 0 01-.74.54c-.28.13-.6.19-.94.19zm0-.71c.43 0 .78-.13 1.06-.4.27-.27.4-.67.4-1.22v-.74c0-.55-.13-.95-.4-1.22-.28-.27-.63-.4-1.06-.4-.44 0-.79.13-1.06.4-.28.27-.41.67-.41 1.22v.74c0 .55.13.95.4 1.22.28.27.63.4 1.07.4zm3.64-6.81h.8v3.08h.04c.13-.3.3-.53.53-.7.24-.17.55-.26.93-.26.54 0 .96.17 1.26.52.32.34.47.82.47 1.45V105h-.8v-3.17c0-.93-.39-1.39-1.17-1.39-.16 0-.31.02-.47.06-.14.04-.28.1-.4.18a.93.93 0 00-.29.31.88.88 0 00-.1.43V105h-.8v-7.4zm5.69 7.4v-5.16h.8v.84h.04c.12-.3.3-.53.53-.7.23-.17.54-.26.93-.26.53 0 .95.17 1.26.52.31.34.47.82.47 1.45V105h-.8v-3.17c0-.93-.4-1.39-1.17-1.39-.16 0-.32.02-.47.06-.15.04-.28.1-.4.18a.92.92 0 00-.3.31.87.87 0 00-.1.43V105h-.8zm10.08.12c-.56 0-1.05-.1-1.45-.32-.4-.22-.74-.52-1.02-.9l.62-.52c.25.33.52.58.82.75.3.17.66.25 1.06.25.5 0 .88-.12 1.14-.36.27-.24.4-.56.4-.96 0-.33-.1-.59-.3-.77-.2-.18-.53-.32-.99-.43l-.57-.13a3.4 3.4 0 01-1.47-.66 1.6 1.6 0 01-.5-1.26c0-.3.06-.58.17-.82.12-.24.27-.44.47-.6.21-.16.45-.28.73-.36.29-.09.6-.13.94-.13a2.6 2.6 0 012.31 1.14l-.63.46a2.18 2.18 0 00-.7-.63 2.07 2.07 0 00-1.02-.23c-.44 0-.8.1-1.06.29-.25.19-.38.47-.38.85 0 .33.11.59.32.76.22.17.55.3 1 .4l.56.13c.69.15 1.19.39 1.5.7.3.31.45.73.45 1.25 0 .32-.05.61-.17.87-.1.26-.26.48-.47.66-.2.18-.46.32-.76.42-.29.1-.62.15-1 .15zm3.77-.12v-5.16h.8v.84h.04l.2-.37c.08-.12.18-.22.28-.31a1.52 1.52 0 01.91-.28c.34 0 .66.08.94.25.3.16.5.43.64.8h.02a1.59 1.59 0 01.52-.73 1.6 1.6 0 011.05-.32c.53 0 .94.17 1.23.52.3.34.45.82.45 1.45V105h-.8v-3.17c0-.46-.09-.8-.27-1.04-.18-.23-.46-.35-.86-.35-.16 0-.3.02-.46.06-.14.04-.26.1-.38.18a.88.88 0 00-.37.74V105h-.8v-3.17c0-.46-.09-.8-.27-1.04-.18-.23-.46-.35-.84-.35-.16 0-.3.02-.46.06-.14.04-.27.1-.39.18a.97.97 0 00-.28.31.88.88 0 00-.1.43V105h-.8zm9.13-6.37c-.17 0-.3-.04-.38-.12a.5.5 0 01-.1-.33v-.13c0-.13.03-.24.1-.32.08-.09.21-.13.38-.13.18 0 .3.04.37.13.08.08.12.19.12.32v.13c0 .13-.03.24-.11.33-.08.08-.2.12-.37.12zm-.4 1.21h.8V105h-.8v-5.16zm3.64 5.16c-.28 0-.49-.08-.64-.23a.9.9 0 01-.2-.62v-3.61h-.86v-.7h.48c.18 0 .3-.03.35-.1.07-.07.1-.2.1-.37v-.96h.72v1.43h1.13v.7h-1.13v3.76h1.05v.7h-1zm2.37-7.4h.8v3.08h.04c.13-.3.3-.53.53-.7.23-.17.54-.26.93-.26.53 0 .95.17 1.26.52.31.34.47.82.47 1.45V105h-.8v-3.17c0-.93-.39-1.39-1.17-1.39-.16 0-.32.02-.47.06-.15.04-.28.1-.4.18a.92.92 0 00-.29.31.87.87 0 00-.1.43V105h-.8v-7.4z\" fill=\"#333\" /></g><g filter=\"url(#l)\"><rect x=\"178\" y=\"120.5\" width=\"103\" height=\"24\" rx=\"4\" fill=\"#fff\" /><rect x=\"186\" y=\"124.5\" width=\"16\" height=\"16\" rx=\"8\" fill=\"#EC3F3F\" /><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M191.15 129.65a.5.5 0 01.7 0l2.15 2.14 2.15-2.14a.5.5 0 01.63-.06l.07.06a.5.5 0 010 .7l-2.14 2.15 2.14 2.15a.5.5 0 01.06.63l-.06.07a.5.5 0 01-.7 0l-2.15-2.14-2.15 2.14a.5.5 0 01-.63.06l-.07-.06a.5.5 0 010-.7l2.14-2.15-2.14-2.15a.5.5 0 01-.06-.63l.06-.07z\" fill=\"#fff\" /><path d=\"M212.89 137.12c-.57 0-1.05-.1-1.45-.32-.4-.22-.74-.52-1.02-.9l.62-.52c.25.33.52.58.82.75.3.17.65.25 1.06.25.5 0 .88-.12 1.14-.36.27-.24.4-.56.4-.96 0-.33-.1-.59-.3-.77-.2-.18-.53-.32-.99-.43l-.57-.13a3.4 3.4 0 01-1.47-.66 1.6 1.6 0 01-.5-1.26c0-.3.06-.58.17-.82.11-.24.27-.44.47-.6.2-.16.45-.28.73-.36.29-.09.6-.13.94-.13a2.6 2.6 0 012.31 1.14l-.63.46a2.16 2.16 0 00-.7-.63 2.06 2.06 0 00-1.02-.23c-.45 0-.8.1-1.06.29-.25.19-.38.47-.38.85 0 .33.1.59.32.76.22.17.55.3.99.4l.57.13c.69.15 1.18.39 1.49.7.3.31.46.73.46 1.25 0 .32-.06.61-.17.87-.1.26-.26.48-.47.66-.2.18-.46.32-.76.42-.3.1-.63.15-1 .15zm3.77-.12v-5.16h.8v.84h.04l.2-.37c.08-.12.17-.22.28-.31a1.53 1.53 0 01.91-.28c.34 0 .65.08.94.25.29.16.5.43.64.8h.02c.1-.28.27-.52.52-.73a1.6 1.6 0 011.05-.32c.53 0 .94.17 1.23.52.3.34.45.82.45 1.45V137h-.8v-3.17c0-.46-.09-.8-.27-1.04-.18-.23-.47-.35-.86-.35-.16 0-.31.02-.46.06-.14.04-.27.1-.38.18a.85.85 0 00-.27.31.87.87 0 00-.1.43V137h-.8v-3.17c0-.46-.09-.8-.27-1.04-.18-.23-.46-.35-.84-.35-.16 0-.31.02-.46.06-.15.04-.28.1-.39.18a.95.95 0 00-.28.31.87.87 0 00-.1.43V137h-.8zm9.13-6.37c-.17 0-.3-.04-.38-.12a.5.5 0 01-.1-.33v-.13c0-.13.03-.24.1-.32.08-.09.2-.13.38-.13.17 0 .3.04.37.13.08.08.12.19.12.32v.13c0 .13-.04.24-.12.33-.07.08-.2.12-.37.12zm-.4 1.21h.8V137h-.8v-5.16zm3.64 5.16c-.28 0-.5-.08-.64-.23a.9.9 0 01-.2-.62v-3.61h-.86v-.7h.48c.17 0 .3-.03.35-.1.07-.07.1-.2.1-.37v-.96h.72v1.43h1.13v.7h-1.13v3.76h1.05v.7h-1zm2.37-7.4h.8v3.08h.04c.12-.3.3-.53.53-.7.23-.17.54-.26.93-.26.53 0 .95.17 1.26.52.31.34.47.82.47 1.45V137h-.8v-3.17c0-.93-.4-1.39-1.17-1.39-.16 0-.32.02-.47.06-.15.04-.28.1-.4.18a.92.92 0 00-.3.31.87.87 0 00-.1.43V137h-.8v-7.4zm8.12.42h2.34c.44 0 .83.07 1.18.22.36.15.66.37.9.66.26.29.45.65.58 1.09.14.43.2.94.2 1.52a5.3 5.3 0 01-.2 1.53 3 3 0 01-.58 1.09 2.37 2.37 0 01-.9.65c-.35.15-.74.22-1.18.22h-2.34v-6.98zm2.34 6.24c.29 0 .55-.05.8-.14a1.76 1.76 0 001.01-1.11c.1-.27.15-.58.15-.93v-1.14c0-.35-.05-.65-.15-.92a1.92 1.92 0 00-.4-.69 1.65 1.65 0 00-.62-.42c-.24-.1-.5-.15-.79-.15h-1.5v5.5h1.5zm4.5-.43c.21 0 .37.06.46.17.1.1.15.25.15.42v.14a2.65 2.65 0 01-.91 1.77h-.67c.2-.21.36-.42.48-.61.13-.19.22-.4.27-.63a.5.5 0 01-.3-.19.62.62 0 01-.09-.34v-.14c0-.17.05-.31.14-.42.1-.11.26-.17.47-.17zm7.95-5.81v5.17c0 .3-.05.56-.15.8-.1.24-.23.44-.41.61a1.81 1.81 0 01-.63.39c-.25.09-.52.13-.81.13-.54 0-.98-.14-1.31-.43-.33-.3-.54-.68-.63-1.16l.76-.18c.06.3.2.55.38.74.18.19.46.28.82.28.36 0 .64-.11.84-.33.2-.22.3-.55.3-1v-4.28h-2.4v-.74h3.24zm3.68 7.1c-.35 0-.67-.06-.95-.19a2.12 2.12 0 01-.74-.54 2.68 2.68 0 01-.47-.85 3.45 3.45 0 01-.17-1.12c0-.4.05-.78.17-1.11.1-.33.27-.62.47-.85.2-.24.45-.42.74-.55.28-.13.6-.19.95-.19.34 0 .66.06.94.19.28.13.53.31.74.55.2.23.36.52.48.85.1.33.17.7.17 1.11 0 .41-.06.79-.17 1.12a2.6 2.6 0 01-.48.85 2.14 2.14 0 01-.74.54c-.28.13-.6.19-.94.19zm0-.71c.43 0 .78-.13 1.06-.4.27-.27.4-.67.4-1.22v-.74c0-.55-.13-.95-.4-1.22-.28-.27-.63-.4-1.06-.4-.44 0-.8.13-1.06.4-.28.27-.41.67-.41 1.22v.74c0 .55.13.95.4 1.22.28.27.63.4 1.07.4zm3.64-6.81h.8v3.08h.04c.13-.3.3-.53.53-.7.23-.17.54-.26.93-.26.53 0 .95.17 1.26.52.31.34.47.82.47 1.45V137h-.8v-3.17c0-.93-.39-1.39-1.17-1.39-.16 0-.32.02-.47.06-.15.04-.28.1-.4.18a.93.93 0 00-.29.31.88.88 0 00-.1.43V137h-.8v-7.4zm5.68 7.4v-5.16h.8v.84h.04c.13-.3.3-.53.54-.7.23-.17.54-.26.93-.26.53 0 .95.17 1.26.52.3.34.47.82.47 1.45V137h-.8v-3.17c0-.93-.4-1.39-1.17-1.39-.16 0-.32.02-.47.06-.15.04-.29.1-.4.18a.92.92 0 00-.3.31.87.87 0 00-.1.43V137h-.8z\" fill=\"#333\" /></g><defs><filter id=\"b\" x=\"-93\" y=\"-101.5\" width=\"576\" height=\"576\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\"><feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" /><feBlend in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\" /><feGaussianBlur stdDeviation=\"80\" result=\"effect1_foregroundBlur_1211_60959\" /></filter><filter id=\"c\" x=\"75\" y=\"-157.5\" width=\"384\" height=\"384\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\"><feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" /><feBlend in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\" /><feGaussianBlur stdDeviation=\"64\" result=\"effect1_foregroundBlur_1211_60959\" /></filter><filter id=\"d\" x=\"-127\" y=\"-151.5\" width=\"336\" height=\"336\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\"><feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" /><feBlend in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\" /><feGaussianBlur stdDeviation=\"64\" result=\"effect1_foregroundBlur_1211_60959\" /></filter><filter id=\"g\" x=\"0\" y=\"64\" width=\"106\" height=\"30\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\"><feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" /><feColorMatrix in=\"SourceAlpha\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\" /><feOffset dy=\"1\" /><feGaussianBlur stdDeviation=\"1\" /><feColorMatrix values=\"0 0 0 0 0.054902 0 0 0 0 0.054902 0 0 0 0 0.054902 0 0 0 0.06 0\" /><feBlend in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_1211_60959\" /><feColorMatrix in=\"SourceAlpha\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\" /><feOffset dy=\"1\" /><feGaussianBlur stdDeviation=\"1.5\" /><feColorMatrix values=\"0 0 0 0 0.054902 0 0 0 0 0.054902 0 0 0 0 0.054902 0 0 0 0.1 0\" /><feBlend in2=\"effect1_dropShadow_1211_60959\" result=\"effect2_dropShadow_1211_60959\" /><feBlend in=\"SourceGraphic\" in2=\"effect2_dropShadow_1211_60959\" result=\"shape\" /></filter><filter id=\"h\" x=\"0\" y=\"96\" width=\"106\" height=\"30\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\"><feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" /><feColorMatrix in=\"SourceAlpha\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\" /><feOffset dy=\"1\" /><feGaussianBlur stdDeviation=\"1\" /><feColorMatrix values=\"0 0 0 0 0.054902 0 0 0 0 0.054902 0 0 0 0 0.054902 0 0 0 0.06 0\" /><feBlend in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_1211_60959\" /><feColorMatrix in=\"SourceAlpha\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\" /><feOffset dy=\"1\" /><feGaussianBlur stdDeviation=\"1.5\" /><feColorMatrix values=\"0 0 0 0 0.054902 0 0 0 0 0.054902 0 0 0 0 0.054902 0 0 0 0.1 0\" /><feBlend in2=\"effect1_dropShadow_1211_60959\" result=\"effect2_dropShadow_1211_60959\" /><feBlend in=\"SourceGraphic\" in2=\"effect2_dropShadow_1211_60959\" result=\"shape\" /></filter><filter id=\"i\" x=\"0\" y=\"128\" width=\"106\" height=\"30\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\"><feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" /><feColorMatrix in=\"SourceAlpha\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\" /><feOffset dy=\"1\" /><feGaussianBlur stdDeviation=\"1\" /><feColorMatrix values=\"0 0 0 0 0.054902 0 0 0 0 0.054902 0 0 0 0 0.054902 0 0 0 0.06 0\" /><feBlend in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_1211_60959\" /><feColorMatrix in=\"SourceAlpha\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\" /><feOffset dy=\"1\" /><feGaussianBlur stdDeviation=\"1.5\" /><feColorMatrix values=\"0 0 0 0 0.054902 0 0 0 0 0.054902 0 0 0 0 0.054902 0 0 0 0.1 0\" /><feBlend in2=\"effect1_dropShadow_1211_60959\" result=\"effect2_dropShadow_1211_60959\" /><feBlend in=\"SourceGraphic\" in2=\"effect2_dropShadow_1211_60959\" result=\"shape\" /></filter><filter id=\"j\" x=\"175\" y=\"54.5\" width=\"106\" height=\"30\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\"><feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" /><feColorMatrix in=\"SourceAlpha\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\" /><feOffset dy=\"1\" /><feGaussianBlur stdDeviation=\"1\" /><feColorMatrix values=\"0 0 0 0 0.054902 0 0 0 0 0.054902 0 0 0 0 0.054902 0 0 0 0.06 0\" /><feBlend in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_1211_60959\" /><feColorMatrix in=\"SourceAlpha\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\" /><feOffset dy=\"1\" /><feGaussianBlur stdDeviation=\"1.5\" /><feColorMatrix values=\"0 0 0 0 0.054902 0 0 0 0 0.054902 0 0 0 0 0.054902 0 0 0 0.1 0\" /><feBlend in2=\"effect1_dropShadow_1211_60959\" result=\"effect2_dropShadow_1211_60959\" /><feBlend in=\"SourceGraphic\" in2=\"effect2_dropShadow_1211_60959\" result=\"shape\" /></filter><filter id=\"k\" x=\"175\" y=\"86.5\" width=\"106\" height=\"30\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\"><feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" /><feColorMatrix in=\"SourceAlpha\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\" /><feOffset dy=\"1\" /><feGaussianBlur stdDeviation=\"1\" /><feColorMatrix values=\"0 0 0 0 0.054902 0 0 0 0 0.054902 0 0 0 0 0.054902 0 0 0 0.06 0\" /><feBlend in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_1211_60959\" /><feColorMatrix in=\"SourceAlpha\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\" /><feOffset dy=\"1\" /><feGaussianBlur stdDeviation=\"1.5\" /><feColorMatrix values=\"0 0 0 0 0.054902 0 0 0 0 0.054902 0 0 0 0 0.054902 0 0 0 0.1 0\" /><feBlend in2=\"effect1_dropShadow_1211_60959\" result=\"effect2_dropShadow_1211_60959\" /><feBlend in=\"SourceGraphic\" in2=\"effect2_dropShadow_1211_60959\" result=\"shape\" /></filter><filter id=\"l\" x=\"175\" y=\"118.5\" width=\"109\" height=\"30\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\"><feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" /><feColorMatrix in=\"SourceAlpha\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\" /><feOffset dy=\"1\" /><feGaussianBlur stdDeviation=\"1\" /><feColorMatrix values=\"0 0 0 0 0.054902 0 0 0 0 0.054902 0 0 0 0 0.054902 0 0 0 0.06 0\" /><feBlend in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_1211_60959\" /><feColorMatrix in=\"SourceAlpha\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\" /><feOffset dy=\"1\" /><feGaussianBlur stdDeviation=\"1.5\" /><feColorMatrix values=\"0 0 0 0 0.054902 0 0 0 0 0.054902 0 0 0 0 0.054902 0 0 0 0.1 0\" /><feBlend in2=\"effect1_dropShadow_1211_60959\" result=\"effect2_dropShadow_1211_60959\" /><feBlend in=\"SourceGraphic\" in2=\"effect2_dropShadow_1211_60959\" result=\"shape\" /></filter><clipPath id=\"a\"><rect x=\"25\" y=\".5\" width=\"218\" height=\"131\" rx=\"8\" fill=\"#fff\" /></clipPath><clipPath id=\"e\"><path fill=\"#fff\" transform=\"rotate(-55.14 120.52 -157.66)\" d=\"M0 0h12v36H0z\" /></clipPath><clipPath id=\"f\"><path fill=\"#fff\" transform=\"rotate(44.74 5.11 190.16)\" d=\"M0 0h12v36H0z\" /></clipPath></defs></svg>);"],"names":["styles","props","xmlns","width","height","fill","viewBox","d","DerivPassword","email","is_eu_user","is_social_signup","social_identity_provider","financial_restricted_countries","React","is_sent_email_modal_open","setIsSentEmailModalOpen","onClickSendEmail","WS","capitalized_identifier","toTitleCase","brand_website_name","getBrandWebsiteName","platform_name_dbot","getPlatformSettings","name","platform_name_go","platform_name_smarttrader","platform_name_trader","platform_name_derivez","PlatformDescription","text","values","Localize","i18n_default_text","components","key","title","localize","className","Text","as","color","size","weight","line_height","Popover","alignment","message","Icon","icon","description","onClick","identifier_title","Button","type","has_effect","primary","large","is_open","onClose","is_modal_when_mobile","propTypes","PropTypes","is_dark_mode_on","UnlinkAccountModal","Modal","has_close_icon","toggleModal","secondary","prototypes","DerivEmail","observer","is_from_derivgo","useStore","common","is_unlink_account_modal_open","setIsUnlinkAccountModalOpen","is_send_email_modal_open","setIsSendEmailModalOpen","Input","id","label","value","disabled","is_disabled","is_loading","has_live_chat","withRouter","PasswordsPlatform","has_dxtrade_accounts","has_mt5_accounts","identifier","setIdenifier","platform_name_dxtrade","cfd_platform","password_reset_code","CFD_PLATFORMS","url_parameters","redirect_to","setIsLoading","client","ui","traders_hub","is_populating_mt5_account_list","is_populating_dxtrade_account_list","mt5_login_list","is_mt5_password_not_set","dxtrade_accounts_list","is_dxtrade_password_not_set","undefined","Loading","is_fullscreen","length","descriptions","onClickLearnMore","has_descriptions","has_single_description","classNames","map","idx","component","AccountLimitsArticle","push","StaticUrl","href","currency","overlay_ref","document","createElement","isMobile","data_testid","is_bubble_hover_enabled","zIndex","AccountLimitsContext","footer_ref","toggleOverlay","createPortal","current","Popup","done_text","align","children","is_hint","level","renderExtraInfo","text_size","collection","turnover_limit","formatMoney","AccountLimits","is_app_settings","setIsPopupOverlayShown","setIsOverlayShown","should_bypass_scrollbars","should_show_article","account_limits","getLimits","is_fully_authenticated","is_virtual","is_switching","isMounted","useIsMounted","setLoading","is_overlay_shown","is_appstore","PlatformContext","then","has_demo_icon","has_button","api_initial_load_error","open_positions","account_balance","payout","market_specific","num_of_days_limit","remainder","withdrawal_since_inception_monetary","error_message","commodities","forex","indices","synthetic_index","forex_ordered","slice","sort","a","b","derived_ordered","context_value","ThemedScrollbars","is_bypassed","ButtonLink","to","isDesktop","ref","setTimeout","scrollIntoView","HintBox","is_warn","i","InputGroup","child","TaxResidenceSelect","field","errors","setFieldValue","is_changeable","residence_list","DesktopWrapper","Autocomplete","autoComplete","error","tax_residence","list_items","onItemSelection","required","MobileWrapper","SelectNative","placeholder","use_text","onChange","e","target","PersonalDetailsForm","history","useStateCallback","is_state_loading","setIsStateLoading","is_btn_loading","setIsBtnLoading","is_submit_success","setIsSubmitSuccess","notifications","authentication_status","is_eu","landing_company_shortcode","is_uk","is_svg","states_list","current_landing_company","fetchResidenceList","fetchStatesList","has_residence","account_settings","getChangeableFields","updateAccountStatus","account_status","refreshNotifications","showPOAAddressMismatchSuccessNotification","showPOAAddressMismatchFailureNotification","Notifications","is_language_changing","is_mf","has_poa_address_mismatch","status","includes","show_form","form_initial_values","rest_state","setRestState","is_timeout_started","timeout_callback","start_on_submit_timeout","setStartOnSubmitTimeout","getSettings","initializeFormValues","timeout_id","clearTimeout","makeSettingsRequest","settings","email_consent","request","filterObjProperties","changeable_fields","request_professional_status","first_name","trim","last_name","date_of_birth","toMoment","format","getLocation","tax_identification_number","citizen","place_of_birth","address_state","onSubmit","setStatus","setSubmitting","msg","data","set_settings","notification","response","api_error","get_settings","url_query_string","window","location","search","url_params","URLSearchParams","get","routes","getWarningMessages","warnings","active_errors","tin_regex","filter","residence","tin_format","test_tin","RegExp","test","valid_country_tin","showForm","isChangeableField","some","hidden_settings","removeObjProperties","salutation_list","indexOf","first_tax_residence","split","tax_residences","forEach","employment_status","is_poa_verified","document_status","is_poi_verified","identity_status","is_account_verified","initialValues","enableReinitialize","validate","validateValues","required_fields","val","charAt","validLength","min","max","validateName","phone","phone_trim","replace","phone_error_message","validPhone","address_line_1_validation_result","validAddress","address_line_1","is_required","is_ok","address_line_2_validation_result","address_line_2","address_city","validLetterSymbol","regex_checks","address_postcode","validPostCode","field_name","max_number","interpolation","escapeValue","Object","keys","removeEmptyPropertiesFromObject","touched","handleChange","handleBlur","handleSubmit","isSubmitting","setFieldTouched","setTouched","dirty","onDirty","noValidate","scroll_offset","has_side_note","side_note","salutation","onBlur","should_hide_disabled_options","DateOfBirthPicker","Array","isArray","join","warn","Dropdown","is_align_text_left","list","getEmploymentStatusList","maxLength","support_professional_client","Checkbox","defaultChecked","greyDisabled","icon_height","icon_width","rel","is_info","is_inline","FormSubmitErrorMessage","app_routing_history","has_restricted_mt5_account","is_mx_mlt","FileUploader","class_name","file_name","handleFile","index","item_index","sub_index","updateErrors","show_browse_button","setShowBrowseButton","hidden_file_input","event","nativeEvent","preventDefault","stopPropagation","stopImmediatePropagation","compressImageFiles","files","file_to_upload","handleIconClick","prevState","accept","hint","readOnly","tabIndex","trailing_icon","click","should_header_stick_body","src","getUrlBase","alt","POO_STATUSES","IDENTIFIER_TYPES","account_id","account_number","bank_account_number","card_number","email_address","mobile_number","user_id","VALIDATIONS","target_string","ExpandedCard","card_details","useState","is_sample_modal_open","setIsSampleModalOpen","handleUploadedFile","file","payment_method_identifier","identifier_type","item_id","documents_required","handleIdentifierChange","formatIdentifier","is_generic_pm","formatted_id","substring","s","isSpecialPM","pm_icon","ic","instructions","instruction","items","item","controls_to_show","input_label","currentTarget","expand","organise","Card","card","setIsOpen","onClickHandler","payment_method","role","transparent","getScrollOffset","items_count","ProofOfOwnershipForm","client_email","grouped_payment_method_data","grouped_payment_method_data_keys","should_show_form","form_state","setFormState","form_ref","fileReadErrorMessage","filename","error_count","setErrors","validateForm","total_documents_uploaded","has_errors","are_files_uploaded","cards","card_key","item_keys","item_key","is_payment_method_identifier_provided","is_credit_or_debit_card","Boolean","innerRef","form_values","uploader","DocumentUploader","connection","card_item_key","payment_method_details","readFiles","documentType","DOCUMENT_TYPE","proof_of_ownership","details","payment_identifier","processed_file","upload","warning","form_errors","err","isValid","grouped_payment_method_data_key","onTryAgain","advcash","icon_light","icon_dark","astropay","beyonic","visa","mastercard","pix","skrill","neteller","onlinenaira","webmoney","zingpay","sticpay","jeton","other","ProofOfOwnership","is_dark_mode","authentication","ownership","requests","groups","payment_methods_config","getPaymentMethodsConfig","toLowerCase","useEffect","enable_response","is_enabled","setTwoFAStatus","setTwoFAChangedStatus","is_success","setSuccess","is_ready_for_verification","setReadyForVerification","button_text","formik_ref","validateFields","digit_code","totp_action","account_security","otp","code","resetForm","is_enabled_response","getPropertyValue","getTwoFAStatus","has_enabled_two_fa","notification_messages_ui","is_qr_loading","setQrLoading","setErrorMessage","secret_key","setSecretKey","qr_secret_key","setQrSecretKey","getDigitStatus","generateQrCode","generate_response","secret_key_value","qr_secret_key_value","status_response","TwoFactorEnabled","TwoFactorDisabled","autoHide","hideHorizontal","Timeline","item_title","Clipboard","text_copy","info_message","success_message","display_name","CompositeCheckbox","ApiTokenContext","token","popover_alignment","deleteToken","is_deleting","setIsDeleting","is_popover_open","setIsPopoverOpen","small","classNameBubble","relative_render","custom_color","onMouseEnter","onMouseLeave","should_bypass_text","scopes","scope","WarningNoteBullet","WarningDialogMessage","timeout_clipboard","timeout_clipboard_2","useCopyToClipboard","is_copied","copyToClipboard","setIsCopied","is_modal_open","setIsModalOpen","has_admin_scope","HiddenPasswordDots","el","should_show_token","setShouldShowToken","prev_value","last_used","api_tokens","getScopeValue","titled_scopes","str","replace_filter","toUpperCase","formatTokenScopes","getTranslatedScopes","date_format","formatDate","token_data","api_token","prev_is_switching","prev_state","show_delete","dispose_token","is_delete_loading","is_delete_success","state","setState","getApiTokens","selectedTokenScope","setFieldError","new_token","token_name","new_token_scopes","token_response","populateTokenResponse","delete_token","read","trade","payments","trading_information","admin","MIN_TOKEN","MAX_TOKEN","selfExclusionArticleItems","eu_items","is_deriv_crypto","platform_name_bbot","getStaticUrl","article_item","SelfExclusionArticleContent","is_in_overlay","SelfExclusionContext","toggleArticle","keyed_article_items","article","show_article","is_wrapper_bypassed","Div100vhContainer","height_offset","backToReview","useFormikContext","backFromConfirmLimits","currency_display","exclusion_texts","show_confirm","changed_attributes","checked_value","submit_error_message","goToConfirm","SectionTitle","has_border_line","StakeLossAndLimitsInputs","getMaxLength","max_turnover","max_losses","max_7day_turnover","max_7day_losses","max_30day_turnover","max_30day_losses","SessionAndLoginLimitsInputs","is_mlt","is_mx","is_tablet","session_duration_digits","session_duration_limit","DatePicker","min_date","add","max_date","should_show_today","timeout_until","epochToMoment","unix","exclude_until","MaximumAccountBalanceAndOpenPositionsInputs","max_balance","max_open_bets","MaximumDepositLimitInputs","max_deposit","max_7day_deposit","max_30day_deposit","versions","dwallet","condition","app_settings","deriv_app","version_name","version_idx","version","Component","component_idx","self_exclusions","is_confirm_page","standpoint","logout","is_cr","svg","exclusion_fields_settings","freeze","max_open_positions","six_weeks","exclusion_limits","exclusion_data","initial_state","getSelfExclusion","resetState","need_logout_exclusions","string_exclusions","has_need_logout","attr","makeRequest","Promise","resolve","set_self_exclusion","objectValuesToString","object","get_self_exclusion","self_exclusion_response","response_to_string","populateExclusionResponse","get_limits","limits","getCurrencyDisplayCode","toString","decimals_length","getDecimalPlaces","getLength","isIntegerField","String","more_than_zero_message","getSmallestMinValue","decimals","result","validNumber","Number","onClickLogout","shared_routes","AccountLogout","TradingHubLogout","PageOverlayWrapper","list_groups","onClickClose","selected_route","subroutes","routeToPrevious","PageOverlay","header","getTitle","is_from_app","component_icon","icon_component","VerticalTab","is_collapsible","is_grid","is_floating","current_path","pathname","is_routed","is_full_width","extra_content","Account","arr","is_logged_in","is_logging_in","is_risky_client","is_pending_proof_of_ownership","should_allow_authentication","routeBackInApp","platform","toggleAccountSettings","is_account_settings_visible","concat","route_group","subitems","sub","selected_content","find","r","matchRoute","menu_item","route","path","getSelectedRoute","FadeWrapper","is_visible","keyname","active_account_landing_company","redirectToReasons","is_document","Link","getDerivAccount","client_accounts","login_id","client_account","loginid","getCurrMT5Account","account_obj","login","getCurrDxtradeAccount","Wrapper","desc","Content","currency_icon","onBackClick","deriv_open_positions","deriv_balance","mt5_open_positions","mt5_balance","account_pending_withdrawals","dxtrade_open_positions","dxtrade_balance","pending_withdrawals","info","withdrawals","deriv_account","positions","mt5_account","dxtrade_account","balance","autohide","account","number_of_positions","Money","amount","should_format","getCFDAccount","market_type","sub_account_type","display_login","getCFDAccountDisplay","initial_form","other_trading_platforms","do_to_improve","is_checkbox_disabled","onChangeCheckbox","character_limit_no","onInputChange","onInputPaste","remaining_characters","max_characters","onPaste","entries","FormSubmitButton","has_cancel","cancel_label","onCancel","preparingReason","selected_reasons","selectedReasons","is_other_trading_platform__has_value","is_to_do_improve_has_value","WarningModal","startDeactivating","closeModal","GeneralErrorContent","account_list","is_account_closed","setIsAccountClosed","which_modal_should_render","setWhichModalShouldRender","reason","setReason","setIsCheckboxDisabled","total_checkbox_checked","setTotalCheckboxChecked","setRemainingCharacters","total_accumulated_characters","setTotalAccumulatedCharacters","api_error_message","setApiErrorMessage","setDetails","account_closure","account_closure_response","errorDetails","Redirect","allowed_reasons","selected_reason_count","text_inputs_length","remaining_chars","final_value","characters_limits","empty_reason","final_reason","old_value","is_delete_action","clipboardData","getData","render_close_account_reason","setRenderCloseAccountReason","openAPIManagingWebsite","open","PrepareConnectedAppsAction","app_id","handleToggleModal","PrepareConnectedAppsLastLogin","generatePermissions","PrepareConnectedAppsScopes","permissions_list","oauth_apps_list","permission","sorted_app_list","col_index","renderCellContent","cell_value","setModalVisibility","selected_app_id","setAppId","is_error","setError","connected_apps","setConnectedApps","fetchConnectedApps","console","oauth_apps","response_connected_apps","columns_map","GetConnectedAppsColumnsTemplate","reduce","mobileRowRenderer","row","DataList","column","is_footer","revokeConnectedApp","revoke_oauth_app","handleRevokeAccess","DataTable","data_source","columns","row_gap","rowRenderer","getFormattedData","login_history","fetch_limit","Math","environment","environment_split","mobile_app_UA","match","date","time","date_time","convertDateFormat","action","user_agent","ua","Bowser","getBrowser","browser","app","ip","getFields","LoginHistoryContent","renderList","renderTable","fields","Table","fixed","ListCell","right","setData","fetchData","api_res","formatted_data","setModalState","timer","setTimer","counter","pushState","handleInterval","setInterval","clearInterval","is_current_language","language_code","allowed_languages","getAllowedLanguages","htmlFor","changeSelectedLanguage","current_language","isCurrentLanguage","i18n","useTranslation","allowed_language_keys","initial_values","changeLanguage","language_key","routesConfig","route_default","moduleLoader","AccountClosed","is_authenticated","DeactivateAccount","PersonalDetails","default","LanguageSettings","TradingAssessment","FinancialAssessment","ProofOfIdentity","ProofOfAddress","Passwords","SelfExclusion","LoginHistory","ApiToken","ConnectedApps","TwoFactorAuthentication","ClosingAccount","initRoutesConfig","Route","exact","render","default_subroute","acc","cur","subroute","has_default_subroute","isEmptyObject","removeBranchName","RouteComponent","redirectToLogin","getLanguage","default_title","alternateLinkTagChange","canonicalLinkTagChange","fallback","Switch","getRoutesConfig","Routes","has_error","passthrough","enableApp","disableApp","is_reset_trading_password_modal_visible","setResetTradingPasswordModalOpen","useLocation","query_params","exec","verification_code","trading_platform_mt5_password_reset","trading_platform_dxtrade_password_reset","toggleResetTradingPasswordModal","root_store","setWebsocket","store","has_real_account","has_any_real_account","toggleAccountsDialog","toggleShouldShowRealAccountsList","redirect_label","redirectOnClick","should_show_refresh","refresh_message","PageError","messages","redirect_urls","redirect_labels","buttonOnClick","reload","UploadMessage","onFileDrop","getSocket","document_file","setDocumentFile","is_any_file_error","reject","files_to_process","processed_files","total_to_upload","uploader_promise","api_response","FileDropzone","supported_filetypes","filename_limit","hover_message","max_size","max_document_size","multiple","onDropAccepted","onDropRejected","is_file_too_large","supported_files","each_file","getSupportedFiles","validation_error_message","displayName","FileProperties","properties","is_description_enabled","onRef","getSocketFunc","ScrollbarsContainer","subtitle","title_as_class","DateOfBirthField","portal_id","rest","form","FormInputField","optional","warning_items","is_qualified_for_idv","should_hide_helper_image","editable_fields","account_opening_reason_list","closeRealAccountSignup","is_rendered_for_onfido","should_close_tooltip","setShouldCloseTooltip","autocomplete_value","PoiNameDobExampleIcon","PoiNameDobExample","is_tax_residence_popover_open","setIsTaxResidencePopoverOpen","is_tin_popover_open","setIsTinPopoverOpen","handleToolTipStatus","getNameAndDobLabels","is_asterisk_needed","first_name_label","last_name_text","last_name_label","dob_label","getFieldHint","name_dob_clarification_message","font_size","RadioGroup","selected","onToggle","persist","isFieldImmutable","list_portal_id","disable_message_icon","tagName","tax_identification_confirm","legal_entity_name","getLegalEntityName","renderlabel","withTabIndex","account_opening_reason","full_width","LeaveConfirmMessage","back","leave","TransitionBlockerWithRouter","show","setShow","next_location","setNextLocation","useHistory","unblock","block","formik","submitCount","ContinueTradingButton","custom_text","needs_poi","redirect_button","is_redirected_from_platform","isNavigationFromP2P","isNavigationFromDerivGO","none","pending","rejected","verified","expired","suspected","Verified","GoToPersonalDetailsButton","anchor","from","has_invalid_postal_code","PoiButton","handleRequireSubmission","is_from_external","LC_API","open_chat_window","is_file_error","ROOT_CLASS","DOCUMENT_TYPES","NATIONAL_IDENTITY_CARD","NIMC_SLIP","PASSPORT","DRIVING_LICENCE","BIRTH_CERTIFICATE","SELFIE_WITH_ID","OTHER","PAGE_TYPE","FRONT","BACK","PHOTO","SELFIE_DOCUMENT","document_type","pageType","date_field","InputField","display_format","start_date","DROPZONE_ERRORS","GENERAL","Message","medium","Preview","has_frame","background_url","setBackgroundUrl","URL","createObjectURL","style","backgroundImage","is_full","image","setImage","ValidationErrorMessage","preview_single","handleAccept","handleReject","noClick","setInitialValues","checkIsEmpty","documents","icons","IconsItem","goToCards","documents_title","fields_title","is_form_touched","is_form_empty","goBack","onConfirm","onComplete","setIsCfdPoiCompleted","setDocuments","selfie","setSelfie","is_selfie_upload","setIsSelfieUpload","STATUS","onClickBack","root_class","country_code_key","handleComplete","is_onfido_supported","is_mt5","handlePOIforMT5Complete","response_error","is_any_failed","is_slow_loading","needs_poa","is_manual_upload","country_code","documents_supported","onfido_name","docs","files_length","file_to_upload_index","results","uploadNext","lifetime_valid","expiration_date","expiry_date","uploadFile","expirationDate","documentId","document_id","lifetimeValid","CardWithArrow","Documents","toggleDetail","margin","renderContent","checkNimcStep","has_nimc","manual","allow_poi_resubmission","detail","setDetail","getDocumentIndex","identity_status_codes","disabled_items","UploadComplete","ResetTradingPassword","setDialogTitleFunc","password","initialStatus","reset_complete","error_msg","error_code","validPassword","getErrorMessages","min_number","actions","params","new_password","getCFDPlatformLabel","PasswordMeter","input","custom_feedback_messages","password_warnings","PasswordInput","ResetTradingPasswordModal","dialog_title","setDialogTitle","hash","Dialog","is_invalid_token","live_chat","LiveChatWidget","call","sent_email_template","SendEmailTemplate","getSubtitle","lbl_no_receive","txt_resend","txt_resend_in","content","MobileDialog","portal_element_id","wrapper_classname","visible","has_content_scroll","show_risk_modal","handleAcceptRisk","body_content","has_sub_header","footer_content","trading_assessment_questions","question_text","section","answer_options","form_control","field_type","questions","getImageLocation","image_name","documentAdditionalError","document_additional","document_additional_format","getRegex","regex","regex_string","flags","idv_document_data","ke","alien_card","new_display_name","example_format","sample_image","national_id","passport","za","national_id_no_photo","ng","bvn","cac","drivers_license","nin","nin_slip","tin","voter_id","gh","ssnit","br","cpf","ug","zw","getDocumentData","preventEmptyClipboardPaste","target_regex","output_regex","generatePlaceholderText","selected_doc","fn","err_msg","validName","getExampleFormat","getIncomeSourceList","getEmploymentIndustryList","getOccupationList","getSourceOfWealthList","getEducationLevelList","getNetIncomeList","getEstimatedWorthList","getAccountTurnoverList","getBinaryOptionsTradingExperienceList","getBinaryOptionsTradingFrequencyList","getCfdTradingExperienceList","getCfdTradingFrequencyList","getForexTradingExperienceList","getForexTradingFrequencyList","getOtherInstrumentsTradingExperienceList","getOtherInstrumentsTradingFrequencyList","ConfirmationContent","ConfirmationModal","ConfirmationPage","SubmittedPage","platforms","icon_text","platform_name","is_hard_redirect","url","is_financial_account","is_trading_experience_incomplete","setFinancialAndTradingAssessment","is_authentication_needed","is_financial_information_incomplete","is_confirmation_visible","setIsConfirmationVisible","has_trading_experience","setHasTradingExperience","is_form_visible","setIsFormVisible","setApiInitialLoadError","initial_form_values","setInitialFormValues","income_source","employment_industry","occupation","source_of_wealth","education_level","net_income","estimated_worth","account_turnover","binary_options_trading_experience","binary_options_trading_frequency","cfd_trading_experience","cfd_trading_frequency","forex_trading_experience","forex_trading_frequency","other_instruments_trading_experience","other_instruments_trading_frequency","get_financial_assessment","form_payload","financial_information","res_data","toggleConfirmationModal","form_data","is_alignment_top","onClickSubmit","should_accept_risk","setShouldAcceptRisk","should_show_warning_modal","setShouldShowWarningModal","setFormData","risk_tolerance","source_of_experience","cfd_experience","cfd_frequency","trading_experience_financial_instruments","trading_frequency_financial_instruments","cfd_trading_definition","leverage_impact_trading","leverage_trading_high_risk_stop_loss","required_initial_margin","populateData","prev_score","trading_score","trading_experience_regulated","set_financial_assessment","initialTouched","should_show_empty_option","sub_form_control","is_absolute","green","populateVerificationStatus","attempts","identity","needs_verification","has_poa","has_poi","allow_document_upload","allow_poa_resubmission","is_age_verified","is_idv_disallowed","poa_address_mismatch","services","idv","onfido","identity_last_attempt","latest","has_attempted_idv","h","service","file_uploader_ref","UploaderSideNote","ProofOfAddressForm","is_resubmit","addNotificationByKey","addNotificationMessageByKey","removeNotificationMessage","removeNotificationByKey","setFormValues","setAPIInitialLoadError","all","bool","mobile_scroll_offset","settings_values","get_account_status","should_allow_submit","validation_letter_symbol_message","df","ProofOfAddressContainer","resubmit_poa","has_submitted_poa","setAuthenticationStatus","PoaStatusCodes","handleResubmit","from_platform","getPlatformRedirect","sessionStorage","removeItem","country_select","alert_dropdown","country_not_found","alert","another_doc","button_primary","accessibility","input_placeholder","cross_device_checklist","list_item_doc_multiple","list_item_doc_one","list_item_selfie","cross_device_error_desktop","cross_device_error_restart","cross_device_intro","list_accessibility","list_item_finish","list_item_open_link","list_item_send_phone","cross_device_return","body","doc_confirmation","blur_detail","blur_title","crop_detail","crop_title","glare_detail","glare_title","no_doc_detail","no_doc_title","body_id","body_image_medium","body_image_poor","body_license","body_passport","body_permit","body_tax_letter","button_close","button_primary_redo","button_primary_upload","button_primary_upload_anyway","button_secondary_redo","button_zoom","image_accessibility","doc_select","button_id","button_id_detail","button_license","button_license_detail","button_passport","button_passport_detail","button_permit","button_permit_detail","extra_no_mobile","subtitle_poa","title_poa","doc_submit","button_link_upload","title_id_back","title_id_front","title_license_back","title_license_front","title_passport","title_permit_back","title_permit_front","error_unsupported_browser","subtitle_android","subtitle_ios","title_android","title_ios","generic","close_sdk_screen","dismiss_alert","close","interrupted_flow_error","invalid_size","invalid_type","lazy_loading","multiple_faces","no_face","request_error","sms_failed","sms_overuse","unsupported_file","lazy_load_placeholder","loading","get_link","alert_wrong_number","button_copied","button_copy","button_submit","info_qr_how","info_qr_how_list_item_camera","info_qr_how_list_item_download","link_divider","link_qr","link_sms","link_url","loader_sending","number_field_input_placeholder","number_field_label","subtitle_qr","subtitle_sms","subtitle_url","url_field_label","linked_computer","list_item_desktop_open","list_item_sent_by_you","mobilePhrases","photo_upload","body_id_back","body_id_front","body_license_back","body_license_front","body_selfie","selfie_capture","camera_inactive","camera_not_working","upload_guide","outro","permission_recovery","list_header_cam","list_item_action_cam","list_item_how_to_cam","subtitle_cam","title_cam","body_cam","button_primary_cam","body_bank_statement","body_benefits_letter","body_bill","body_government_letter","button_take_photo","button_upload","title_selfie","detail_no_fallback","timeout","button_accessibility","frame_accessibility","selfie_confirmation","selfie_intro","list_item_face_forward","list_item_no_glasses","sms_sent","info_link_expire","info_link_window","link","subtitle_minutes","switch_phone","info_link_refresh","image_detail_blur_alt","image_detail_blur_label","image_detail_cutoff_alt","image_detail_cutoff_label","image_detail_glare_alt","image_detail_glare_label","image_detail_good_alt","image_detail_good_label","onFormConfirm","checked","setChecked","is_danger","is_onfido_disabled","is_onfido_container_hidden","onfido_element_id","is_confirmed","is_onfido_initialized","is_status_message_visible","setIsStatusMessageVisible","transition_in_timeout_ref","transition_out_timeout_ref","CSSTransition","appear","in","exit","unmountOnExit","component_to_load","handleViewComplete","setAPIError","missing_personal_details","setMissingPersonalDetails","is_status_loading","setStatusLoading","retry_count","setRetryCount","setIsOnfidoDisabled","token_timeout_ref","setIsConfirmed","setIsOnfidoInitialized","onfido_country_code","countries","token_country_code","onfido_documents","onfido_init","tearDown","document_ids","notification_event","category","args","initOnfido","service_token","init","containerId","language","locale","phrases","getOnfidoPhrases","useModal","useMemoryHistory","steps","options","documentTypes","doc","driving_licence","country","national_identity_card","hideCountrySelection","getOnfidoServiceToken","onfido_cookie_name","onfido_cookie","Cookies","expires","secure","sameSite","useCallback","fetchServiceToken","response_token","handleError","pow","cryptoMathRandom","fillRule","clipRule","stroke","strokeWidth","strokeLinecap","strokeLinejoin","poa_button","header_Text","submissions_left","ListItem","MaximumList","message_list","show_more","setShowMore","maximum_list","tertiary","onContinue","has_maximum_list","rejected_reasons","last_rejected","handleSelectionNext","selected_country","setSelectedCountry","country_list","setCountryList","updateSelectedCountry","country_name","matching_country","c","country_input","current_input","clipPath","hide_hint","can_skip_document_verification","document_list","setDocumentList","document_image","setDocumentImage","setSelectedDoc","document_data","has_visual_sample","default_document","document_types","new_document_list","additional","IDV_NOT_APPLICABLE_OPTION","resetDocumentItemSelected","getDocument","onKeyUp","document_name","formatInput","bindDocumentData","selected_document","bottom_label","document_number","IdvDocumentSubmit","handleBack","shouldHideHelperImage","submitHandler","submit_data","identity_verification_document_add","issuing_country","needs_additional_document","isDocumentTypeValid","isAdditionalDocumentValid","is_document_number_invalid","isDocumentNumberValid","has_require_submission","onStateChange","submission_status","setSubmissionStatus","submission_service","setSubmissionService","submission_status_code","getCountryFromResidence","service_code","idv_submissions_left","onfido_submissions_left","is_idv_supported","is_country_supported","doc_obj","is_high_risk","is_withdrawal_lock","setHasRequireSubmission","setResidenceList","should_show_redirect_btn","response_account_status","response_residence_list","verification_status","last_attempt_status","is_last_attempt_idv","is_last_attempt_onfido","should_ignore_idv","redirect_route","selecting","submitting","complete","restoreMetaTagWithOGDescription","changeMetaTagWithOG","restoreMetaTagWithOGTitle","AutoHeightWrapper","default_height","setRef","QueryClient","is_subscribed","setSubscribed","subscriber","useRef","useWS","subscribe","prop","payload","unsubscribe","useSubscription","update","exchange_rates","base_currency","prev","merge","createContext","memoizedValue","useMemo","is_mock","ExchangeRatesStore","feature_flags","FeatureFlagsStore","unmount","BaseStore","onHydrationDone","makeObservable","this","observable","makePersistable","storage","localStorage","Function","stopPersisting","FLAGS","foo","bar","baz","old","flag","useContext","StoreContext","Error","x","y","rx","opacity","cx","cy","mixBlendMode","filterUnits","colorInterpolationFilters","floodOpacity","in2","stdDeviation","dy","transform"],"sourceRoot":""}