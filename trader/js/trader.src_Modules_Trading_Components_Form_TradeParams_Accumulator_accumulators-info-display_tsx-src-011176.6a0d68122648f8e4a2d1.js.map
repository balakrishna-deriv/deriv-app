{"version":3,"file":"trader/js/trader.src_Modules_Trading_Components_Form_TradeParams_Accumulator_accumulators-info-display_tsx-src-011176.6a0d68122648f8e4a2d1.js","mappings":"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","sources":["webpack://@deriv/trader/./src/App/Components/Form/fieldset.tsx","webpack://@deriv/trader/./src/App/Components/Form/number-selector.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/LabeledQuantityInputMobile/labeled-quantity-input-mobile.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/LabeledQuantityInputMobile/index.js","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/Purchase/value-movement.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Accumulator/accumulators-info-display.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Multiplier/expiration.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Multiplier/info.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Multiplier/stop-loss.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Multiplier/take-profit.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Turbos/barrier-selector.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/barrier.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/barriers-list-body.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/barriers-list.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/last-digit.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/min-max-stake-info.tsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/strike-param-modal.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/strike.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/trade-type-tabs.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/accumulator-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/turbos-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/trade-categories.tsx","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-asian.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-close-to-low.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-ends-in-out.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-even-odd.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-high-low.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-high-to-close.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-high-to-low.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-match-diff.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-multiplier.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-over-under.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-reset.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-rise-fall.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-run-high-low.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-spread.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-tick-high-low.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-touch.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-turbos.svg","webpack://@deriv/trader/./src/Assets/Trading/Categories/contract-type-description-video.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/trade-categories-gif.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeInfo/contract-type-glossary.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeInfo/contract-type-info.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeInfo/contract-type-info-header.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeInfo/index.js","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeMenu/search-input.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeMenu/no-results-message.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeMenu/contract-type-menu.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeMenu/index.js","webpack://@deriv/trader/./src/Assets/Trading/Categories/icon-trade-categories.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type-display.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type-item.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type-list.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type-dialog.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type-widget.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/index.js","webpack://@deriv/trader/./src/Modules/Trading/Containers/contract-type.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Accumulator/accumulators-sell-button.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/Purchase/cancel-deal-info.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/Purchase/contract-info.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/purchase-button.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/purchase-fieldset.tsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/purchase.tsx","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/allow-equals.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/multiplier.ts"],"sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Popover } from '@deriv/components';\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\ntype TFieldset = {\n    children?: React.ReactNode[] | React.ReactNode;\n    className: string;\n    header?: string | React.ReactNode;\n    header_tooltip?: string | React.ReactNode;\n    is_tooltip_disabled?: boolean;\n    is_center?: boolean;\n    onMouseEnter?: () => void;\n    onMouseLeave?: () => void;\n};\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    header_tooltip,\n    is_center,\n    is_tooltip_disabled,\n    onMouseEnter,\n    onMouseLeave,\n}: TFieldset) => {\n    const fieldset_header_class = classNames('trade-container__fieldset-header', {\n        'center-text': is_center,\n        'trade-container__fieldset-header--inline': header_tooltip,\n    });\n    const fieldset_info_class = classNames(\n        'trade-container__fieldset-info',\n        !is_center && 'trade-container__fieldset-info--left'\n    );\n\n    return (\n        <fieldset className={className} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header && (\n                <div className={fieldset_header_class}>\n                    <span className={fieldset_info_class}>{header}</span>\n                    {header_tooltip && (\n                        <span\n                            className={classNames('', {\n                                'trade-container__fieldset-header--tooltip-disabled': is_tooltip_disabled,\n                            })}\n                        >\n                            <Popover\n                                alignment='left'\n                                icon='info'\n                                is_bubble_hover_enabled\n                                message={header_tooltip}\n                                margin={216}\n                                relative_render\n                            />\n                        </span>\n                    )}\n                </div>\n            )}\n            {children}\n        </fieldset>\n    );\n};\n\nexport default Fieldset;\n","import classNames from 'classnames';\nimport React from 'react';\n\ntype TNumberSelector = {\n    arr_arr_numbers?: number[][];\n    name: string;\n    onChange: (new_values: {\n        target: {\n            value: string | number;\n            name: string;\n        };\n    }) => void;\n    selected_number?: number;\n    should_show_in_percents?: boolean;\n    is_disabled?: boolean;\n};\n\n// arr_arr_numbers is an array of arrays where each nested array indicates one row\n// for example [[1, 2, 3]] will be a single row of these three numbers\n// but [[1, 2, 3], [4, 5, 6]] will be two rows:\n// first row with the first three numbers and second row with the last three numbers\nconst NumberSelector = ({\n    arr_arr_numbers,\n    name,\n    onChange,\n    selected_number,\n    should_show_in_percents,\n    is_disabled,\n}: TNumberSelector) => {\n    const handleSelect = (event: React.MouseEvent<HTMLSpanElement>) => {\n        if (Number(event.currentTarget.getAttribute('data-value')) !== selected_number && !is_disabled) {\n            onChange({ target: { name, value: Number(event.currentTarget.getAttribute('data-value')) } });\n        }\n    };\n\n    return (\n        <div className='number-selector'>\n            {arr_arr_numbers &&\n                arr_arr_numbers.map((arr_numbers, idx) => (\n                    <div className='number-selector__row' key={idx.toString() + arr_numbers?.[0]}>\n                        {arr_numbers.map(i => (\n                            <span\n                                key={i}\n                                className={classNames('number-selector__selection', {\n                                    'number-selector__selection--selected': selected_number === i,\n                                    'number-selector__selection--percentage': should_show_in_percents,\n                                    'number-selector__selection--disabled': is_disabled,\n                                })}\n                                data-value={i}\n                                onClick={handleSelect}\n                            >\n                                {should_show_in_percents ? `${i * 100}%` : i}\n                            </span>\n                        ))}\n                    </div>\n                ))}\n        </div>\n    );\n};\n\nexport default NumberSelector;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputField } from '@deriv/components';\nimport Fieldset from 'App/Components/Form/fieldset';\n\nconst LabeledQuantityInputMobile = ({ input_label, ...props }) => (\n    <div\n        className={`${props.name}__widget ${props.wrapper_classname && props.wrapper_classname}`}\n        data-testid={`dt_${props.name}_widget`}\n    >\n        <Fieldset className={`${props.name}__fields`}>\n            <InputField {...props} />\n        </Fieldset>\n        <h2 className={`${props.name}__widget-title`}>{input_label}</h2>\n    </div>\n);\n\nLabeledQuantityInputMobile.propTypes = {\n    input_label: PropTypes.string,\n    ...InputField.propTypes,\n};\n\nexport default React.memo(LabeledQuantityInputMobile);\n","import LabeledQuantityInputMobile from './labeled-quantity-input-mobile.jsx';\n\nexport default LabeledQuantityInputMobile;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Icon, Money } from '@deriv/components';\nimport ContractInfo from './contract-info';\n\ntype TValueMovement = Partial<\n    Pick<\n        React.ComponentProps<typeof ContractInfo>,\n        'is_turbos' | 'is_vanilla' | 'currency' | 'has_increased' | 'proposal_info'\n    >\n> & {\n    has_error_or_not_loaded: boolean;\n    value?: number | string;\n    show_currency?: boolean;\n};\nconst ValueMovement = ({\n    has_error_or_not_loaded,\n    proposal_info,\n    currency,\n    has_increased,\n    is_turbos = false,\n    is_vanilla = false,\n    value,\n    show_currency = true,\n}: TValueMovement) => (\n    <div className='price-info--value-container'>\n        <div className='trade-container__price-info-value'>\n            {!has_error_or_not_loaded && (\n                <Money\n                    amount={proposal_info?.obj_contract_basis?.value || value}\n                    className={classNames('trade-container__price-info-currency', {\n                        'trade-container__price-info-currency--payout-per-point': is_vanilla || is_turbos,\n                    })}\n                    currency={currency}\n                    should_format={!is_turbos && !is_vanilla}\n                    show_currency={show_currency}\n                />\n            )}\n        </div>\n        <div className='trade-container__price-info-movement'>\n            {!has_error_or_not_loaded && has_increased !== null && has_increased ? (\n                <Icon icon='IcProfit' />\n            ) : (\n                <Icon icon='IcLoss' />\n            )}\n        </div>\n    </div>\n);\n\nexport default ValueMovement;\n","import React from 'react';\nimport { localize } from '@deriv/translations';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport { Money, Text, Popover } from '@deriv/components';\nimport classNames from 'classnames';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { isMobile } from '@deriv/shared';\n\nconst AccumulatorsInfoDisplay = observer(() => {\n    const { currency, maximum_payout, maximum_ticks } = useTraderStore();\n\n    const content = [\n        {\n            label: localize('Max. payout'),\n            value: <Money amount={maximum_payout} show_currency currency={currency} />,\n            tooltip_text: localize('Your contract will be automatically closed when your payout reaches this amount.'),\n            margin: 143,\n        },\n        {\n            label: localize('Max. ticks'),\n            value: `${maximum_ticks || 0} ${maximum_ticks === 1 ? localize('tick') : localize('ticks')}`,\n            tooltip_text: localize('Your contract will be automatically closed upon reaching this number of ticks.'),\n            margin: 175,\n        },\n    ];\n\n    return (\n        <Fieldset className={classNames('trade-container__fieldset', 'accu-info-display')}>\n            {content.map(({ label, value, tooltip_text, margin }) => (\n                <div key={label} className='accu-info-display__row'>\n                    <Text size='xxs' weight='bold' line_height='xxs'>\n                        {label}\n                    </Text>\n                    <Text size='xxs' align='right' as='div'>\n                        <Popover\n                            alignment={isMobile() ? 'top' : 'left'}\n                            classNameBubble='accu-info-display__popover'\n                            is_bubble_hover_enabled\n                            message={tooltip_text}\n                            margin={isMobile() ? -5 : margin}\n                            zIndex='9999'\n                        >\n                            {value}\n                        </Popover>\n                    </Text>\n                </div>\n            ))}\n        </Fieldset>\n    );\n});\n\nexport default AccumulatorsInfoDisplay;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { localize } from '@deriv/translations';\nimport { formatDuration, getDiffDuration, getDateFromNow } from '@deriv/shared';\nimport { Text } from '@deriv/components';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst Expiration = observer(({ is_text_only, text_size }) => {\n    const { expiration } = useTraderStore();\n    const { common } = useStore();\n    const { server_time: start_time } = common;\n    const { days, timestamp } = formatDuration(getDiffDuration(start_time.unix(), expiration), 'HH:mm');\n    const date = getDateFromNow(days, 'day', 'DD MMM YYYY');\n\n    if (is_text_only) {\n        return (\n            <React.Fragment>\n                {expiration ? (\n                    <Text size={text_size} align='center'>\n                        {date} at {timestamp}\n                    </Text>\n                ) : (\n                    '-'\n                )}\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <Fieldset\n            className='trade-container__fieldset trade-container__fieldset__multiplier'\n            is_center\n            header={localize('Expires on')}\n            header_tooltip={\n                expiration\n                    ? localize(\n                          'Your contract will be closed automatically at the next available asset price on {{date}} at {{timestamp}}.',\n                          { date, timestamp }\n                      )\n                    : null\n            }\n        >\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginRight: '1.6rem' }}>\n                {expiration ? (\n                    <Text size='xs' align='center'>\n                        {date} at {timestamp}\n                    </Text>\n                ) : (\n                    '-'\n                )}\n            </div>\n        </Fieldset>\n    );\n});\n\nExpiration.propTypes = {\n    is_text_only: PropTypes.bool,\n    text_size: PropTypes.string,\n};\n\nexport default Expiration;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Popover, Money, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst commission_tooltip_margin = 30;\nconst stop_out_tooltip_margin = 160;\n\nconst MultipliersInfo = observer(\n    ({ className, commission_text_size, stop_out_text_size, is_tooltip_relative, should_show_tooltip, ...props }) => {\n        const trade = useTraderStore();\n        const { currency, has_stop_loss } = trade;\n        const multiplier = props.multiplier ?? (trade.multiplier || 0);\n        const amount = props.amount ?? (trade.amount || 0);\n        const commission = props.commission ?? (trade.commission || 0);\n        const stop_out = props.stop_out ?? (trade.stop_out || 0);\n\n        const commission_text = (\n            <Text\n                as='p'\n                line_height='s'\n                size={commission_text_size || 'xxxs'}\n                className={classNames({\n                    [`${className}-tooltip-text`]: className,\n                })}\n            >\n                <Localize\n                    i18n_default_text='Commission <0/>'\n                    components={[<Money key={0} amount={commission} currency={currency} show_currency />]}\n                />\n            </Text>\n        );\n\n        const stop_out_text = (\n            <Text\n                as='p'\n                line_height='s'\n                size={stop_out_text_size || 'xxxs'}\n                className={classNames({\n                    [`${className}-tooltip-text`]: className,\n                })}\n            >\n                <Localize\n                    i18n_default_text='Stop out <0/>'\n                    components={[<Money key={0} amount={stop_out} currency={currency} show_currency />]}\n                />\n            </Text>\n        );\n\n        const commission_tooltip = (\n            <Localize\n                i18n_default_text='<0>{{commission_percentage}}%</0> of (<1/> * {{multiplier}})'\n                values={{\n                    commission_percentage: Number((commission * 100) / (multiplier * amount)).toFixed(4),\n                    multiplier,\n                }}\n                components={[\n                    <Text size='xxs' weight='bold' key={0} />,\n                    <Money key={1} amount={amount} currency={currency} />,\n                ]}\n            />\n        );\n\n        const stop_out_tooltip = (\n            <Localize\n                i18n_default_text='When your current loss equals or exceeds {{stop_out_percentage}}% of your stake, your contract will be closed at the nearest available asset price.'\n                values={{\n                    stop_out_percentage: Math.floor(Math.abs(Number((stop_out * 100) / amount))),\n                }}\n            />\n        );\n\n        const getInfo = ({ text, message, margin }) => {\n            return should_show_tooltip ? (\n                <Popover\n                    message={message}\n                    {...(is_tooltip_relative\n                        ? { alignment: 'left', relative_render: true, margin }\n                        : { alignment: 'top', zIndex: 9999 })}\n                >\n                    {text}\n                </Popover>\n            ) : (\n                text\n            );\n        };\n\n        return (\n            <div\n                className={classNames('multipliers-trade-info', className, {\n                    'mobile-widget__multiplier-trade-info--no-stop-out': has_stop_loss,\n                })}\n            >\n                {getInfo({\n                    text: commission_text,\n                    message: commission_tooltip,\n                    margin: commission_tooltip_margin,\n                })}\n                {!has_stop_loss &&\n                    getInfo({\n                        text: stop_out_text,\n                        message: stop_out_tooltip,\n                        margin: stop_out_tooltip_margin,\n                    })}\n            </div>\n        );\n    }\n);\n\nMultipliersInfo.propTypes = {\n    className: PropTypes.string,\n    commission_text_size: PropTypes.string,\n    is_tooltip_relative: PropTypes.bool,\n    should_show_tooltip: PropTypes.bool,\n    stop_out_text_size: PropTypes.string,\n};\n\nexport default MultipliersInfo;\n","import React from 'react';\nimport { InputWithCheckbox } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport { isDesktop } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst StopLoss = observer(props => {\n    const { ui, client } = useStore();\n    const trade = useTraderStore();\n\n    const { addToast, removeToast, current_focus, setCurrentFocus } = ui;\n    const { is_single_currency } = client;\n    const { amount, currency } = trade;\n\n    const validation_errors = props.validation_errors ?? trade.validation_errors;\n    const stop_loss = props.stop_loss ?? trade.stop_loss;\n    const has_stop_loss = props.has_stop_loss ?? trade.has_stop_loss;\n    const onChangeMultiple = props.onChangeMultiple ?? trade.onChangeMultiple;\n    const onChange = props.onChange ?? trade.onChange;\n\n    const changeValue = e => {\n        if (e.target.name === 'has_stop_loss') {\n            const new_val = e.target.value;\n            onChangeMultiple({\n                [e.target.name]: new_val,\n                ...(new_val ? { has_cancellation: false } : {}),\n            });\n        } else {\n            onChange(e);\n        }\n    };\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            <InputWithCheckbox\n                addToast={addToast}\n                removeToast={removeToast}\n                classNameBubble='dc-popover__trade-params'\n                classNameInlinePrefix='trade-container__currency'\n                classNameInput='trade-container__input'\n                className={isDesktop() ? 'trade-container__amount trade-container__amount--multipliers' : null}\n                currency={currency}\n                current_focus={current_focus}\n                defaultChecked={has_stop_loss}\n                error_messages={has_stop_loss ? validation_errors.stop_loss : undefined}\n                is_single_currency={is_single_currency}\n                is_negative_disabled={true}\n                is_input_hidden={!has_stop_loss}\n                label={localize('Stop loss')}\n                max_value={+amount}\n                name='stop_loss'\n                onChange={changeValue}\n                setCurrentFocus={setCurrentFocus}\n                tooltip_label={localize('Your contract will be closed automatically if your loss reaches this amount.')}\n                tooltip_alignment='left'\n                error_message_alignment='left'\n                value={stop_loss}\n            />\n        </Fieldset>\n    );\n});\n\nexport default StopLoss;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { InputWithCheckbox } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { isDesktop } from '@deriv/shared';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst TakeProfit = observer(props => {\n    const { ui, client } = useStore();\n    const trade = useTraderStore();\n\n    const { addToast, removeToast, current_focus, setCurrentFocus } = ui;\n    const { is_single_currency } = client;\n    const { is_accumulator, currency, has_open_accu_contract } = trade;\n\n    const validation_errors = props.validation_errors ?? trade.validation_errors;\n    const take_profit = props.take_profit ?? trade.take_profit;\n    const has_take_profit = props.has_take_profit ?? trade.has_take_profit;\n    const onChangeMultiple = props.onChangeMultiple ?? trade.onChangeMultiple;\n    const onChange = props.onChange ?? trade.onChange;\n\n    const changeValue = e => {\n        if (e.target.name === 'has_take_profit') {\n            const new_val = e.target.value;\n            onChangeMultiple({\n                [e.target.name]: new_val,\n                ...(new_val ? { has_cancellation: false } : {}),\n            });\n        } else {\n            onChange(e);\n        }\n    };\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            <InputWithCheckbox\n                addToast={addToast}\n                removeToast={removeToast}\n                classNameBubble='dc-popover__trade-params'\n                classNameInlinePrefix='trade-container__currency'\n                classNameInput={classNames('trade-container__input', {\n                    'trade-container__input--accumulator': is_accumulator,\n                })}\n                className={isDesktop() ? 'trade-container__amount trade-container__amount--multipliers' : null}\n                currency={currency}\n                current_focus={current_focus}\n                defaultChecked={has_take_profit}\n                error_messages={has_take_profit ? validation_errors.take_profit : undefined}\n                is_disabled={has_open_accu_contract}\n                is_single_currency={is_single_currency}\n                is_negative_disabled={true}\n                is_input_hidden={!has_take_profit}\n                label={localize('Take profit')}\n                name='take_profit'\n                onChange={changeValue}\n                setCurrentFocus={setCurrentFocus}\n                tooltip_label={localize(\n                    'Your contract will be closed automatically if your profit reaches this amount.'\n                )}\n                tooltip_alignment='left'\n                error_message_alignment='left'\n                value={take_profit}\n            />\n        </Fieldset>\n    );\n});\n\nexport default TakeProfit;\n","import React from 'react';\nimport BarriersList from '../barriers-list';\nimport { DesktopWrapper, Icon, MobileDialog, MobileWrapper, Text, Popover } from '@deriv/components';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport { Localize, localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst BarrierSelector = observer(() => {\n    const { barrier_1, onChange, setHoveredBarrier, barrier_choices } = useTraderStore();\n    const [is_barriers_table_expanded, setIsBarriersTableExpanded] = React.useState(false);\n    const [is_mobile_tooltip_visible, setIsMobileTooltipVisible] = React.useState(false);\n    const [selected_barrier, setSelectedBarrier] = React.useState(barrier_1);\n\n    const toggleMobileTooltip = () => setIsMobileTooltipVisible(!is_mobile_tooltip_visible);\n\n    const toggleBarriersTable = () => {\n        setIsMobileTooltipVisible(false);\n        setIsBarriersTableExpanded(!is_barriers_table_expanded);\n    };\n\n    const onBarrierClick = (barrier: string) => {\n        setHoveredBarrier('');\n        setSelectedBarrier(barrier);\n        onChange({\n            target: {\n                name: 'barrier_1',\n                value: barrier,\n            },\n        });\n        setIsBarriersTableExpanded(false);\n    };\n\n    React.useEffect(() => {\n        setSelectedBarrier(barrier_1);\n    }, [barrier_1]);\n\n    const header_tooltip_text = [localize('For Long:'), localize('For Short:')].map(title => (\n        <div key={title} className='trade-container__barriers-tooltip'>\n            <Localize\n                i18n_default_text=\"<0>{{title}}</0> You will get a payout if the market price stays {{price_position}} and doesn't touch or cross the barrier. Otherwise, your payout will be zero.\"\n                components={[<Text key={0} weight='bold' size='xxs' />]}\n                values={{\n                    title,\n                    price_position:\n                        title === localize('For Long:') ? localize('above the barrier') : localize('below the barrier'),\n                }}\n            />\n        </div>\n    ));\n\n    const barriers_header_mobile = (\n        <div className='trade-container__barriers-table__header-wrapper'>\n            <div>{localize('Barriers')}</div>\n            <Popover\n                alignment='bottom'\n                icon='info'\n                zIndex='9999'\n                message={header_tooltip_text}\n                is_open={is_mobile_tooltip_visible}\n                onClick={toggleMobileTooltip}\n            />\n        </div>\n    );\n\n    return (\n        <React.Fragment>\n            <MobileWrapper>\n                <div className='mobile-widget' onClick={toggleBarriersTable}>\n                    <Text size='xs' color='prominent' align='center'>\n                        {localize('Spot')}\n                    </Text>\n                    <Text size='xs' color='prominent' align='center' weight='bold'>\n                        {barrier_1}\n                    </Text>\n                    <Text size='xs' color='less-prominent' align='center'>\n                        {localize('Barrier')}\n                    </Text>\n                </div>\n                <MobileDialog\n                    title={barriers_header_mobile}\n                    onClose={toggleBarriersTable}\n                    portal_element_id='modal_root'\n                    wrapper_classname='contracts-modal-list'\n                    visible={is_barriers_table_expanded}\n                    header_classname='trade-container__barriers-table__header'\n                >\n                    <BarriersList\n                        className='trade-container__barriers-table'\n                        header={localize('Barriers')}\n                        barriers_list={barrier_choices}\n                        selected_item={selected_barrier}\n                        show_table={is_barriers_table_expanded}\n                        subheader={localize('Distance to current spot')}\n                        onClick={onBarrierClick}\n                        onClickCross={toggleBarriersTable}\n                        onHover={setHoveredBarrier}\n                    />\n                </MobileDialog>\n            </MobileWrapper>\n            <DesktopWrapper>\n                <Fieldset\n                    className='trade-container__fieldset trade-container__barriers'\n                    header={localize('Barrier')}\n                    header_tooltip={header_tooltip_text}\n                >\n                    <div onClick={toggleBarriersTable} className='trade-container__barriers__wrapper'>\n                        <Text size='xs' className='trade-container__barriers-spot'>\n                            {localize('Spot')}\n                        </Text>\n                        <Text size='xs' className='trade-container__barriers-value' data-testid='current_barrier'>\n                            {barrier_1}\n                            <Icon icon='IcChevronLeft' className='trade-container__barriers-value--arrow-right' />\n                        </Text>\n                    </div>\n                </Fieldset>\n                {is_barriers_table_expanded && (\n                    <BarriersList\n                        className='trade-container__barriers-table'\n                        header={localize('Barriers')}\n                        barriers_list={barrier_choices}\n                        selected_item={selected_barrier}\n                        show_table={is_barriers_table_expanded}\n                        subheader={localize('Distance to current spot')}\n                        onClick={onBarrierClick}\n                        onClickCross={toggleBarriersTable}\n                        onHover={setHoveredBarrier}\n                    />\n                )}\n            </DesktopWrapper>\n        </React.Fragment>\n    );\n});\n\nexport default BarrierSelector;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { DesktopWrapper, Icon, InputField, MobileWrapper, Modal, Text, usePrevious } from '@deriv/components';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport ValueMovement from '../Purchase/value-movement';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { localize } from '@deriv/translations';\nimport LabeledQuantityInputMobile from '../LabeledQuantityInputMobile';\n\ntype TBarrier = {\n    is_minimized?: boolean;\n    is_absolute_only?: boolean;\n};\n\nconst Barrier = observer(({ is_minimized, is_absolute_only }: TBarrier) => {\n    const { ui } = useStore();\n    const { current_focus, setCurrentFocus } = ui;\n    const {\n        barrier_1,\n        barrier_2,\n        barrier_count,\n        barrier_pipsize,\n        duration_unit,\n        onChange,\n        validation_errors,\n        proposal_info,\n        trade_types,\n    } = useTraderStore();\n    const [show_modal, setShowModal] = React.useState(false);\n    const type_with_current_spot = Object.keys(trade_types).find(type => proposal_info?.[type]?.spot);\n    let contract_info, has_spot_increased;\n    if (type_with_current_spot) contract_info = proposal_info?.[type_with_current_spot];\n    const current_spot = contract_info?.spot || '';\n    const current_barrier_price = contract_info?.barrier || '';\n    const previous_spot = usePrevious(current_spot);\n    if (previous_spot) has_spot_increased = Number(current_spot) > previous_spot;\n    const barrier_title = barrier_count === 1 ? localize('Barrier') : localize('Barriers');\n    const has_error_or_not_loaded = contract_info?.has_error || !contract_info?.id;\n\n    if (is_minimized) {\n        return barrier_count !== 2 ? (\n            <div className='fieldset-minimized fieldset-minimized__barrier1'>{barrier_1}</div>\n        ) : (\n            <React.Fragment>\n                <div className='fieldset-minimized fieldset-minimized__barrier1'>{barrier_1}</div>\n                <div className='fieldset-minimized fieldset-minimized__barrier2'>{barrier_2}</div>\n            </React.Fragment>\n        );\n    }\n\n    const input_class = barrier_count === 2 ? 'multiple' : 'single';\n    const is_day_duration = duration_unit === 'd';\n    // TODO: Some contracts yet to be implemented in app.deriv.com allow only absolute barrier, hence the prop\n    const is_absolute_barrier = is_day_duration || is_absolute_only;\n\n    const format = (value: string) => {\n        const float_value = parseFloat(value);\n        let final_value;\n        if (Math.sign(float_value) === -1) {\n            final_value = float_value.toFixed(barrier_pipsize).toString();\n        } else {\n            final_value = `+${float_value.toFixed(barrier_pipsize)}`;\n        }\n        return final_value;\n    };\n\n    const onClick = () => {\n        setShowModal(!show_modal);\n    };\n\n    return (\n        <React.Fragment>\n            <DesktopWrapper>\n                <Fieldset\n                    className='trade-container__fieldset trade-container__barriers'\n                    header={barrier_title}\n                    is_center\n                >\n                    <div>\n                        <InputField\n                            id='dt_barrier_1_input'\n                            type='number'\n                            name='barrier_1'\n                            value={barrier_1}\n                            className={`trade-container__barriers-${input_class}`}\n                            classNameInput={classNames(\n                                'trade-container__input',\n                                'trade-container__barriers-input',\n                                `trade-container__barriers-${input_class}-input`\n                            )}\n                            current_focus={current_focus}\n                            onChange={onChange}\n                            error_messages={validation_errors?.barrier_1 || []}\n                            is_float\n                            is_signed\n                            setCurrentFocus={setCurrentFocus}\n                        />\n\n                        {barrier_count === 2 && (\n                            <React.Fragment>\n                                <InputField\n                                    id='dt_barrier_2_input'\n                                    type='number'\n                                    name='barrier_2'\n                                    value={barrier_2}\n                                    className='multiple'\n                                    classNameInput='trade-container__input'\n                                    current_focus={current_focus}\n                                    onChange={onChange}\n                                    error_messages={validation_errors?.barrier_2}\n                                    is_float\n                                    is_signed\n                                    setCurrentFocus={setCurrentFocus}\n                                />\n                                <Icon icon='IcArrowUp' className='trade-container__barriers--up' />\n                                <Icon icon='IcArrowDown' className='trade-container__barriers--down' />\n                            </React.Fragment>\n                        )}\n                    </div>\n                </Fieldset>\n            </DesktopWrapper>\n            <MobileWrapper>\n                <Modal\n                    id='dt_input_barrier_mobile'\n                    className='barrier'\n                    is_open={show_modal}\n                    should_header_stick_body\n                    toggleModal={onClick}\n                    height='auto'\n                    width='calc(100vw - 32px)'\n                    title={localize('Barrier')}\n                >\n                    <div className='barrier__modal-container'>\n                        <Text className='barrier__modal-text' as='span' color='less-prominent' size='xs'>\n                            {localize('Current Price')}\n                        </Text>\n                        {current_spot && (\n                            <ValueMovement\n                                has_error_or_not_loaded={has_error_or_not_loaded}\n                                value={current_spot}\n                                has_increased={has_spot_increased}\n                                show_currency={false}\n                            />\n                        )}\n                    </div>\n                    <LabeledQuantityInputMobile\n                        id='dt_barrier_input'\n                        input_label={localize('Barrier')}\n                        type='number'\n                        name={barrier_count === 1 ? 'barrier_1' : 'barrier_2'}\n                        wrapper_classname='barrier__modal-input'\n                        value={barrier_count === 1 ? barrier_1 : barrier_2}\n                        className={`barrier__fields-${input_class}`}\n                        classNameInput={classNames(\n                            'barrier__fields-input',\n                            'barrier__fields-barriers-input',\n                            `barrier__fields-barriers-${input_class}-input`\n                        )}\n                        current_focus={current_focus}\n                        onChange={onChange}\n                        error_messages={\n                            (barrier_count === 1 ? validation_errors?.barrier_1 : validation_errors?.barrier_2) || []\n                        }\n                        error_message_alignment='top'\n                        is_float\n                        is_signed\n                        setCurrentFocus={setCurrentFocus}\n                    />\n                    <Text className='barrier__modal-price' as='div' color='less-prominent' size='xs'>\n                        {localize('Barrier Price:')} {current_barrier_price}\n                    </Text>\n                </Modal>\n                <LabeledQuantityInputMobile\n                    input_label={barrier_count === 2 ? localize('Barrier 1') : localize('Barrier')}\n                    id='dt_barrier_1_input'\n                    type='number'\n                    name='barrier_1'\n                    value={barrier_1}\n                    is_incrementable={!is_absolute_barrier}\n                    is_incrementable_on_long_press={!is_absolute_barrier}\n                    is_negative_disabled={is_absolute_barrier}\n                    className={`barrier__fields-${input_class}`}\n                    classNameInput={classNames(\n                        'barrier__fields-input',\n                        'barrier__fields-barriers-input',\n                        `barrier__fields-barriers-${input_class}-input`\n                    )}\n                    format={format}\n                    onChange={onChange}\n                    onClick={onClick}\n                    is_float\n                    is_signed\n                    setCurrentFocus={setCurrentFocus}\n                    is_read_only\n                />\n                {barrier_count === 2 && (\n                    <LabeledQuantityInputMobile\n                        input_label={localize('Barrier 2')}\n                        id='dt_barrier_2_input'\n                        type='number'\n                        name='barrier_2'\n                        value={barrier_2}\n                        is_incrementable={!is_absolute_barrier}\n                        is_incrementable_on_long_press={!is_absolute_barrier}\n                        is_negative_disabled={is_absolute_barrier}\n                        className={`barrier__fields-${input_class}`}\n                        classNameInput={classNames(\n                            'barrier__fields-input',\n                            'barrier__fields-barriers-input',\n                            `barrier__fields-barriers-${input_class}-input`\n                        )}\n                        format={format}\n                        onChange={onChange}\n                        onClick={onClick}\n                        is_float\n                        is_signed\n                        setCurrentFocus={setCurrentFocus}\n                        is_read_only\n                    />\n                )}\n            </MobileWrapper>\n        </React.Fragment>\n    );\n});\n\nexport default Barrier;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Text, ThemedScrollbars } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\n\nexport type TBarriersListBody = {\n    barriers_list: string[];\n    className?: string;\n    onClick: (barrier: string) => void;\n    onHover?: (barrier: string) => void;\n    selected_item: string;\n    subheader?: string;\n};\n\nconst BarriersListBody = observer(\n    ({ barriers_list, className, onClick, onHover, selected_item, subheader }: TBarriersListBody) => {\n        const {\n            ui: { is_mobile },\n        } = useStore();\n        const onMouseEnter = (barrier: string) => {\n            if (selected_item !== barrier && typeof onHover === 'function') {\n                onHover(barrier);\n            }\n        };\n        return (\n            <React.Fragment>\n                {subheader && (\n                    <Text\n                        size={is_mobile ? 's' : 'xxs'}\n                        color='disabled'\n                        line_height='l'\n                        as='p'\n                        className={`${className}__text`}\n                    >\n                        {subheader}\n                    </Text>\n                )}\n                <ThemedScrollbars autohide={false}>\n                    <ul className={`${className}__list`}>\n                        {barriers_list.map(barrier => (\n                            <Text\n                                color='prominent'\n                                line_height={is_mobile ? 'xl' : 'l'}\n                                size={is_mobile ? 'xs' : 'xxs'}\n                                as='li'\n                                key={barrier}\n                                id={barrier}\n                                data-testid={barrier}\n                                className={classNames(`${className}__item`, {\n                                    [`${className}__item--selected`]: selected_item === barrier,\n                                })}\n                                onClick={() => onClick(barrier)}\n                                onMouseEnter={() => onMouseEnter(barrier)}\n                                onMouseLeave={() => typeof onHover === 'function' && onHover('')}\n                            >\n                                {barrier}\n                            </Text>\n                        ))}\n                    </ul>\n                </ThemedScrollbars>\n            </React.Fragment>\n        );\n    }\n);\n\nexport default React.memo(BarriersListBody);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { DesktopWrapper, MobileWrapper, Text, Icon } from '@deriv/components';\nimport { CSSTransition } from 'react-transition-group';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport BarriersListBody, { TBarriersListBody } from './barriers-list-body';\n\ntype TBarriersList = TBarriersListBody & {\n    header: string;\n    onClickCross: () => void;\n    show_table: boolean;\n};\n\nconst BarriersList = ({ className, header, onClickCross, show_table, ...props }: TBarriersList) => (\n    <React.Fragment>\n        <DesktopWrapper>\n            <CSSTransition\n                appear\n                in={show_table}\n                timeout={250}\n                classNames={{\n                    appear: `${className}--enter`,\n                    enter: `${className}--enter`,\n                    enterDone: `${className}--enter-done`,\n                    exit: `${className}--exit`,\n                }}\n                unmountOnExit\n            >\n                <Fieldset className={classNames('trade-container__fieldset', className)}>\n                    <div className={`${className}__header`}>\n                        <Text color='prominent' weight='bold' size='xs'>\n                            {header}\n                        </Text>\n                        <div className={`${className}__icon-close`} onClick={onClickCross}>\n                            <Icon icon='IcCross' />\n                        </div>\n                    </div>\n                    <BarriersListBody className={className} {...props} />\n                </Fieldset>\n            </CSSTransition>\n        </DesktopWrapper>\n        <MobileWrapper>\n            <BarriersListBody className={className} {...props} />\n        </MobileWrapper>\n    </React.Fragment>\n);\n\nexport default React.memo(BarriersList);\n","import React from 'react';\nimport { isDesktop } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport NumberSelector from 'App/Components/Form/number-selector';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\ntype TLastDigit = {\n    is_minimized?: boolean;\n};\n\nconst LastDigit = observer(({ is_minimized }: TLastDigit) => {\n    const { onChange, last_digit } = useTraderStore();\n    if (is_minimized) {\n        return <div className='fieldset-minimized'>{`${localize('Last Digit')}: ${last_digit}`}</div>;\n    }\n    const arr_five = [...Array(5).keys()];\n    return (\n        <Fieldset\n            className='trade-container__fieldset'\n            header={isDesktop() ? localize('Last Digit Prediction') : null}\n            is_center\n        >\n            <NumberSelector\n                arr_arr_numbers={[arr_five, arr_five.map(i => i + 5)]}\n                name='last_digit'\n                onChange={onChange}\n                selected_number={+last_digit}\n            />\n        </Fieldset>\n    );\n});\n\nexport default LastDigit;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Money, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TMinMaxStakeInfo = {\n    className?: string;\n    min_stake?: number;\n    max_stake?: number;\n    currency?: string;\n};\n\nconst MinMaxStakeInfo = observer(({ className, currency, max_stake, min_stake }: TMinMaxStakeInfo) => {\n    const {\n        ui: { is_mobile },\n    } = useStore();\n    return (\n        <section className={classNames('trade-container__stake-field', className)}>\n            {!isNaN(Number(min_stake)) &&\n                !isNaN(Number(max_stake)) &&\n                ['Min', 'Max'].map(text => (\n                    <Text\n                        key={text}\n                        as='p'\n                        line_height='s'\n                        size={is_mobile ? 'xxs' : 'xxxs'}\n                        className={`trade-container__stake-field--${text.toLowerCase()}`}\n                    >\n                        <Localize\n                            i18n_default_text='{{text}}. stake<0/>'\n                            values={{ text }}\n                            components={[\n                                <Money\n                                    key={0}\n                                    amount={text === 'Min' ? min_stake : max_stake}\n                                    currency={currency}\n                                    show_currency\n                                />,\n                            ]}\n                        />\n                    </Text>\n                ))}\n        </section>\n    );\n});\n\nexport default MinMaxStakeInfo;\n","import React from 'react';\nimport { Localize, localize } from '@deriv/translations';\nimport { Div100vhContainer, Modal, Popover, RadioGroup } from '@deriv/components';\nimport { VANILLALONG } from '@deriv/shared';\nimport classNames from 'classnames';\n\ntype TStrikeParamModalProps = {\n    contract_type: string;\n    is_open: boolean;\n    name: string;\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    strike: string;\n    strike_price_list: { text: string; value: string }[];\n    toggleModal: () => void;\n};\n\nconst StrikeParamModal = ({\n    contract_type,\n    is_open,\n    toggleModal,\n    strike,\n    onChange,\n    name,\n    strike_price_list,\n}: TStrikeParamModalProps) => {\n    const [is_popover_open, setIsPopoverOpen] = React.useState(false);\n\n    const handleToggleModal = () => {\n        if (is_popover_open) setIsPopoverOpen(false);\n        toggleModal();\n    };\n\n    return (\n        <Modal\n            className='trade-params'\n            is_open={is_open}\n            should_header_stick_body={false}\n            is_title_centered\n            toggleModal={handleToggleModal}\n            height='auto'\n            width='calc(100vw - 32px)'\n            title={localize('Strike')}\n        >\n            <Div100vhContainer className='mobile-widget-dialog__wrapper' max_autoheight_offset='48px'>\n                <div className='trade-params__vanilla-ic-info-wrapper'>\n                    <Popover\n                        is_open={is_popover_open}\n                        alignment='bottom'\n                        icon='info'\n                        id='dt_vanilla-stake__tooltip'\n                        zIndex='9999'\n                        is_bubble_hover_enabled\n                        message={\n                            <Localize\n                                i18n_default_text='If you buy a \"<0>{{trade_type}}</0>\" option, you receive a payout at expiry if the final price is {{payout_status}} the strike price. Otherwise, your “<0>{{trade_type}}</0>” option will expire worthless.'\n                                components={[<strong key={0} />]}\n                                values={{\n                                    trade_type: contract_type === VANILLALONG.CALL ? localize('Call') : localize('Put'),\n                                    payout_status:\n                                        contract_type === VANILLALONG.CALL ? localize('above') : localize('below'),\n                                }}\n                            />\n                        }\n                        classNameBubble='trade-params--modal-wrapper__content'\n                        onClick={() => setIsPopoverOpen(!is_popover_open)}\n                    />\n                </div>\n                <div className={classNames('trade-params__amount-keypad', 'trade-params--mobile-strike')}>\n                    <RadioGroup\n                        name={name}\n                        className='trade-params__amount--mobile'\n                        onToggle={onChange}\n                        selected={strike}\n                    >\n                        {strike_price_list.map(item => (\n                            <RadioGroup.Item key={item.value} value={String(item.value)} label={item.value} />\n                        ))}\n                    </RadioGroup>\n                </div>\n            </Div100vhContainer>\n        </Modal>\n    );\n};\n\nexport default StrikeParamModal;\n","import React from 'react';\nimport classNames from 'classnames';\nimport BarriersList from './barriers-list';\nimport { DesktopWrapper, InputField, MobileWrapper, Dropdown, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { toMoment, VANILLALONG } from '@deriv/shared';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport StrikeParamModal from 'Modules/Trading/Containers/strike-param-modal';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst Strike = observer(() => {\n    const { ui, common } = useStore();\n    const {\n        barrier_1,\n        contract_type,\n        barrier_choices: strike_price_choices,\n        duration_unit,\n        onChange,\n        validation_errors,\n        expiry_type,\n        expiry_date,\n    } = useTraderStore();\n    const { current_focus, setCurrentFocus, advanced_duration_unit } = ui;\n    const { server_time } = common;\n\n    const [is_open, setIsOpen] = React.useState(false);\n    const [should_open_dropdown, setShouldOpenDropdown] = React.useState(false);\n    const [selected_value, setSelectedValue] = React.useState(barrier_1);\n\n    React.useEffect(() => {\n        setSelectedValue(barrier_1);\n    }, [barrier_1]);\n\n    const toggleWidget = () => setIsOpen(!is_open);\n\n    const is_24_hours_contract = expiry_date ? toMoment(expiry_date).isSame(toMoment(server_time), 'day') : false;\n\n    const is_relative_strike_applicable =\n        expiry_type === 'endtime' ? is_24_hours_contract : advanced_duration_unit !== 'd';\n\n    const strike_price_list = strike_price_choices.map(strike_price => ({\n        text: strike_price,\n        value: strike_price,\n    }));\n\n    const should_show_spot = duration_unit !== 'd';\n\n    return (\n        <React.Fragment>\n            <DesktopWrapper>\n                <Fieldset\n                    className='trade-container__fieldset trade-container__barriers'\n                    header={localize('Strike price')}\n                    header_tooltip={\n                        <Localize\n                            i18n_default_text='If you buy a \"<0>{{trade_type}}</0>\" option, you receive a payout at expiry if the final price is {{payout_status}} the strike price. Otherwise, your “<0>{{trade_type}}</0>” option will expire worthless.'\n                            components={[<strong key={0} />]}\n                            values={{\n                                trade_type: contract_type === VANILLALONG.CALL ? localize('Call') : localize('Put'),\n                                payout_status:\n                                    contract_type === VANILLALONG.CALL ? localize('above') : localize('below'),\n                            }}\n                        />\n                    }\n                >\n                    {!is_relative_strike_applicable ? (\n                        <InputField\n                            type='number'\n                            name='barrier_1'\n                            value={selected_value}\n                            className='trade-container__barriers-single'\n                            classNameInput={classNames(\n                                'trade-container__input',\n                                'trade-container__barriers-input',\n                                'trade-container__barriers-single-input'\n                            )}\n                            current_focus={current_focus}\n                            error_messages={validation_errors?.barrier_1 || []}\n                            is_float\n                            is_signed\n                            is_read_only\n                            setCurrentFocus={setCurrentFocus}\n                            onClick={() => setShouldOpenDropdown(true)}\n                        />\n                    ) : (\n                        <div className='trade-container__strike-field'>\n                            <Text size='s' className='strike-field--text'>\n                                {localize('Spot')}\n                            </Text>\n                            <Dropdown\n                                classNameDisplay='dc-dropdown__display--duration'\n                                disabled={false}\n                                id='strike'\n                                is_alignment_left\n                                is_nativepicker={false}\n                                list={strike_price_list}\n                                name='barrier_1'\n                                no_border={true}\n                                onChange={onChange}\n                                value={barrier_1}\n                            />\n                        </div>\n                    )}\n                </Fieldset>\n                {should_open_dropdown && (\n                    <BarriersList\n                        className='trade-container__barriers-table'\n                        header={localize('Strike Prices')}\n                        barriers_list={strike_price_choices}\n                        selected_item={selected_value}\n                        show_table={should_open_dropdown}\n                        onClick={strike => {\n                            setSelectedValue(strike);\n                            setShouldOpenDropdown(false);\n                            onChange({ target: { name: 'barrier_1', value: strike } });\n                        }}\n                        onClickCross={() => setShouldOpenDropdown(false)}\n                    />\n                )}\n            </DesktopWrapper>\n            <MobileWrapper>\n                <div className='mobile-widget__wrapper'>\n                    <div className='strike-widget' onClick={toggleWidget}>\n                        {should_show_spot && (\n                            <div className='mobile-widget__spot'>{<Text size='xs'>{localize('Spot')}</Text>}</div>\n                        )}\n                        <div className='mobile-widget__amount'>{barrier_1}</div>\n                        <div className='mobile-widget__type'>{localize('Strike price')}</div>\n                    </div>\n                    <StrikeParamModal\n                        contract_type={contract_type}\n                        is_open={is_open}\n                        toggleModal={toggleWidget}\n                        strike={barrier_1}\n                        onChange={onChange}\n                        name='barrier_1'\n                        strike_price_list={strike_price_list}\n                    />\n                </div>\n            </MobileWrapper>\n        </React.Fragment>\n    );\n});\n\nexport default Strike;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { ButtonToggle } from '@deriv/components';\nimport { isTurbosContract, isVanillaContract, TURBOS, VANILLALONG } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\ntype TTradeTypeTabs = {\n    className?: string;\n};\n\nconst TradeTypeTabs = observer(({ className }: TTradeTypeTabs) => {\n    const { onChange, contract_type } = useTraderStore();\n\n    const is_turbos = isTurbosContract(contract_type);\n    const is_vanilla = isVanillaContract(contract_type);\n    const tab_list = [\n        { text: localize('Long'), value: TURBOS.LONG, is_displayed: is_turbos },\n        { text: localize('Short'), value: TURBOS.SHORT, is_displayed: is_turbos },\n        { text: localize('Call'), value: VANILLALONG.CALL, is_displayed: is_vanilla },\n        { text: localize('Put'), value: VANILLALONG.PUT, is_displayed: is_vanilla },\n    ];\n\n    if (!is_turbos && !is_vanilla) return null;\n\n    return (\n        <div className={classNames('trade-container__trade', 'trade-container__trade-type-tabs', className)}>\n            <ButtonToggle\n                id='dt_advanced_duration_toggle'\n                buttons_arr={tab_list.filter(({ is_displayed }) => is_displayed)}\n                name='contract_type'\n                className='trade-container__trade-type-tabs--button'\n                is_animated\n                onChange={onChange}\n                value={tab_list.find(({ value }) => value === contract_type)?.value ?? ''}\n            />\n        </div>\n    );\n});\n\nexport default TradeTypeTabs;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst AccumulatorTradeDescription = ({ onClick }: { onClick: () => void }) => {\n    return (\n        <React.Fragment>\n            <Text as='p'>\n                <Localize\n                    i18n_default_text={\n                        'Accumulators allow you to express a view on the range of movement of an index and grow your stake exponentially at a fixed <0>growth rate</0>.'\n                    }\n                    components={[<span className='contract-type-info__content-definition' onClick={onClick} key={0} />]}\n                />\n            </Text>\n            <Text as='p'>\n                <Localize\n                    i18n_default_text={'Your <0>payout</0> is the sum of your inital stake and profit.'}\n                    components={[<span className='contract-type-info__content-definition' onClick={onClick} key={0} />]}\n                />\n            </Text>\n            <Text as='p'>\n                <Localize\n                    i18n_default_text={\n                        'Your stake will continue to grow as long as the current spot price remains within a specified <0>range</0> from the <0>previous spot price</0>. Otherwise, you lose your stake and the trade is terminated.'\n                    }\n                    components={[<span className='contract-type-info__content-definition' onClick={onClick} key={0} />]}\n                />\n            </Text>\n            <Text as='p'>\n                <Localize\n                    i18n_default_text={'You can close your trade anytime. However, be aware of <0>slippage risk<0/>.'}\n                    components={[<span className='contract-type-info__content-definition' onClick={onClick} key={0} />]}\n                />\n            </Text>\n        </React.Fragment>\n    );\n};\n\nexport default AccumulatorTradeDescription;\n","import React from 'react';\nimport { Localize, localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nexport const TurbosTradeDescription = () => {\n    const content = [\n        {\n            type: 'paragraph',\n            text: localize(\n                'This product allows you to express a strong bullish or bearish view on an underlying asset.'\n            ),\n        },\n        { type: 'heading', text: localize('For Long:') },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text='If you think the market price will rise continuously for a specific period, choose <0>Long</0>. You will get a payout at the expiry time if the market price doesn’t touch or cross below the barrier. Your payout will grow proportionally to the distance between the market price and the barrier if the barrier is not breached. You will start making a profit when the payout is higher than your stake. If the market price ever crosses the barrier, there won’t be a payout.'\n                    components={[<Text key={0} as='span' weight='bold' size='xs' />]}\n                />\n            ),\n        },\n        { type: 'heading', text: localize('For Short:') },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text='If you think the market price will drop continuously for a specific period, choose <0>Short</0>. You will get a payout at the expiry time if the market price doesn’t touch or cross above the barrier. Your payout will grow proportionally to the distance between the market price and the barrier if the barrier is not breached. You will start making a profit when the payout is higher than your stake. If the market price ever crosses the barrier, there won’t be a payout.'\n                    components={[<Text key={0} as='span' weight='bold' size='xs' />]}\n                />\n            ),\n        },\n        {\n            type: 'paragraph',\n            text: localize('You can determine the expiry of your contract by setting the duration or end time.'),\n        },\n    ];\n\n    return (\n        <React.Fragment>\n            {content.map(({ type, text }, index) =>\n                type === 'heading' ? (\n                    <Text as='h6' key={index.toString() + text} weight='bold' size='xs'>\n                        {text}\n                    </Text>\n                ) : (\n                    <Text as='p' key={index.toString() + text}>\n                        {text}\n                    </Text>\n                )\n            )}\n        </React.Fragment>\n    );\n};\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { VANILLALONG, TURBOS } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport AccumulatorTradeDescription from './accumulator-trade-description';\nimport { TurbosTradeDescription } from './turbos-trade-description';\n\n// Templates are from Binary 1.0, it should be checked if they need change or not and add all of trade types\n// TODO: refactor the rest of descriptions to use them as components like AccumulatorTradeDescription\nconst TradeCategories = ({ category, onClick }: { category?: string; onClick: () => void }) => {\n    let TradeTypeTemplate;\n    if (category) {\n        switch (category) {\n            case 'accumulator':\n                TradeTypeTemplate = <AccumulatorTradeDescription onClick={onClick} />;\n                break;\n            case 'rise_fall':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Rise\", you win the payout if the exit spot is strictly higher than the entry spot.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Fall\", you win the payout if the exit spot is strictly lower than the entry spot.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Allow equals\", you win the payout if exit spot is higher than or equal to entry spot for \"Rise\". Similarly, you win the payout if exit spot is lower than or equal to entry spot for \"Fall\".'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'rise_fall_equal':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Rise\", you win the payout if the exit spot is strictly higher than the entry spot.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Fall\", you win the payout if the exit spot is strictly lower than the entry spot.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Allow equals\", you win the payout if exit spot is higher than or equal to entry spot for \"Rise\". Similarly, you win the payout if exit spot is lower than or equal to entry spot for \"Fall\".'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Higher\", you win the payout if the exit spot is strictly higher than the barrier.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Lower\", you win the payout if the exit spot is strictly lower than the barrier.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\"If the exit spot is equal to the barrier, you don't win the payout.\")}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Ends Between\", you win the payout if the exit spot is strictly higher than the Low barrier AND strictly lower than the High barrier.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Ends Outside\", you win the payout if the exit spot is EITHER strictly higher than the High barrier, OR strictly lower than the Low barrier.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                \"If the exit spot is equal to either the Low barrier or the High barrier, you don't win the payout.\"\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Stays Between\", you win the payout if the market stays between (does not touch) either the High barrier or the Low barrier at any time during the contract period'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Goes Outside\", you win the payout if the market touches either the High barrier or the Low barrier at any time during the contract period.'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Matches\", you will win the payout if the last digit of the last tick is the same as your prediction.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Differs\", you will win the payout if the last digit of the last tick is not the same as your prediction.'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Even\", you will win the payout if the last digit of the last tick is an even number (i.e., 2, 4, 6, 8, or 0).'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Odd\", you will win the payout if the last digit of the last tick is an odd number (i.e., 1, 3, 5, 7, or 9).'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Over\", you will win the payout if the last digit of the last tick is greater than your prediction.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Under\", you will win the payout if the last digit of the last tick is less than your prediction.'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Touch\", you win the payout if the market touches the barrier at any time during the contract period.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"No Touch\", you win the payout if the market never touches the barrier at any time during the contract period.'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'Asian options settle by comparing the last tick with the average spot over the period.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Asian Rise\", you will win the payout if the last tick is higher than the average of the ticks.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Asian Fall\", you will win the payout if the last tick is lower than the average of the ticks.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                \"If the last tick is equal to the average of the ticks, you don't win the payout.\"\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'run_high_low':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Only Ups\", you win the payout if consecutive ticks rise successively after the entry spot. No payout if any tick falls or is equal to any of the previous ticks.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Only Downs\", you win the payout if consecutive ticks fall successively after the entry spot. No payout if any tick rises or is equal to any of the previous ticks.'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'reset':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Reset-Up”, you win the payout if the exit spot is strictly higher than either the entry spot or the spot at reset time.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Reset-Down”, you win the payout if the exit spot is strictly lower than either the entry spot or the spot at reset time.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                \"If the exit spot is equal to the barrier or the new barrier (if a reset occurs), you don't win the payout.\"\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'callputspread':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <h2>{localize('Spread Up')}</h2>\n                        <Text as='p'>\n                            {localize(\n                                'Win maximum payout if the exit spot is higher than or equal to the upper barrier.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'Win up to maximum payout if exit spot is between lower and upper barrier, in proportion to the difference between exit spot and lower barrier.'\n                            )}\n                        </Text>\n                        <Text as='p'>{localize('No payout if exit spot is below or equal to the lower barrier.')}</Text>\n                        <h2>{localize('Spread Down')}</h2>\n                        <Text as='p'>\n                            {localize(\n                                'Win maximum payout if the exit spot is lower than or equal to the lower barrier.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'Win up to maximum payout if exit spot is between lower and upper barrier, in proportion to the difference between upper barrier and exit spot.'\n                            )}\n                        </Text>\n                        <Text as='p'>{localize('No payout if exit spot is above or equal to the upper barrier.')}</Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'tick_high_low':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"High Tick\", you win the payout if the selected tick is the highest among the next five ticks.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Low Tick\", you win the payout if the selected tick is the lowest among the next five ticks.'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_high_low':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'By purchasing the \"High-to-Low\" contract, you\\'ll win the multiplier times the difference between the high and low over the duration of the contract.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The high is the highest point ever reached by the market during the contract period.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The low is the lowest point ever reached by the market during the contract period.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The close is the latest tick at or before the end time. If you selected a specific end time, the end time is the selected time.'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_put':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'By purchasing the \"High-to-Close\" contract, you\\'ll win the multiplier times the difference between the high and close over the duration of the contract.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The high is the highest point ever reached by the market during the contract period.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The low is the lowest point ever reached by the market during the contract period.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The close is the latest tick at or before the end time. If you selected a specific end time, the end time is the selected time.'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_call':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'By purchasing the \"Close-to-Low\" contract, you\\'ll win the multiplier times the difference between the close and low over the duration of the contract.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The high is the highest point ever reached by the market during the contract period.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The low is the lowest point ever reached by the market during the contract period.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The close is the latest tick at or before the end time. If you selected a specific end time, the end time is the selected time.'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'multiplier':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'Predict the market direction and select either “Up” or “Down” to open a position. We will charge a commission when you open a position.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select “Up”, you will earn a profit by closing your position when the market price is higher than the entry spot.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select “Down”, you will earn a profit by closing your position when the market price is lower than the entry spot.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'Your profit is the percentage change in market price times your stake and the multiplier of your choice.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The stop-out level on the chart indicates the price at which your potential loss equals your entire stake. When the market price reaches this level, your position will be closed automatically. This ensures that your loss does not exceed the amount you paid to purchase the contract.'\n                            )}\n                        </Text>\n                        <Text as='p'>{localize('These are optional parameters for each position that you open:')}</Text>\n                        <ul>\n                            <li>\n                                {localize(\n                                    'If you select “Take profit” and specify an amount that you’d like to earn, your position will be closed automatically when your profit is more than or equals to this amount. Your profit may be more than the amount you entered depending on the market price at closing.'\n                                )}\n                            </li>\n                            <li>\n                                {localize(\n                                    'If you select “Stop loss” and specify an amount to limit your loss, your position will be closed automatically when your loss is more than or equals to this amount. Your loss may be more than the amount you entered depending on the market price at closing.'\n                                )}\n                            </li>\n                            <li>\n                                {localize(\n                                    'If you select “Deal cancellation”, you’ll be able to cancel your trade within a chosen time frame should the market move against your favour. We’ll charge a small fee for this, but we’ll return your stake amount without profit or loss. If the stop-out amount is reached before the deal cancellation expires, your position will be cancelled automatically and we’ll return your stake amount without profit or loss.'\n                                )}\n                            </li>\n                            <Text as='p'>{localize('While “Deal cancellation” is active:')}</Text>\n                            <ul>\n                                <li>\n                                    {localize(\n                                        '“Stop loss” is deactivated and will only be available when “Deal cancellation” expires.'\n                                    )}\n                                </li>\n                                <li>\n                                    {localize(\n                                        '“Take profit” cannot be updated. You may update it only when “Deal cancellation” expires.'\n                                    )}\n                                </li>\n                            </ul>\n                        </ul>\n                        <Text as='p'>\n                            {localize(\n                                'The entry spot is the market price when your contract is processed by our servers.'\n                            )}\n                        </Text>\n                        <Text as='p'>{localize('The exit spot is the market price when the contract is closed.')}</Text>\n                    </React.Fragment>\n                );\n                break;\n            case TURBOS.LONG:\n            case TURBOS.SHORT:\n                TradeTypeTemplate = <TurbosTradeDescription />;\n                break;\n            case VANILLALONG.CALL:\n            case VANILLALONG.PUT:\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'Vanilla options allow you to predict an upward (bullish) or downward (bearish) direction of the underlying asset by purchasing a \"Call\" or a \"Put\".'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            <Localize\n                                i18n_default_text='If you select <0>\"Call\"</0>, you’ll earn a <1>payout</1> if the <1>final price</1> is above the <1>strike price</1> at <1>expiry</1>. Otherwise, you won’t receive a payout.'\n                                components={[\n                                    <strong key={0} />,\n                                    <span\n                                        className='contract-type-info__content-definition'\n                                        onClick={onClick}\n                                        key={1}\n                                    />,\n                                ]}\n                            />\n                        </Text>\n                        <Text as='p'>\n                            <Localize\n                                i18n_default_text='If you select <0>\"Put\"</0>, you’ll earn a payout if the final price is below the strike price at expiry. Otherwise, you won’t receive a payout.'\n                                components={[<strong key={0} />]}\n                            />\n                        </Text>\n                        <Text as='p'>\n                            <Localize\n                                i18n_default_text='Your payout is equal to the <0>payout per point</0> multiplied by the difference between the final price and the strike price. You will only earn a profit if your payout is higher than your initial stake.'\n                                components={[\n                                    <span\n                                        className='contract-type-info__content-definition'\n                                        onClick={onClick}\n                                        key={0}\n                                    />,\n                                ]}\n                            />\n                        </Text>\n                        <Text as='p'>\n                            <Localize\n                                i18n_default_text='You may sell the contract up until 60 seconds before expiry. If you do, we’ll pay you the <0>contract value</0>.'\n                                components={[\n                                    <span\n                                        className='contract-type-info__content-definition'\n                                        onClick={onClick}\n                                        key={0}\n                                    />,\n                                ]}\n                            />\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            default:\n                TradeTypeTemplate = <Text as='p'>{localize('Description not found.')}</Text>;\n                break;\n        }\n    }\n    return <>{TradeTypeTemplate}</>;\n};\n\nexport default TradeCategories;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M177.83 90.67v8.43h-33.74v-8.43h33.74zm33.74-25.3v8.43h-67.48v-8.44h67.48zm0-25.3v8.43h-67.48v-8.44h67.48z\" /><path fill=\"#FF444F\" d=\"M183.8 73.8l19.33 19.36V86.4a8.4 8.4 0 018.4-8.4h.04V99.1a8.43 8.43 0 01-8.44 8.43h-21.08v-.04a8.4 8.4 0 018.37-8.39h6.75l-25.3-25.3h11.92zm-25.31-25.3l12.65 12.65h-11.92L146.57 48.5h11.92z\" /><path fill=\"#85ACB0\" d=\"M127.57 99.1v8.44H60.09V99.1h67.48zm0-25.3v8.43H60.09V73.8h67.48zM93.83 48.5v8.43H60.09V48.5h33.74z\" /><path fill=\"#FF444F\" d=\"M87.14 86.45L74.5 99.1H62.56l12.65-12.65h11.93zm32-46.39a8.43 8.43 0 018.43 8.44v21.08h-.05a8.4 8.4 0 01-8.39-8.37v-6.75L99.8 73.8H87.9l25.3-25.3h-6.75a8.4 8.4 0 01-8.4-8.4v-.04h21.1z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M169.74 99.1v8.44h-67.48V99.1h67.48zm-4.22-59.04v54.82h-8.44V40.06h8.44z\" /><path fill=\"#FF444F\" d=\"M120.91 86.45l-4.2 4.22-14.45 4.21v-8.43h18.65zm19.3-33.74a8.43 8.43 0 018.44 8.44l-.04 21.08a8.43 8.43 0 01-8.4-8.43V67.1l-16.86 16.9V72.05l10.9-10.9h-6.68a8.46 8.46 0 01-8.44-8.44h21.09z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M211.57 99.1v8.44h-67.48V99.1h67.48zm-33.74-25.3v8.43h-33.74V73.8h33.74zm33.74 0v8.43h-13.02L207 73.8h4.58z\" /><path fill=\"#FF444F\" d=\"M203.13 55.18L189.25 41.3l-.03.03a8.4 8.4 0 000 11.86l3.73 3.74H169.4v8.43h23.55l-3.73 3.74a8.4 8.4 0 000 11.87l.03.03 13.88-13.89a8.43 8.43 0 000-11.93z\" /><path fill=\"#85ACB0\" d=\"M127.57 99.1v8.44H60.09V99.1h67.48zm0-59.04v8.44H60.09v-8.44h67.48z\" /><path fill=\"#FF444F\" d=\"M125.1 67.84l-13.9-13.9-.02.04a8.38 8.38 0 000 11.87l3.73 3.73H85.4v8.44h29.52l-3.73 3.73a8.38 8.38 0 000 11.87l.03.03 13.89-13.89a8.43 8.43 0 000-11.92z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"328\" height=\"164\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect width=\"328\" height=\"164\" rx=\"6\" fill=\"var(--general-section-1)\" /><path d=\"M186.13 101.34h34.34c3.37 0 6.1 2.88 6.1 6.44 0 3.57-2.73 6.44-6.1 6.44H64.03c-3.36 0-6.1-2.87-6.1-6.44 0-3.56 2.73-6.44 6.11-6.44h67.15c3.38 0 6.11-2.89 6.11-6.45 0-3.55-2.72-6.44-6.1-6.44H79.28v-.06A6.34 6.34 0 0173.95 82c0-3.25 2.29-5.99 5.34-6.4v-.04h21.38c3.36 0 6.1-2.89 6.1-6.44 0-3.57-2.73-6.46-6.11-6.46H72.43c-3.38 0-6.11-2.88-6.11-6.44 0-3.57 2.72-6.44 6.1-6.44h145c3.38 0 6.11 2.87 6.11 6.44 0 3.56-2.73 6.44-6.1 6.44h-56.49c-3.36 0-6.1 2.89-6.1 6.44 0 3.56 2.74 6.45 6.11 6.45h33.58c3.37 0 6.1 2.9 6.1 6.45 0 3.55-2.73 6.44-6.1 6.44H176.2c-3.37 0-6.1 2.89-6.1 6.44 0 3.57 2.72 6.46 6.1 6.46h9.92zM54.1 49.77c3.38 0 6.12 2.88 6.12 6.44 0 3.58-2.74 6.45-6.11 6.45S48 59.78 48 56.22c0-3.57 2.73-6.44 6.11-6.44l-.01-.01zM197.57 24h42.75c3.36 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44h-42.75c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44zm-25.94 0c3.37 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44c-3.38 0-6.1-2.88-6.1-6.44 0-3.57 2.72-6.44 6.1-6.44zm74.02 25.77h10.69c3.37 0 6.1 2.88 6.1 6.44 0 3.58-2.73 6.45-6.1 6.45h-10.69c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44v-.01zm-26.71 25.79h22.9c3.37 0 6.1 2.89 6.1 6.44s-2.72 6.44-6.1 6.44h-22.89c-3.37 0-6.1-2.88-6.1-6.44s2.72-6.44 6.1-6.44h-.01zm21.38 25.78h33.57c3.38 0 6.11 2.88 6.11 6.44 0 3.57-2.73 6.44-6.1 6.44h-33.58c-3.38 0-6.11-2.87-6.11-6.44 0-3.56 2.73-6.44 6.1-6.44zM94.56 127.12h68.68c3.37 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44H94.56c-3.38 0-6.11-2.88-6.11-6.44s2.72-6.44 6.1-6.44zm91.57 0h10.69c3.36 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44h-10.69c-3.37 0-6.1-2.88-6.1-6.44s2.73-6.44 6.1-6.44z\" fill=\"var(--fill-normal)\" /><g clipPath=\"url(#prefix__clip0_8025_91454)\"><path d=\"M109 89v21H88V89h21zm35-35v21h-21V54h21z\" fill=\"#85ACB0\" /><path d=\"M144 89v21h-21V89h21zm-35-35v21H88V54h21z\" fill=\"#FF444F\" /></g><path d=\"M196.25 85.06l12.25 18.38H184l12.25-18.38zm31.5 0L240 103.44h-24.5l12.25-18.38z\" fill=\"#85ACB0\" /><path d=\"M199.75 78.94L212 60.56l12.25 18.38h-24.5z\" fill=\"#FF444F\" /><defs><clipPath id=\"prefix__clip0_8025_91454\"><path fill=\"var(--fill-normal)\" transform=\"translate(88 54)\" d=\"M0 0h56v56H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"328\" height=\"164\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect width=\"328\" height=\"164\" rx=\"6\" fill=\"var(--general-section-1)\" /><path d=\"M186.13 101.34h34.34c3.37 0 6.1 2.88 6.1 6.44 0 3.57-2.73 6.44-6.1 6.44H64.03c-3.36 0-6.1-2.87-6.1-6.44 0-3.56 2.73-6.44 6.11-6.44h67.15c3.38 0 6.11-2.89 6.11-6.45 0-3.55-2.72-6.44-6.1-6.44H79.28v-.06A6.34 6.34 0 0173.95 82c0-3.25 2.29-5.99 5.34-6.4v-.04h21.38c3.36 0 6.1-2.89 6.1-6.44 0-3.57-2.73-6.46-6.11-6.46H72.43c-3.38 0-6.11-2.88-6.11-6.44 0-3.57 2.72-6.44 6.1-6.44h145c3.38 0 6.11 2.87 6.11 6.44 0 3.56-2.73 6.44-6.1 6.44h-56.49c-3.36 0-6.1 2.89-6.1 6.44 0 3.56 2.74 6.45 6.11 6.45h33.58c3.37 0 6.1 2.9 6.1 6.45 0 3.55-2.73 6.44-6.1 6.44H176.2c-3.37 0-6.1 2.89-6.1 6.44 0 3.57 2.72 6.46 6.1 6.46h9.92zM54.1 49.77c3.38 0 6.12 2.88 6.12 6.44 0 3.58-2.74 6.45-6.11 6.45S48 59.78 48 56.22c0-3.57 2.73-6.44 6.11-6.44l-.01-.01zM197.57 24h42.75c3.36 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44h-42.75c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44zm-25.94 0c3.37 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44c-3.38 0-6.1-2.88-6.1-6.44 0-3.57 2.72-6.44 6.1-6.44zm74.02 25.77h10.69c3.37 0 6.1 2.88 6.1 6.44 0 3.58-2.73 6.45-6.1 6.45h-10.69c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44v-.01zm-26.71 25.79h22.9c3.37 0 6.1 2.89 6.1 6.44s-2.72 6.44-6.1 6.44h-22.89c-3.37 0-6.1-2.88-6.1-6.44s2.72-6.44 6.1-6.44h-.01zm21.38 25.78h33.57c3.38 0 6.11 2.88 6.11 6.44 0 3.57-2.73 6.44-6.1 6.44h-33.58c-3.38 0-6.11-2.87-6.11-6.44 0-3.56 2.73-6.44 6.1-6.44zM94.56 127.12h68.68c3.37 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44H94.56c-3.38 0-6.11-2.88-6.11-6.44s2.72-6.44 6.1-6.44zm91.57 0h10.69c3.36 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44h-10.69c-3.37 0-6.1-2.88-6.1-6.44s2.73-6.44 6.1-6.44z\" fill=\"var(--fill-normal)\" /><path d=\"M88 89h56v-7H88v7z\" fill=\"#85ACB0\" /><path d=\"M98.5 92.5v5.55l5.55-5.55h9.9l-14 14H91.5v-14h7zm38.5-35a7 7 0 017 7v14.01h-6.04a6.91 6.91 0 01-.96-3.46v-5.6L124.46 82h-9.9l17.5-17.5h-5.6a6.96 6.96 0 01-6.96-6.96v-.04H137z\" fill=\"#FF444F\" /><path d=\"M184 82h56v-7h-56v7z\" fill=\"#85ACB0\" /><path d=\"M220.45 82L233 94.56v-5.6a6.91 6.91 0 01.95-3.46H240v14a7 7 0 01-7 7h-17.5v-.04a6.96 6.96 0 016.95-6.96h5.6L210.55 82h9.9zm-24.5-24.5l14 14h-9.9l-5.55-5.55v5.55h-7v-14h8.45z\" fill=\"#FF444F\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M165.52 52.71v54.83h-8.44V52.7h8.44zm4.22-12.65v8.44h-67.48v-8.44h67.48z\" /><path fill=\"#FF444F\" d=\"M123.35 63.59l16.87 16.9v-6.7a8.43 8.43 0 018.39-8.43l.04 21.09a8.43 8.43 0 01-8.43 8.43h-21.09a8.46 8.46 0 018.44-8.43h6.68l-10.9-10.9V63.58zM102.26 52.7l14.44 4.22 4.21 4.22h-18.65V52.7z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M169.74 99.1v8.44h-67.48V99.1h67.48zm-4.22-46.39v42.17h-8.44V52.71h8.44zm4.22-12.65v8.44h-67.48v-8.44h67.48z\" /><path fill=\"#FF444F\" d=\"M120.91 86.45l-4.2 4.22-14.45 4.21v-8.43h18.65zm19.3-33.74a8.43 8.43 0 018.44 8.44l-.04 21.08a8.43 8.43 0 01-8.4-8.43V67.1l-16.86 16.9V72.05l10.9-10.9h-6.68a8.46 8.46 0 01-8.44-8.44h21.09z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"328\" height=\"164\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect width=\"328\" height=\"164\" rx=\"6\" fill=\"var(--general-section-1)\" /><path d=\"M186.13 101.34h34.34c3.37 0 6.1 2.88 6.1 6.44 0 3.57-2.73 6.44-6.1 6.44H64.03c-3.36 0-6.1-2.87-6.1-6.44 0-3.56 2.73-6.44 6.11-6.44h67.15c3.38 0 6.11-2.89 6.11-6.45 0-3.55-2.72-6.44-6.1-6.44H79.28v-.06A6.34 6.34 0 0173.95 82c0-3.25 2.29-5.99 5.34-6.4v-.04h21.38c3.36 0 6.1-2.89 6.1-6.44 0-3.57-2.73-6.46-6.11-6.46H72.43c-3.38 0-6.11-2.88-6.11-6.44 0-3.57 2.72-6.44 6.1-6.44h145c3.38 0 6.11 2.87 6.11 6.44 0 3.56-2.73 6.44-6.1 6.44h-56.49c-3.36 0-6.1 2.89-6.1 6.44 0 3.56 2.74 6.45 6.11 6.45h33.58c3.37 0 6.1 2.9 6.1 6.45 0 3.55-2.73 6.44-6.1 6.44H176.2c-3.37 0-6.1 2.89-6.1 6.44 0 3.57 2.72 6.46 6.1 6.46h9.92zM54.1 49.77c3.38 0 6.12 2.88 6.12 6.44 0 3.58-2.74 6.45-6.11 6.45S48 59.78 48 56.22c0-3.57 2.73-6.44 6.11-6.44l-.01-.01zM197.57 24h42.75c3.36 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44h-42.75c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44zm-25.94 0c3.37 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44c-3.38 0-6.1-2.88-6.1-6.44 0-3.57 2.72-6.44 6.1-6.44zm74.02 25.77h10.69c3.37 0 6.1 2.88 6.1 6.44 0 3.58-2.73 6.45-6.1 6.45h-10.69c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44v-.01zm-26.71 25.79h22.9c3.37 0 6.1 2.89 6.1 6.44s-2.72 6.44-6.1 6.44h-22.89c-3.37 0-6.1-2.88-6.1-6.44s2.72-6.44 6.1-6.44h-.01zm21.38 25.78h33.57c3.38 0 6.11 2.88 6.11 6.44 0 3.57-2.73 6.44-6.1 6.44h-33.58c-3.38 0-6.11-2.87-6.11-6.44 0-3.56 2.73-6.44 6.1-6.44zM94.56 127.12h68.68c3.37 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44H94.56c-3.38 0-6.11-2.88-6.11-6.44s2.72-6.44 6.1-6.44zm91.57 0h10.69c3.36 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44h-10.69c-3.37 0-6.1-2.88-6.1-6.44s2.73-6.44 6.1-6.44z\" fill=\"var(--fill-normal)\" /><g clipPath=\"url(#prefix__clip0_8025_92748)\"><path d=\"M96.28 62.2l14.84 14.85a7 7 0 010 9.9L96.27 101.8l-.02-.02a6.96 6.96 0 010-9.85l6.42-6.43-18.67.04V78.5h18.67l-6.42-6.42a6.96 6.96 0 010-9.86l.03-.02zm31.45 0l.02.03a6.96 6.96 0 010 9.85l-6.42 6.42 18.67-.04v7.04h-18.67l6.42 6.42a6.96 6.96 0 010 9.85l-.02.03-12.23-12.23 2.62-2.62a7 7 0 000-9.9l-2.62-2.62 12.23-12.23z\" fill=\"#FF444F\" /><path d=\"M115.5 96v14h-7V96h7zm0-42v14h-7V54h7z\" fill=\"#85ACB0\" /></g><path d=\"M242.25 81.96V89h-18.67l6.42 6.42a6.96 6.96 0 010 9.86l-.02.02L216 91.32l7.87-7.87a6.9 6.9 0 001.08-1.45l17.3-.04zM202.02 55.2l14.85 14.85a7 7 0 010 9.9L202.02 94.8l-.02-.02a6.96 6.96 0 010-9.85l6.42-6.43-18.67.04V71.5h18.67L202 65.08a6.96 6.96 0 010-9.85l.02-.03zm27.96 10.5a6.98 6.98 0 012.07 4.95 6.96 6.96 0 01-1.64 4.48l-.41.45-4.2 4.2a7 7 0 00-1.54-5.8l-.4-.43-.86-.87 6.98-6.98z\" fill=\"#FF444F\" /><path d=\"M221.25 99.5V110h-7V99.5h7zm0-45.5v10.5h-7V54h7z\" fill=\"#85ACB0\" /><defs><clipPath id=\"prefix__clip0_8025_92748\"><path fill=\"var(--fill-normal)\" transform=\"translate(84 54)\" d=\"M0 0h56v56H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"328\" height=\"164\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect width=\"328\" height=\"164\" rx=\"6\" fill=\"var(--general-section-1)\" /><path d=\"M186.13 101.34h34.34c3.37 0 6.1 2.88 6.1 6.44 0 3.57-2.73 6.44-6.1 6.44H64.03c-3.36 0-6.1-2.87-6.1-6.44 0-3.56 2.73-6.44 6.11-6.44h67.15c3.38 0 6.11-2.89 6.11-6.45 0-3.55-2.72-6.44-6.1-6.44H79.28v-.06A6.34 6.34 0 0173.95 82c0-3.25 2.29-5.99 5.34-6.4v-.04h21.38c3.36 0 6.1-2.89 6.1-6.44 0-3.57-2.73-6.46-6.11-6.46H72.43c-3.38 0-6.11-2.88-6.11-6.44 0-3.57 2.72-6.44 6.1-6.44h145c3.38 0 6.11 2.87 6.11 6.44 0 3.56-2.73 6.44-6.1 6.44h-56.49c-3.36 0-6.1 2.89-6.1 6.44 0 3.56 2.74 6.45 6.11 6.45h33.58c3.37 0 6.1 2.9 6.1 6.45 0 3.55-2.73 6.44-6.1 6.44H176.2c-3.37 0-6.1 2.89-6.1 6.44 0 3.57 2.72 6.46 6.1 6.46h9.92zM54.1 49.77c3.38 0 6.12 2.88 6.12 6.44 0 3.58-2.74 6.45-6.11 6.45S48 59.78 48 56.22c0-3.57 2.73-6.44 6.11-6.44l-.01-.01zM197.57 24h42.75c3.36 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44h-42.75c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44zm-25.94 0c3.37 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44c-3.38 0-6.1-2.88-6.1-6.44 0-3.57 2.72-6.44 6.1-6.44zm74.02 25.77h10.69c3.37 0 6.1 2.88 6.1 6.44 0 3.58-2.73 6.45-6.1 6.45h-10.69c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44v-.01zm-26.71 25.79h22.9c3.37 0 6.1 2.89 6.1 6.44s-2.72 6.44-6.1 6.44h-22.89c-3.37 0-6.1-2.88-6.1-6.44s2.72-6.44 6.1-6.44h-.01zm21.38 25.78h33.57c3.38 0 6.11 2.88 6.11 6.44 0 3.57-2.73 6.44-6.1 6.44h-33.58c-3.38 0-6.11-2.87-6.11-6.44 0-3.56 2.73-6.44 6.1-6.44zM94.56 127.12h68.68c3.37 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44H94.56c-3.38 0-6.11-2.88-6.11-6.44s2.72-6.44 6.1-6.44zm91.57 0h10.69c3.36 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44h-10.69c-3.37 0-6.1-2.88-6.1-6.44s2.73-6.44 6.1-6.44z\" fill=\"var(--fill-normal)\" /><g clipPath=\"url(#prefix__clip0_8025_92038)\"><path d=\"M137 54h-17.5a7 7 0 007 7h5.6L88 104.75V110h5.25L137 65.95v5.55a7 7 0 007 7V61a7 7 0 00-7-7z\" fill=\"#FF444F\" /><path d=\"M124.75 85.5L144 104.75V110h-5.25L119.5 90.75l5.25-5.25zM93.25 54l19.25 19.25-5.25 5.25L88 59.25V54h5.25z\" fill=\"#85ACB0\" /></g><g clipPath=\"url(#prefix__clip1_8025_92038)\"><path d=\"M233 110h-17.5a7 7 0 017-7h5.6L184 59.25V54h5.25L233 98.05V92.5a7 7 0 017-7V103a7 7 0 01-7 7z\" fill=\"#FF444F\" /><path d=\"M203.25 85.5l5.25 5.25L189.25 110H184v-5.25l19.25-19.25zM240 54v5.25L220.75 78.5l-5.25-5.25L234.75 54H240z\" fill=\"#85ACB0\" /></g><defs><clipPath id=\"prefix__clip0_8025_92038\"><path fill=\"var(--fill-normal)\" transform=\"translate(88 54)\" d=\"M0 0h56v56H0z\" /></clipPath><clipPath id=\"prefix__clip1_8025_92038\"><path fill=\"var(--fill-normal)\" transform=\"translate(184 54)\" d=\"M0 0h56v56H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"328\" height=\"164\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect width=\"328\" height=\"164\" rx=\"6\" fill=\"var(--general-section-1)\" /><path d=\"M186.13 101.34h34.34c3.37 0 6.1 2.88 6.1 6.44 0 3.57-2.73 6.44-6.1 6.44H64.03c-3.36 0-6.1-2.87-6.1-6.44 0-3.56 2.73-6.44 6.11-6.44h67.15c3.38 0 6.11-2.89 6.11-6.45 0-3.55-2.72-6.44-6.1-6.44H79.28v-.06A6.34 6.34 0 0173.95 82c0-3.25 2.29-5.99 5.34-6.4v-.04h21.38c3.36 0 6.1-2.89 6.1-6.44 0-3.57-2.73-6.46-6.11-6.46H72.43c-3.38 0-6.11-2.88-6.11-6.44 0-3.57 2.72-6.44 6.1-6.44h145c3.38 0 6.11 2.87 6.11 6.44 0 3.56-2.73 6.44-6.1 6.44h-56.49c-3.36 0-6.1 2.89-6.1 6.44 0 3.56 2.74 6.45 6.11 6.45h33.58c3.37 0 6.1 2.9 6.1 6.45 0 3.55-2.73 6.44-6.1 6.44H176.2c-3.37 0-6.1 2.89-6.1 6.44 0 3.57 2.72 6.46 6.1 6.46h9.92zM54.1 49.77c3.38 0 6.12 2.88 6.12 6.44 0 3.58-2.74 6.45-6.11 6.45S48 59.78 48 56.22c0-3.57 2.73-6.44 6.11-6.44l-.01-.01zM197.57 24h42.75c3.36 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44h-42.75c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44zm-25.94 0c3.37 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44c-3.38 0-6.1-2.88-6.1-6.44 0-3.57 2.72-6.44 6.1-6.44zm74.02 25.77h10.69c3.37 0 6.1 2.88 6.1 6.44 0 3.58-2.73 6.45-6.1 6.45h-10.69c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44v-.01zm-26.71 25.79h22.9c3.37 0 6.1 2.89 6.1 6.44s-2.72 6.44-6.1 6.44h-22.89c-3.37 0-6.1-2.88-6.1-6.44s2.72-6.44 6.1-6.44h-.01zm21.38 25.78h33.57c3.38 0 6.11 2.88 6.11 6.44 0 3.57-2.73 6.44-6.1 6.44h-33.58c-3.38 0-6.11-2.87-6.11-6.44 0-3.56 2.73-6.44 6.1-6.44zM94.56 127.12h68.68c3.37 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44H94.56c-3.38 0-6.11-2.88-6.11-6.44s2.72-6.44 6.1-6.44zm91.57 0h10.69c3.36 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44h-10.69c-3.37 0-6.1-2.88-6.1-6.44s2.73-6.44 6.1-6.44z\" fill=\"var(--fill-normal)\" /><g clipPath=\"url(#prefix__clip0_8025_92088)\"><path d=\"M107.04 99.5l-6.97 7H90.05l7-7h9.99zm29.96-42a7 7 0 017 7v21h-.04a6.96 6.96 0 01-6.96-6.97v-9.1L116 90.5v-9.95l16.05-16.05h-9.09a6.96 6.96 0 01-6.96-6.97v-.03h21z\" fill=\"#FF444F\" /><path d=\"M144 92.5H88v7h56v-7z\" fill=\"#85ACB0\" /></g><g clipPath=\"url(#prefix__clip1_8025_92088)\"><path d=\"M212 73.5l21 21.07v-9.1a6.96 6.96 0 016.96-6.97h.04v21a7 7 0 01-7 7h-21v-.04a6.96 6.96 0 016.96-6.96h9.1L212 83.45v-9.96zm-15.93-16l6.97 7h-9.99l-7-7h10.02z\" fill=\"#FF444F\" /><path d=\"M240 64.5h-56v7h56v-7z\" fill=\"#85ACB0\" /></g><defs><clipPath id=\"prefix__clip0_8025_92088\"><path fill=\"var(--fill-normal)\" transform=\"translate(88 54)\" d=\"M0 0h56v56H0z\" /></clipPath><clipPath id=\"prefix__clip1_8025_92088\"><path fill=\"var(--fill-normal)\" transform=\"translate(184 54)\" d=\"M0 0h56v56H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M177.83 40.06v67.47h-8.44V40.06h8.44zM160.96 99.1v8.44h-16.87V99.1h16.87zm0-59.04v8.44h-16.87v-8.44h16.87zm50.6 0v8.44h-25.3v-8.44h25.3z\" /><path fill=\"#FF444F\" d=\"M182.05 72.07l21.08 21.09V86.4a8.4 8.4 0 018.4-8.4h.04V99.1a8.43 8.43 0 01-8.44 8.43h-21.08v-.04a8.4 8.4 0 018.37-8.39h6.75L182.05 84V72.06zm-15.13-15.14l2.48 2.47v11.93l-5.97-5.97H144.1v-8.43h22.83z\" /><path fill=\"#85ACB0\" d=\"M76.96 99.1v8.44H60.1V99.1h16.87zm50.6 0v8.44h-25.3V99.1h25.3zM93.84 40.06v67.48h-8.44V40.06h8.44zm-16.87 0v8.44H60.1v-8.44h16.87z\" /><path fill=\"#FF444F\" d=\"M85.4 76.27V88.2l-2.48 2.47H60.1v-8.44h19.34l5.96-5.96zm33.73-36.2a8.43 8.43 0 018.44 8.43v21.08h-.05a8.4 8.4 0 01-8.39-8.37v-6.75L98.05 75.54V63.62l15.14-15.12h-6.75a8.4 8.4 0 01-8.4-8.4v-.04z\" /><path fill=\"#85ACB0\" d=\"M89.61 82.23v1.75l1.75-1.75z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"328\" height=\"164\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect width=\"328\" height=\"164\" rx=\"6\" fill=\"var(--general-section-1)\" /><path d=\"M186.13 101.34h34.34c3.37 0 6.1 2.88 6.1 6.44 0 3.57-2.73 6.44-6.1 6.44H64.03c-3.36 0-6.1-2.87-6.1-6.44 0-3.56 2.73-6.44 6.11-6.44h67.15c3.38 0 6.11-2.89 6.11-6.45 0-3.55-2.72-6.44-6.1-6.44H79.28v-.06A6.34 6.34 0 0173.95 82c0-3.25 2.29-5.99 5.34-6.4v-.04h21.38c3.36 0 6.1-2.89 6.1-6.44 0-3.57-2.73-6.46-6.11-6.46H72.43c-3.38 0-6.11-2.88-6.11-6.44 0-3.57 2.72-6.44 6.1-6.44h145c3.38 0 6.11 2.87 6.11 6.44 0 3.56-2.73 6.44-6.1 6.44h-56.49c-3.36 0-6.1 2.89-6.1 6.44 0 3.56 2.74 6.45 6.11 6.45h33.58c3.37 0 6.1 2.9 6.1 6.45 0 3.55-2.73 6.44-6.1 6.44H176.2c-3.37 0-6.1 2.89-6.1 6.44 0 3.57 2.72 6.46 6.1 6.46h9.92zM54.1 49.77c3.38 0 6.12 2.88 6.12 6.44 0 3.58-2.74 6.45-6.11 6.45S48 59.78 48 56.22c0-3.57 2.73-6.44 6.11-6.44l-.01-.01zM197.57 24h42.75c3.36 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44h-42.75c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44zm-25.94 0c3.37 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44c-3.38 0-6.1-2.88-6.1-6.44 0-3.57 2.72-6.44 6.1-6.44zm74.02 25.77h10.69c3.37 0 6.1 2.88 6.1 6.44 0 3.58-2.73 6.45-6.1 6.45h-10.69c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44v-.01zm-26.71 25.79h22.9c3.37 0 6.1 2.89 6.1 6.44s-2.72 6.44-6.1 6.44h-22.89c-3.37 0-6.1-2.88-6.1-6.44s2.72-6.44 6.1-6.44h-.01zm21.38 25.78h33.57c3.38 0 6.11 2.88 6.11 6.44 0 3.57-2.73 6.44-6.1 6.44h-33.58c-3.38 0-6.11-2.87-6.11-6.44 0-3.56 2.73-6.44 6.1-6.44zM94.56 127.12h68.68c3.37 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44H94.56c-3.38 0-6.11-2.88-6.11-6.44s2.72-6.44 6.1-6.44zm91.57 0h10.69c3.36 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44h-10.69c-3.37 0-6.1-2.88-6.1-6.44s2.73-6.44 6.1-6.44z\" fill=\"var(--fill-normal)\" /><g clipPath=\"url(#prefix__clip0_8025_91604)\"><path d=\"M137 54h-17.5v.04a6.96 6.96 0 006.97 6.96h5.6L102 91.05v9.9l35-35v5.6a6.96 6.96 0 006.96 6.95h.04V61a7 7 0 00-7-7z\" fill=\"#FF444F\" /><path d=\"M92.95 110H88v-7h11.95L95 107.95 92.95 110z\" fill=\"#85ACB0\" /></g><g clipPath=\"url(#prefix__clip1_8025_91604)\"><path d=\"M239.97 85.5a6.96 6.96 0 00-6.97 6.97v5.6l-35-35v9.88L228.05 103h-5.6a6.96 6.96 0 00-6.95 6.96v.04H233a7 7 0 007-7V85.5h-.04z\" fill=\"#FF444F\" /><path d=\"M184 61v-7h4.95l2.05 2.05 4.95 4.95H184z\" fill=\"#85ACB0\" /></g><defs><clipPath id=\"prefix__clip0_8025_91604\"><path fill=\"var(--fill-normal)\" transform=\"translate(88 54)\" d=\"M0 0h56v56H0z\" /></clipPath><clipPath id=\"prefix__clip1_8025_91604\"><path fill=\"var(--fill-normal)\" transform=\"translate(184 54)\" d=\"M0 0h56v56H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M211.57 40.06v67.47h-8.44V40.06h8.44zm-16.87 0V73.8h-8.44V40.06h8.44zm-44.64 16.87l2.47 2.47 5.96 5.96h-14.4v-8.43h5.97zm27.77-16.87v16.87h-8.44V40.06h8.44zm-16.87 0v8.44h-8.43v-8.44h8.43z\" /><path fill=\"#FF444F\" d=\"M194.66 78.02a8.4 8.4 0 00-8.4 8.39v6.75l-25.3-25.3v11.9L180.3 99.1h-6.73a8.4 8.4 0 00-8.4 8.4v.03h21.1a8.43 8.43 0 008.43-8.43V78.02h-.04z\" /><path fill=\"#85ACB0\" d=\"M76.96 99.1v8.44h-8.43V99.1h8.43zm50.6-59.04v67.47h-8.43V40.06h8.44zM110.7 73.8v33.74h-8.44V73.8h8.44zM93.83 90.67v16.86h-8.44V90.67h8.44zm-19.34-8.44l-5.96 5.96-2.47 2.48h-5.97v-8.44h14.4z\" /><path fill=\"#FF444F\" d=\"M102.26 40.06H81.18v.04a8.4 8.4 0 008.39 8.4h6.75L76.96 67.84v11.92l25.3-25.3v6.75a8.4 8.4 0 008.4 8.37h.04V48.5a8.43 8.43 0 00-8.44-8.44z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 90.21h32.77c3.22 0 5.83 2.42 5.83 5.4 0 2.99-2.61 5.4-5.83 5.4H40.6c-3.21 0-5.82-2.41-5.82-5.4 0-2.98 2.6-5.4 5.83-5.4h64.08c3.22 0 5.83-2.42 5.83-5.4s-2.6-5.4-5.83-5.4H55.16v-.05c-2.91-.34-5.1-2.64-5.1-5.36s2.19-5.02 5.1-5.36v-.04h20.4c3.21 0 5.82-2.42 5.82-5.4 0-2.99-2.6-5.41-5.83-5.41H48.61c-3.22 0-5.83-2.42-5.83-5.4 0-2.99 2.6-5.4 5.83-5.4h138.37c3.22 0 5.83 2.41 5.83 5.4 0 2.98-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.42-5.82 5.4s2.61 5.4 5.83 5.4h32.04c3.22 0 5.83 2.43 5.83 5.41s-2.61 5.4-5.83 5.4h-17.48c-3.21 0-5.82 2.42-5.82 5.4 0 2.99 2.6 5.41 5.82 5.41h9.47zm-126-43.23c3.23 0 5.84 2.42 5.84 5.4 0 3-2.61 5.41-5.83 5.41s-5.83-2.42-5.83-5.4c0-2.99 2.61-5.4 5.83-5.4zm136.92-21.6h40.79c3.21 0 5.82 2.41 5.82 5.4s-2.6 5.4-5.82 5.4h-40.79c-3.21 0-5.82-2.42-5.82-5.4 0-2.99 2.6-5.4 5.82-5.4zm-24.76 0c3.22 0 5.83 2.41 5.83 5.4s-2.61 5.4-5.83 5.4-5.82-2.42-5.82-5.4c0-2.99 2.6-5.4 5.82-5.4zm70.64 21.6h10.2c3.22 0 5.83 2.42 5.83 5.4 0 3-2.61 5.41-5.83 5.41h-10.2c-3.21 0-5.82-2.42-5.82-5.4 0-2.99 2.6-5.4 5.82-5.4zM188.43 68.6h21.85c3.22 0 5.83 2.42 5.83 5.4 0 2.98-2.6 5.4-5.83 5.4h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.98 2.6-5.4 5.83-5.4zm20.4 21.61h32.04c3.22 0 5.83 2.42 5.83 5.4 0 2.99-2.61 5.4-5.83 5.4h-32.04c-3.22 0-5.83-2.41-5.83-5.4 0-2.98 2.61-5.4 5.83-5.4zm-139.1 21.61h65.54c3.22 0 5.83 2.42 5.83 5.4 0 2.99-2.61 5.4-5.83 5.4H69.73c-3.22 0-5.83-2.41-5.83-5.4s2.6-5.4 5.83-5.4zm87.39 0h10.2c3.21 0 5.82 2.42 5.82 5.4 0 2.99-2.6 5.4-5.82 5.4h-10.2c-3.22 0-5.83-2.41-5.83-5.4s2.61-5.4 5.83-5.4z\" /><path fill=\"#85ACB0\" d=\"M165.52 99.37v8.46h-21.09v-8.46h21.09zm29-46.3l14.92 14.95a8.33 8.33 0 011.3 1.75 8.24 8.24 0 010 8.46h-22.39l-8.44-8.46h19.34L194.5 65a8.42 8.42 0 01-2.46-5.95c0-2.23.88-4.37 2.46-5.95l.03-.03zm17.39-12.9v8.46h-67.48v-8.46h67.48z\" /><path fill=\"#FF444F\" d=\"M195.04 86.69v6.7l-15.12-15.16-8.44-8.46h-27.05v8.46H168l21.09 21.14h-6.73a8.4 8.4 0 00-8.4 8.42v.04h21.09a8.45 8.45 0 008.43-8.46V86.7h-8.43z\" /><path fill=\"#85ACB0\" d=\"M127.57 99.37v8.46H60.09v-8.46h67.48zm-1.17-29.6a8.24 8.24 0 010 8.46 8.32 8.32 0 01-1.3 1.75l-14.91 14.95-.03-.03a8.42 8.42 0 01-2.46-5.95c0-2.23.88-4.37 2.46-5.95l4.75-4.77H95.57l8.44-8.46zm-45.22-29.6v8.46H60.09v-8.46h21.09z\" /><path fill=\"#FF444F\" d=\"M110.7 40.17H89.6v.04a8.4 8.4 0 008.4 8.42h6.74L83.67 69.77H60.09v8.46h27.05l8.44-8.46 15.12-15.16v6.7h8.43V48.63a8.45 8.45 0 00-8.43-8.46z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M211.57 99.1v8.44h-25.3l-8.44-8.44h33.74zm-33.74 0l-8.44 8.44h-25.3V99.1h33.74zm33.74-59.04v8.44h-67.48v-8.44h67.48z\" /><path fill=\"#FF444F\" d=\"M203.13 56.93h-21.08v.04a8.4 8.4 0 008.39 8.4h6.75L177.83 84.7l-19.34-19.34a8.43 8.43 0 00-11.93 0l-2.47 2.48v11.92l8.44-8.43 19.34 19.34a8.43 8.43 0 0011.92 0l19.34-19.34v6.74a8.4 8.4 0 008.4 8.38h.04V65.36a8.43 8.43 0 00-8.44-8.43z\" /><path fill=\"#85ACB0\" d=\"M127.57 99.1v8.44H60.09V99.1h67.48zm0-59.04v8.44H93.83l8.43-8.44h25.3zm-42.17 0l8.43 8.44H60.09v-8.44h25.3z\" /><path fill=\"#FF444F\" d=\"M127.52 61.15a8.4 8.4 0 00-8.39 8.39v6.75L99.8 56.93a8.43 8.43 0 00-11.92 0L68.53 76.27l-8.44-8.43v11.92l2.47 2.47a8.43 8.43 0 0011.93 0L93.83 62.9l19.34 19.34h-6.75a8.4 8.4 0 00-8.37 8.4v.04h21.08a8.43 8.43 0 008.44-8.44V61.15h-.05z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"328\" height=\"164\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect width=\"328\" height=\"164\" rx=\"6\" fill=\"var(--general-section-1)\" /><path d=\"M186.13 101.34h34.34c3.37 0 6.1 2.88 6.1 6.44 0 3.57-2.73 6.44-6.1 6.44H64.03c-3.36 0-6.1-2.87-6.1-6.44 0-3.56 2.73-6.44 6.11-6.44h67.15c3.38 0 6.11-2.89 6.11-6.45 0-3.55-2.72-6.44-6.1-6.44H79.28v-.06A6.34 6.34 0 0173.95 82c0-3.25 2.29-5.99 5.34-6.4v-.04h21.38c3.36 0 6.1-2.89 6.1-6.44 0-3.57-2.73-6.46-6.11-6.46H72.43c-3.38 0-6.11-2.88-6.11-6.44 0-3.57 2.72-6.44 6.1-6.44h145c3.38 0 6.11 2.87 6.11 6.44 0 3.56-2.73 6.44-6.1 6.44h-56.49c-3.36 0-6.1 2.89-6.1 6.44 0 3.56 2.74 6.45 6.11 6.45h33.58c3.37 0 6.1 2.9 6.1 6.45 0 3.55-2.73 6.44-6.1 6.44H176.2c-3.37 0-6.1 2.89-6.1 6.44 0 3.57 2.72 6.46 6.1 6.46h9.92zM54.1 49.77c3.38 0 6.12 2.88 6.12 6.44 0 3.58-2.74 6.45-6.11 6.45S48 59.78 48 56.22c0-3.57 2.73-6.44 6.11-6.44l-.01-.01zM197.57 24h42.75c3.36 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44h-42.75c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44zm-25.94 0c3.37 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44c-3.38 0-6.1-2.88-6.1-6.44 0-3.57 2.72-6.44 6.1-6.44zm74.02 25.77h10.69c3.37 0 6.1 2.88 6.1 6.44 0 3.58-2.73 6.45-6.1 6.45h-10.69c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44v-.01zm-26.71 25.79h22.9c3.37 0 6.1 2.89 6.1 6.44s-2.72 6.44-6.1 6.44h-22.89c-3.37 0-6.1-2.88-6.1-6.44s2.72-6.44 6.1-6.44h-.01zm21.38 25.78h33.57c3.38 0 6.11 2.88 6.11 6.44 0 3.57-2.73 6.44-6.1 6.44h-33.58c-3.38 0-6.11-2.87-6.11-6.44 0-3.56 2.73-6.44 6.1-6.44zM94.56 127.12h68.68c3.37 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44H94.56c-3.38 0-6.11-2.88-6.11-6.44s2.72-6.44 6.1-6.44zm91.57 0h10.69c3.36 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44h-10.69c-3.37 0-6.1-2.88-6.1-6.44s2.73-6.44 6.1-6.44z\" fill=\"var(--fill-normal)\" /><g clipPath=\"url(#prefix__clip0_8025_91554)\"><path d=\"M106.98 103l-4.98 5-2 2H88v-7h18.98zM144 54v7H88v-7h56z\" fill=\"#85ACB0\" /><path d=\"M143.97 89h.03V68a7 7 0 00-7-7h-21v.04a6.96 6.96 0 006.97 6.96h9.1L109 91.05v9.93l28-28.03v9.1a6.96 6.96 0 006.97 6.95z\" fill=\"#FF444F\" /></g><g clipPath=\"url(#prefix__clip1_8025_91554)\"><path d=\"M195.95 103l-7 7H184v-7h11.95zM240 54v7h-56v-7h56z\" fill=\"#85ACB0\" /><path d=\"M239.97 78.5a6.96 6.96 0 00-6.97 6.97v5.6L220.45 78.5a7 7 0 00-9.9 0L198 91.05v9.9l17.5-17.5L228.05 96h-5.6a6.96 6.96 0 00-6.95 6.97v.03H233a7 7 0 007-7V78.5h-.04z\" fill=\"#FF444F\" /></g><defs><clipPath id=\"prefix__clip0_8025_91554\"><path fill=\"var(--fill-normal)\" transform=\"translate(88 54)\" d=\"M0 0h56v56H0z\" /></clipPath><clipPath id=\"prefix__clip1_8025_91554\"><path fill=\"var(--fill-normal)\" transform=\"translate(184 54)\" d=\"M0 0h56v56H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"272\" height=\"147\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M268 0H4C1.79 0 0 1.78 0 3.97v139.06c0 2.2 1.79 3.97 4 3.97h264c2.2 0 4-1.78 4-3.97V3.97c0-2.2-1.8-3.97-4-3.97z\" fill=\"var(--fill-normal)\" /><path d=\"M268 0H4C1.79 0 0 1.78 0 3.97v139.06c0 2.2 1.79 3.97 4 3.97h264c2.2 0 4-1.78 4-3.97V3.97c0-2.2-1.8-3.97-4-3.97z\" fill=\"var(--general-section-1)\" /><path d=\"M157.12 89.6h32.77c3.22 0 5.83 2.4 5.83 5.37 0 2.96-2.61 5.36-5.83 5.36H40.6c-3.21 0-5.82-2.4-5.82-5.37 0-2.96 2.6-5.36 5.83-5.36h64.08c3.22 0 5.83-2.4 5.83-5.36s-2.6-5.37-5.83-5.37H55.16v-.05c-2.91-.33-5.1-2.62-5.1-5.32s2.19-4.99 5.1-5.32v-.04h20.4c3.21 0 5.82-2.4 5.82-5.37s-2.6-5.37-5.83-5.37H48.61c-3.22 0-5.83-2.4-5.83-5.36 0-2.97 2.6-5.37 5.83-5.37h138.37c3.22 0 5.83 2.4 5.83 5.37 0 2.96-2.61 5.36-5.83 5.36h-53.9c-3.21 0-5.82 2.4-5.82 5.36s2.61 5.37 5.83 5.37h32.04c3.22 0 5.83 2.41 5.83 5.37s-2.61 5.36-5.83 5.36h-17.48c-3.21 0-5.82 2.4-5.82 5.37s2.6 5.37 5.82 5.37h9.47zm-126-42.94c3.23 0 5.84 2.4 5.84 5.37 0 2.98-2.61 5.37-5.83 5.37S25.3 55 25.3 52.04c0-2.97 2.61-5.37 5.83-5.37h-.01zm136.92-21.45h40.79c3.21 0 5.82 2.4 5.82 5.36 0 2.97-2.6 5.37-5.82 5.37h-40.79c-3.21 0-5.82-2.4-5.82-5.37s2.6-5.36 5.82-5.36zm-24.76 0c3.22 0 5.83 2.4 5.83 5.36 0 2.97-2.61 5.37-5.83 5.37s-5.82-2.4-5.82-5.37 2.6-5.36 5.82-5.36zm70.64 21.45h10.2c3.22 0 5.83 2.4 5.83 5.37 0 2.98-2.61 5.37-5.83 5.37h-10.2c-3.21 0-5.82-2.4-5.82-5.36 0-2.97 2.6-5.37 5.82-5.37zm-25.49 21.48h21.85c3.22 0 5.83 2.4 5.83 5.36s-2.6 5.36-5.83 5.36h-21.84c-3.22 0-5.83-2.4-5.83-5.36s2.6-5.36 5.83-5.36h-.01zm20.4 21.46h32.04c3.22 0 5.83 2.4 5.83 5.37s-2.61 5.36-5.83 5.36h-32.04c-3.22 0-5.83-2.4-5.83-5.37 0-2.96 2.61-5.36 5.83-5.36zm-139.1 21.47h65.54c3.22 0 5.83 2.4 5.83 5.36 0 2.97-2.61 5.36-5.83 5.36H69.73c-3.22 0-5.83-2.4-5.83-5.36 0-2.97 2.6-5.37 5.83-5.37zm87.39 0h10.2c3.21 0 5.82 2.4 5.82 5.36 0 2.97-2.6 5.36-5.82 5.36h-10.2c-3.22 0-5.83-2.4-5.83-5.36 0-2.97 2.61-5.37 5.83-5.37z\" fill=\"var(--fill-normal)\" /><path d=\"M208 81.5V104h-24v-3.75c0-2.06 1.8-3.75 4-3.75h6.32L172 75.54l-12 11.25-16-15V61.2l16 15 12-11.25 28 26.21v-5.92c0-2.06 1.8-3.75 4-3.75h4z\" fill=\"#FF444F\" /><path d=\"M208 44v11.25h-16l-2.68-3.75H144v-3.75h45.32L192 44h16z\" fill=\"#85ACB0\" /><path d=\"M128 44v22.35h-4c-2.2 0-4-1.68-4-3.73v-5.88L92 82.77 80 71.6 64 86.5V76l16-14.9 12 11.17 22.32-20.82H108c-2.2 0-4-1.68-4-3.73V44h24z\" fill=\"#FF444F\" /><path d=\"M128 92.42v11.18h-16l-2.68-3.73H64v-3.72h45.32l2.68-3.73h16z\" fill=\"#85ACB0\" /></svg>);","import React from 'react';\nimport { localize } from '@deriv/translations';\nimport { getUrlBase } from '@deriv/shared';\nimport { useStore } from '@deriv/stores';\n\ntype TContractTypeDescriptionVideo = {\n    selected_contract_type?: string;\n    data_testid?: string;\n};\n\nconst ContractTypeDescriptionVideo = ({ selected_contract_type, data_testid }: TContractTypeDescriptionVideo) => {\n    const { ui } = useStore();\n    const { is_dark_mode_on: is_dark_theme, is_mobile } = ui;\n    const getVideoSource = React.useCallback(\n        (extension: 'mp4' | 'webm') => {\n            return getUrlBase(\n                `/public/videos/${selected_contract_type}_description${is_dark_theme ? '_dark' : '_light'}.${extension}`\n            );\n        },\n        [is_dark_theme, selected_contract_type]\n    );\n\n    // memoize file paths for videos and open the modal only after we get them\n    const mp4_src = React.useMemo(() => getVideoSource('mp4'), [getVideoSource]);\n    const webm_src = React.useMemo(() => getVideoSource('webm'), [getVideoSource]);\n    if (!selected_contract_type) {\n        return null;\n    }\n    return (\n        <video\n            autoPlay\n            loop\n            playsInline\n            disablePictureInPicture\n            controlsList='nodownload'\n            onContextMenu={e => e.preventDefault()}\n            preload='auto'\n            controls\n            width={is_mobile ? 328 : 480}\n            height={is_mobile ? 184.5 : 270}\n            className='contract-type-info__video'\n            data-testid={data_testid}\n        >\n            {/* a browser will select a source with extension it recognizes */}\n            <source src={mp4_src} type='video/mp4' />\n            <source src={webm_src} type='video/webm' />\n            {localize('Unfortunately, your browser does not support the video.')}\n        </video>\n    );\n};\n\nexport default React.memo(ContractTypeDescriptionVideo);\n","import React from 'react';\nimport ImageAsianUpDown from 'Assets/SvgComponents/trade_explanations/img-asian.svg';\nimport ImageCloseToLow from 'Assets/SvgComponents/trade_explanations/img-close-to-low.svg';\nimport ImageEndsInOut from 'Assets/SvgComponents/trade_explanations/img-ends-in-out.svg';\nimport ImageEvenOdd from 'Assets/SvgComponents/trade_explanations/img-even-odd.svg';\nimport ImageHighLow from 'Assets/SvgComponents/trade_explanations/img-high-low.svg';\nimport ImageHighToClose from 'Assets/SvgComponents/trade_explanations/img-high-to-close.svg';\nimport ImageHighToLow from 'Assets/SvgComponents/trade_explanations/img-high-to-low.svg';\nimport ImageMatchDiff from 'Assets/SvgComponents/trade_explanations/img-match-diff.svg';\nimport ImageMultiplier from 'Assets/SvgComponents/trade_explanations/img-multiplier.svg';\nimport ImageOverUnder from 'Assets/SvgComponents/trade_explanations/img-over-under.svg';\nimport ImageReset from 'Assets/SvgComponents/trade_explanations/img-reset.svg';\nimport ImageRiseFall from 'Assets/SvgComponents/trade_explanations/img-rise-fall.svg';\nimport ImageRunHighLow from 'Assets/SvgComponents/trade_explanations/img-run-high-low.svg';\nimport ImageSpread from 'Assets/SvgComponents/trade_explanations/img-spread.svg';\nimport ImageTickHighLow from 'Assets/SvgComponents/trade_explanations/img-tick-high-low.svg';\nimport ImageTouch from 'Assets/SvgComponents/trade_explanations/img-touch.svg';\nimport ImageTurbos from 'Assets/SvgComponents/trade_explanations/img-turbos.svg';\nimport ContractTypeDescriptionVideo from './contract-type-description-video';\nimport { VANILLALONG, TURBOS } from '@deriv/shared';\n\n// TODO: Replace static image svgs with themed GIFs or animated SVGs\nconst TradeCategoriesGIF = ({\n    category,\n    selected_contract_type,\n}: {\n    category?: string;\n    selected_contract_type?: string;\n}) => {\n    if (category !== selected_contract_type) return null;\n    switch (category) {\n        case 'asian':\n            return <ImageAsianUpDown />;\n        case 'callputspread':\n            return <ImageSpread />;\n        case 'end':\n            return <ImageEndsInOut />;\n        case 'even_odd':\n            return <ImageEvenOdd />;\n        case 'high_low':\n            return <ImageHighLow />;\n        case 'lb_call':\n            return <ImageCloseToLow />;\n        case 'lb_put':\n            return <ImageHighToClose />;\n        case 'lb_high_low':\n            return <ImageHighToLow />;\n        case 'rise_fall':\n            return <ImageRiseFall />;\n        case 'rise_fall_equal':\n            return <ImageRiseFall />;\n        case 'match_diff':\n            return <ImageMatchDiff />;\n        case 'multiplier':\n            return <ImageMultiplier />;\n        case 'over_under':\n            return <ImageOverUnder />;\n        case 'reset':\n            return <ImageReset />;\n        case 'run_high_low':\n            return <ImageRunHighLow />;\n        case 'accumulator':\n            return <ContractTypeDescriptionVideo selected_contract_type={selected_contract_type} />;\n        case 'tick_high_low':\n            return <ImageTickHighLow />;\n        case 'touch':\n            return <ImageTouch />;\n        case TURBOS.LONG:\n        case TURBOS.SHORT:\n            return <ImageTurbos />;\n        case VANILLALONG.CALL:\n        case VANILLALONG.PUT:\n            return <ContractTypeDescriptionVideo selected_contract_type='vanilla' />;\n        default:\n            return null;\n    }\n};\n\nexport default TradeCategoriesGIF;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { VANILLALONG } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\nconst ContractTypeGlossary = ({ category }: { category: string }) => {\n    let content;\n    if (category) {\n        switch (category) {\n            case 'accumulator':\n                content = [\n                    { type: 'heading', text: localize('Growth rate') },\n                    {\n                        type: 'paragraph',\n                        text: localize('You can choose a growth rate with values of 1%, 2%, 3%, 4%, and 5%.'),\n                    },\n                    { type: 'heading', text: localize('Payout') },\n                    {\n                        type: 'paragraph',\n                        text: localize('Payout is the sum of your initial stake and profit.'),\n                    },\n                    { type: 'heading', text: localize('Range') },\n                    {\n                        type: 'paragraph',\n                        text: localize(\n                            'It is a percentage of the previous spot price. The percentage rate is based on your choice of the index and the growth rate.'\n                        ),\n                    },\n                    { type: 'heading', text: localize('Previous spot price') },\n                    {\n                        type: 'paragraph',\n                        text: localize('Spot price on the previous tick.'),\n                    },\n                    { type: 'heading', text: localize('Slippage risk') },\n                    {\n                        type: 'paragraph',\n                        text: localize(\n                            'The spot price may change by the time your order reaches our servers. When this happens, your payout may be affected.'\n                        ),\n                    },\n                ];\n                break;\n            case VANILLALONG.CALL:\n            case VANILLALONG.PUT:\n                content = [\n                    { type: 'heading', text: localize('Payout') },\n                    {\n                        type: 'paragraph',\n                        text: localize(\n                            'Your payout is equal to the payout per point multiplied by the difference between the final price and the strike price.'\n                        ),\n                    },\n                    { type: 'heading', text: localize('Final price') },\n                    {\n                        type: 'paragraph',\n                        text: localize('This is the spot price of the last tick at expiry.'),\n                    },\n                    { type: 'heading', text: localize('Strike price') },\n                    {\n                        type: 'paragraph',\n                        text: localize('You must select the strike price before entering the contract.'),\n                    },\n                    {\n                        type: 'list',\n                        text: [\n                            localize(\n                                'If you select \"Call\", you’ll earn a payout if the final price is above the strike price at expiry. Otherwise, you won’t receive a payout.'\n                            ),\n                            localize(\n                                'If you select \"Put\", you’ll earn a payout if the final price is below the strike price at expiry. Otherwise, you won’t receive a payout.'\n                            ),\n                        ],\n                    },\n                    { type: 'heading', text: localize('Expiry') },\n                    {\n                        type: 'paragraph',\n                        text: localize(\n                            'This is when your contract will expire based on the Duration or End time you’ve selected.'\n                        ),\n                    },\n                    {\n                        type: 'list',\n                        text: [\n                            localize(\n                                'If the duration is more than 24 hours, the Cut-off time and Expiry date will apply instead.'\n                            ),\n                        ],\n                    },\n                    { type: 'heading', text: localize('Payout per point') },\n                    {\n                        type: 'paragraph',\n                        text: localize('We calculate this based on the strike price and duration you’ve selected.'),\n                    },\n                    { type: 'heading', text: localize('Contract value') },\n                    {\n                        type: 'paragraph',\n                        text: localize(\n                            'We’ll offer to buy your contract at this price should you choose to sell it before its expiry. This is based on several factors, such as the current spot price, duration, etc. However, we won’t offer a contract value if the remaining duration is below 60 seconds.'\n                        ),\n                    },\n                    { type: 'heading', text: localize('Cut-off time') },\n                    {\n                        type: 'paragraph',\n                        text: localize('Contracts will expire at exactly 23:59:59 GMT on your selected expiry date.'),\n                    },\n                    { type: 'heading', text: localize('Expiry date') },\n                    {\n                        type: 'paragraph',\n                        text: localize(\n                            'Your contract will expire on this date (in GMT), based on the End time you’ve selected.'\n                        ),\n                    },\n                ];\n                break;\n            default:\n                content = [];\n                break;\n        }\n    }\n    return (\n        <React.Fragment>\n            {content?.map(({ type, text }: { type: string; text: string | string[] }) => {\n                if (type === 'heading' && typeof text === 'string') {\n                    return (\n                        <Text\n                            as='h2'\n                            key={text.substring(0, 10)}\n                            weight='bold'\n                            className='contract-type-info__content-glossary--heading'\n                        >\n                            {text}\n                        </Text>\n                    );\n                }\n                if (type === 'paragraph' && typeof text === 'string') {\n                    return (\n                        <Text as='p' key={text.substring(0, 10)}>\n                            {text}\n                        </Text>\n                    );\n                }\n                if (type === 'list' && typeof text !== 'string') {\n                    return (\n                        <ul key={text[0].substring(0, 15)}>\n                            {text.map(list_item_text => (\n                                <li key={list_item_text.substring(0, 20)}>{list_item_text}</li>\n                            ))}\n                        </ul>\n                    );\n                }\n                return null;\n            })}\n        </React.Fragment>\n    );\n};\n\nexport default ContractTypeGlossary;\n","import React from 'react';\nimport { Button, ThemedScrollbars, ButtonToggle } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { TURBOS, VANILLALONG } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { RudderStack } from '@deriv/analytics';\nimport TradeCategories from 'Assets/Trading/Categories/trade-categories';\nimport TradeCategoriesGIF from 'Assets/Trading/Categories/trade-categories-gif';\nimport { getContractTypes } from '../../../../Helpers/contract-type';\nimport ContractTypeGlossary from './contract-type-glossary';\nimport classNames from 'classnames';\nimport { TContractType, TList } from '../types';\n\ntype TInfo = {\n    handleSelect: (\n        type: TContractType,\n        e: React.MouseEvent<HTMLDivElement | HTMLButtonElement | HTMLInputElement>\n    ) => void;\n    item: TContractType;\n    list: TList[];\n};\n\nconst TABS = {\n    DESCRIPTION: 'description',\n    GLOSSARY: 'glossary',\n};\n\nconst Info = observer(({ handleSelect, item, list }: TInfo) => {\n    const {\n        ui: { is_mobile },\n    } = useStore();\n    const [selected_tab, setSelectedTab] = React.useState(TABS.DESCRIPTION);\n    const contract_types: TContractType[] | undefined = getContractTypes(list, item)?.filter(\n        (i: { value: TContractType['value'] }) =>\n            i.value !== 'rise_fall_equal' && i.value !== TURBOS.SHORT && i.value !== VANILLALONG.PUT\n    );\n    const has_toggle_buttons = /accumulator|vanilla/i.test(item.value);\n    const should_show_video = /accumulator|vanilla/i.test(item.value);\n    const is_description_tab_selected = selected_tab === TABS.DESCRIPTION;\n    const is_glossary_tab_selected = selected_tab === TABS.GLOSSARY;\n    const width = is_mobile ? '328' : '528';\n    const scroll_bar_height = has_toggle_buttons ? '464px' : '560px';\n    const onClickGlossary = () => setSelectedTab(TABS.GLOSSARY);\n\n    React.useEffect(() => {\n        return () => {\n            RudderStack.track('ce_trade_types_form', {\n                action: 'info_close',\n            });\n        };\n    }, []);\n\n    React.useEffect(() => {\n        if (has_toggle_buttons) {\n            RudderStack.track('ce_trade_types_form', {\n                action: 'info_switcher',\n                info_switcher_mode: selected_tab,\n                trade_type_name: item?.text,\n            });\n        }\n    }, [selected_tab]);\n\n    const cards = contract_types?.map((type: TContractType) => {\n        if (type.value !== item.value) return null;\n        return (\n            <div key={type.value} className='contract-type-info__card'>\n                <ThemedScrollbars\n                    className={classNames('contract-type-info__scrollbars', {\n                        'contract-type-info__scrollbars-description--active': is_description_tab_selected,\n                        'contract-type-info__scrollbars-glossary contract-type-info__scrollbars-glossary--active ':\n                            is_glossary_tab_selected,\n                    })}\n                    style={{\n                        left: `${is_description_tab_selected ? '-' : ''}${width}px`,\n                        transform: `translate3d(${is_description_tab_selected ? '' : '-'}${width}px, 0, 0)`,\n                    }}\n                    height={is_mobile ? '' : scroll_bar_height}\n                    autohide={false}\n                >\n                    <div\n                        className={classNames('contract-type-info__content', {\n                            'contract-type-info__gif': is_description_tab_selected,\n                            'contract-type-info__gif--has-toggle-buttons': has_toggle_buttons,\n                            'contract-type-info__gif--has-video': should_show_video && is_description_tab_selected,\n                        })}\n                    >\n                        {is_description_tab_selected ? (\n                            <React.Fragment>\n                                <TradeCategoriesGIF category={type.value} selected_contract_type={item?.value} />\n                                <TradeCategories category={type.value} onClick={onClickGlossary} />\n                            </React.Fragment>\n                        ) : (\n                            <ContractTypeGlossary category={type.value} />\n                        )}\n                    </div>\n                </ThemedScrollbars>\n            </div>\n        );\n    });\n\n    return (\n        <React.Fragment>\n            {has_toggle_buttons && (\n                <div className='contract-type-info__button-wrapper'>\n                    <ButtonToggle\n                        buttons_arr={[\n                            { text: localize('Description'), value: TABS.DESCRIPTION },\n                            { text: localize('Glossary'), value: TABS.GLOSSARY },\n                        ]}\n                        name='description_glossary_filter'\n                        is_animated\n                        has_rounded_button\n                        onChange={e => {\n                            setSelectedTab(e.target.value);\n                        }}\n                        value={selected_tab}\n                    />\n                </div>\n            )}\n            <div\n                className={classNames('contract-type-info', {\n                    'contract-type-info--has-toggle-buttons': has_toggle_buttons,\n                })}\n                style={{\n                    width: is_mobile ? '328px' : '528px',\n                }}\n            >\n                {cards}\n            </div>\n            <div className='contract-type-info__trade-type-btn-wrapper'>\n                <Button\n                    id={`dt_contract_info_${item?.value}_btn`}\n                    className='contract-type-info__button'\n                    onClick={e => handleSelect(item, e)}\n                    text={localize('Choose {{contract_type}}', {\n                        contract_type: item?.text,\n                        interpolation: { escapeValue: false },\n                    })}\n                    secondary\n                />\n            </div>\n        </React.Fragment>\n    );\n});\n\nexport default Info;\n","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\n\ntype THeader = {\n    onClickGoBack?: () => void;\n    text_size?: string;\n    title: string;\n};\n\nconst Header = ({ onClickGoBack, text_size = 's', title }: THeader) => (\n    <div className='contract-type-info__action-bar'>\n        <span className='contract-type-info__icon' id='dt_contract_info_back_nav' onClick={onClickGoBack}>\n            <Icon icon='IcArrowLeftBold' />\n        </span>\n        <Text size={text_size} weight='bold' color='prominent' className='contract-type-info__title'>\n            {title}\n        </Text>\n    </div>\n);\n\nexport default Header;\n","import Info from './contract-type-info';\n\nexport { default as Header } from './contract-type-info-header';\n\nexport default Info;\n","import React from 'react';\nimport { Icon, Input } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\ntype TSearchInput = {\n    onChange: React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement | null>;\n    onBlur: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement | null> | undefined;\n    onClickClearInput: () => void;\n    value: string;\n};\n\nconst SearchInput = React.forwardRef<HTMLInputElement & HTMLTextAreaElement, TSearchInput>(\n    ({ onChange, onClickClearInput, onBlur, value }, ref) => (\n        <Input\n            ref={ref}\n            data-lpignore='true'\n            leading_icon={<Icon icon='IcSearch' />}\n            trailing_icon={value ? <Icon icon='IcCloseCircle' onClick={onClickClearInput} /> : undefined}\n            placeholder={localize('Search')}\n            type='text'\n            onChange={onChange}\n            onBlur={onBlur}\n            value={value}\n        />\n    )\n);\n\nSearchInput.displayName = 'SearchInput';\n\nexport default React.memo(SearchInput);\n","import React from 'react';\nimport { localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst NoResultsMessage = ({ text }: { text: string }) => (\n    <div className='no-results-found'>\n        <h2 className='no-results-found__title'>\n            {localize('No results for \"{{text}}\"', { text, interpolation: { escapeValue: false } })}\n        </h2>\n        <Text as='p' size='xxs' align='center' color='less-prominent' className='no-results-found__subtitle'>\n            {localize('Try checking your spelling or use a different term')}\n        </Text>\n    </div>\n);\n\nexport default NoResultsMessage;\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Loading, ThemedScrollbars, VerticalTab } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport SearchInput from './search-input';\nimport NoResultsMessage from './no-results-message';\nimport { Header } from '../ContractTypeInfo/index.js';\nimport { getContractCategoryKey } from '../../../../Helpers/contract-type';\nimport { TList } from '../types';\nimport ContractType from '../contract-type';\n\ntype TDialog = {\n    categories: TList[];\n    item: React.ComponentProps<typeof ContractType.Info>['item'];\n    selected?: string;\n    children?: React.ReactNode;\n    is_info_dialog_open?: boolean;\n    is_open?: boolean;\n    onBackButtonClick?: () => void;\n    onCategoryClick?: (e: React.ComponentProps<typeof VerticalTab.Headers>['selected']) => void;\n    onChangeInput?: (e: string) => void;\n    onSearchBlur?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement | null>;\n    show_loading?: boolean;\n};\n\nconst Dialog = ({\n    categories,\n    children,\n    is_info_dialog_open,\n    is_open,\n    item,\n    onBackButtonClick,\n    onCategoryClick,\n    onChangeInput,\n    onSearchBlur,\n    selected,\n    show_loading,\n}: React.PropsWithChildren<TDialog>) => {\n    const input_ref = React.useRef<(HTMLInputElement & HTMLTextAreaElement) | null>(null);\n    const [input_value, setInputValue] = React.useState('');\n    const contract_category = getContractCategoryKey(categories, item);\n    const selected_item = selected ? { key: selected } : { key: contract_category };\n    const selected_category_contract = !categories?.find(category => category.key === selected_item.key)\n        ?.contract_categories?.length;\n    const onChange: React.ComponentProps<typeof VerticalTab.Headers>['onChange'] = e => {\n        if (is_info_dialog_open) {\n            onBackButtonClick?.();\n        }\n        if (input_value) {\n            onClickClearInput();\n        }\n        if (onCategoryClick) {\n            onCategoryClick(e);\n        }\n    };\n\n    const onChangeInputValue = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setInputValue(e.target.value);\n        onChangeInput?.(e.target.value);\n    };\n\n    const onClickClearInput = () => {\n        input_ref?.current?.focus();\n        setInputValue('');\n        onChangeInput?.('');\n    };\n\n    const renderChildren = () => {\n        if (!is_info_dialog_open) {\n            return <ThemedScrollbars height='calc(100vh - 172px)'>{children}</ThemedScrollbars>;\n        }\n        return children;\n    };\n    const action_bar_item = (\n        <SearchInput\n            ref={input_ref}\n            onChange={onChangeInputValue}\n            onClickClearInput={onClickClearInput}\n            onBlur={onSearchBlur}\n            value={input_value}\n        />\n    );\n    return (\n        <CSSTransition\n            in={is_open}\n            timeout={100}\n            classNames={{\n                enter: 'contract-type-dialog--enter',\n                enterDone: 'contract-type-dialog--enterDone',\n                exit: 'contract-type-dialog--exit',\n            }}\n            unmountOnExit\n        >\n            <div className='contract-type-dialog' data-testid='dt_contract_wrapper'>\n                <div className='contract-type-dialog__wrapper'>\n                    {show_loading ? (\n                        <Loading is_fullscreen={false} />\n                    ) : (\n                        <React.Fragment>\n                            {!is_info_dialog_open ? (\n                                <VerticalTab.Layout>\n                                    <VerticalTab.Headers\n                                        header_title={localize('Trade types')}\n                                        items={categories}\n                                        selected={selected_item}\n                                        onChange={onChange}\n                                        selectedKey='key'\n                                    />\n\n                                    <div className='dc-vertical-tab__content'>\n                                        <div className='dc-vertical-tab__action-bar'>{action_bar_item}</div>\n                                        <div className='dc-vertical-tab__content-container'>\n                                            {selected_category_contract && <NoResultsMessage text={input_value} />}\n                                            {renderChildren()}\n                                        </div>\n                                    </div>\n                                </VerticalTab.Layout>\n                            ) : (\n                                <React.Fragment>\n                                    <div className='dc-vertical-tab__action-bar dc-vertical-tab__action-bar--contract-type-info-header'>\n                                        <Header title={item.text || ''} onClickGoBack={onBackButtonClick} />\n                                    </div>\n                                    {renderChildren()}\n                                </React.Fragment>\n                            )}\n                        </React.Fragment>\n                    )}\n                </div>\n            </div>\n        </CSSTransition>\n    );\n};\n\nexport default Dialog;\n","import Dialog from './contract-type-menu';\n\nexport default Dialog;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Icon } from '@deriv/components';\nimport { VANILLALONG, TURBOS } from '@deriv/shared';\n\ntype TIconTradeCategory = {\n    category: string;\n    className?: string;\n};\n\nconst IconTradeCategory = ({ category, className }: TIconTradeCategory) => {\n    let IconCategory;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeCall' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypePut' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'rise_fall_equal':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeCall' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypePut' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeCallBarrier' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypePutBarrier' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeExpirymiss' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeExpiryrange' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeRange' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeUpordown' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigitmatch' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigitdiff' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigiteven' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigitodd' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigitover' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigitunder' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeOnetouch' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeNotouch' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeAsianu' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeAsiand' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_call':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <Icon icon='IcTradetypeLbcall' className='category-type' color='brand' />\n                    </div>\n                );\n                break;\n            case 'lb_put':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <Icon icon='IcTradetypeLbput' className='category-type' color='brand' />\n                    </div>\n                );\n                break;\n            case 'lb_high_low':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <Icon icon='IcTradetypeLbhighlow' className='category-type' color='brand' />\n                    </div>\n                );\n                break;\n            case 'run_high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeRunhigh' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeRunlow' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'reset':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeResetcall' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeResetput' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'tick_high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeTickhigh' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeTicklow' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'callputspread':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeCallspread' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypePutspread' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'multiplier':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeMultup' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeMultdown' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'accumulator':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <Icon icon='IcTradetypeAccu' className='category-type' color='brand' />\n                    </div>\n                );\n                break;\n            case TURBOS.LONG:\n            case TURBOS.SHORT:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeTurboslong' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeTurbosshort' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case VANILLALONG.CALL:\n            case VANILLALONG.PUT:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeVanillaLongCall' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeVanillaLongPut' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            default:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <Icon icon='IcUnknown' className='category-type' color='brand' />\n                    </div>\n                );\n                break;\n        }\n    }\n    return (\n        <div className={classNames('categories-container', className)} data-testid='dt-categories-container'>\n            {IconCategory}\n        </div>\n    );\n};\n\nexport default IconTradeCategory;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Icon, DesktopWrapper } from '@deriv/components';\nimport IconTradeCategory from 'Assets/Trading/Categories/icon-trade-categories';\nimport { findContractCategory } from '../../../Helpers/contract-type';\nimport { TContractCategory, TContractType, TList } from './types';\n\ntype TDisplay = {\n    is_open: boolean;\n    name: string;\n    list: TContractCategory[];\n    onClick: () => void;\n    value: string;\n};\n\nconst Display = ({ is_open, name, list, onClick, value }: TDisplay) => {\n    const getDisplayText = () =>\n        findContractCategory(list as unknown as TList[], { value })?.contract_types?.find(\n            (item: TContractType) => item.value === value\n        )?.text;\n\n    return (\n        <div\n            data-testid='dt_contract_dropdown'\n            className={classNames('contract-type-widget__display', {\n                'contract-type-widget__display--clicked': is_open,\n            })}\n            onClick={onClick}\n        >\n            <IconTradeCategory category={value} className='contract-type-widget__icon-wrapper' />\n            <span data-name={name} data-value={value}>\n                {getDisplayText()}\n            </span>\n            <DesktopWrapper>\n                <Icon\n                    icon='IcChevronDown'\n                    className={classNames(\n                        'contract-type-widget__select-arrow',\n                        'contract-type-widget__select-arrow--left'\n                    )}\n                />\n            </DesktopWrapper>\n        </div>\n    );\n};\n\nexport default Display;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport IconTradeCategory from 'Assets/Trading/Categories/icon-trade-categories';\nimport { TContractType } from './types';\n\ntype TItem = {\n    contract_types: TContractType[];\n    handleInfoClick?: (clicked_item: TContractType) => void;\n    handleSelect?: (clicked_item: TContractType, e: React.MouseEvent<HTMLDivElement>) => void;\n    value?: string;\n};\n\nconst Item = ({ contract_types, handleInfoClick, handleSelect, value }: TItem) => (\n    <React.Fragment>\n        {contract_types.map(type => (\n            <div\n                id={`dt_contract_${type.value}_item`}\n                data-testid='dt_contract_item'\n                key={type.value}\n                className={classNames('contract-type-item', {\n                    'contract-type-item--selected': value === type.value || value?.includes(type.value),\n                })}\n                onClick={e => handleSelect?.(type, e)}\n            >\n                <IconTradeCategory category={type.value} className='contract-type-item__icon-wrapper' />\n                <Text size='xs' className='contract-type-item__title'>\n                    {type.text}\n                </Text>\n                <div id='info-icon' className='contract-type-item__icon' onClick={() => handleInfoClick?.(type)}>\n                    <Icon icon='IcInfoOutline' />\n                </div>\n            </div>\n        ))}\n    </React.Fragment>\n);\n\nexport default Item;\n","import React from 'react';\nimport Item from './contract-type-item';\nimport { localize } from '@deriv/translations';\nimport { TURBOS, VANILLALONG } from '@deriv/shared';\nimport { Text } from '@deriv/components';\nimport classNames from 'classnames';\nimport { TContractType, TContractCategory } from './types';\n\ntype TListProps = {\n    handleInfoClick?: (clicked_item: TContractType) => void;\n    handleSelect?: (\n        clicked_item: TContractType,\n        e: React.MouseEvent<HTMLDivElement | HTMLButtonElement | HTMLInputElement>\n    ) => void;\n    list: TContractCategory[];\n    value?: string;\n};\n\nconst List = ({ handleInfoClick, handleSelect, list, value }: TListProps) => (\n    <React.Fragment>\n        {list.map(contract_category => {\n            const contract_types = contract_category.contract_types?.filter(contract_type => {\n                const base_contract_type = /^(.*)_equal$/.exec(contract_type.value)?.[1];\n                if (contract_type.value === TURBOS.SHORT || contract_type.value === VANILLALONG.PUT) return false;\n                if (base_contract_type) {\n                    return !contract_category.contract_types.some(c => c.value === base_contract_type);\n                }\n\n                return true;\n            });\n            const is_new = /(Accumulators|Turbos|Vanillas)/i.test(contract_category.key);\n\n            return (\n                <div key={contract_category.key} className='contract-type-list' data-testid='contract_list'>\n                    <div className='contract-type-item__container'>\n                        <Text size='xs' className='contract-type-list__label'>\n                            {contract_category.label}\n                        </Text>\n                        {is_new && (\n                            <span className={classNames('dc-vertical-tab__header--new', 'contract-type-item__new')}>\n                                {localize('NEW!')}\n                            </span>\n                        )}\n                    </div>\n                    <div className='contract-type-list__wrapper'>\n                        <Item\n                            contract_types={contract_types}\n                            handleSelect={handleSelect}\n                            handleInfoClick={handleInfoClick}\n                            value={value}\n                        />\n                    </div>\n                </div>\n            );\n        })}\n        ;\n    </React.Fragment>\n);\n\nexport default List;\n","import React from 'react';\nimport Dialog from './contract-type-dialog';\nimport Display from './contract-type-display';\nimport List from './contract-type-list';\nimport Info from './ContractTypeInfo';\n\nconst ContractType = ({ children }: React.PropsWithChildren<{ children: React.ReactNode }>) => <>{children}</>;\n\nContractType.Dialog = Dialog;\nContractType.Display = Display;\nContractType.List = List;\nContractType.Info = Info;\n\nexport default ContractType;\n","import React from 'react';\nimport { DesktopWrapper, MobileDialog, MobileWrapper } from '@deriv/components';\nimport { Header } from './ContractTypeInfo';\nimport { localize } from '@deriv/translations';\nimport ContractTypeMenu from './ContractTypeMenu';\n\ntype TContractTypeDialog = {\n    is_info_dialog_open: boolean;\n    onClose: React.ComponentProps<typeof MobileDialog>['onClose'];\n    is_open: boolean;\n};\n\ntype TContractTypeDialogProps = Pick<\n    React.ComponentProps<typeof ContractTypeMenu>,\n    | 'selected'\n    | 'categories'\n    | 'onBackButtonClick'\n    | 'onChangeInput'\n    | 'onCategoryClick'\n    | 'onSearchBlur'\n    | 'show_loading'\n    | 'item'\n> &\n    TContractTypeDialog;\n\nconst ContractTypeDialog = ({\n    categories,\n    children,\n    is_info_dialog_open,\n    is_open,\n    item,\n    selected,\n    onBackButtonClick,\n    onCategoryClick,\n    onChangeInput,\n    onClose,\n    onSearchBlur,\n    show_loading,\n}: React.PropsWithChildren<TContractTypeDialogProps>) => {\n    const current_mobile_title = is_info_dialog_open ? (\n        <Header title={item?.text || ''} onClickGoBack={onBackButtonClick} text_size='xs' />\n    ) : (\n        localize('Trade types')\n    );\n    return (\n        <React.Fragment>\n            <MobileWrapper>\n                <span className='contract-type-widget__select-arrow' />\n                <MobileDialog\n                    portal_element_id='modal_root'\n                    title={current_mobile_title}\n                    header_classname='contract-type-widget__header'\n                    wrapper_classname={is_info_dialog_open ? 'contracts-modal-info' : 'contracts-modal-list'}\n                    visible={is_open}\n                    onClose={onClose}\n                    has_content_scroll={!is_info_dialog_open}\n                >\n                    {children}\n                </MobileDialog>\n            </MobileWrapper>\n            <DesktopWrapper>\n                <ContractTypeMenu\n                    is_info_dialog_open={is_info_dialog_open}\n                    is_open={is_open}\n                    item={item}\n                    selected={selected}\n                    categories={categories}\n                    onSearchBlur={onSearchBlur}\n                    onBackButtonClick={onBackButtonClick}\n                    onChangeInput={onChangeInput}\n                    onCategoryClick={onCategoryClick}\n                    show_loading={show_loading}\n                >\n                    {children}\n                </ContractTypeMenu>\n            </DesktopWrapper>\n        </React.Fragment>\n    );\n};\n\nexport default ContractTypeDialog;\n","import React from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { RudderStack } from '@deriv/analytics';\nimport ContractType from './contract-type';\nimport { getContractTypeCategoryIcons, findContractCategory } from '../../../Helpers/contract-type';\nimport { TContractCategory, TContractType, TList } from './types';\n\ntype TContractTypeWidget = {\n    name: string;\n    value: TContractType['value'];\n    list: TContractCategory[];\n    onChange: (e: {\n        target: {\n            name: string;\n            value: unknown;\n        };\n    }) => Promise<void>;\n    languageChanged?: boolean;\n};\n\nconst ContractTypeWidget = observer(({ name, value, list, onChange, languageChanged }: TContractTypeWidget) => {\n    const {\n        ui: { is_mobile },\n    } = useStore();\n    const wrapper_ref = React.useRef<HTMLDivElement | null>(null);\n    const [is_dialog_open, setDialogVisibility] = React.useState<boolean | null>();\n    const [is_info_dialog_open, setInfoDialogVisibility] = React.useState(false);\n    const [selected_category, setSelectedCategory] = React.useState<TList['key']>('All');\n    const [search_query, setSearchQuery] = React.useState('');\n    const [item, setItem] = React.useState<TContractType | null>(null);\n\n    const handleClickOutside = React.useCallback(\n        (event: MouseEvent) => {\n            if (is_mobile) return;\n            if (wrapper_ref && !wrapper_ref.current?.contains(event.target as Node) && is_dialog_open) {\n                setDialogVisibility(false);\n                setInfoDialogVisibility(false);\n                setItem({ ...item, value });\n            }\n        },\n        [item, value, is_mobile]\n    );\n\n    React.useEffect(() => {\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, [handleClickOutside]);\n\n    React.useEffect(() => {\n        if (typeof is_dialog_open === 'boolean') {\n            RudderStack.track('ce_trade_types_form', {\n                action: is_dialog_open ? 'open' : 'close',\n                form_source: 'contract_set_up_form',\n                form_name: 'default',\n            });\n        }\n    }, [is_dialog_open]);\n\n    const handleCategoryClick: React.ComponentProps<typeof ContractType.Dialog>['onCategoryClick'] = ({ key }) => {\n        if (key) setSelectedCategory(key);\n    };\n\n    const handleSelect = (\n        clicked_item: TContractType,\n        e: React.MouseEvent<HTMLDivElement | HTMLButtonElement | HTMLInputElement>\n    ) => {\n        const categories = list_with_category();\n        const { key } = findContractCategory(categories, clicked_item);\n        if ('id' in e.target && e.target.id !== 'info-icon' && clicked_item) {\n            const is_from_info_dialog = /_btn$/.test(e.target.id as string);\n            const subform_name = is_from_info_dialog ? 'info_new' : 'trade_type';\n\n            setDialogVisibility(false);\n            setInfoDialogVisibility(false);\n            setItem(clicked_item);\n            setSelectedCategory(key);\n\n            onChange({ target: { name, value: clicked_item.value } });\n\n            if (subform_name === 'trade_type') {\n                RudderStack.track('ce_trade_types_form', {\n                    action: 'choose_trade_type',\n                    subform_name,\n                    tab_name: selected_category,\n                    trade_type_name: clicked_item?.text,\n                    form_name: 'default',\n                });\n            } else {\n                RudderStack.track('ce_trade_types_form', {\n                    action: 'choose_trade_type',\n                    subform_name,\n                    trade_type_name: clicked_item?.text,\n                    form_name: 'default',\n                });\n            }\n        }\n    };\n\n    const handleInfoClick = (clicked_item: TContractType) => {\n        setInfoDialogVisibility(!is_info_dialog_open);\n        setItem(clicked_item);\n\n        RudderStack.track('ce_trade_types_form', {\n            action: 'info_open',\n            tab_name: selected_category,\n            trade_type_name: clicked_item?.text,\n        });\n    };\n\n    const handleVisibility = () => {\n        setDialogVisibility(!is_dialog_open);\n    };\n\n    const onSearchBlur = () => {\n        if (search_query) {\n            RudderStack.track('ce_trade_types_form', {\n                action: 'search',\n                search_string: search_query,\n            });\n        }\n    };\n\n    const onWidgetClick = () => {\n        setDialogVisibility(!is_dialog_open);\n        setInfoDialogVisibility(false);\n        setItem({ ...item, value });\n    };\n\n    const onBackButtonClick = () => {\n        setInfoDialogVisibility(false);\n        setItem({ ...item, value });\n    };\n\n    const onChangeInput = (searchQueryItem: string) => setSearchQuery(searchQueryItem);\n\n    const list_with_category = () => {\n        const contract_type_category_icon: { [key: string]: string } = getContractTypeCategoryIcons();\n        const order_arr = [\n            'Accumulators',\n            'Vanillas',\n            'Turbos',\n            'Multipliers',\n            'Ups & Downs',\n            'Highs & Lows',\n            'Digits',\n        ];\n        const ordered_list = list?.sort((a, b) => order_arr.indexOf(a.key) - order_arr.indexOf(b.key));\n        const accumulators_category = ordered_list?.filter(({ label }) => label === localize('Accumulators'));\n        const multipliers_category = ordered_list?.filter(({ label }) => label === localize('Multipliers'));\n        const options_category = ordered_list?.filter(\n            ({ label }) => label !== localize('Multipliers') && label !== localize('Accumulators')\n        );\n\n        const categories: TList[] = [];\n\n        if (list && list.length > 0) {\n            categories.push({\n                label: localize('All'),\n                contract_categories: [...list],\n                key: 'All',\n                icon: '',\n            });\n        }\n\n        if (multipliers_category && multipliers_category.length > 0) {\n            categories.push({\n                label: localize('Multipliers'),\n                contract_categories: multipliers_category,\n                key: 'Multipliers',\n                icon: '',\n            });\n        }\n\n        if (options_category && options_category.length > 0) {\n            categories.push({\n                label: localize('Options'),\n                contract_categories: options_category,\n                component: options_category.some(category => /Vanillas|Turbos/i.test(category.key)) ? (\n                    <span className='dc-vertical-tab__header--new'>{localize('NEW')}!</span>\n                ) : null,\n                key: 'Options',\n                icon: '',\n            });\n        }\n\n        if (accumulators_category && accumulators_category.length > 0) {\n            categories.push({\n                label: localize('Accumulators'),\n                contract_categories: accumulators_category,\n                component: <span className='dc-vertical-tab__header--new'>{localize('NEW')}!</span>,\n                key: 'Accumulators',\n                icon: '',\n            });\n        }\n\n        return categories.map(contract_category => {\n            const contract_types = contract_category?.contract_categories?.reduce<TContractType[]>(\n                (prev, current) => [...prev, ...current.contract_types],\n                []\n            );\n\n            const icon = contract_category.key\n                ? contract_type_category_icon[contract_category.key]\n                : contract_category.icon;\n\n            let contract_categories = contract_category.contract_categories;\n\n            if (search_query) {\n                contract_categories = contract_category?.contract_categories\n                    ?.filter(category =>\n                        category.contract_types.find(type =>\n                            type.text?.toLowerCase().includes(search_query.toLowerCase())\n                        )\n                    )\n                    .map(category => ({\n                        ...category,\n                        contract_types: category.contract_types.filter(type =>\n                            type.text?.toLowerCase().includes(search_query.toLowerCase())\n                        ),\n                    }));\n            }\n\n            return {\n                ...contract_category,\n                contract_types,\n                icon,\n                contract_categories,\n            };\n        });\n    };\n\n    const selected_category_contracts = () => {\n        const selected_list_category = list_with_category()?.find(\n            categoryItem => categoryItem.key === selected_category\n        );\n        return (selected_list_category || list_with_category()[0]).contract_categories;\n    };\n\n    return (\n        <div\n            data-testid='dt_contract_widget'\n            id='dt_contract_dropdown'\n            className={`contract-type-widget contract-type-widget--${value} dropdown--left`}\n            ref={wrapper_ref}\n            tabIndex={0}\n        >\n            <ContractType.Display\n                is_open={is_dialog_open || is_info_dialog_open}\n                list={list}\n                name={name ?? ''}\n                onClick={onWidgetClick}\n                value={value}\n            />\n            <ContractType.Dialog\n                is_info_dialog_open={is_info_dialog_open}\n                is_open={!!is_dialog_open}\n                item={item || { value }}\n                categories={list_with_category()}\n                selected={selected_category || list_with_category()[0]?.key}\n                onBackButtonClick={onBackButtonClick}\n                onSearchBlur={onSearchBlur}\n                onClose={handleVisibility}\n                onChangeInput={onChangeInput}\n                onCategoryClick={handleCategoryClick}\n                show_loading={languageChanged}\n            >\n                {is_info_dialog_open ? (\n                    <ContractType.Info\n                        handleSelect={handleSelect}\n                        item={item || { value }}\n                        list={list_with_category()}\n                    />\n                ) : (\n                    <ContractType.List\n                        handleInfoClick={handleInfoClick}\n                        handleSelect={handleSelect}\n                        list={selected_category_contracts() as TContractCategory[]}\n                        value={value}\n                    />\n                )}\n            </ContractType.Dialog>\n        </div>\n    );\n});\n\nexport default ContractTypeWidget;\n","import ContractTypeWidget from './contract-type-widget';\n\nexport default ContractTypeWidget;\n","import React from 'react';\nimport { MobileWrapper, usePrevious } from '@deriv/components';\nimport { getMarketNamesMap, unsupported_contract_types_list } from '@deriv/shared';\nimport { isDigitTradeType } from 'Modules/Trading/Helpers/digits';\nimport { localize } from '@deriv/translations';\nimport { ToastPopup } from 'Modules/Trading/Containers/toast-popup';\nimport ContractTypeWidget from '../Components/Form/ContractType';\nimport { getAvailableContractTypes } from '../Helpers/contract-type';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\nconst Contract = observer(() => {\n    const {\n        contract_type,\n        contract_types_list,\n        is_mobile_digit_view_selected: is_digit_view,\n        onChange,\n        symbol,\n    } = useTraderStore();\n    const {\n        common: { current_language },\n    } = useStore();\n\n    const list = getAvailableContractTypes(\n        contract_types_list as unknown as Parameters<typeof getAvailableContractTypes>[0],\n        unsupported_contract_types_list\n    );\n    const digits_message = localize('Last digit stats for latest 1000 ticks for {{ underlying_name }}', {\n        underlying_name: getMarketNamesMap()[symbol.toUpperCase() as keyof ReturnType<typeof getMarketNamesMap>],\n    });\n    const prev_lang = usePrevious(current_language);\n    return (\n        <React.Fragment>\n            <MobileWrapper>\n                {isDigitTradeType(contract_type) && (\n                    <ToastPopup className='digits__toast-info' is_open={is_digit_view} type='info' timeout={3000}>\n                        {digits_message}\n                    </ToastPopup>\n                )}\n            </MobileWrapper>\n            <ContractTypeWidget\n                list={list}\n                name='contract_type'\n                onChange={onChange}\n                value={contract_type}\n                languageChanged={!!(prev_lang && prev_lang !== current_language)}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default Contract;\n","import React from 'react';\nimport { getCardLabels, isValidToSell } from '@deriv/shared';\nimport { Button, Money, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport { observer, useStore } from '@deriv/stores';\nimport { TContractInfo } from '@deriv/shared/src/utils/contract/contract-types';\n\ntype TAccumSellButton = {\n    contract_info?: TContractInfo;\n    current_stake: number | null;\n    currency?: string;\n    is_disabled: boolean;\n    is_sell_requested?: boolean;\n    onClick: (e: React.MouseEvent<HTMLElement>) => void;\n};\nconst AccumulatorsSellButton = observer(\n    ({ contract_info, current_stake, currency, is_disabled, is_sell_requested, onClick }: TAccumSellButton) => {\n        const { ui } = useStore();\n        const { is_dark_mode_on } = ui;\n        const is_valid_to_sell = contract_info && isValidToSell(contract_info);\n        return (\n            <Fieldset className='trade-container__fieldset purchase-container__sell-button'>\n                <Button\n                    className='dc-btn--sell dc-btn__large'\n                    is_disabled={is_disabled || !is_valid_to_sell || is_sell_requested}\n                    onClick={onClick}\n                    secondary\n                >\n                    <span className='purchase-container__sell-button__stake'>{getCardLabels().SELL}</span>\n                    {current_stake && <Money amount={current_stake} currency={currency} show_currency />}\n                </Button>\n                <Text\n                    size='xxxs'\n                    line_height='s'\n                    as='p'\n                    color={is_dark_mode_on ? 'less-prominent' : 'disabled'}\n                    className='purchase-container__notification'\n                >\n                    <Localize\n                        i18n_default_text='<0>Note:</0> You can close your trade anytime. Be aware of slippage risk.'\n                        components={[\n                            <Text\n                                key={0}\n                                weight='bold'\n                                size='xxxs'\n                                line_height='s'\n                                color={is_dark_mode_on ? 'less-prominent' : 'disabled'}\n                            />,\n                        ]}\n                    />\n                </Text>\n            </Fieldset>\n        );\n    }\n);\n\nexport default AccumulatorsSellButton;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Money } from '@deriv/components';\nimport { isDesktop, isMobile, getDecimalPlaces } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { TProposalTypeInfo } from 'Types';\n\nconst CancelDealInfo = observer(({ proposal_info }: { proposal_info: TProposalTypeInfo }) => {\n    const { currency, has_cancellation } = useTraderStore();\n    const { id, cancellation, has_error } = proposal_info;\n    const error = has_error ?? !id;\n    const [is_row_layout, setIsRowLayout] = React.useState(false);\n\n    const ref = React.useRef<HTMLDivElement>(null);\n\n    React.useEffect(() => {\n        if (ref.current) {\n            const el_height = Number(ref.current.parentElement?.clientHeight);\n            if ((el_height > 21 && isDesktop()) || ((el_height > 21 || getDecimalPlaces(currency) > 2) && isMobile())) {\n                setIsRowLayout(true);\n            } else {\n                setIsRowLayout(false);\n            }\n        }\n    }, [cancellation, currency, is_row_layout, setIsRowLayout]);\n\n    if (!has_cancellation) return null;\n\n    return (\n        <div\n            className={classNames('trade-container__cancel-deal-info', {\n                'trade-container__cancel-deal-info--row-layout': is_row_layout,\n            })}\n        >\n            {cancellation && (\n                <React.Fragment>\n                    <div className='trade-container__price-info-basis' ref={ref}>\n                        {localize('Deal cancel. fee')}\n                    </div>\n                    <div className='trade-container__price-info-value'>\n                        {!error && (\n                            <Money\n                                amount={cancellation.ask_price}\n                                className='trade-container__price-info-currency'\n                                currency={currency}\n                                show_currency\n                            />\n                        )}\n                    </div>\n                </React.Fragment>\n            )}\n        </div>\n    );\n});\n\nexport default CancelDealInfo;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { DesktopWrapper, MobileWrapper, Money, Popover, Text } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport { getContractSubtype, getCurrencyDisplayCode, getLocalizedBasis, getGrowthRatePercentage } from '@deriv/shared';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport CancelDealInfo from './cancel-deal-info';\nimport ValueMovement from './value-movement';\nimport { TProposalTypeInfo } from 'Types';\n\ntype TContractInfo = Pick<\n    ReturnType<typeof useTraderStore>,\n    'basis' | 'growth_rate' | 'is_accumulator' | 'is_turbos' | 'is_vanilla' | 'is_multiplier' | 'currency'\n> & {\n    has_increased?: boolean | null;\n    is_loading: boolean;\n    proposal_info: TProposalTypeInfo;\n    should_fade: boolean;\n    type: string;\n};\n\nconst ContractInfo = ({\n    basis,\n    currency,\n    growth_rate,\n    has_increased,\n    is_loading,\n    is_accumulator,\n    is_multiplier,\n    is_turbos,\n    is_vanilla,\n    should_fade,\n    proposal_info,\n    type,\n}: TContractInfo) => {\n    const localized_basis = getLocalizedBasis();\n    const stakeOrPayout = () => {\n        switch (basis) {\n            case 'stake': {\n                if (is_vanilla || is_turbos) {\n                    return localized_basis.payout_per_point;\n                }\n                return localized_basis.payout;\n            }\n            case 'payout': {\n                return localized_basis.stake;\n            }\n            default:\n                return basis;\n        }\n    };\n\n    const has_error_or_not_loaded = proposal_info.has_error || !proposal_info.id;\n    const basis_text = has_error_or_not_loaded ? stakeOrPayout() : proposal_info?.obj_contract_basis?.text || '';\n    const { message, obj_contract_basis, stake } = proposal_info;\n\n    const setHintMessage = () => {\n        if (is_turbos) {\n            return (\n                <Localize\n                    i18n_default_text='<0>{{title}}</0> {{message}}'\n                    components={[<Text key={0} weight='bold' size='xxs' />]}\n                    values={{\n                        title: getContractSubtype(type) === 'Long' ? localize('For Long:') : localize('For Short:'),\n                        message,\n                    }}\n                />\n            );\n        }\n        if (is_vanilla) {\n            return (\n                <Localize i18n_default_text='The payout at expiry is equal to the payout per point multiplied by the difference between the final price and the strike price.' />\n            );\n        }\n\n        return message;\n    };\n\n    return (\n        <div\n            className={classNames('trade-container__price', {\n                'trade-container__price--turbos': is_turbos,\n            })}\n        >\n            <div\n                id={`dt_purchase_${type.toLowerCase()}_price`}\n                className={classNames('trade-container__price-info', {\n                    'trade-container__price-info--disabled': has_error_or_not_loaded,\n                    'trade-container__price-info--slide': is_loading && !should_fade,\n                    'trade-container__price-info--fade': is_loading && should_fade,\n                    'trade-container__price-info--turbos': is_turbos,\n                })}\n            >\n                {is_multiplier || is_accumulator ? (\n                    <React.Fragment>\n                        {!is_accumulator && (\n                            <DesktopWrapper>\n                                <CancelDealInfo proposal_info={proposal_info} />\n                            </DesktopWrapper>\n                        )}\n                        <MobileWrapper>\n                            <div className='trade-container__price-info-wrapper'>\n                                <div className='btn-purchase__text_wrapper'>\n                                    <Text size='xs' weight='bold' color='colored-background'>\n                                        {!is_accumulator ? (\n                                            <Money amount={stake} currency={currency} show_currency />\n                                        ) : (\n                                            !is_loading && `${getGrowthRatePercentage(growth_rate)}%`\n                                        )}\n                                    </Text>\n                                </div>\n                            </div>\n                        </MobileWrapper>\n                    </React.Fragment>\n                ) : (\n                    !is_multiplier &&\n                    !is_accumulator &&\n                    obj_contract_basis && (\n                        <React.Fragment>\n                            <div className='trade-container__price-info-basis'>{basis_text}</div>\n                            <DesktopWrapper>\n                                <ValueMovement\n                                    has_error_or_not_loaded={has_error_or_not_loaded}\n                                    proposal_info={proposal_info}\n                                    currency={getCurrencyDisplayCode(currency)}\n                                    has_increased={has_increased}\n                                    is_turbos={is_turbos}\n                                    is_vanilla={is_vanilla}\n                                />\n                            </DesktopWrapper>\n                            <MobileWrapper>\n                                <div className='trade-container__price-info-wrapper'>\n                                    <ValueMovement\n                                        has_error_or_not_loaded={has_error_or_not_loaded}\n                                        proposal_info={proposal_info}\n                                        currency={getCurrencyDisplayCode(currency)}\n                                        has_increased={has_increased}\n                                        is_turbos={is_turbos}\n                                        is_vanilla={is_vanilla}\n                                    />\n                                </div>\n                            </MobileWrapper>\n                        </React.Fragment>\n                    )\n                )}\n            </div>\n            {!is_multiplier && !is_accumulator && (\n                <DesktopWrapper>\n                    <Popover\n                        alignment='left'\n                        icon='info'\n                        id={`dt_purchase_${type.toLowerCase()}_info`}\n                        is_bubble_hover_enabled\n                        margin={216}\n                        message={has_error_or_not_loaded ? '' : setHintMessage()}\n                        relative_render\n                    />\n                </DesktopWrapper>\n            )}\n        </div>\n    );\n};\n\nexport default ContractInfo;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { DesktopWrapper, MobileWrapper, Money, IconTradeTypes, Text } from '@deriv/components';\nimport ContractInfo from 'Modules/Trading/Components/Form/Purchase/contract-info';\nimport { getContractTypeDisplay } from '@deriv/shared';\nimport { TProposalTypeInfo, TTradeStore } from 'Types';\n\ntype TPurchaseButton = {\n    basis: string;\n    buy_info: TTradeStore['purchase_info'];\n    currency: string;\n    growth_rate: number;\n    has_deal_cancellation: boolean;\n    index: number;\n    info: TProposalTypeInfo;\n    is_accumulator: boolean;\n    is_disabled: boolean;\n    is_high_low: boolean;\n    is_loading: boolean;\n    is_multiplier: boolean;\n    is_proposal_empty: boolean;\n    is_vanilla: boolean;\n    is_turbos: boolean;\n    onClickPurchase: (proposal_id: string, price: string | number, type: string) => void;\n    purchased_states_arr: boolean[];\n    should_fade: boolean;\n    setPurchaseState: (index: number) => void;\n    type: string;\n};\n\ntype TButtonTextWrapper = {\n    should_fade: boolean;\n    is_loading: boolean;\n    type: string;\n    is_high_low: boolean;\n};\n\n// TODO [lazy-loading-required] Responsive related components\nconst ButtonTextWrapper = ({ should_fade, is_loading, type, is_high_low }: TButtonTextWrapper) => {\n    return (\n        <div className='btn-purchase__text_wrapper'>\n            <Text size='xs' weight='bold' color='colored-background'>\n                {!should_fade && is_loading ? '' : getContractTypeDisplay(type, is_high_low, true)}\n            </Text>\n        </div>\n    );\n};\n\nconst IconComponentWrapper = ({ type }: { type: string }) => (\n    <div className='btn-purchase__icon_wrapper'>\n        <IconTradeTypes type={type} className='btn-purchase__icon' color='active' />\n    </div>\n);\n\nconst PurchaseButton = ({\n    buy_info,\n    basis, // mobile-only\n    currency,\n    growth_rate,\n    has_deal_cancellation,\n    index,\n    info,\n    is_accumulator,\n    is_disabled,\n    is_high_low,\n    is_loading,\n    is_multiplier,\n    is_vanilla,\n    is_proposal_empty,\n    is_turbos,\n    purchased_states_arr,\n    setPurchaseState,\n    should_fade,\n    onClickPurchase,\n    type,\n}: TPurchaseButton) => {\n    const getIconType = () => {\n        if (!should_fade && is_loading) return '';\n        return is_high_low ? `${type.toLowerCase()}_barrier` : type.toLowerCase();\n    };\n    const { has_increased } = info;\n    const is_button_disabled = (is_disabled && !is_loading) || is_proposal_empty;\n\n    let button_value;\n\n    if (is_multiplier) {\n        button_value = (\n            <Text size='xs' weight='bold' color='colored-background'>\n                <Money amount={info.stake} currency={currency} show_currency />\n            </Text>\n        );\n    } else if (!is_vanilla && !is_turbos && !is_accumulator) {\n        button_value = (\n            <Text size='xs' weight='bold' color='colored-background'>\n                {!(is_loading || is_disabled) ? info.returns : ''}\n            </Text>\n        );\n    }\n\n    return (\n        <button\n            disabled={is_disabled}\n            id={`dt_purchase_${type.toLowerCase()}_button`}\n            className={classNames('btn-purchase', {\n                'btn-purchase--disabled': is_button_disabled || !!buy_info.error,\n                'btn-purchase--animated--slide': is_loading && !should_fade,\n                'btn-purchase--animated--fade': is_loading && should_fade,\n                'btn-purchase--swoosh': !!purchased_states_arr[index],\n                'btn-purchase--1': index === 0,\n                'btn-purchase--2': index === 1,\n                'btn-purchase--accumulator': is_accumulator,\n                'btn-purchase--multiplier': is_multiplier,\n                'btn-purchase--multiplier-deal-cancel': has_deal_cancellation,\n                'btn-purchase--turbos': is_turbos,\n                'btn-purchase--1__vanilla-opts': index === 0 && is_vanilla,\n                'btn-purchase--2__vanilla-opts': index === 1 && is_vanilla,\n            })}\n            onClick={() => {\n                setPurchaseState(index);\n                onClickPurchase(info.id, info.stake, type);\n            }}\n        >\n            <DesktopWrapper>\n                <div className='btn-purchase__info btn-purchase__info--left'>\n                    <div className='btn-purchase__type-wrapper'>\n                        <IconComponentWrapper type={getIconType()} />\n                        <ButtonTextWrapper\n                            should_fade={should_fade}\n                            is_loading={is_loading}\n                            type={type}\n                            is_high_low={is_high_low}\n                        />\n                    </div>\n                </div>\n                <div className='btn-purchase__effect-detail' />\n                <div className='btn-purchase__effect-detail--arrow' />\n                <div className='btn-purchase__info btn-purchase__info--right'>\n                    <div className='btn-purchase__text_wrapper'>{button_value}</div>\n                </div>\n            </DesktopWrapper>\n            <MobileWrapper>\n                <div\n                    className={classNames('btn-purchase__top', {\n                        'btn-purchase__top--accumulator': is_accumulator,\n                        'btn-purchase--vanilla': is_vanilla,\n                    })}\n                >\n                    <IconComponentWrapper type={getIconType()} />\n                    <ButtonTextWrapper\n                        should_fade={should_fade}\n                        is_loading={is_loading}\n                        type={type}\n                        is_high_low={is_high_low}\n                    />\n                </div>\n                {!is_turbos && !is_vanilla && !is_accumulator && (\n                    <div className='btn-purchase__bottom'>\n                        <ContractInfo\n                            basis={basis}\n                            currency={currency}\n                            growth_rate={growth_rate}\n                            has_increased={has_increased}\n                            is_accumulator={is_accumulator}\n                            is_loading={is_loading}\n                            is_multiplier={is_multiplier}\n                            is_turbos={is_turbos}\n                            is_vanilla={is_vanilla}\n                            should_fade={should_fade}\n                            proposal_info={info}\n                            type={type}\n                        />\n                    </div>\n                )}\n            </MobileWrapper>\n        </button>\n    );\n};\n\nexport default PurchaseButton;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { DesktopWrapper, MobileWrapper, Popover } from '@deriv/components';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport ContractInfo from 'Modules/Trading/Components/Form/Purchase/contract-info';\nimport PurchaseButton from 'Modules/Trading/Components/Elements/purchase-button';\nimport CancelDealInfo from '../Form/Purchase/cancel-deal-info';\nimport { TProposalTypeInfo, TTradeStore } from 'Types';\n\ntype TPurchaseFieldset = {\n    basis: string;\n    buy_info: TTradeStore['purchase_info'];\n    currency: string;\n    growth_rate: number;\n    has_cancellation: boolean;\n    index: number;\n    info: TProposalTypeInfo;\n    is_accumulator: boolean;\n    is_disabled: boolean;\n    is_high_low: boolean;\n    is_loading: boolean;\n    is_market_closed?: boolean;\n    is_multiplier: boolean;\n    is_proposal_empty: boolean;\n    is_proposal_error: boolean;\n    is_vanilla: boolean;\n    is_turbos: boolean;\n    onClickPurchase: (proposal_id: string, price: string | number, type: string) => void;\n    onHoverPurchase: (is_over: boolean, contract_type: string) => void;\n    purchased_states_arr: boolean[];\n    setPurchaseState: (index: number) => void;\n    type: string;\n};\n\nconst PurchaseFieldset = ({\n    basis,\n    buy_info,\n    currency,\n    growth_rate,\n    has_cancellation,\n    info,\n    index,\n    is_accumulator,\n    is_disabled,\n    is_high_low,\n    is_loading,\n    is_market_closed,\n    is_multiplier,\n    is_vanilla,\n    is_proposal_empty,\n    is_proposal_error,\n    is_turbos,\n    purchased_states_arr,\n    onClickPurchase,\n    onHoverPurchase,\n    setPurchaseState,\n    type,\n}: TPurchaseFieldset) => {\n    const [should_fade, setShouldFade] = React.useState(false);\n\n    React.useEffect(() => {\n        setShouldFade(true);\n    }, []);\n\n    const purchase_button = (\n        <React.Fragment>\n            <PurchaseButton\n                buy_info={buy_info}\n                currency={currency}\n                info={info}\n                index={index}\n                growth_rate={growth_rate}\n                has_deal_cancellation={is_multiplier && has_cancellation}\n                is_accumulator={is_accumulator}\n                is_disabled={is_disabled}\n                is_high_low={is_high_low}\n                is_loading={is_loading}\n                is_multiplier={is_multiplier}\n                is_vanilla={is_vanilla}\n                is_proposal_empty={is_proposal_empty}\n                is_turbos={is_turbos}\n                purchased_states_arr={purchased_states_arr}\n                onClickPurchase={onClickPurchase}\n                setPurchaseState={setPurchaseState}\n                should_fade={should_fade}\n                type={type}\n                basis={basis} // mobile-only\n            />\n            {is_multiplier && has_cancellation && (\n                <MobileWrapper>\n                    <CancelDealInfo proposal_info={info} />\n                </MobileWrapper>\n            )}\n        </React.Fragment>\n    );\n\n    return (\n        <Fieldset\n            className={classNames('trade-container__fieldset', 'purchase-container__option', {\n                'purchase-container__option--has-cancellation': has_cancellation,\n                'purchase-container__option--turbos': is_turbos,\n            })}\n        >\n            <DesktopWrapper>\n                <div\n                    className={classNames('trade-container__fieldset-wrapper', {\n                        'trade-container__fieldset-wrapper--disabled': is_proposal_error || is_disabled,\n                    })}\n                >\n                    {(has_cancellation || !is_multiplier) && !is_accumulator && (\n                        <ContractInfo\n                            basis={basis}\n                            currency={currency}\n                            proposal_info={info}\n                            has_increased={info.has_increased}\n                            is_loading={is_loading}\n                            is_multiplier={is_multiplier}\n                            is_turbos={is_turbos}\n                            is_vanilla={is_vanilla}\n                            should_fade={should_fade}\n                            type={type}\n                            is_accumulator={is_accumulator}\n                            growth_rate={growth_rate}\n                        />\n                    )}\n                    <div\n                        className={classNames('btn-purchase__shadow-wrapper', {\n                            'btn-purchase__shadow-wrapper--disabled': is_proposal_error || is_disabled,\n                        })}\n                        onMouseEnter={() => {\n                            if (!is_disabled) {\n                                onHoverPurchase(true, type);\n                            }\n                        }}\n                        onMouseLeave={() => {\n                            if (!is_disabled) {\n                                onHoverPurchase(false, type);\n                            }\n                        }}\n                        onClick={() => {\n                            if (!is_disabled) {\n                                onHoverPurchase(false, type);\n                            }\n                        }}\n                    >\n                        <div className='btn-purchase__box-shadow' />\n                        {is_proposal_error && !is_market_closed ? (\n                            <Popover\n                                has_error\n                                alignment='left'\n                                message={info.message}\n                                is_open={is_proposal_error && !is_market_closed}\n                                relative_render\n                                margin={6}\n                            >\n                                {purchase_button}\n                            </Popover>\n                        ) : (\n                            <React.Fragment>\n                                {is_multiplier ? (\n                                    <Popover\n                                        alignment='left'\n                                        is_bubble_hover_enabled\n                                        margin={8}\n                                        message={info.message}\n                                        relative_render\n                                    >\n                                        {purchase_button}\n                                    </Popover>\n                                ) : (\n                                    purchase_button\n                                )}\n                            </React.Fragment>\n                        )}\n                    </div>\n                </div>\n            </DesktopWrapper>\n            <MobileWrapper>\n                {is_proposal_error && <div className='btn-purchase__error'>{info.message}</div>}\n                {purchase_button}\n            </MobileWrapper>\n        </Fieldset>\n    );\n};\n\nexport default React.memo(PurchaseFieldset);\n","import React from 'react';\nimport {\n    isAccumulatorContract,\n    isEmptyObject,\n    isOpen,\n    hasContractEntered,\n    getContractTypePosition,\n    getSupportedContracts,\n    getIndicativePrice,\n} from '@deriv/shared';\nimport AccumulatorsSellButton from '../Components/Form/TradeParams/Accumulator/accumulators-sell-button';\nimport PurchaseFieldset from 'Modules/Trading/Components/Elements/purchase-fieldset';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\nimport { TTradeStore } from 'Types';\n\ntype TGetSupportedContractsKey = keyof ReturnType<typeof getSupportedContracts>;\n\nconst getSortedIndex = (type: string, index: number) => {\n    switch (getContractTypePosition(type as TGetSupportedContractsKey)) {\n        case 'top':\n            return 0;\n        case 'bottom':\n            return 1;\n        default:\n            return index;\n    }\n};\n\nconst Purchase = observer(({ is_market_closed }: { is_market_closed?: boolean }) => {\n    const {\n        portfolio: { all_positions, onClickSell },\n        ui: { purchase_states: purchased_states_arr, is_mobile, setPurchaseState },\n    } = useStore();\n    const {\n        basis,\n        contract_type,\n        currency,\n        is_accumulator,\n        is_multiplier,\n        growth_rate,\n        has_cancellation,\n        is_purchase_enabled,\n        is_turbos,\n        is_vanilla,\n        onPurchase: onClickPurchase,\n        onHoverPurchase,\n        proposal_info,\n        purchase_info,\n        symbol,\n        validation_errors = {},\n        trade_types,\n        is_trade_enabled,\n        has_open_accu_contract,\n    } = useTraderStore();\n\n    const is_high_low = /^high_low$/.test(contract_type.toLowerCase());\n    const isLoading = (info: TTradeStore['proposal_info'][string] | Record<string, never>) => {\n        const has_validation_error = Object.values(validation_errors).some(e => e.length);\n        return !has_validation_error && !info?.has_error && !info.id;\n    };\n    const is_proposal_empty = isEmptyObject(proposal_info);\n    const active_accu_contract = is_accumulator\n        ? all_positions.find(\n              ({ contract_info, type }) =>\n                  isAccumulatorContract(type) && contract_info.underlying === symbol && !contract_info.is_sold\n          )\n        : undefined;\n    const is_valid_to_sell = active_accu_contract?.contract_info\n        ? hasContractEntered(active_accu_contract.contract_info) && isOpen(active_accu_contract.contract_info)\n        : false;\n    const indicative =\n        (is_valid_to_sell && active_accu_contract && getIndicativePrice(active_accu_contract.contract_info)) || null;\n    const onClickSellButton = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n        if (active_accu_contract && onClickSell) {\n            onClickSell(active_accu_contract.contract_info.contract_id);\n            e.stopPropagation();\n            e.preventDefault();\n        }\n    };\n\n    const components: JSX.Element[] = [];\n\n    Object.keys(trade_types).forEach((type, index) => {\n        const info = proposal_info?.[type] || {};\n        const is_disabled = !is_trade_enabled || !info.id || !is_purchase_enabled;\n        const is_accum_or_mult_error = info?.has_error && !!info?.message;\n        const is_proposal_error =\n            is_multiplier || (is_accumulator && !is_mobile) ? is_accum_or_mult_error : info?.has_error;\n        const purchase_fieldset = (\n            <PurchaseFieldset\n                basis={basis}\n                buy_info={purchase_info}\n                currency={currency}\n                growth_rate={growth_rate}\n                info={info}\n                key={type}\n                index={getSortedIndex(type, index)}\n                has_cancellation={has_cancellation}\n                is_accumulator={is_accumulator}\n                is_disabled={is_disabled}\n                is_high_low={is_high_low}\n                is_loading={isLoading(info)}\n                is_market_closed={is_market_closed}\n                is_multiplier={is_multiplier}\n                is_turbos={is_turbos}\n                is_vanilla={is_vanilla}\n                is_proposal_empty={is_proposal_empty}\n                is_proposal_error={!!is_proposal_error}\n                purchased_states_arr={purchased_states_arr}\n                onHoverPurchase={onHoverPurchase}\n                onClickPurchase={onClickPurchase}\n                setPurchaseState={setPurchaseState}\n                type={type}\n            />\n        );\n\n        if (!is_vanilla && (!is_accumulator || !has_open_accu_contract)) {\n            switch (getContractTypePosition(type as TGetSupportedContractsKey)) {\n                case 'top':\n                    components.unshift(purchase_fieldset);\n                    break;\n                case 'bottom':\n                    components.push(purchase_fieldset);\n                    break;\n                default:\n                    components.push(purchase_fieldset);\n                    break;\n            }\n        } else if (contract_type.toUpperCase() === type) {\n            components.push(purchase_fieldset);\n        } else if (is_accumulator && has_open_accu_contract) {\n            components.push(\n                <AccumulatorsSellButton\n                    is_disabled={!is_valid_to_sell}\n                    onClick={onClickSellButton}\n                    contract_info={active_accu_contract?.contract_info}\n                    is_sell_requested={active_accu_contract?.is_sell_requested}\n                    current_stake={indicative}\n                    currency={currency}\n                />\n            );\n        }\n    });\n\n    return components as unknown as JSX.Element;\n});\n\nexport default Purchase;\n","import { isEmptyObject, getPropertyValue } from '@deriv/shared';\nimport { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\nimport { TTradeStore } from 'Types';\n\ntype THasDurationForCallPutEqual = {\n    contract_type_list: TTradeStore['contract_types_list'];\n    duration_unit: TTradeStore['duration_unit'];\n    contract_start_type: string;\n};\n\nexport const hasCallPutEqual = (contract_type_list: THasDurationForCallPutEqual['contract_type_list']) => {\n    if (isEmptyObject(contract_type_list)) return false;\n\n    return !!getPropertyValue(contract_type_list, 'Ups & Downs')?.categories?.some(\n        (contract: THasDurationForCallPutEqual['contract_type_list']['Ups & Downs']['categories'][0]) =>\n            contract.value === 'rise_fall_equal'\n    );\n};\n\nexport const hasDurationForCallPutEqual = (\n    contract_type_list: THasDurationForCallPutEqual['contract_type_list'],\n    duration_unit: THasDurationForCallPutEqual['duration_unit'],\n    contract_start_type: THasDurationForCallPutEqual['contract_start_type']\n) => {\n    if (!contract_type_list || !duration_unit || !contract_start_type) return false;\n\n    const contract_list = Object.keys(contract_type_list || {}).reduce<string[]>((key, list) => {\n        const item: THasDurationForCallPutEqual['contract_type_list']['Ups & Downs'] = contract_type_list[list];\n        return [...key, ...item.categories.map(contract => contract.value)];\n    }, []);\n\n    const contract_duration_list = contract_list.map(list => ({\n        [list]: getPropertyValue(ContractType.getFullContractTypes(), [\n            list,\n            'config',\n            'durations',\n            'units_display',\n            contract_start_type,\n        ]),\n    }));\n\n    // Check whether rise fall equal is exists and has the current store duration unit\n    if (hasCallPutEqual(contract_type_list)) {\n        const found = contract_duration_list.filter(contract => contract?.rise_fall_equal);\n        if (found.length > 0) {\n            return found[0].rise_fall_equal.some((duration: { value: string }) => duration.value === duration_unit);\n        }\n    }\n\n    return false;\n};\n\nexport const isRiseFallEqual = (contract_type: string) => /^(rise_fall|rise_fall_equal)$/.test(contract_type);\n","import { TTradeStore } from 'Types';\n\ntype TData = Partial<\n    Pick<\n        TTradeStore,\n        'cancellation_duration' | 'cancellation_price' | 'has_cancellation' | 'has_stop_loss' | 'has_take_profit'\n    >\n>;\n\ntype TOnToggleCancellation = {\n    has_cancellation: TTradeStore['has_cancellation'];\n    onChangeMultiple: (data: TData) => void;\n};\n\ntype TOnChangeCancellationDuration = {\n    event: React.ChangeEvent<HTMLInputElement>;\n    onChangeMultiple: (data: TData) => void;\n};\n\nexport const onToggleCancellation = ({ has_cancellation, onChangeMultiple }: TOnToggleCancellation) => {\n    // e.target.checked is not reliable, we have to toggle its previous value\n    const new_val = !has_cancellation;\n    onChangeMultiple({\n        has_cancellation: new_val,\n        ...(!new_val\n            ? {\n                  // reset deal cancellation price\n                  cancellation_price: undefined,\n              }\n            : {\n                  // unchecked Stop loss\n                  has_stop_loss: false,\n                  has_take_profit: false,\n              }),\n    });\n};\n\nexport const onChangeCancellationDuration = ({ event, onChangeMultiple }: TOnChangeCancellationDuration) => {\n    const { value } = event.target;\n    onChangeMultiple({\n        has_cancellation: true,\n        has_take_profit: false,\n        has_stop_loss: false,\n        cancellation_duration: value,\n    });\n};\n"],"names":["children","className","header","header_tooltip","is_center","is_tooltip_disabled","onMouseEnter","onMouseLeave","fieldset_header_class","classNames","fieldset_info_class","Popover","alignment","icon","is_bubble_hover_enabled","message","margin","relative_render","arr_arr_numbers","name","onChange","selected_number","should_show_in_percents","is_disabled","handleSelect","event","Number","currentTarget","getAttribute","target","value","map","arr_numbers","idx","key","toString","i","onClick","LabeledQuantityInputMobile","input_label","props","wrapper_classname","InputField","propTypes","PropTypes","React","has_error_or_not_loaded","proposal_info","currency","has_increased","is_turbos","is_vanilla","show_currency","Money","amount","obj_contract_basis","should_format","Icon","observer","useTraderStore","maximum_payout","maximum_ticks","content","label","localize","tooltip_text","Text","size","weight","line_height","align","as","isMobile","classNameBubble","zIndex","Expiration","is_text_only","text_size","expiration","start_time","useStore","common","server_time","formatDuration","getDiffDuration","unix","days","timestamp","date","getDateFromNow","style","display","alignItems","justifyContent","marginRight","MultipliersInfo","commission_text_size","stop_out_text_size","is_tooltip_relative","should_show_tooltip","trade","has_stop_loss","multiplier","commission","stop_out","commission_text","Localize","i18n_default_text","components","stop_out_text","commission_tooltip","values","commission_percentage","toFixed","stop_out_tooltip","stop_out_percentage","Math","floor","abs","getInfo","text","ui","client","addToast","removeToast","current_focus","setCurrentFocus","is_single_currency","validation_errors","stop_loss","onChangeMultiple","InputWithCheckbox","classNameInlinePrefix","classNameInput","isDesktop","defaultChecked","error_messages","undefined","is_negative_disabled","is_input_hidden","max_value","e","new_val","has_cancellation","tooltip_label","tooltip_alignment","error_message_alignment","is_accumulator","has_open_accu_contract","take_profit","has_take_profit","barrier_1","setHoveredBarrier","barrier_choices","is_barriers_table_expanded","setIsBarriersTableExpanded","is_mobile_tooltip_visible","setIsMobileTooltipVisible","selected_barrier","setSelectedBarrier","toggleBarriersTable","onBarrierClick","barrier","header_tooltip_text","title","price_position","barriers_header_mobile","is_open","MobileWrapper","color","MobileDialog","onClose","portal_element_id","visible","header_classname","barriers_list","selected_item","show_table","subheader","onClickCross","onHover","DesktopWrapper","contract_info","has_spot_increased","is_minimized","is_absolute_only","barrier_2","barrier_count","barrier_pipsize","duration_unit","trade_types","show_modal","setShowModal","type_with_current_spot","Object","keys","find","type","spot","current_spot","current_barrier_price","previous_spot","usePrevious","barrier_title","has_error","id","input_class","is_absolute_barrier","format","float_value","parseFloat","sign","is_float","is_signed","Modal","should_header_stick_body","toggleModal","height","width","is_incrementable","is_incrementable_on_long_press","is_read_only","BarriersListBody","is_mobile","ThemedScrollbars","autohide","BarriersList","CSSTransition","appear","in","timeout","enter","enterDone","exit","unmountOnExit","last_digit","arr_five","Array","max_stake","min_stake","isNaN","toLowerCase","contract_type","strike","strike_price_list","is_popover_open","setIsPopoverOpen","is_title_centered","Div100vhContainer","max_autoheight_offset","trade_type","VANILLALONG","payout_status","RadioGroup","onToggle","selected","item","String","Strike","strike_price_choices","expiry_type","expiry_date","advanced_duration_unit","setIsOpen","should_open_dropdown","setShouldOpenDropdown","selected_value","setSelectedValue","toggleWidget","is_24_hours_contract","toMoment","isSame","is_relative_strike_applicable","strike_price","should_show_spot","Dropdown","classNameDisplay","disabled","is_alignment_left","is_nativepicker","list","no_border","isTurbosContract","isVanillaContract","tab_list","TURBOS","is_displayed","ButtonToggle","buttons_arr","filter","is_animated","TurbosTradeDescription","index","TradeTypeTemplate","category","styles","xmlns","fill","rx","d","clipPath","transform","ContractTypeDescriptionVideo","selected_contract_type","data_testid","is_dark_theme","is_dark_mode_on","getVideoSource","extension","getUrlBase","mp4_src","webm_src","autoPlay","loop","playsInline","disablePictureInPicture","controlsList","onContextMenu","preventDefault","preload","controls","src","substring","list_item_text","TABS","Info","selected_tab","setSelectedTab","contract_types","getContractTypes","has_toggle_buttons","test","should_show_video","is_description_tab_selected","is_glossary_tab_selected","scroll_bar_height","onClickGlossary","RudderStack","action","info_switcher_mode","trade_type_name","cards","left","has_rounded_button","Button","interpolation","escapeValue","secondary","onClickGoBack","SearchInput","ref","onClickClearInput","onBlur","Input","leading_icon","trailing_icon","placeholder","displayName","categories","is_info_dialog_open","onBackButtonClick","onCategoryClick","onChangeInput","onSearchBlur","show_loading","input_ref","input_value","setInputValue","contract_category","getContractCategoryKey","selected_category_contract","contract_categories","length","current","focus","renderChildren","action_bar_item","Loading","is_fullscreen","VerticalTab","header_title","items","selectedKey","IconCategory","findContractCategory","handleInfoClick","includes","base_contract_type","exec","some","c","is_new","ContractType","Dialog","current_mobile_title","has_content_scroll","ContractTypeMenu","Display","List","languageChanged","wrapper_ref","is_dialog_open","setDialogVisibility","setInfoDialogVisibility","selected_category","setSelectedCategory","search_query","setSearchQuery","setItem","handleClickOutside","contains","document","addEventListener","removeEventListener","form_source","form_name","clicked_item","list_with_category","subform_name","tab_name","contract_type_category_icon","getContractTypeCategoryIcons","order_arr","ordered_list","sort","a","b","indexOf","accumulators_category","multipliers_category","options_category","push","component","reduce","prev","tabIndex","search_string","searchQueryItem","categoryItem","Contract","contract_types_list","is_digit_view","is_mobile_digit_view_selected","symbol","current_language","getAvailableContractTypes","unsupported_contract_types_list","digits_message","underlying_name","getMarketNamesMap","toUpperCase","prev_lang","isDigitTradeType","AccumulatorsSellButton","current_stake","is_sell_requested","is_valid_to_sell","isValidToSell","getCardLabels","SELL","cancellation","error","is_row_layout","setIsRowLayout","el_height","parentElement","clientHeight","getDecimalPlaces","ask_price","basis","growth_rate","is_loading","is_multiplier","should_fade","localized_basis","getLocalizedBasis","basis_text","payout_per_point","payout","stake","stakeOrPayout","getGrowthRatePercentage","getCurrencyDisplayCode","getContractSubtype","ButtonTextWrapper","is_high_low","getContractTypeDisplay","IconComponentWrapper","IconTradeTypes","button_value","buy_info","has_deal_cancellation","info","is_proposal_empty","purchased_states_arr","setPurchaseState","onClickPurchase","getIconType","is_button_disabled","returns","PurchaseFieldset","is_market_closed","is_proposal_error","onHoverPurchase","setShouldFade","purchase_button","getSortedIndex","getContractTypePosition","Purchase","portfolio","all_positions","onClickSell","purchase_states","is_purchase_enabled","onPurchase","purchase_info","is_trade_enabled","isLoading","isEmptyObject","active_accu_contract","isAccumulatorContract","underlying","is_sold","hasContractEntered","isOpen","indicative","getIndicativePrice","onClickSellButton","contract_id","stopPropagation","forEach","is_accum_or_mult_error","purchase_fieldset","unshift","hasCallPutEqual","contract_type_list","getPropertyValue","contract","hasDurationForCallPutEqual","contract_start_type","contract_duration_list","found","rise_fall_equal","duration","isRiseFallEqual","onToggleCancellation","cancellation_price","onChangeCancellationDuration","cancellation_duration"],"sourceRoot":""}