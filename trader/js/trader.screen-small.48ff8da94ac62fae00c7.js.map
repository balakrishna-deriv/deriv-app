{"version":3,"file":"trader/js/trader.screen-small.48ff8da94ac62fae00c7.js","mappings":"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","sources":["webpack://@deriv/trader/./src/Modules/Trading/Containers/allow-equals.tsx","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/preview-proposal.ts","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/amount-mobile.tsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/Multiplier/multiplier-amount-modal.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/RadioGroupWithInfoMobile/radio-group-with-info-mobile.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/RadioGroupWithInfoMobile/index.ts","webpack://@deriv/trader/./src/Modules/Trading/Containers/Multiplier/multiplier-options.jsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/radio-group-options-modal.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Multiplier/expiration-modal.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Multiplier/widgets.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Accumulator/accumulators-amount-mobile.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Duration/duration-mobile.jsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/trade-params-mobile.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/mobile-widget.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/Multiplier/cancel-deal-mobile.jsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/Multiplier/risk-management-dialog.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/Multiplier/risk-management-info.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/payout-per-point-mobile.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/screen-small.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer } from '@deriv/stores';\nimport React from 'react';\nimport { Checkbox, Text } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\n\ntype TAllowEquals = {\n    onChange: (e: { target: { name: string; value: number } }) => Promise<void>;\n    is_allow_equal: boolean;\n    has_equals_only: boolean;\n    className?: string;\n};\n\nconst AllowEquals = ({ onChange, is_allow_equal, has_equals_only, className }: TAllowEquals) => {\n    const handleOnChange: React.ComponentProps<typeof Checkbox>['onChange'] = e => {\n        e.persist();\n        if ('checked' in e.target) {\n            const { name, checked } = e.target;\n            onChange({ target: { name, value: Number(checked) } });\n        }\n    };\n\n    return (\n        <div className={classNames('allow-equals', 'mobile-widget', className)}>\n            <Checkbox\n                label={localize('Equals')}\n                value={is_allow_equal}\n                name='is_equal'\n                onChange={handleOnChange}\n                disabled={has_equals_only}\n            />\n            <Text as='p' size='xxxs'>\n                <Localize i18n_default_text='Win payout if exit spot is also equal to entry spot.' />\n            </Text>\n        </div>\n    );\n};\n\nexport default observer(() => {\n    const { is_equal, has_equals_only, onChange } = useTraderStore();\n    const allow_equals_props = {\n        is_allow_equal: !!is_equal,\n        has_equals_only,\n        onChange,\n    };\n    return <AllowEquals {...allow_equals_props} />;\n});\n","import debounce from 'lodash.debounce';\nimport { isEmptyObject, WS } from '@deriv/shared';\nimport { createProposalRequests } from './proposal';\nimport { PriceProposalResponse } from '@deriv/api-types';\nimport { TTradeStore } from 'Types';\n\nexport const requestPreviewProposal = debounce(\n    (store: TTradeStore, override = {}, onProposalResponse: (response: PriceProposalResponse) => void) => {\n        const new_store = { ...store, ...override };\n        const requests = createProposalRequests(new_store);\n        const subscription_map: { [key: string]: boolean } = {};\n\n        const onResponse = (response: PriceProposalResponse) => {\n            if (response.error || !response.subscription) return;\n\n            subscription_map[response.subscription.id] = true;\n            onProposalResponse(response);\n        };\n\n        if (!isEmptyObject(requests)) {\n            const proposal_requests = requests;\n\n            Object.keys(proposal_requests).forEach(type => {\n                WS.subscribeProposal(proposal_requests[type], onResponse);\n            });\n        }\n\n        return () => {\n            Object.keys(subscription_map).forEach(id => {\n                WS.forget(id);\n                delete subscription_map[id];\n            });\n        };\n    },\n    700\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { Localize, localize } from '@deriv/translations';\nimport { Money, Numpad, Tabs } from '@deriv/components';\nimport { getDecimalPlaces, isEmptyObject } from '@deriv/shared';\nimport MinMaxStakeInfo from './min-max-stake-info';\n\ntype TAmountMobile = React.ComponentProps<typeof Basis> & {\n    amount_tab_idx?: number;\n    setAmountTabIdx: React.ComponentProps<typeof Tabs>['onTabItemClick'];\n    stake_value: string | number;\n    payout_value: string | number;\n};\n\ntype TBasis = {\n    basis: string;\n    duration_unit: string;\n    duration_value: number;\n    toggleModal: () => void;\n    has_duration_error: boolean;\n    selected_basis: string | number;\n    setSelectedAmount: (basis: string, num: string | number) => void;\n    setAmountError: (has_error: boolean) => void;\n};\n\nconst Basis = observer(\n    ({\n        basis,\n        duration_unit,\n        duration_value,\n        toggleModal,\n        has_duration_error,\n        selected_basis,\n        setSelectedAmount,\n        setAmountError,\n    }: TBasis) => {\n        const { ui, client } = useStore();\n        const { addToast } = ui;\n        const { currency } = client;\n        const {\n            contract_type,\n            is_turbos,\n            is_vanilla,\n            onChangeMultiple,\n            stake_boundary,\n            amount: trade_amount,\n            basis: trade_basis,\n            duration_unit: trade_duration_unit,\n            duration: trade_duration,\n        } = useTraderStore();\n        const { min_stake, max_stake } = stake_boundary[contract_type.toUpperCase()] || {};\n        const user_currency_decimal_places = getDecimalPlaces(currency);\n        const onNumberChange = (num: number | string) => {\n            setSelectedAmount(basis, num);\n            validateAmount(num);\n        };\n        const formatAmount = (value: number | string) =>\n            !isNaN(+value) && value !== '' ? Number(value).toFixed(user_currency_decimal_places) : value;\n        const setBasisAndAmount = (amount: number | string) => {\n            const on_change_obj: Partial<ReturnType<typeof useTraderStore>> = {};\n\n            // Check for any duration changes in Duration trade params Tab before sending onChange object\n            if (duration_unit !== trade_duration_unit && !has_duration_error)\n                on_change_obj.duration_unit = duration_unit;\n            if (duration_value !== trade_duration && !has_duration_error) on_change_obj.duration = duration_value;\n\n            if (amount !== trade_amount || basis !== trade_basis) {\n                on_change_obj.basis = basis;\n                on_change_obj.amount = +amount;\n            }\n\n            if (!isEmptyObject(on_change_obj)) onChangeMultiple(on_change_obj);\n            toggleModal();\n        };\n        const zero_decimals = Number('0').toFixed(getDecimalPlaces(currency));\n        const min_amount = parseFloat(zero_decimals.toString().replace(/.$/, '1'));\n\n        const validateAmount = (value: number | string) => {\n            const localized_message = <Localize i18n_default_text='Should not be 0 or empty' />;\n            const min_max_stake_message = (\n                <Localize\n                    i18n_default_text='Stake must be between {{min_stake}} {{currency}} and {{max_stake}} {{currency}}'\n                    values={{ min_stake, currency, max_stake }}\n                />\n            );\n            const selected_value = parseFloat(value.toString());\n\n            if (value.toString() === '0.' || selected_value === 0) {\n                addToast({ key: 'amount_error', content: localized_message, type: 'error', timeout: 2000 });\n                setAmountError(true);\n                return 'error';\n            } else if (isNaN(selected_value) || selected_value < min_amount || value.toString().length < 1) {\n                addToast({ key: 'amount_error', content: localized_message, type: 'error', timeout: 2000 });\n                setAmountError(true);\n                return false;\n            } else if (selected_value < Number(min_stake)) {\n                addToast({ key: 'amount_error', content: min_max_stake_message, type: 'error', timeout: 2000 });\n                setAmountError(true);\n                return 'error';\n            }\n            setAmountError(false);\n            return true;\n        };\n\n        return (\n            <React.Fragment>\n                <div className='trade-params__stake-container'>\n                    {(is_turbos || is_vanilla) && (\n                        <MinMaxStakeInfo currency={currency} max_stake={max_stake} min_stake={min_stake} />\n                    )}\n                    <div\n                        className={classNames('trade-params__amount-keypad', {\n                            strike__pos: is_vanilla,\n                        })}\n                    >\n                        <Numpad\n                            value={selected_basis}\n                            format={formatAmount}\n                            onSubmit={setBasisAndAmount}\n                            currency={currency}\n                            min={min_amount}\n                            max={max_stake}\n                            is_currency\n                            render={({ value, className }) => {\n                                return (\n                                    <div className={className}>\n                                        {parseFloat(value) > 0 ? (\n                                            <Money currency={currency} amount={value} should_format={false} />\n                                        ) : (\n                                            value\n                                        )}\n                                    </div>\n                                );\n                            }}\n                            reset_press_interval={450}\n                            reset_value=''\n                            pip_size={user_currency_decimal_places}\n                            onValidate={validateAmount}\n                            submit_label={localize('OK')}\n                            onValueChange={onNumberChange}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n);\n\nconst Amount = observer(\n    ({\n        toggleModal,\n        duration_value,\n        duration_unit,\n        has_duration_error,\n        amount_tab_idx,\n        setAmountError,\n        setAmountTabIdx,\n        setSelectedAmount,\n        stake_value,\n        payout_value,\n    }: TAmountMobile) => {\n        const { basis, basis_list } = useTraderStore();\n        const has_selected_tab_idx = typeof amount_tab_idx !== 'undefined';\n        const active_index = has_selected_tab_idx ? amount_tab_idx : basis_list.findIndex(b => b.value === basis);\n\n        if (basis_list.length === 1) {\n            return (\n                <Basis\n                    toggleModal={toggleModal}\n                    duration_value={duration_value}\n                    duration_unit={duration_unit}\n                    has_duration_error={has_duration_error}\n                    basis={basis_list[0].value}\n                    setAmountError={setAmountError}\n                    selected_basis={basis_list[0].value === 'stake' ? stake_value : payout_value}\n                    setSelectedAmount={setSelectedAmount}\n                />\n            );\n        }\n\n        return (\n            <div>\n                <Tabs active_index={active_index} onTabItemClick={setAmountTabIdx} top>\n                    {basis_list.map(basis_option => {\n                        switch (basis_option.value) {\n                            case 'stake':\n                                return (\n                                    <div label={basis_option.text} key={basis_option.value}>\n                                        <Basis\n                                            toggleModal={toggleModal}\n                                            duration_value={duration_value}\n                                            duration_unit={duration_unit}\n                                            has_duration_error={has_duration_error}\n                                            basis={basis_option.value}\n                                            setAmountError={setAmountError}\n                                            selected_basis={stake_value}\n                                            setSelectedAmount={setSelectedAmount}\n                                        />\n                                    </div>\n                                );\n                            case 'payout':\n                                return (\n                                    <div label={basis_option.text} key={basis_option.value}>\n                                        <Basis\n                                            toggleModal={toggleModal}\n                                            duration_value={duration_value}\n                                            duration_unit={duration_unit}\n                                            has_duration_error={has_duration_error}\n                                            basis={basis_option.value}\n                                            setAmountError={setAmountError}\n                                            selected_basis={payout_value}\n                                            setSelectedAmount={setSelectedAmount}\n                                        />\n                                    </div>\n                                );\n                            default:\n                                return null;\n                        }\n                    })}\n                </Tabs>\n            </div>\n        );\n    }\n);\n\nexport default Amount;\n","import React from 'react';\nimport { Div100vhContainer, Modal, Money, Popover, usePreventIOSZoom } from '@deriv/components';\nimport { useIsMounted, WS } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport { requestPreviewProposal } from 'Stores/Modules/Trading/Helpers/preview-proposal';\nimport AmountMobile from 'Modules/Trading/Components/Form/TradeParams/amount-mobile';\nimport MultipliersInfo from 'Modules/Trading/Components/Form/TradeParams/Multiplier/info.jsx';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst MultiplierAmountModal = observer(({ is_open, toggleModal }) => {\n    // Fix to prevent iOS from zooming in erratically on quick taps\n    usePreventIOSZoom();\n    const {\n        ui: { enableApp, disableApp },\n    } = useStore();\n\n    return (\n        <React.Fragment>\n            <Modal\n                id='dt_trade_parameters_mobile'\n                className='trade-params'\n                enableApp={enableApp}\n                is_open={is_open}\n                is_title_centered\n                should_header_stick_body={false}\n                disableApp={disableApp}\n                toggleModal={toggleModal}\n                height='auto'\n                width='calc(100vw - 32px)'\n                title={localize('Stake')}\n            >\n                <Div100vhContainer className='mobile-widget-dialog__wrapper' max_autoheight_offset='48px'>\n                    <TradeParamsMobile toggleModal={toggleModal} />\n                </Div100vhContainer>\n            </Modal>\n        </React.Fragment>\n    );\n});\n\nexport default MultiplierAmountModal;\n\nconst TradeParamsMobile = observer(({ toggleModal }) => {\n    const trade_store = useTraderStore();\n    const { amount, currency, trade_stop_out } = trade_store;\n\n    const [stake_value, setStakeValue] = React.useState(amount);\n    const [commission, setCommission] = React.useState(null);\n    const [stop_out, setStopOut] = React.useState(null);\n    const stake_ref = React.useRef(amount);\n    const isMounted = useIsMounted();\n\n    React.useEffect(() => {\n        if (stake_value === amount) return undefined;\n\n        const onProposalResponse = response => {\n            const { proposal, echo_req, subscription } = response;\n            if (\n                isMounted() &&\n                proposal &&\n                echo_req.contract_type === 'MULTUP' &&\n                Number(echo_req.amount) === Number(stake_ref.current)\n            ) {\n                setCommission(proposal.commission);\n                setStopOut(proposal.limit_order?.stop_out?.order_amount);\n            } else if (subscription?.id) {\n                WS.forget(subscription.id);\n            }\n        };\n        const dispose = requestPreviewProposal(trade_store, { amount: stake_value }, onProposalResponse);\n\n        return () => {\n            dispose?.();\n        };\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [stake_value]);\n\n    const setSelectedAmount = (basis, stake) => {\n        setStakeValue(stake);\n        stake_ref.current = stake;\n    };\n\n    return (\n        <React.Fragment>\n            <div className='trade-params__multiplier-ic-info-wrapper'>\n                <Popover\n                    alignment='right'\n                    classNameBubble='dc-popover__trade-params'\n                    icon='info'\n                    id='dt_multiplier-stake__tooltip'\n                    zIndex={9999}\n                    is_bubble_hover_enabled\n                    message={\n                        <Localize\n                            i18n_default_text='To ensure your loss does not exceed your stake, your contract will be closed automatically when your loss equals to <0/>.'\n                            components={[\n                                <Money key={0} amount={stop_out || trade_stop_out} currency={currency} show_currency />,\n                            ]}\n                        />\n                    }\n                />\n            </div>\n            <AmountMobile\n                toggleModal={toggleModal}\n                amount_tab_idx={0}\n                setSelectedAmount={setSelectedAmount}\n                setAmountError={() => {}}\n                stake_value={stake_value}\n            />\n            <MultipliersInfo\n                className='trade-params__multiplier-trade-info'\n                should_show_tooltip\n                commission={commission}\n                stop_out={stop_out}\n                amount={stake_value}\n            />\n        </React.Fragment>\n    );\n});\n","import React, { ChangeEvent } from 'react';\nimport { RadioGroup, Popover } from '@deriv/components';\n\ntype TItemsList = {\n    text: string;\n    value: number;\n};\n\ntype TRadioGroupWithInfoMobile = {\n    items_list?: TItemsList[];\n    contract_name: string;\n    current_value_object: {\n        name: string;\n        value: number;\n    };\n    onChange: (event: {\n        target: {\n            name: string;\n            value: number;\n        };\n    }) => void;\n    info: React.ComponentProps<typeof Popover>['message'];\n    is_tooltip_disabled?: boolean;\n    popover_alignment?: React.ComponentProps<typeof Popover>['alignment'];\n    toggleModal: () => void;\n};\n\nconst RadioGroupWithInfoMobile = ({\n    items_list,\n    contract_name,\n    current_value_object,\n    onChange,\n    info,\n    is_tooltip_disabled = false,\n    popover_alignment = 'right',\n    toggleModal,\n}: TRadioGroupWithInfoMobile) => {\n    const onValueChange = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange({\n            target: {\n                name: current_value_object.name,\n                value: Number(e.target.value),\n            },\n        });\n        toggleModal();\n    };\n\n    return (\n        <>\n            <div className={`trade-params__${contract_name}-ic-info-wrapper`}>\n                <Popover\n                    alignment={popover_alignment}\n                    classNameBubble='dc-popover__trade-params'\n                    disable_target_icon={is_tooltip_disabled}\n                    icon='info'\n                    id={`dt_${contract_name}-stake__tooltip`}\n                    is_bubble_hover_enabled\n                    zIndex='9999'\n                    message={info}\n                />\n            </div>\n            <RadioGroup\n                className={`trade-params__${contract_name}-radio-group`}\n                name={`trade-params__${contract_name}-radio`}\n                selected={!Number.isNaN(current_value_object.value) ? current_value_object.value?.toString() : ''}\n                onToggle={onValueChange}\n            >\n                {items_list?.map(({ text, value }) => (\n                    <RadioGroup.Item key={value} id={text} label={text} value={value?.toString()} disabled={false} />\n                ))}\n            </RadioGroup>\n        </>\n    );\n};\n\nexport default RadioGroupWithInfoMobile;\n","import RadioGroupWithInfoMobile from './radio-group-with-info-mobile';\n\nexport default RadioGroupWithInfoMobile;\n","import React from 'react';\nimport MultipliersInfo from 'Modules/Trading/Components/Form/TradeParams/Multiplier/info.jsx';\nimport RadioGroupWithInfoMobile from 'Modules/Trading/Components/Form/RadioGroupWithInfoMobile';\nimport { requestPreviewProposal } from 'Stores/Modules/Trading/Helpers/preview-proposal';\nimport { localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { useIsMounted, WS } from '@deriv/shared';\n\nconst MultiplierOptions = observer(({ toggleModal }) => {\n    const trade_store = useTraderStore();\n    const { amount, multiplier, multiplier_range_list, onChange } = trade_store;\n    const [commission, setCommission] = React.useState(null);\n    const [stop_out, setStopOut] = React.useState(null);\n    const isMounted = useIsMounted();\n\n    React.useEffect(() => {\n        if (!amount) return undefined;\n\n        const onProposalResponse = ({ echo_req, proposal, subscription }) => {\n            if (isMounted() && proposal && echo_req.contract_type === 'MULTUP' && Number(echo_req.amount) === amount) {\n                setCommission(proposal.commission);\n                setStopOut(proposal.limit_order?.stop_out?.order_amount);\n            } else if (subscription?.id) {\n                WS.forget(subscription.id);\n            }\n        };\n        const dispose = requestPreviewProposal(trade_store, { amount }, onProposalResponse);\n\n        return () => {\n            dispose?.();\n        };\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [amount]);\n\n    return (\n        <React.Fragment>\n            <RadioGroupWithInfoMobile\n                popover_alignment='bottom'\n                contract_name='multiplier'\n                current_value_object={{ name: 'multiplier', value: multiplier }}\n                info={localize(\n                    'Your gross profit is the percentage change in market price times your stake and the multiplier chosen here.'\n                )}\n                items_list={multiplier_range_list}\n                onChange={onChange}\n                toggleModal={toggleModal}\n            />\n            <MultipliersInfo\n                className='trade-params__multiplier-trade-info'\n                should_show_tooltip\n                commission={commission}\n                stop_out={stop_out}\n                amount={amount}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default MultiplierOptions;\n","import React from 'react';\nimport { Div100vhContainer, Modal, usePreventIOSZoom } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { getGrowthRatePercentage, getTickSizeBarrierPercentage, isEmptyObject } from '@deriv/shared';\nimport MultiplierOptions from 'Modules/Trading/Containers/Multiplier/multiplier-options.jsx';\nimport RadioGroupWithInfoMobile from 'Modules/Trading/Components/Form/RadioGroupWithInfoMobile';\nimport { observer } from '@deriv/stores';\n\ntype TRadioGroupOptionsModal = {\n    is_open: boolean;\n    modal_title: string;\n    toggleModal: () => void;\n};\n\nconst RadioGroupOptionsModal = observer(({ is_open, modal_title, toggleModal }: TRadioGroupOptionsModal) => {\n    const { accumulator_range_list, growth_rate, onChange, tick_size_barrier, proposal_info } = useTraderStore();\n\n    // Fix to prevent iOS from zooming in erratically on quick taps\n    usePreventIOSZoom();\n    const has_error_or_not_loaded =\n        proposal_info?.ACCU?.has_error || !proposal_info?.ACCU?.id || isEmptyObject(proposal_info);\n\n    return (\n        <React.Fragment>\n            <Modal\n                id='dt_trade_parameters_mobile'\n                className='trade-params'\n                is_open={is_open}\n                is_title_centered\n                should_header_stick_body={false}\n                toggleModal={toggleModal}\n                height='auto'\n                width='calc(100vw - 32px)'\n                title={modal_title}\n            >\n                <Div100vhContainer className='mobile-widget-dialog__wrapper' max_autoheight_offset='48px'>\n                    {modal_title === localize('Multiplier') ? (\n                        // @ts-expect-error should be gone after MultiplierOptions is converted to typescript\n                        <MultiplierOptions toggleModal={toggleModal} />\n                    ) : (\n                        <RadioGroupWithInfoMobile\n                            contract_name='accumulator'\n                            current_value_object={{ name: 'growth_rate', value: growth_rate }}\n                            info={localize(\n                                'Your stake will grow at {{growth_rate}}% per tick as long as the current spot price remains within ±{{tick_size_barrier}} from the previous spot price.',\n                                {\n                                    growth_rate: getGrowthRatePercentage(growth_rate),\n                                    tick_size_barrier: getTickSizeBarrierPercentage(tick_size_barrier),\n                                }\n                            )}\n                            is_tooltip_disabled={has_error_or_not_loaded}\n                            items_list={accumulator_range_list?.map(value => ({\n                                text: `${getGrowthRatePercentage(value)}%`,\n                                value,\n                            }))}\n                            onChange={onChange}\n                            popover_alignment='bottom'\n                            toggleModal={toggleModal}\n                        />\n                    )}\n                </Div100vhContainer>\n            </Modal>\n        </React.Fragment>\n    );\n});\n\nexport default RadioGroupOptionsModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Div100vhContainer, Modal, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport Expiration from './expiration.jsx';\nimport { observer, useStore } from '@deriv/stores';\n\nconst MultipliersExpirationModal = observer(({ is_open, toggleModal }) => {\n    const { ui } = useStore();\n    const { enableApp, disableApp } = ui;\n    return (\n        <React.Fragment>\n            <Modal\n                enableApp={enableApp}\n                is_open={is_open}\n                disableApp={disableApp}\n                toggleModal={toggleModal}\n                has_close_icon={false}\n                should_header_stick_body={false}\n                height='auto'\n                width='calc(100vw - 3.2rem)'\n                title={localize('Expiration')}\n            >\n                <Div100vhContainer className='mobile-widget-dialog__wrapper' max_autoheight_offset='48px'>\n                    <div style={{ minHeight: '120px', padding: '1.6rem' }}>\n                        <Text size='xs' color='general'>\n                            <Localize\n                                i18n_default_text='Your contract will be closed automatically at the next available asset price on <0></0>.'\n                                components={[<Expiration key={0} is_text_only text_size='xs' />]}\n                            />\n                        </Text>\n                    </div>\n                    <Modal.Footer has_separator>\n                        <Button\n                            style={{ width: '100%', height: '4rem' }}\n                            large\n                            primary\n                            has_effect\n                            text={localize('OK')}\n                            onClick={toggleModal}\n                        />\n                    </Modal.Footer>\n                </Div100vhContainer>\n            </Modal>\n        </React.Fragment>\n    );\n});\n\nMultipliersExpirationModal.propTypes = {\n    is_open: PropTypes.bool,\n    toggleModal: PropTypes.func,\n};\n\nexport default MultipliersExpirationModal;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Money, Text, Popover } from '@deriv/components';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer } from '@deriv/stores';\nimport MultiplierAmountModal from 'Modules/Trading/Containers/Multiplier/multiplier-amount-modal.jsx';\nimport RadioGroupOptionsModal from 'Modules/Trading/Containers/radio-group-options-modal';\nimport MultipliersExpiration from 'Modules/Trading/Components/Form/TradeParams/Multiplier/expiration.jsx';\nimport MultipliersExpirationModal from 'Modules/Trading/Components/Form/TradeParams/Multiplier/expiration-modal.jsx';\nimport MultipliersInfo from 'Modules/Trading/Components/Form/TradeParams/Multiplier/info.jsx';\nimport { localize, Localize } from '@deriv/translations';\nimport { getGrowthRatePercentage, getTickSizeBarrierPercentage } from '@deriv/shared';\n\nconst AmountWidget = ({ amount, currency, expiration, is_crypto_multiplier }) => {\n    const [is_open, setIsOpen] = React.useState(false);\n    const [is_expiration_modal_open, setIsExpirationModalOpen] = React.useState(false);\n\n    const toggleModal = () => {\n        setIsOpen(!is_open);\n    };\n\n    const toggleExpirationModal = () => {\n        setIsExpirationModalOpen(!is_expiration_modal_open);\n    };\n\n    return (\n        <React.Fragment>\n            <MultiplierAmountModal is_open={is_open} toggleModal={toggleModal} />\n            <div className='mobile-widget mobile-widget__multiplier' onClick={toggleModal}>\n                <div className='mobile-widget__multiplier-amount'>\n                    <div className='mobile-widget__item'>\n                        <Text weight='bold' size='xxs'>\n                            <Money amount={amount} currency={currency} show_currency />\n                        </Text>\n                    </div>\n                </div>\n                <MultipliersInfo\n                    className='mobile-widget__multiplier-trade-info'\n                    commission_text_size='xxxxs'\n                    stop_out_text_size='xxxxs'\n                />\n            </div>\n            {is_crypto_multiplier && (\n                <div className='mobile-widget' onClick={expiration ? toggleExpirationModal : null}>\n                    <div className='mobile-widget__multiplier-expiration'>\n                        <Text size='xxs'>{localize('Expires on')}</Text>\n                        <MultipliersExpiration is_text_only text_size='xxs' />\n                    </div>\n                    <MultipliersExpirationModal\n                        is_open={is_expiration_modal_open}\n                        toggleModal={toggleExpirationModal}\n                    />\n                </div>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport const MultiplierAmountWidget = observer(() => {\n    const { amount, expiration, currency, is_crypto_multiplier, multiplier } = useTraderStore();\n    const amount_widget_props = {\n        amount,\n        expiration,\n        currency,\n        is_crypto_multiplier,\n        multiplier,\n    };\n    return <AmountWidget {...amount_widget_props} />;\n});\n\nconst RadioGroupOptionsWidget = ({ displayed_trade_param, tooltip_message, is_disabled, modal_title }) => {\n    const [is_open, setIsOpen] = React.useState(false);\n\n    const toggleModal = () => {\n        if (is_disabled) return;\n        setIsOpen(!is_open);\n    };\n\n    return (\n        <React.Fragment>\n            <RadioGroupOptionsModal is_open={is_open} toggleModal={toggleModal} modal_title={modal_title} />\n            <div className='mobile-widget mobile-widget__multiplier-options' onClick={toggleModal}>\n                <div\n                    className={classNames('mobile-widget__item', {\n                        'mobile-widget__item-disabled': is_disabled,\n                    })}\n                >\n                    <span className='mobile-widget__item-value'>{displayed_trade_param}</span>\n                </div>\n                {!!tooltip_message && (\n                    <span className='mobile-widget__item-tooltip' onClick={e => e.stopPropagation()}>\n                        <Popover\n                            alignment='left'\n                            classNameBubble='mobile-widget__item-popover'\n                            icon='info'\n                            is_bubble_hover_enabled\n                            zIndex={9999}\n                            message={tooltip_message}\n                        />\n                    </span>\n                )}\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport const MultiplierOptionsWidget = observer(() => {\n    const { multiplier } = useTraderStore();\n    const displayed_trade_param = `x${multiplier}`;\n    const modal_title = localize('Multiplier');\n    return <RadioGroupOptionsWidget displayed_trade_param={displayed_trade_param} modal_title={modal_title} />;\n});\n\nexport const AccumulatorOptionsWidget = observer(() => {\n    const { growth_rate, has_open_accu_contract, tick_size_barrier } = useTraderStore();\n    const displayed_trade_param = `${getGrowthRatePercentage(growth_rate)}%`;\n    const modal_title = localize('Growth rate');\n    const tooltip_message = (\n        <Localize\n            i18n_default_text='Your stake will grow at {{growth_rate}}% per tick as long as the current spot price remains within ±{{tick_size_barrier}} from the previous spot price.'\n            values={{\n                growth_rate: getGrowthRatePercentage(growth_rate),\n                tick_size_barrier: getTickSizeBarrierPercentage(tick_size_barrier),\n            }}\n        />\n    );\n    return (\n        <RadioGroupOptionsWidget\n            displayed_trade_param={displayed_trade_param}\n            is_disabled={has_open_accu_contract}\n            modal_title={modal_title}\n            tooltip_message={tooltip_message}\n        />\n    );\n});\n","import React from 'react';\nimport classNames from 'classnames';\nimport { AMOUNT_MAX_LENGTH, getDecimalPlaces } from '@deriv/shared';\nimport { MobileWrapper } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport LabeledQuantityInputMobile from '../../LabeledQuantityInputMobile';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\ntype TAccumulatorsAmountMobile = {\n    is_nativepicker?: boolean;\n};\n\nconst AccumulatorsAmountMobile = observer(({ is_nativepicker }: TAccumulatorsAmountMobile) => {\n    const { ui, client } = useStore();\n    const { current_focus, setCurrentFocus } = ui;\n    const { is_single_currency } = client;\n    const { amount, currency, onChange, has_open_accu_contract } = useTraderStore();\n    return (\n        <>\n            <MobileWrapper>\n                <LabeledQuantityInputMobile\n                    input_label={localize('Stake')}\n                    className={classNames('trade-container__amount', 'trade-container__amount--accumulator')}\n                    classNameInlinePrefix='trade-container__currency'\n                    classNameInput={classNames('trade-container__input', 'trade-container__input--accumulator')}\n                    currency={currency}\n                    current_focus={current_focus}\n                    fractional_digits={getDecimalPlaces(currency)}\n                    id='dt_amount_input'\n                    inline_prefix={is_single_currency ? currency : null}\n                    is_autocomplete_disabled\n                    is_disabled={has_open_accu_contract}\n                    is_float\n                    is_hj_whitelisted\n                    is_incrementable\n                    is_nativepicker={is_nativepicker}\n                    is_negative_disabled\n                    max_length={AMOUNT_MAX_LENGTH}\n                    name='amount'\n                    onChange={onChange}\n                    type='tel'\n                    value={amount}\n                    ariaLabel={localize('Amount')}\n                    setCurrentFocus={setCurrentFocus}\n                />\n            </MobileWrapper>\n        </>\n    );\n});\n\nexport default AccumulatorsAmountMobile;\n","import React from 'react';\nimport { Tabs, TickPicker, Numpad, RelativeDatepicker, Text } from '@deriv/components';\nimport { isEmptyObject, addComma, getDurationMinMaxValues } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport moment from 'moment';\n\nconst submit_label = localize('OK');\n\nconst updateAmountChanges = (obj, stake_value, payout_value, basis, trade_basis, trade_amount) => {\n    // TODO: Move onChangeMultiple outside of duration and amount\n    //  and unify all trade parameter components to use same onMultipleChange func onSubmit\n    // Checks if Amount tab was changed to stake and stake value was updated\n    if (basis === 'stake' && stake_value !== trade_amount) {\n        obj.basis = 'stake';\n        obj.amount = stake_value;\n        // Checks if Amount tab was changed to payout and payout value was updated\n    } else if (basis === 'payout' && payout_value !== trade_amount) {\n        obj.basis = 'payout';\n        obj.amount = payout_value;\n        // Checks if Amount tab was changed but payout or stake value was not updated\n    } else if (trade_basis !== basis) {\n        obj.basis = basis;\n        obj.amount = trade_amount;\n    }\n};\n\nconst Ticks = observer(\n    ({\n        setDurationError,\n        basis_option,\n        toggleModal,\n        has_amount_error,\n        payout_value,\n        stake_value,\n        selected_duration,\n        setSelectedDuration,\n    }) => {\n        const {\n            duration_min_max,\n            duration: trade_duration,\n            duration_unit: trade_duration_unit,\n            basis: trade_basis,\n            amount: trade_amount,\n            onChangeMultiple,\n        } = useTraderStore();\n        React.useEffect(() => {\n            setDurationError(false);\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, []);\n\n        const [min_tick, max_tick] = getDurationMinMaxValues(duration_min_max, 'tick', 't');\n\n        const setTickDuration = value => {\n            const { value: duration } = value.target;\n            const on_change_obj = {};\n\n            // check for any amount changes from Amount trade params tab before submitting onChange object\n            if (!has_amount_error)\n                updateAmountChanges(on_change_obj, stake_value, payout_value, basis_option, trade_basis, trade_amount);\n\n            if (trade_duration !== duration || trade_duration_unit !== 't') {\n                on_change_obj.duration_unit = 't';\n                on_change_obj.duration = duration;\n            }\n\n            if (!isEmptyObject(on_change_obj)) onChangeMultiple(on_change_obj);\n            toggleModal();\n        };\n\n        const onTickChange = tick => setSelectedDuration('t', tick);\n        const tick_duration = trade_duration < min_tick && selected_duration < min_tick ? min_tick : selected_duration;\n        return (\n            <div className='trade-params__duration-tickpicker'>\n                <TickPicker\n                    default_value={tick_duration}\n                    submit_label={submit_label}\n                    max_value={max_tick}\n                    min_value={min_tick}\n                    onSubmit={setTickDuration}\n                    onValueChange={onTickChange}\n                    singular_label={localize('Tick')}\n                    plural_label={localize('Ticks')}\n                />\n            </div>\n        );\n    }\n);\n\nconst Numbers = observer(\n    ({\n        basis_option,\n        contract_expiry = 'intraday',\n        duration_unit_option,\n        duration_values,\n        expiry_epoch,\n        has_amount_error,\n        payout_value,\n        selected_duration,\n        setDurationError,\n        setSelectedDuration,\n        stake_value,\n        show_expiry = false,\n        toggleModal,\n    }) => {\n        const { ui } = useStore();\n        const { addToast } = ui;\n        const {\n            duration_min_max,\n            duration: trade_duration,\n            duration_unit: trade_duration_unit,\n            basis: trade_basis,\n            amount: trade_amount,\n            onChangeMultiple,\n        } = useTraderStore();\n        const { value: duration_unit } = duration_unit_option;\n        const [min, max] = getDurationMinMaxValues(duration_min_max, contract_expiry, duration_unit);\n        const [has_error, setHasError] = React.useState(false);\n\n        const validateDuration = value => {\n            const localized_message = (\n                <Localize\n                    i18n_default_text='Should be between {{min}} and {{max}}'\n                    values={{\n                        min,\n                        max: addComma(max, 0, false),\n                    }}\n                />\n            );\n            if (parseInt(value) < min || parseInt(selected_duration) > max) {\n                addToast({ key: 'duration_error', content: localized_message, type: 'error', timeout: 2000 });\n                setDurationError(true);\n                setHasError(true);\n                return 'error';\n            } else if (parseInt(value) > max) {\n                addToast({ key: 'duration_error', content: localized_message, type: 'error', timeout: 2000 });\n                setHasError(true);\n                return 'error';\n            } else if (value.toString().length < 1) {\n                addToast({ key: 'duration_error', content: localized_message, type: 'error', timeout: 2000 });\n                setDurationError(true);\n                setHasError(true);\n                return false;\n            }\n\n            setDurationError(false);\n            setHasError(false);\n            return true;\n        };\n\n        const setDuration = duration => {\n            const on_change_obj = {};\n\n            // check for any amount changes from Amount trade params tab before submitting onChange object\n            if (!has_amount_error)\n                updateAmountChanges(on_change_obj, stake_value, payout_value, basis_option, trade_basis, trade_amount);\n\n            if (trade_duration !== duration || trade_duration_unit !== duration_unit) {\n                on_change_obj.duration_unit = duration_unit;\n                on_change_obj.duration = duration;\n                on_change_obj.expiry_type = 'duration';\n            }\n\n            if (!isEmptyObject(on_change_obj)) onChangeMultiple(on_change_obj);\n            toggleModal();\n        };\n\n        const setExpiryDate = (epoch, duration) => {\n            if (trade_duration_unit !== 'd') {\n                return moment.utc().add(Number(duration), 'days').format('D MMM YYYY, [23]:[59]:[59] [GMT +0]');\n            }\n            let expiry_date = new Date((epoch - trade_duration * 24 * 60 * 60) * 1000);\n            if (duration) {\n                expiry_date = new Date(expiry_date.getTime() + duration * 24 * 60 * 60 * 1000);\n            }\n\n            return expiry_date\n                .toUTCString()\n                .replace('GMT', 'GMT +0')\n                .substring(5)\n                .replace(/(\\d{2}) (\\w{3} \\d{4})/, '$1 $2,');\n        };\n\n        const onNumberChange = num => {\n            setSelectedDuration(duration_unit, num);\n            validateDuration(num);\n        };\n\n        return (\n            <div className='trade-params__amount-keypad'>\n                {show_expiry && (\n                    <Text as='div' size='xxxs' line_height='s' className='expiry-text-container--mobile'>\n                        <Localize\n                            i18n_default_text='Expiry: {{date}}'\n                            values={{\n                                date: !has_error ? setExpiryDate(expiry_epoch, duration_values?.d_duration) : '',\n                            }}\n                        />\n                    </Text>\n                )}\n                <Numpad\n                    value={selected_duration}\n                    onSubmit={setDuration}\n                    render={({ value: v, className }) => {\n                        return <div className={className}>{v}</div>;\n                    }}\n                    pip_size={0}\n                    submit_label={submit_label}\n                    min={min}\n                    max={max}\n                    reset_press_interval={350}\n                    reset_value=''\n                    onValidate={validateDuration}\n                    onValueChange={onNumberChange}\n                />\n            </div>\n        );\n    }\n);\n\nconst Duration = observer(\n    ({\n        amount_tab_idx,\n        d_duration,\n        duration_tab_idx,\n        expiry_epoch,\n        h_duration,\n        has_amount_error,\n        m_duration,\n        payout_value,\n        s_duration,\n        setDurationError,\n        setDurationTabIdx,\n        setSelectedDuration,\n        stake_value,\n        t_duration,\n        toggleModal,\n    }) => {\n        const { duration_units_list, duration_min_max, duration_unit, basis: trade_basis } = useTraderStore();\n        const duration_values = {\n            t_duration,\n            s_duration,\n            m_duration,\n            h_duration,\n            d_duration,\n        };\n        const has_selected_tab_idx = typeof duration_tab_idx !== 'undefined';\n        const active_index = has_selected_tab_idx\n            ? duration_tab_idx\n            : duration_units_list.findIndex(d => d.value === duration_unit);\n        const [min, max] = getDurationMinMaxValues(duration_min_max, 'daily', 'd');\n        const handleRelativeChange = date => {\n            setSelectedDuration('d', date);\n        };\n        const selected_basis_option = () => {\n            if (amount_tab_idx === 0) {\n                return 'stake';\n            } else if (amount_tab_idx === 1) {\n                return 'payout';\n            }\n            return trade_basis;\n        };\n\n        const onTabChange = index => {\n            setDurationTabIdx(index);\n            const { value: unit } = duration_units_list[index];\n            setSelectedDuration(unit, duration_values[`${unit}_duration`]);\n        };\n\n        return (\n            <div>\n                <Tabs active_index={active_index} onTabItemClick={num => onTabChange(num)} single_tab_has_no_label top>\n                    {duration_units_list.map(duration_unit_option => {\n                        switch (duration_unit_option.value) {\n                            case 't':\n                                return (\n                                    <div label={duration_unit_option.text} key={duration_unit_option.value}>\n                                        <Ticks\n                                            basis_option={selected_basis_option()}\n                                            has_amount_error={has_amount_error}\n                                            toggleModal={toggleModal}\n                                            selected_duration={t_duration}\n                                            setDurationError={setDurationError}\n                                            setSelectedDuration={setSelectedDuration}\n                                            stake_value={stake_value}\n                                            payout_value={payout_value}\n                                        />\n                                    </div>\n                                );\n                            case 's':\n                                return (\n                                    <div label={duration_unit_option.text} key={duration_unit_option.value}>\n                                        <Numbers\n                                            basis_option={selected_basis_option()}\n                                            has_amount_error={has_amount_error}\n                                            toggleModal={toggleModal}\n                                            duration_unit_option={duration_unit_option}\n                                            selected_duration={s_duration}\n                                            setDurationError={setDurationError}\n                                            setSelectedDuration={setSelectedDuration}\n                                            stake_value={stake_value}\n                                            payout_value={payout_value}\n                                        />\n                                    </div>\n                                );\n                            case 'm':\n                                return (\n                                    <div label={duration_unit_option.text} key={duration_unit_option.value}>\n                                        <Numbers\n                                            basis_option={selected_basis_option()}\n                                            has_amount_error={has_amount_error}\n                                            toggleModal={toggleModal}\n                                            duration_unit_option={duration_unit_option}\n                                            selected_duration={m_duration}\n                                            setDurationError={setDurationError}\n                                            setSelectedDuration={setSelectedDuration}\n                                            stake_value={stake_value}\n                                            payout_value={payout_value}\n                                        />\n                                    </div>\n                                );\n                            case 'h':\n                                return (\n                                    <div label={duration_unit_option.text} key={duration_unit_option.value}>\n                                        <Numbers\n                                            basis_option={selected_basis_option()}\n                                            has_amount_error={has_amount_error}\n                                            toggleModal={toggleModal}\n                                            duration_unit_option={duration_unit_option}\n                                            selected_duration={h_duration}\n                                            setDurationError={setDurationError}\n                                            setSelectedDuration={setSelectedDuration}\n                                            stake_value={stake_value}\n                                            payout_value={payout_value}\n                                        />\n                                    </div>\n                                );\n                            case 'd':\n                                return (\n                                    <div label={duration_unit_option.text} key={duration_unit_option.value}>\n                                        <Numbers\n                                            basis_option={selected_basis_option()}\n                                            has_amount_error={has_amount_error}\n                                            toggleModal={toggleModal}\n                                            duration_unit_option={duration_unit_option}\n                                            contract_expiry='daily'\n                                            selected_duration={d_duration}\n                                            setDurationError={setDurationError}\n                                            setSelectedDuration={setSelectedDuration}\n                                            stake_value={stake_value}\n                                            show_expiry\n                                            payout_value={payout_value}\n                                            expiry_epoch={expiry_epoch}\n                                            duration_values={duration_values}\n                                        />\n                                        <RelativeDatepicker\n                                            onChange={handleRelativeChange}\n                                            min_date={min}\n                                            max_date={max}\n                                            title={localize('Pick an end date')}\n                                        />\n                                    </div>\n                                );\n                            default:\n                                return null;\n                        }\n                    })}\n                </Tabs>\n            </div>\n        );\n    }\n);\n\nexport default Duration;\n","import 'Sass/app/modules/trading-mobile.scss';\nimport { Div100vhContainer, Modal, Money, Tabs, ThemedScrollbars, usePreventIOSZoom } from '@deriv/components';\nimport AmountMobile from 'Modules/Trading/Components/Form/TradeParams/amount-mobile';\nimport Barrier from 'Modules/Trading/Components/Form/TradeParams/barrier';\nimport DurationMobile from 'Modules/Trading/Components/Form/TradeParams/Duration/duration-mobile.jsx';\nimport LastDigit from 'Modules/Trading/Components/Form/TradeParams/last-digit';\nimport { TTextValueStrings } from 'Types';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { localize } from '@deriv/translations';\n\ntype TTradeParamsModal = {\n    is_open: boolean;\n    tab_index: number;\n    toggleModal: () => void;\n};\n\ntype TTradeParamsMobile = {\n    currency: string;\n    toggleModal: () => void;\n    isVisible: (component_key: string) => boolean;\n    setAmountTabIdx: (amount_tab_idx?: number) => void;\n    amount_tab_idx?: number;\n    setTradeParamTabIdx: (trade_param_tab_idx: number) => void;\n    trade_param_tab_idx: number;\n    setDurationTabIdx: (duration_tab_idx?: number) => void;\n    duration_unit: string;\n    duration_units_list: TTextValueStrings[];\n    duration_value: number;\n    duration_tab_idx?: number;\n    has_amount_error: boolean;\n    has_duration_error: boolean;\n    // amount\n    setAmountError: (has_error: boolean) => void;\n    setSelectedAmount: (basis: string, selected_basis_value: string | number) => void;\n    stake_value: number;\n    payout_value: number;\n    // duration\n    setDurationError: (has_error: boolean) => void;\n    setSelectedDuration: (selected_duration_unit: string, selected_duration: number) => void;\n    t_duration: number;\n    s_duration: number;\n    m_duration: number;\n    h_duration: number;\n    d_duration: number;\n};\n\ntype TReducer = Pick<\n    TTradeParamsMobile,\n    | 'trade_param_tab_idx'\n    | 'duration_tab_idx'\n    | 'amount_tab_idx'\n    | 'has_amount_error'\n    | 'has_duration_error'\n    | 't_duration'\n    | 's_duration'\n    | 'm_duration'\n    | 'h_duration'\n    | 'd_duration'\n    | 'stake_value'\n    | 'payout_value'\n> & { curr_duration_unit: string; curr_duration_value: number };\n\nconst DEFAULT_DURATION = Object.freeze({\n    t: 5,\n    s: 15,\n    m: 3,\n    h: 1,\n    d: 1,\n});\n\nconst reducer = (state: TReducer, payload: Partial<TReducer>) => {\n    return {\n        ...state,\n        ...payload,\n    };\n};\n\nconst makeGetDefaultDuration = (trade_duration: number, trade_duration_unit: string) => (duration_unit: string) =>\n    trade_duration_unit === duration_unit\n        ? trade_duration\n        : DEFAULT_DURATION[duration_unit as keyof typeof DEFAULT_DURATION];\n\nconst TradeParamsModal = observer(({ is_open, toggleModal, tab_index }: TTradeParamsModal) => {\n    const { client } = useStore();\n    const { currency } = client;\n    const { amount, form_components, duration, duration_unit, duration_units_list } = useTraderStore();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const getDefaultDuration = React.useCallback(makeGetDefaultDuration(duration, duration_unit), []);\n\n    const [state, dispatch] = React.useReducer(reducer, {\n        trade_param_tab_idx: tab_index,\n        duration_tab_idx: undefined,\n        amount_tab_idx: undefined,\n        has_amount_error: false,\n        has_duration_error: false,\n        // duration unit values\n        curr_duration_unit: duration_unit,\n        curr_duration_value: duration,\n        t_duration: getDefaultDuration('t'),\n        s_duration: getDefaultDuration('s'),\n        m_duration: getDefaultDuration('m'),\n        h_duration: getDefaultDuration('h'),\n        d_duration: getDefaultDuration('d'),\n        // amount values\n        stake_value: amount,\n        payout_value: amount,\n    });\n\n    usePreventIOSZoom();\n\n    React.useEffect(() => {\n        setSelectedDuration(duration_unit, duration);\n        setDurationTabIdx();\n        // duration and duration_unit can be changed in trade-store when contract type is changed\n    }, [duration, duration_unit]);\n\n    const setTradeParamTabIdx = (trade_param_tab_idx: number) => dispatch({ trade_param_tab_idx });\n\n    const setDurationTabIdx = (duration_tab_idx?: number) => dispatch({ duration_tab_idx });\n\n    const setAmountTabIdx = (amount_tab_idx?: number) => dispatch({ amount_tab_idx });\n\n    const setSelectedAmount = (basis: string, selected_basis_value: string | number) =>\n        dispatch({ [`${basis}_value`]: selected_basis_value });\n\n    const setSelectedDuration = (selected_duration_unit: string, selected_duration: number) => {\n        dispatch({\n            [`${selected_duration_unit}_duration`]: selected_duration,\n            curr_duration_unit: selected_duration_unit,\n            curr_duration_value: selected_duration,\n        });\n    };\n\n    const setAmountError = (has_error: boolean) => {\n        dispatch({ has_amount_error: has_error });\n    };\n    const setDurationError = (has_error: boolean) => {\n        dispatch({ has_duration_error: has_error });\n    };\n\n    const isVisible = (component_key: string): boolean => form_components.includes(component_key);\n    return (\n        <React.Fragment>\n            <Modal\n                id='dt_trade_parameters_mobile'\n                className='trade-params'\n                is_open={is_open}\n                header={<div />}\n                toggleModal={toggleModal}\n                height='auto'\n                width='calc(100vw - 32px)'\n            >\n                <ThemedScrollbars>\n                    <Div100vhContainer className='mobile-widget-dialog__wrapper' max_autoheight_offset='120px'>\n                        <TradeParamsMobile\n                            currency={currency}\n                            toggleModal={toggleModal}\n                            isVisible={isVisible}\n                            setTradeParamTabIdx={setTradeParamTabIdx}\n                            trade_param_tab_idx={tab_index}\n                            setDurationTabIdx={setDurationTabIdx}\n                            duration_tab_idx={state.duration_tab_idx}\n                            setAmountTabIdx={setAmountTabIdx}\n                            amount_tab_idx={state.amount_tab_idx}\n                            // amount\n                            setSelectedAmount={setSelectedAmount}\n                            stake_value={state.stake_value}\n                            payout_value={state.payout_value}\n                            duration_unit={state.curr_duration_unit}\n                            duration_value={state.curr_duration_value}\n                            duration_units_list={duration_units_list}\n                            has_amount_error={state.has_amount_error}\n                            setAmountError={setAmountError}\n                            // duration\n                            setSelectedDuration={setSelectedDuration}\n                            has_duration_error={state.has_duration_error}\n                            setDurationError={setDurationError}\n                            t_duration={state.t_duration}\n                            s_duration={state.s_duration}\n                            m_duration={state.m_duration}\n                            h_duration={state.h_duration}\n                            d_duration={state.d_duration}\n                        />\n                    </Div100vhContainer>\n                </ThemedScrollbars>\n            </Modal>\n        </React.Fragment>\n    );\n});\n\nexport default TradeParamsModal;\n\nconst TradeParamsMobile = observer(\n    ({\n        currency,\n        toggleModal,\n        isVisible,\n        setAmountTabIdx,\n        amount_tab_idx,\n        setTradeParamTabIdx,\n        trade_param_tab_idx,\n        setDurationTabIdx,\n        duration_unit,\n        duration_units_list,\n        duration_value,\n        duration_tab_idx,\n        has_amount_error,\n        has_duration_error,\n        // amount\n        setAmountError,\n        setSelectedAmount,\n        stake_value,\n        payout_value,\n        // duration\n        setDurationError,\n        setSelectedDuration,\n        t_duration,\n        s_duration,\n        m_duration,\n        h_duration,\n        d_duration,\n    }: TTradeParamsMobile) => {\n        const { basis_list, basis, expiry_epoch, is_turbos, is_vanilla } = useTraderStore();\n        const getDurationText = () => {\n            const duration = duration_units_list.find(d => d.value === duration_unit);\n            return `${duration_value} ${\n                duration && (duration_value > 1 ? localize(duration.text) : localize(duration.text.slice(0, -1)))\n            }`;\n        };\n\n        const getAmountText = () => {\n            const has_selected_tab_idx = typeof amount_tab_idx !== 'undefined';\n            const active_index = has_selected_tab_idx ? amount_tab_idx : basis_list.findIndex(b => b.value === basis);\n\n            return <Money currency={currency} show_currency amount={active_index === 1 ? payout_value : stake_value} />;\n        };\n\n        const getHeaderContent = (tab_key: string) => {\n            switch (tab_key) {\n                case 'duration':\n                    return (\n                        <div className='trade-params__header'>\n                            <div className='trade-params__header-label'>{localize('Duration')}</div>\n                            <div\n                                className={classNames('trade-params__header-value', {\n                                    'trade-params__header-value--has-error': has_duration_error,\n                                })}\n                            >\n                                {has_duration_error ? localize('Error') : getDurationText()}\n                            </div>\n                        </div>\n                    );\n                case 'amount':\n                    return (\n                        <div className='trade-params__header'>\n                            <div className='trade-params__header-label'>\n                                {is_turbos || is_vanilla ? localize('Stake') : localize('Amount')}\n                            </div>\n                            <div\n                                className={classNames('trade-params__header-value', {\n                                    'trade-params__header-value--has-error': has_amount_error,\n                                })}\n                            >\n                                {has_amount_error ? localize('Error') : getAmountText()}\n                            </div>\n                        </div>\n                    );\n                default:\n                    return null;\n            }\n        };\n        return (\n            <Tabs\n                active_index={trade_param_tab_idx}\n                className='trade-params-duration-amount'\n                onTabItemClick={setTradeParamTabIdx}\n                top\n            >\n                {isVisible('duration') ? (\n                    <div data-header-content={getHeaderContent('duration')}>\n                        <DurationMobile\n                            // @ts-expect-error: TODO: check if TS error is gone after <DurationMobile /> is migrated to TS\n                            toggleModal={toggleModal}\n                            amount_tab_idx={amount_tab_idx}\n                            duration_tab_idx={duration_tab_idx}\n                            setDurationTabIdx={setDurationTabIdx}\n                            setSelectedDuration={setSelectedDuration}\n                            setDurationError={setDurationError}\n                            has_amount_error={has_amount_error}\n                            t_duration={t_duration}\n                            s_duration={s_duration}\n                            m_duration={m_duration}\n                            h_duration={h_duration}\n                            d_duration={d_duration}\n                            stake_value={stake_value}\n                            payout_value={payout_value}\n                            expiry_epoch={expiry_epoch}\n                        />\n                    </div>\n                ) : null}\n                {isVisible('amount') ? (\n                    <div data-header-content={getHeaderContent('amount')}>\n                        <AmountMobile\n                            duration_unit={duration_unit}\n                            duration_value={duration_value}\n                            toggleModal={toggleModal}\n                            amount_tab_idx={amount_tab_idx}\n                            setAmountTabIdx={setAmountTabIdx}\n                            has_duration_error={has_duration_error}\n                            setSelectedAmount={setSelectedAmount}\n                            setAmountError={setAmountError}\n                            stake_value={stake_value}\n                            payout_value={payout_value}\n                            basis={''}\n                            selected_basis={''}\n                        />\n                    </div>\n                ) : null}\n            </Tabs>\n        );\n    }\n);\n\nexport const LastDigitMobile = observer(() => {\n    const { form_components } = useTraderStore();\n    return form_components.includes('last_digit') ? <LastDigit /> : null;\n});\n\nexport const BarrierMobile = observer(() => {\n    const { form_components } = useTraderStore();\n    return form_components.includes('barrier') ? <Barrier /> : null;\n});\n","import React from 'react';\nimport { Money } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { getExpiryType, getDurationMinMaxValues, getLocalizedBasis } from '@deriv/shared';\nimport { MultiplierAmountWidget } from 'Modules/Trading/Components/Form/TradeParams/Multiplier/widgets.jsx';\nimport TradeParamsModal from '../../Containers/trade-params-mobile';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst MobileWidget = observer(({ toggleDigitsWidget, is_collapsed }) => {\n    const { ui } = useStore();\n    const { onChangeUiStore } = ui;\n    const trade_store = useTraderStore();\n    const {\n        amount,\n        basis,\n        currency,\n        duration,\n        duration_min_max,\n        duration_unit,\n        form_components,\n        is_multiplier,\n        last_digit,\n        onChange,\n    } = trade_store;\n\n    const [is_open, setIsOpen] = React.useState(false);\n    const [tab_index, setTabIndex] = React.useState(0);\n\n    React.useEffect(() => {\n        assertDurationIsWithinBoundary();\n    });\n\n    const assertDurationIsWithinBoundary = () => {\n        const contract_expiry_type = getExpiryType(trade_store);\n        const [min_value, max_value] = getDurationMinMaxValues(duration_min_max, contract_expiry_type, duration_unit);\n\n        if (contract_expiry_type === 'tick' && duration < min_value) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: min_value });\n            onChange({ target: { name: 'duration', value: min_value } });\n        }\n        if (!(duration < min_value) && duration > max_value) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: max_value });\n            onChange({ target: { name: 'duration', value: max_value } });\n        }\n    };\n\n    // tab_index 0 is duration and 1 is amount\n    const toggleWidget = tab_index => {\n        setTabIndex(tab_index);\n        setIsOpen(!is_open);\n    };\n\n    const getHumanReadableDuration = () => {\n        if (!duration_unit) return '';\n        const lookup = {\n            t: [localize('tick'), localize('ticks')],\n            s: [localize('second'), localize('seconds')],\n            m: [localize('min'), localize('mins')],\n            h: [localize('hour'), localize('hours')],\n            d: [localize('day'), localize('days')],\n        };\n\n        try {\n            if (!duration_unit) return '';\n            const formatted_duration_unit = +duration === 1 ? lookup[duration_unit][0] : lookup[duration_unit][1];\n\n            return `${duration} ${formatted_duration_unit}`;\n        } catch (e) {\n            return '';\n        }\n    };\n\n    const isVisible = component => {\n        return form_components.includes(component);\n    };\n\n    const localized_basis = getLocalizedBasis();\n\n    const stakeOrPayout = () => {\n        switch (basis) {\n            case 'stake':\n                return localized_basis.stake;\n            case 'payout':\n                return localized_basis.payout;\n            default:\n                return basis;\n        }\n    };\n\n    return (\n        <div className='mobile-widget__wrapper'>\n            {is_multiplier ? (\n                <MultiplierAmountWidget />\n            ) : (\n                <div id='duration_amount_selector' className='mobile-widget duration_amount_selector'>\n                    <div className='mobile-widget__duration' onClick={() => toggleWidget(0)}>\n                        {getHumanReadableDuration()}\n                    </div>\n                    <div className='mobile-widget__amount--container' onClick={() => toggleWidget(1)}>\n                        <div className='mobile-widget__amount'>\n                            <Money amount={amount} currency={currency} show_currency />\n                        </div>\n                        <div className='mobile-widget__type'>{stakeOrPayout()}</div>\n                    </div>\n                </div>\n            )}\n            <TradeParamsModal is_open={is_open} toggleModal={() => toggleWidget(tab_index)} tab_index={tab_index} />\n            {isVisible('last_digit') && is_collapsed && (\n                <div className='mobile-widget' onClick={toggleDigitsWidget}>\n                    <div className='mobile-widget__amount'>\n                        <Localize i18n_default_text='Digit: {{last_digit}} ' values={{ last_digit }} />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n});\n\nexport default MobileWidget;\n","import React from 'react';\nimport { Checkbox, RadioGroup, Dialog, Popover, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { onToggleCancellation, onChangeCancellationDuration } from 'Stores/Modules/Trading/Helpers/multiplier';\nimport Fieldset from 'App/Components/Form/fieldset.tsx';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst DealCancellationWarningDialog = observer(({ is_visible, onConfirm, onCancel }) => {\n    const { ui } = useStore();\n    const { disableApp, enableApp, should_show_cancellation_warning, toggleCancellationWarning } = ui;\n    return (\n        <Dialog\n            className='trade-params__multiplier-deal-cancellation-dialog'\n            title={localize('About deal cancellation')}\n            confirm_button_text={localize('Got it')}\n            cancel_button_text={localize('Cancel')}\n            onConfirm={onConfirm}\n            onCancel={onCancel}\n            is_mobile_full_width={false}\n            is_visible={is_visible}\n            disableApp={disableApp}\n            enableApp={enableApp}\n            portal_element_id='modal_root'\n        >\n            <Text size='xxxs' color='general'>\n                <Localize i18n_default_text='Take profit and/or stop loss are not available while deal cancellation is active.' />\n            </Text>\n            <Checkbox\n                defaultChecked={!should_show_cancellation_warning}\n                onChange={() => toggleCancellationWarning()}\n                name={'should_show_cancellation_warning'}\n                label={localize(\"Don't show this again\")}\n            />\n        </Dialog>\n    );\n});\n\nconst CancelDeal = observer(\n    ({ has_cancellation, has_take_profit, has_stop_loss, onChangeMultiple, cancellation_duration }) => {\n        const { ui } = useStore();\n        const { should_show_cancellation_warning } = ui;\n        const { cancellation_range_list } = useTraderStore();\n        const [is_deal_cancel_warning_visible, setDealCancelWarningVisibility] = React.useState(false);\n\n        const canToggleDealCancel = () => {\n            const should_show_popover = (has_take_profit || has_stop_loss) && should_show_cancellation_warning;\n            if (should_show_popover) setDealCancelWarningVisibility(should_show_popover);\n            return !should_show_popover;\n        };\n\n        return (\n            <React.Fragment>\n                <DealCancellationWarningDialog\n                    is_visible={is_deal_cancel_warning_visible}\n                    onCancel={() => setDealCancelWarningVisibility(false)}\n                    onConfirm={() => {\n                        setDealCancelWarningVisibility(false);\n                        onToggleCancellation({ has_cancellation, onChangeMultiple });\n                    }}\n                />\n                <Fieldset className='trade-container__fieldset'>\n                    <div className='dc-input-wrapper--inline'>\n                        <Checkbox\n                            id='dt_cancellation-checkbox_input'\n                            onChange={() => {\n                                if (canToggleDealCancel()) {\n                                    onToggleCancellation({ has_cancellation, onChangeMultiple });\n                                }\n                            }}\n                            name='has_cancellation'\n                            label={localize('Deal cancellation')}\n                            defaultChecked={has_cancellation}\n                        />\n                        <Popover\n                            alignment='left'\n                            icon='info'\n                            id='dt_multiplier-stake__tooltip'\n                            is_bubble_hover_enabled\n                            classNameBubble='trade-container__deal-cancellation-popover'\n                            zIndex={9999}\n                            message={localize(\n                                'Cancel your trade anytime within a chosen time-frame. Triggered automatically if your trade reaches the stop out level within the chosen time-frame.'\n                            )}\n                        />\n                    </div>\n                    {has_cancellation && (\n                        <React.Fragment>\n                            <RadioGroup\n                                className='trade-params__multiplier-radio-group'\n                                name='trade-params__multiplier-radio'\n                                selected={cancellation_duration}\n                                onToggle={event => onChangeCancellationDuration({ event, onChangeMultiple })}\n                            >\n                                {cancellation_range_list.map(({ text, value }) => (\n                                    <RadioGroup.Item key={value} id={text} label={text} value={value.toString()} />\n                                ))}\n                            </RadioGroup>\n                        </React.Fragment>\n                    )}\n                </Fieldset>\n            </React.Fragment>\n        );\n    }\n);\n\nexport default CancelDeal;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { MobileDialog, Button, Div100vhContainer } from '@deriv/components';\nimport { isDeepEqual, pick } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport StopLoss from 'Modules/Trading/Components/Form/TradeParams/Multiplier/stop-loss.jsx';\nimport TakeProfit from 'Modules/Trading/Components/Form/TradeParams/Multiplier/take-profit.jsx';\nimport CancelDeal from 'Modules/Trading/Components/Elements/Multiplier/cancel-deal-mobile.jsx';\n\nconst RiskManagementDialog = observer(({ is_open, onClose, toggleDialog }) => {\n    const {\n        is_turbos,\n        take_profit,\n        has_take_profit,\n        has_stop_loss,\n        stop_loss,\n        has_cancellation,\n        cancellation_range_list,\n        cancellation_duration,\n        onChangeMultiple,\n    } = useTraderStore();\n    const applied_risk_management_state = {\n        take_profit,\n        stop_loss,\n        has_take_profit,\n        has_stop_loss,\n        has_cancellation,\n        cancellation_duration,\n    };\n    const [state, setState] = React.useState(applied_risk_management_state);\n\n    const [validation_errors, setValidationErrors] = React.useState({});\n\n    const should_show_deal_cancellation = cancellation_range_list?.length > 0;\n\n    const getStateToCompare = _state => {\n        const props_to_pick = [\n            'has_take_profit',\n            'has_stop_loss',\n            'has_cancellation',\n            _state.has_take_profit && 'take_profit',\n            _state.has_stop_loss && 'stop_loss',\n            _state.has_cancellation && 'cancellation_duration',\n        ];\n\n        return pick(_state, props_to_pick);\n    };\n\n    const isStateUnchanged = () => {\n        return isDeepEqual(getStateToCompare(state), getStateToCompare(applied_risk_management_state));\n    };\n\n    const validate = new_state => {\n        setValidationErrors({\n            take_profit:\n                new_state.has_take_profit && !new_state.take_profit\n                    ? [localize('Please enter a take profit amount.')]\n                    : [],\n            stop_loss:\n                new_state.has_stop_loss && !new_state.stop_loss ? [localize('Please enter a stop loss amount.')] : [],\n        });\n    };\n\n    const onChange = e => {\n        const { name, value } = e.target;\n        const new_state = { ...state };\n        new_state[name] = value;\n        setState(new_state);\n        validate(new_state);\n    };\n\n    const onChangeMultipleLocal = props => {\n        const new_state = { ...state };\n        Object.assign(new_state, props);\n        setState(new_state);\n        validate(new_state);\n    };\n\n    const apply = () => {\n        onChangeMultiple(state);\n        toggleDialog();\n    };\n\n    const resetAndClose = (...args) => {\n        setState(applied_risk_management_state);\n        onClose(...args);\n    };\n\n    return (\n        <React.Fragment>\n            <MobileDialog portal_element_id='modal_root' visible={is_open} has_content_scroll onClose={resetAndClose}>\n                <Div100vhContainer\n                    className={classNames('trade-params__multiplier-risk-management-dialog', {\n                        'trade-params__multiplier-risk-management-dialog--no-cancel': !should_show_deal_cancellation,\n                    })}\n                    height_offset='54px'\n                >\n                    <TakeProfit\n                        take_profit={state.take_profit}\n                        has_take_profit={state.has_take_profit}\n                        onChange={onChange}\n                        onChangeMultiple={onChangeMultipleLocal}\n                        validation_errors={validation_errors}\n                    />\n                    {!is_turbos && (\n                        <StopLoss\n                            stop_loss={state.stop_loss}\n                            has_stop_loss={state.has_stop_loss}\n                            onChange={onChange}\n                            onChangeMultiple={onChangeMultipleLocal}\n                            validation_errors={validation_errors}\n                        />\n                    )}\n                    {should_show_deal_cancellation && (\n                        <CancelDeal\n                            has_take_profit={state.has_take_profit}\n                            has_stop_loss={state.has_stop_loss}\n                            has_cancellation={state.has_cancellation}\n                            cancellation_duration={state.cancellation_duration}\n                            onChangeMultiple={onChangeMultipleLocal}\n                        />\n                    )}\n                    <div className='trade-params__multiplier-risk-management-dialog-bottom-separator' />\n                    <div className='trade-params__multiplier-risk-management-dialog-apply-button'>\n                        <Button\n                            text={localize('Apply')}\n                            onClick={apply}\n                            primary\n                            is_disabled={\n                                validation_errors.take_profit?.length > 0 ||\n                                validation_errors.stop_loss?.length > 0 ||\n                                isStateUnchanged()\n                            }\n                        />\n                    </div>\n                </Div100vhContainer>\n            </MobileDialog>\n        </React.Fragment>\n    );\n});\n\nexport default RiskManagementDialog;\n","import React from 'react';\nimport { Money } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport RiskManagementDialog from 'Modules/Trading/Containers/Multiplier/risk-management-dialog.jsx';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst RiskManagementInfo = observer(() => {\n    const {\n        currency,\n        stop_loss,\n        take_profit,\n        has_take_profit,\n        has_stop_loss,\n        cancellation_duration,\n        cancellation_range_list,\n        has_cancellation,\n    } = useTraderStore();\n    const [is_dialog_open, setDialogOpen] = React.useState(false);\n    const has_risk_management = has_take_profit || has_stop_loss || has_cancellation;\n    const toggleDialog = () => {\n        setDialogOpen(!is_dialog_open);\n    };\n    const cancellation_label = cancellation_range_list.find(r => r.value === cancellation_duration)?.text;\n\n    return (\n        <React.Fragment>\n            <RiskManagementDialog\n                is_open={is_dialog_open}\n                toggleDialog={toggleDialog}\n                onClose={() => setDialogOpen(false)}\n            />\n            <div\n                className='mobile-widget mobile-widget__multiplier-risk-management'\n                onClick={() => setDialogOpen(!is_dialog_open)}\n            >\n                {!has_risk_management && (\n                    <div className='mobile-widget__item'>\n                        <div className='mobile-widget__item-label'>{localize('Risk management')}</div>\n                        <div className='mobile-widget__item-value'>{localize('Not set')}</div>\n                    </div>\n                )}\n                {has_take_profit && (\n                    <div className='mobile-widget__item'>\n                        <div className='mobile-widget__item-label'>{localize('Take profit')}</div>\n                        <div className='mobile-widget__item-value'>\n                            <Money amount={take_profit} currency={currency} show_currency />\n                        </div>\n                    </div>\n                )}\n                {has_stop_loss && (\n                    <div className='mobile-widget__item'>\n                        <div className='mobile-widget__item-label'>{localize('Stop loss')}</div>\n                        <div className='mobile-widget__item-value'>\n                            <Money amount={stop_loss} currency={currency} show_currency />\n                        </div>\n                    </div>\n                )}\n                {has_cancellation && (\n                    <div className='mobile-widget__item'>\n                        <div className='mobile-widget__item-label'>{localize('Deal Cancellation')}</div>\n                        <div className='mobile-widget__item-value'>{cancellation_label}</div>\n                    </div>\n                )}\n            </div>\n        </React.Fragment>\n    );\n});\n\nexport default RiskManagementInfo;\n","import React from 'react';\nimport { Icon, Money, Text, Popover } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport { observer } from '@deriv/stores';\nimport { getContractSubtype, isVanillaContract } from '@deriv/shared';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { TProposalTypeInfo } from 'Types';\n\ntype TProposalInfo = {\n    [key: string]: TProposalTypeInfo;\n};\n\nconst PayoutPerPointMobile = observer(() => {\n    const { currency, proposal_info, contract_type } = useTraderStore();\n    const contract_key = contract_type?.toUpperCase();\n    // remove assertion and local TProposalInfo type after TS migration for trade package is complete\n    const { has_error, has_increased, id, message, obj_contract_basis } =\n        (proposal_info as TProposalInfo)?.[contract_key] || {};\n    const { text: label, value: payout_per_point } = obj_contract_basis || {};\n    const has_error_or_not_loaded = has_error || !id;\n    const turbos_titles = {\n        Long: localize('For Long:'),\n        Short: localize('For Short:'),\n    };\n    const tooltip_text = isVanillaContract(contract_type) ? (\n        <Localize i18n_default_text='The payout at expiry is equal to the payout per point multiplied by the difference between the final price and the strike price.' />\n    ) : (\n        <Localize\n            i18n_default_text='<0>{{title}}</0> {{message}}'\n            components={[<Text key={0} weight='bold' size='xxs' />]}\n            values={{\n                title: turbos_titles[getContractSubtype(contract_key) as keyof typeof turbos_titles],\n                message,\n            }}\n        />\n    );\n    if (!payout_per_point) return <Fieldset className='payout-per-point' />;\n    return (\n        <Fieldset className='payout-per-point'>\n            <div className='payout-per-point__label-wrapper'>\n                <Text size='xs' color='less-prominent' className='payout-per-point__label'>\n                    {label}\n                </Text>\n                <Popover\n                    alignment='top'\n                    icon='info'\n                    is_bubble_hover_enabled\n                    margin={0}\n                    zIndex='9999'\n                    message={message ? tooltip_text : ''}\n                />\n            </div>\n            <Text size='xs' weight='bold' className='payout-per-point__value'>\n                <Money amount={payout_per_point} currency={currency} show_currency should_format={false} />\n                <span className='trade-container__price-info-movement'>\n                    {!has_error_or_not_loaded && has_increased !== null && has_increased ? (\n                        <Icon icon='IcProfit' />\n                    ) : (\n                        <Icon icon='IcLoss' />\n                    )}\n                </span>\n            </Text>\n        </Fieldset>\n    );\n});\n\nexport default PayoutPerPointMobile;\n","import React from 'react';\nimport { Collapsible } from '@deriv/components';\nimport { TradeParamsLoader } from 'App/Components/Elements/ContentLoader';\nimport AllowEqualsMobile from 'Modules/Trading/Containers/allow-equals';\nimport {\n    hasCallPutEqual,\n    hasDurationForCallPutEqual,\n    isRiseFallEqual,\n} from 'Stores/Modules/Trading/Helpers/allow-equals';\nimport {\n    AccumulatorOptionsWidget,\n    MultiplierOptionsWidget,\n} from 'Modules/Trading/Components/Form/TradeParams/Multiplier/widgets.jsx';\nimport AccumulatorsAmountMobile from 'Modules/Trading/Components/Form/TradeParams/Accumulator/accumulators-amount-mobile';\nimport AccumulatorsInfoDisplay from 'Modules/Trading/Components/Form/TradeParams/Accumulator/accumulators-info-display';\nimport { BarrierMobile, LastDigitMobile } from 'Modules/Trading/Containers/trade-params-mobile';\nimport ContractType from 'Modules/Trading/Containers/contract-type';\nimport MobileWidget from 'Modules/Trading/Components/Elements/mobile-widget.jsx';\nimport Purchase from 'Modules/Trading/Containers/purchase';\nimport RiskManagementInfo from 'Modules/Trading/Components/Elements/Multiplier/risk-management-info.jsx';\nimport TakeProfit from 'Modules/Trading/Components/Form/TradeParams/Multiplier/take-profit.jsx';\nimport 'Sass/app/_common/mobile-widget.scss';\nimport classNames from 'classnames';\nimport AccumulatorsStats from 'Modules/Contract/Components/AccumulatorsStats';\nimport Strike from 'Modules/Trading/Components/Form/TradeParams/strike.jsx';\nimport BarrierSelector from 'Modules/Trading/Components/Form/TradeParams/Turbos/barrier-selector';\nimport PayoutPerPointMobile from 'Modules/Trading/Components/Elements/payout-per-point-mobile';\nimport TradeTypeTabs from 'Modules/Trading/Components/Form/TradeParams/trade-type-tabs';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\ntype TCollapsibleTradeParams = Pick<\n    ReturnType<typeof useTraderStore>,\n    | 'form_components'\n    | 'has_take_profit'\n    | 'previous_symbol'\n    | 'is_accumulator'\n    | 'is_trade_params_expanded'\n    | 'is_multiplier'\n    | 'is_vanilla'\n    | 'is_turbos'\n    | 'onChange'\n    | 'take_profit'\n    | 'setIsTradeParamsExpanded'\n> & {\n    has_allow_equals: boolean;\n    is_allow_equal: boolean;\n};\n\nconst CollapsibleTradeParams = ({\n    form_components,\n    has_allow_equals,\n    has_take_profit,\n    previous_symbol,\n    is_allow_equal,\n    is_accumulator,\n    is_multiplier,\n    is_trade_params_expanded,\n    is_turbos,\n    is_vanilla,\n    onChange,\n    take_profit,\n    setIsTradeParamsExpanded,\n}: TCollapsibleTradeParams) => {\n    React.useEffect(() => {\n        if (previous_symbol && is_allow_equal && has_allow_equals) setIsTradeParamsExpanded(true);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [previous_symbol]);\n\n    const is_collapsed = !is_trade_params_expanded;\n\n    const onClick = (e: boolean) => {\n        setIsTradeParamsExpanded(e);\n    };\n\n    const toggleDigitsWidget = () => {\n        setIsTradeParamsExpanded(true);\n    };\n\n    const isVisible = (component: string) => form_components.includes(component);\n\n    return (\n        <Collapsible position='top' is_collapsed={is_collapsed} onClick={onClick}>\n            {is_accumulator && is_collapsed && <AccumulatorsStats />}\n            <div className='trade-params__contract-type-container'>\n                <ContractType />\n                {is_multiplier && <MultiplierOptionsWidget />}\n                {isVisible('trade_type_tabs') && <TradeTypeTabs />}\n                {is_accumulator && <AccumulatorOptionsWidget />}\n            </div>\n            {isVisible('last_digit') && (\n                <div data-collapsible='true'>\n                    <LastDigitMobile />\n                </div>\n            )}\n            {isVisible('barrier') && (\n                <div data-collapsible='true'>\n                    <BarrierMobile />\n                </div>\n            )}\n            {isVisible('barrier_selector') && (\n                <div data-collapsible='true'>\n                    <BarrierSelector />\n                </div>\n            )}\n            {isVisible('strike') && (\n                <div data-collapsible='true'>\n                    <Strike />\n                </div>\n            )}\n            {/* \n            // @ts-expect-error Observer wrapped component needs to be ts migrated before props can be detected */}\n            {!is_accumulator && <MobileWidget is_collapsed={is_collapsed} toggleDigitsWidget={toggleDigitsWidget} />}\n            {has_allow_equals && (\n                <div data-collapsible='true'>\n                    <AllowEqualsMobile />\n                </div>\n            )}\n            {(is_multiplier || is_turbos) && (\n                <div data-collapsible='true'>\n                    <RiskManagementInfo />\n                </div>\n            )}\n            {is_accumulator && [\n                <AccumulatorsAmountMobile key='accu_amount' />,\n                <div\n                    data-collapsible='true'\n                    key='accu_take_profit'\n                    className={classNames('take-profit', 'mobile-widget')}\n                >\n                    <TakeProfit\n                        //@ts-expect-error Observer wrapped component needs to be ts migrated before props can be detected\n                        take_profit={take_profit}\n                        has_take_profit={has_take_profit}\n                        onChange={onChange}\n                        has_info={false}\n                    />\n                </div>,\n                <div data-collapsible='true' key='accu_info'>\n                    <AccumulatorsInfoDisplay />\n                </div>,\n            ]}\n            {(is_turbos || is_vanilla) && <PayoutPerPointMobile />}\n            <div\n                className={classNames({\n                    'purchase-container': !is_vanilla,\n                    [`purchase-container__${is_accumulator ? 'accumulator' : 'turbos'}`]: is_accumulator || is_turbos,\n                })}\n            >\n                <Purchase />\n            </div>\n        </Collapsible>\n    );\n};\n\nconst ScreenSmall = observer(({ is_trade_enabled }: { is_trade_enabled: boolean }) => {\n    const trade_store = useTraderStore();\n    const {\n        is_accumulator,\n        is_multiplier,\n        is_turbos,\n        is_vanilla,\n        duration_unit,\n        contract_types_list,\n        contract_type,\n        expiry_type,\n        contract_start_type,\n        form_components,\n        has_take_profit,\n        onChange,\n        previous_symbol,\n        is_trade_params_expanded,\n        setIsTradeParamsExpanded,\n        take_profit,\n    } = trade_store;\n    const is_allow_equal = !!trade_store.is_equal;\n\n    const collapsible_trade_params_props = {\n        is_accumulator,\n        is_multiplier,\n        is_turbos,\n        is_vanilla,\n        form_components,\n        has_take_profit,\n        onChange,\n        previous_symbol,\n        is_trade_params_expanded,\n        setIsTradeParamsExpanded,\n        take_profit,\n        is_allow_equal,\n    };\n\n    const has_callputequal_duration = hasDurationForCallPutEqual(\n        contract_types_list,\n        duration_unit,\n        contract_start_type\n    );\n\n    const has_callputequal = hasCallPutEqual(contract_types_list);\n    const has_allow_equals =\n        isRiseFallEqual(contract_type) && (has_callputequal_duration || expiry_type === 'endtime') && has_callputequal;\n\n    return !is_trade_enabled ? (\n        <div className='mobile-wrapper__content-loader'>\n            <TradeParamsLoader speed={2} />\n        </div>\n    ) : (\n        <CollapsibleTradeParams has_allow_equals={has_allow_equals} {...collapsible_trade_params_props} />\n    );\n});\n\nexport default ScreenSmall;\n"],"names":["AllowEquals","onChange","is_allow_equal","has_equals_only","className","classNames","Checkbox","label","localize","value","name","e","persist","target","checked","Number","disabled","Text","as","size","Localize","i18n_default_text","observer","useTraderStore","allow_equals_props","is_equal","requestPreviewProposal","debounce","store","override","onProposalResponse","new_store","requests","createProposalRequests","subscription_map","onResponse","response","error","subscription","id","isEmptyObject","proposal_requests","Object","keys","forEach","type","WS","Basis","basis","duration_unit","duration_value","toggleModal","has_duration_error","selected_basis","setSelectedAmount","setAmountError","useStore","ui","client","addToast","currency","contract_type","is_turbos","is_vanilla","onChangeMultiple","stake_boundary","trade_amount","amount","trade_basis","trade_duration_unit","trade_duration","duration","toUpperCase","min_stake","max_stake","user_currency_decimal_places","getDecimalPlaces","zero_decimals","toFixed","min_amount","parseFloat","toString","replace","validateAmount","localized_message","min_max_stake_message","values","selected_value","key","content","timeout","isNaN","length","strike__pos","Numpad","format","onSubmit","on_change_obj","min","max","is_currency","render","Money","should_format","reset_press_interval","reset_value","pip_size","onValidate","submit_label","onValueChange","num","amount_tab_idx","setAmountTabIdx","stake_value","payout_value","basis_list","active_index","findIndex","b","Tabs","onTabItemClick","top","map","basis_option","text","is_open","usePreventIOSZoom","enableApp","disableApp","Modal","is_title_centered","should_header_stick_body","height","width","title","Div100vhContainer","max_autoheight_offset","TradeParamsMobile","trade_store","trade_stop_out","React","setStakeValue","commission","setCommission","stop_out","setStopOut","stake_ref","isMounted","useIsMounted","dispose","proposal","echo_req","current","limit_order","order_amount","Popover","alignment","classNameBubble","icon","zIndex","is_bubble_hover_enabled","message","components","show_currency","stake","should_show_tooltip","items_list","contract_name","current_value_object","info","is_tooltip_disabled","popover_alignment","disable_target_icon","RadioGroup","selected","onToggle","MultiplierOptions","multiplier","multiplier_range_list","modal_title","accumulator_range_list","growth_rate","tick_size_barrier","proposal_info","has_error_or_not_loaded","ACCU","has_error","getGrowthRatePercentage","getTickSizeBarrierPercentage","MultipliersExpirationModal","has_close_icon","style","minHeight","padding","color","is_text_only","text_size","has_separator","Button","large","primary","has_effect","onClick","propTypes","PropTypes","AmountWidget","expiration","is_crypto_multiplier","setIsOpen","is_expiration_modal_open","setIsExpirationModalOpen","toggleExpirationModal","weight","commission_text_size","stop_out_text_size","MultiplierAmountWidget","amount_widget_props","RadioGroupOptionsWidget","displayed_trade_param","tooltip_message","is_disabled","stopPropagation","MultiplierOptionsWidget","AccumulatorOptionsWidget","has_open_accu_contract","is_nativepicker","current_focus","setCurrentFocus","is_single_currency","MobileWrapper","LabeledQuantityInputMobile","input_label","classNameInlinePrefix","classNameInput","fractional_digits","inline_prefix","is_autocomplete_disabled","is_float","is_hj_whitelisted","is_incrementable","is_negative_disabled","max_length","AMOUNT_MAX_LENGTH","ariaLabel","updateAmountChanges","obj","Ticks","setDurationError","has_amount_error","selected_duration","setSelectedDuration","duration_min_max","getDurationMinMaxValues","min_tick","max_tick","tick_duration","TickPicker","default_value","max_value","min_value","tick","singular_label","plural_label","Numbers","contract_expiry","duration_unit_option","duration_values","expiry_epoch","show_expiry","setHasError","validateDuration","addComma","parseInt","line_height","date","epoch","moment","add","expiry_date","Date","getTime","toUTCString","substring","setExpiryDate","d_duration","expiry_type","v","duration_tab_idx","h_duration","m_duration","s_duration","setDurationTabIdx","t_duration","duration_units_list","d","handleRelativeChange","selected_basis_option","index","unit","onTabChange","single_tab_has_no_label","RelativeDatepicker","min_date","max_date","DEFAULT_DURATION","freeze","t","s","m","h","reducer","state","payload","tab_index","form_components","getDefaultDuration","trade_param_tab_idx","undefined","curr_duration_unit","curr_duration_value","dispatch","selected_duration_unit","header","ThemedScrollbars","isVisible","component_key","includes","setTradeParamTabIdx","selected_basis_value","getHeaderContent","tab_key","find","slice","LastDigitMobile","BarrierMobile","MobileWidget","toggleDigitsWidget","is_collapsed","onChangeUiStore","is_multiplier","last_digit","setTabIndex","assertDurationIsWithinBoundary","component","contract_expiry_type","getExpiryType","toggleWidget","localized_basis","getLocalizedBasis","lookup","formatted_duration_unit","getHumanReadableDuration","payout","stakeOrPayout","DealCancellationWarningDialog","is_visible","onConfirm","onCancel","should_show_cancellation_warning","toggleCancellationWarning","Dialog","confirm_button_text","cancel_button_text","is_mobile_full_width","portal_element_id","defaultChecked","has_cancellation","has_take_profit","has_stop_loss","cancellation_duration","cancellation_range_list","is_deal_cancel_warning_visible","setDealCancelWarningVisibility","onToggleCancellation","should_show_popover","event","onChangeCancellationDuration","onClose","toggleDialog","take_profit","stop_loss","applied_risk_management_state","setState","validation_errors","setValidationErrors","should_show_deal_cancellation","getStateToCompare","_state","props_to_pick","pick","validate","new_state","onChangeMultipleLocal","props","assign","MobileDialog","visible","has_content_scroll","height_offset","isDeepEqual","is_dialog_open","setDialogOpen","has_risk_management","cancellation_label","r","PayoutPerPointMobile","contract_key","has_increased","obj_contract_basis","payout_per_point","turbos_titles","Long","Short","tooltip_text","isVanillaContract","getContractSubtype","margin","Icon","CollapsibleTradeParams","has_allow_equals","previous_symbol","is_accumulator","is_trade_params_expanded","setIsTradeParamsExpanded","Collapsible","position","AccumulatorsStats","has_info","ScreenSmall","is_trade_enabled","contract_types_list","contract_start_type","collapsible_trade_params_props","has_callputequal_duration","hasDurationForCallPutEqual","has_callputequal","hasCallPutEqual","isRiseFallEqual","speed"],"sourceRoot":""}