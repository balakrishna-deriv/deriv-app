{"version":3,"file":"trader/js/trader.trader-app.db79bc2b4cdc68178e02.js","mappings":"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","sources":["webpack://@deriv/trader/../stores/src/storeContext.ts","webpack://@deriv/trader/../api/src/APIProvider.tsx","webpack://@deriv/trader/../api/src/useSubscription.ts","webpack://@deriv/trader/../stores/src/useStore.ts","webpack://@deriv/trader/../stores/src/providers/ExchangeRatesProvider.tsx","webpack://@deriv/trader/../stores/src/stores/BaseStore.ts","webpack://@deriv/trader/../stores/src/stores/ExchangeRatesStore.ts","webpack://@deriv/trader/../stores/src/stores/FeatureFlagsStore.ts","webpack://@deriv/trader/../stores/src/storeProvider.tsx","webpack://@deriv/trader/./src/App/Components/Animations/bounce.jsx","webpack://@deriv/trader/./src/App/Components/Animations/slide-in.jsx","webpack://@deriv/trader/./src/App/Components/Elements/ContentLoader/positions-card.jsx","webpack://@deriv/trader/./src/App/Components/Elements/ContentLoader/trade-params.jsx","webpack://@deriv/trader/./src/App/Components/Elements/PositionsDrawer/helpers/positions-helper.js","webpack://@deriv/trader/./src/_common/components/loading.tsx","webpack://@deriv/trader/./src/App/Components/Elements/chart-loader.jsx","webpack://@deriv/trader/./src/App/Components/Routes/helpers.js","webpack://@deriv/trader/./src/App/Components/Elements/EmptyPortfolioMessage/empty-portfolio-message.jsx","webpack://@deriv/trader/./src/App/Components/Elements/EmptyPortfolioMessage/index.js","webpack://@deriv/trader/./src/App/Components/Elements/PositionsDrawer/positions-drawer.jsx","webpack://@deriv/trader/./src/App/Components/Elements/PositionsDrawer/index.js","webpack://@deriv/trader/./src/App/Components/Elements/market-countdown-timer.jsx","webpack://@deriv/trader/./src/App/Components/Elements/market-is-closed-overlay.jsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/test.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/Helpers/symbol.js","webpack://@deriv/trader/./src/Modules/Trading/Containers/chart-widgets.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/form-layout.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/Markers/accumulators-profit-loss-text.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/Markers/accumulators-profit-loss-tooltip.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/Markers/accumulators-chart-elements.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/toolbar-widgets.jsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/trade.jsx","webpack://@deriv/trader/./src/Modules/Trading/index.js","webpack://@deriv/trader/./src/App/Constants/routes-config.js","webpack://@deriv/trader/./src/App/Components/Routes/binary-link.jsx","webpack://@deriv/trader/./src/App/Components/Routes/route-with-sub-routes.jsx","webpack://@deriv/trader/./src/App/Components/Routes/binary-routes.jsx","webpack://@deriv/trader/./src/App/Components/Routes/index.js","webpack://@deriv/trader/./src/App/Containers/Routes/routes.jsx","webpack://@deriv/trader/./src/App/Components/Elements/PositionsDrawer/result-mobile.jsx","webpack://@deriv/trader/./src/App/Components/Elements/PositionsDrawer/positions-modal-card.jsx","webpack://@deriv/trader/./src/App/Components/Elements/TogglePositions/toggle-positions.jsx","webpack://@deriv/trader/./src/App/Components/Elements/TogglePositions/toggle-positions-mobile.jsx","webpack://@deriv/trader/./src/App/Containers/populate-header.jsx","webpack://@deriv/trader/./src/trader-providers.tsx","webpack://@deriv/trader/./src/App/Containers/trade-header-extensions.tsx","webpack://@deriv/trader/./src/App/Components/Elements/TogglePositions/index.js","webpack://@deriv/trader/./src/App/Containers/trade-footer-extensions.jsx","webpack://@deriv/trader/./src/App/Containers/trade-settings-extensions.tsx","webpack://@deriv/trader/./src/Stores/Modules/Trading/Actions/symbol.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Constants/validation-rules.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Actions/purchase.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/accumulator.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Actions/contract-type.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Actions/duration.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Actions/start-date.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/process.js","webpack://@deriv/trader/./src/Stores/Modules/SmartChart/Constants/barriers.js","webpack://@deriv/trader/./src/Utils/Validator/errors.js","webpack://@deriv/trader/./src/Utils/Validator/validator.js","webpack://@deriv/trader/./src/Utils/Validator/index.js","webpack://@deriv/trader/./src/Stores/base-store.js","webpack://@deriv/trader/./src/Stores/Modules/SmartChart/Helpers/barriers.js","webpack://@deriv/trader/./src/Stores/Modules/SmartChart/chart-barrier-store.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/limit-orders.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/trade-store.js","webpack://@deriv/trader/./src/Stores/Modules/index.js","webpack://@deriv/trader/./src/Stores/index.js","webpack://@deriv/trader/./src/App/init-store.js","webpack://@deriv/trader/./src/App/app.tsx","webpack://@deriv/trader/./src/App/index.tsx","webpack://@deriv/trader/./src/Constants/contract.js","webpack://@deriv/trader/./src/Modules/Contract/Components/AccumulatorsStats/ticks-history-counter.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/AccumulatorsStats/expanded-ticks-history.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/AccumulatorsStats/accumulators-stats-manual-modal.jsx","webpack://@deriv/trader/./src/Modules/Contract/Components/AccumulatorsStats/accumulators-stats.jsx","webpack://@deriv/trader/./src/Modules/Contract/Components/AccumulatorsStats/index.js","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/digit.jsx","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/digit-spot.jsx","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/last-digit-stat.jsx","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/digit-display.jsx","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/last-digit-pointer.jsx","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/last-digit-prediction.jsx","webpack://@deriv/trader/./src/Modules/Contract/Components/Digits/digits.jsx","webpack://@deriv/trader/./src/Modules/Contract/Components/Digits/index.js","webpack://@deriv/trader/./src/Modules/Page404/Components/Page404.jsx","webpack://@deriv/trader/./src/Modules/Page404/index.js","webpack://@deriv/trader/./src/Modules/SmartChart/Components/Markers/marker.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/bottom-widgets.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/buy-toast-notification.tsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/top-widgets.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/index.js","webpack://@deriv/trader/./src/Modules/Trading/Containers/toast-popup.jsx","webpack://@deriv/trader/./src/Modules/Trading/Helpers/contract-type.js","webpack://@deriv/trader/./src/Modules/Trading/Helpers/digits.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/contract-type.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/proposal.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/start-date.js","webpack://@deriv/trader/./src/Stores/useTraderStores.tsx","webpack://@deriv/trader/./src/Utils/Helpers/market-underlying.js","webpack://@deriv/trader/./src/_common/base/server_time.js","webpack://@deriv/trader/./src/_common/utility.js"],"sourcesContent":["import { createContext } from 'react';\nimport type { TStores } from '../types';\n\nconst StoreContext = createContext<TStores | null>(null);\n\nexport default StoreContext;\n","import React, { PropsWithChildren } from 'react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\n// import { ReactQueryDevtools } from '@tanstack/react-query-devtools';\n\nconst queryClient = new QueryClient();\n\nconst APIProvider = ({ children }: PropsWithChildren<unknown>) => (\n    <QueryClientProvider client={queryClient}>\n        {children}\n        {/*Temporary disabled due to the problem on codecov, You can uncomment to use in development environment, DO NOT COMMIT THIS UNCOMMENTED*/}\n        {/*<ReactQueryDevtools />*/}\n    </QueryClientProvider>\n);\n\nexport default APIProvider;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { useWS } from '@deriv/shared';\nimport type {\n    TSocketAcceptableProps,\n    TSocketRequestPayload,\n    TSocketResponseData,\n    TSocketSubscribableEndpointNames,\n} from '../types';\n\nconst useSubscription = <T extends TSocketSubscribableEndpointNames>(name: T) => {\n    const [is_loading, setIsLoading] = useState(false);\n    const [is_subscribed, setSubscribed] = useState(false);\n    const [error, setError] = useState<unknown>();\n    const [data, setData] = useState<TSocketResponseData<T>>();\n    const subscriber = useRef<{ unsubscribe?: VoidFunction }>();\n    const WS = useWS();\n\n    const subscribe = useCallback(\n        (...props: TSocketAcceptableProps<T>) => {\n            const prop = props?.[0];\n            const payload = prop && 'payload' in prop ? (prop.payload as TSocketRequestPayload<T>) : undefined;\n\n            setIsLoading(true);\n            setSubscribed(true);\n\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const onData = (response: any) => {\n                setData(response);\n                setIsLoading(false);\n            };\n\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const onError = (response: any) => {\n                setError(response.error);\n                setIsLoading(false);\n            };\n\n            try {\n                subscriber.current = WS.subscribe({ [name]: 1, subscribe: 1, ...(payload || {}) }).subscribe(\n                    onData,\n                    onError\n                );\n            } catch (e) {\n                setError(e);\n            }\n        },\n        [WS, name]\n    );\n\n    const unsubscribe = useCallback(() => {\n        subscriber.current?.unsubscribe?.();\n        setSubscribed(false);\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            unsubscribe();\n        };\n    }, [unsubscribe]);\n\n    return { subscribe, unsubscribe, is_loading, is_subscribed, error, data };\n};\n\nexport default useSubscription;\n","import { useContext } from 'react';\nimport StoreContext from './storeContext';\n\nconst useStore = () => {\n    const store = useContext(StoreContext);\n\n    if (!store) {\n        throw new Error('useStore must be used within StoreProvider');\n    }\n\n    return store;\n};\n\nexport default useStore;\n","import React, { useEffect } from 'react';\nimport { useSubscription } from '@deriv/api';\nimport merge from 'lodash.merge';\nimport { observer } from 'mobx-react-lite';\nimport useStore from '../useStore';\n\nconst ExchangeRatesProvider = observer(({ children }: React.PropsWithChildren<unknown>) => {\n    const { data, subscribe } = useSubscription('exchange_rates');\n    const {\n        exchange_rates: { update },\n    } = useStore();\n\n    useEffect(() => {\n        subscribe({ payload: { base_currency: 'USD' } });\n    }, [subscribe]);\n\n    useEffect(() => {\n        if (data) {\n            const { exchange_rates } = data;\n\n            if (exchange_rates) update(prev => merge(prev, exchange_rates));\n        }\n    }, [update, data]);\n\n    return <>{children}</>;\n});\n\nexport default ExchangeRatesProvider;\n","import { action, makeObservable, observable } from 'mobx';\nimport { makePersistable, stopPersisting } from 'mobx-persist-store';\n\nexport default class BaseStore<T> {\n    data: T | undefined = undefined;\n\n    constructor(name: string, onHydrationDone?: VoidFunction) {\n        makeObservable(this, {\n            data: observable,\n            update: action.bound,\n            unmount: action.bound,\n        });\n\n        makePersistable(this, { name, properties: ['data'], storage: window.localStorage }).then(() =>\n            onHydrationDone?.()\n        );\n    }\n\n    update(data: NonNullable<T> | ((previous?: T) => NonNullable<T>)) {\n        this.data = data instanceof Function ? data(this.data) : data;\n    }\n\n    unmount() {\n        stopPersisting(this);\n    }\n}\n","import BaseStore from './BaseStore';\nimport type { ExchangeRatesResponse } from '@deriv/api-types';\n\nexport default class ExchangeRatesStore extends BaseStore<ExchangeRatesResponse['exchange_rates']> {\n    constructor() {\n        super('ExchangeRatesStore');\n    }\n}\n","import BaseStore from './BaseStore';\n\nconst FLAGS = {\n    foo: false,\n    bar: false,\n    baz: false,\n    // Add your flag here 🚀\n} satisfies Record<string, boolean>;\n\nexport default class FeatureFlagsStore extends BaseStore<{ [k in keyof typeof FLAGS]: boolean }> {\n    constructor() {\n        super('FeatureFlagsStore', () => {\n            // Set the default values for the first time.\n            if (!this.data) this.update(FLAGS);\n\n            // Update the store data if a new flag was added or removed.\n            if (this.data && Object.keys(this.data).length !== Object.keys(FLAGS).length) {\n                this.update(old => {\n                    const data = FLAGS;\n\n                    Object.keys(FLAGS).forEach(flag => {\n                        // @ts-expect-error flag key is always present in the object, Hence can ignore the TS error.\n                        if (old[flag] !== undefined) data[flag] = old[flag];\n                    });\n\n                    return data;\n                });\n            }\n        });\n    }\n}\n","import React, { useEffect, useMemo } from 'react';\nimport { ExchangeRatesProvider } from './providers';\nimport StoreContext from './storeContext';\nimport { ExchangeRatesStore, FeatureFlagsStore } from './stores';\nimport type { TCoreStores, TStores } from '../types';\n\nconst StoreProvider = ({ children, store }: React.PropsWithChildren<{ store: TCoreStores }>) => {\n    const memoizedValue: TStores = useMemo(() => {\n        // If the store is mocked for testing purposes, then return the mocked value.\n        if ('is_mock' in store && store.is_mock) return store as unknown as TStores;\n\n        // Otherwise, instantiate store and return it.\n        return {\n            ...store,\n            exchange_rates: new ExchangeRatesStore(),\n            feature_flags: new FeatureFlagsStore(),\n        };\n    }, [store]);\n\n    useEffect(() => {\n        return () => {\n            Object.values(memoizedValue).forEach(value => {\n                if (typeof value === 'object' && 'unmount' in value) value.unmount();\n            });\n        };\n    }, [memoizedValue]);\n\n    return (\n        <StoreContext.Provider value={memoizedValue}>\n            <ExchangeRatesProvider>{children}</ExchangeRatesProvider>\n        </StoreContext.Provider>\n    );\n};\n\nexport default StoreProvider;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { motion } from 'framer-motion';\n\nconst BounceUp = {\n    animate: {\n        y: 0,\n        opacity: 1,\n    },\n    initial: {\n        y: 35,\n        opacity: 0,\n    },\n    transition: {\n        type: 'spring',\n        stiffness: 500,\n        damping: 15,\n        duration: 0.3,\n    },\n};\n\nconst Bounce = ({ children, className, is_visible, keyname }) =>\n    is_visible ? (\n        <motion.div\n            initial={BounceUp.initial}\n            animate={BounceUp.animate}\n            transition={BounceUp.transition}\n            className={className}\n            key={keyname}\n        >\n            {children}\n        </motion.div>\n    ) : null;\n\nBounce.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    is_visible: PropTypes.bool,\n    keyname: PropTypes.string,\n};\n\nexport { Bounce };\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { motion } from 'framer-motion';\n\nconst SlideInFromTop = {\n    initial: {\n        y: -20,\n        opacity: 0,\n    },\n    animate: {\n        y: 0,\n        opacity: 1,\n    },\n    transition: {\n        duration: 0.2,\n    },\n};\n\nconst SlideInFromBottom = {\n    initial: {\n        y: 20,\n        opacity: 0,\n    },\n    animate: {\n        y: 0,\n        opacity: 1,\n    },\n    transition: {\n        duration: 0.2,\n    },\n};\n\nconst SlideIn = ({ children, className, keyname, is_visible, type }) => {\n    if (type === 'bottom') {\n        return (\n            <>\n                {is_visible && (\n                    <motion.div\n                        initial={SlideInFromBottom.initial}\n                        animate={SlideInFromBottom.animate}\n                        transition={SlideInFromBottom.transition}\n                        className={className}\n                        key={keyname}\n                    >\n                        {children}\n                    </motion.div>\n                )}\n            </>\n        );\n    }\n    return (\n        <>\n            {is_visible && (\n                <motion.div\n                    initial={SlideInFromTop.initial}\n                    animate={SlideInFromTop.animate}\n                    transition={SlideInFromTop.transition}\n                    className={className}\n                    key={keyname}\n                >\n                    {children}\n                </motion.div>\n            )}\n        </>\n    );\n};\n\nSlideIn.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    is_visible: PropTypes.bool,\n    keyname: PropTypes.string,\n    type: PropTypes.string,\n};\n\nexport { SlideIn };\n","import ContentLoader from 'react-content-loader';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PositionsCardLoader = ({ speed }) => (\n    <ContentLoader\n        height={173}\n        width={218}\n        speed={speed}\n        backgroundColor={'var(--general-section-1)'}\n        foregroundColor={'var(--general-hover)'}\n    >\n        <rect x='43' y='19' rx='0' ry='0' width='56' height='8' />\n        <rect x='147' y='19' rx='0' ry='0' width='56' height='8' />\n        <rect x='12' y='50' rx='0' ry='0' width='44' height='8' />\n        <rect x='13' y='68' rx='0' ry='0' width='192' height='8' />\n        <rect x='5' y='89' rx='0' ry='0' width='208' height='1' />\n        <rect x='12' y='104' rx='0' ry='0' width='44' height='8' />\n        <rect x='12' y='9' rx='0' ry='0' width='24' height='24' />\n        <rect x='116' y='11' rx='0' ry='0' width='24' height='24' />\n        <rect x='12' y='118' rx='0' ry='0' width='88' height='8' />\n        <rect x='116' y='104' rx='0' ry='0' width='44' height='8' />\n        <rect x='116' y='118' rx='0' ry='0' width='88' height='8' />\n        <rect x='12' y='139' rx='0' ry='0' width='44' height='8' />\n        <rect x='12' y='153' rx='0' ry='0' width='88' height='8' />\n        <rect x='116' y='139' rx='0' ry='0' width='44' height='8' />\n        <rect x='116' y='153' rx='0' ry='0' width='88' height='8' />\n    </ContentLoader>\n);\n\nPositionsCardLoader.propTypes = {\n    speed: PropTypes.number,\n};\n\nexport { PositionsCardLoader };\n","import ContentLoader from 'react-content-loader';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DesktopWrapper, MobileWrapper } from '@deriv/components';\n\nconst TradeParamsLoader = ({ speed }) => (\n    <>\n        <MobileWrapper>\n            <ContentLoader\n                height={214}\n                width={344}\n                speed={speed}\n                backgroundColor={'var(--general-section-1)'}\n                foregroundColor={'var(--general-hover)'}\n                viewBox='0 0 344 176'\n            >\n                <rect x='148' y='24' rx='3' ry='3' width='40' height='4' />\n                <rect x='8' y='40' rx='4' ry='4' width='328' height='40' />\n                <rect x='8' y='88' rx='4' ry='4' width='328' height='40' />\n                <rect x='8' y='136' rx='4' ry='4' width='160' height='70' />\n                <rect x='176' y='136' rx='4' ry='4' width='160' height='70' />\n            </ContentLoader>\n        </MobileWrapper>\n        <DesktopWrapper>\n            <ContentLoader\n                height={548}\n                width={240}\n                speed={speed}\n                backgroundColor={'var(--general-section-1)'}\n                foregroundColor={'var(--general-hover)'}\n            >\n                <rect x='0' y='0' rx='4' ry='4' width='240' height='76' />\n                <rect x='0' y='84' rx='4' ry='4' width='240' height='132' />\n                <rect x='0' y='224' rx='4' ry='4' width='240' height='120' />\n                <rect x='0' y='352' rx='4' ry='4' width='240' height='194' />\n            </ContentLoader>\n        </DesktopWrapper>\n    </>\n);\n\nTradeParamsLoader.propTypes = {\n    speed: PropTypes.number,\n};\n\nexport { TradeParamsLoader };\n","import { localize } from '@deriv/translations';\nimport { isHighLow, getContractTypesConfig, isCallPut, isVanillaContract } from '@deriv/shared';\n\nexport const addCommaToNumber = (num, decimal_places) => {\n    if (!num || isNaN(num)) {\n        return num;\n    }\n    const n = String(decimal_places ? (+num).toFixed(decimal_places) : num);\n    const p = n.indexOf('.');\n    return n.replace(/\\d(?=(?:\\d{3})+(?:\\.|$))/g, (m, i) => (p <= 0 || i < p ? `${m},` : m));\n};\n\nexport const getBarrierLabel = contract_info => {\n    if (isDigitType(contract_info.contract_type)) {\n        return localize('Target');\n    }\n    if (isVanillaContract(contract_info.contract_type)) {\n        return localize('Strike');\n    }\n    return localize('Barrier');\n};\n\nexport const getBarrierValue = contract_info => {\n    if (isDigitType(contract_info.contract_type)) {\n        return digitTypeMap(contract_info)[contract_info.contract_type];\n    }\n    return addCommaToNumber(contract_info.barrier);\n};\n\nexport const isDigitType = contract_type => /digit/.test(contract_type.toLowerCase());\n\nconst digitTypeMap = contract_info => ({\n    DIGITDIFF: localize('Not {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITEVEN: localize('Even'),\n    DIGITMATCH: localize('Equals {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITODD: localize('Odd'),\n    DIGITOVER: localize('Over {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITUNDER: localize('Under {{barrier}}', { barrier: contract_info.barrier }),\n});\n\nexport const filterByContractType = ({ contract_type, shortcode }, trade_contract_type) => {\n    const is_call_put = isCallPut(trade_contract_type);\n    const is_high_low = isHighLow({ shortcode });\n    const is_vanilla = isVanillaContract(contract_type);\n    const trade_types = is_call_put\n        ? ['CALL', 'CALLE', 'PUT', 'PUTE']\n        : getContractTypesConfig()[trade_contract_type]?.trade_types;\n    const match = trade_types?.includes(contract_type);\n    if (trade_contract_type === 'high_low') return is_high_low;\n    return match && (is_vanilla || !is_high_low);\n};\n","import classNames from 'classnames';\nimport React from 'react';\n\ntype LoadingProps = {\n    className?: string;\n    is_invisible?: boolean;\n    theme?: string;\n    id?: string;\n};\n\nconst Loading = ({ className, is_invisible, theme, id }: LoadingProps) => (\n    <div\n        id={id}\n        className={classNames('barspinner', `barspinner--${theme || 'dark'}`, { invisible: is_invisible }, className)}\n    >\n        {Array.from(new Array(5)).map((_x, inx) => (\n            <div key={inx} className={`barspinner__rect barspinner__rect--${inx + 1} rect${inx + 1}`} />\n        ))}\n    </div>\n);\n\nexport default Loading;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Loading from '_common/components/loading';\n\nconst ChartLoader = ({ is_dark, is_visible }) =>\n    is_visible ? (\n        <div className='chart-container__loader'>\n            <Loading theme={is_dark ? 'dark' : 'light'} />\n        </div>\n    ) : null;\n\nChartLoader.propTypes = {\n    is_dark: PropTypes.bool,\n    is_visible: PropTypes.bool,\n};\n\nexport default ChartLoader;\n","import { matchPath } from 'react-router';\nimport { routes } from '@deriv/shared';\n\nexport const normalizePath = path => (/^\\//.test(path) ? path : `/${path || ''}`); // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some(route_info => {\n        let match_path;\n        try {\n            match_path = matchPath(path, route_info);\n        } catch (e) {\n            if (/undefined/.test(e.message)) {\n                return undefined;\n            }\n        }\n\n        if (match_path) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) => !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) =>\n    Object.keys(params).reduce((p, name) => p.replace(`:${name}`, params[name]), route_path);\n\nexport const getContractPath = contract_id => getPath(routes.contract, { contract_id });\n","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\nconst EmptyPortfolioMessage = ({ error }) => (\n    <div className='portfolio-empty'>\n        <div className='portfolio-empty__wrapper'>\n            {error ? (\n                <Text color='disabled' size='xs'>\n                    {error}\n                </Text>\n            ) : (\n                <React.Fragment>\n                    <Icon icon='IcPortfolio' className='portfolio-empty__icon' size={96} color='disabled' />\n                    <Text align='center' className='portfolio-empty__text' color='disabled' size='xs'>\n                        {localize(\n                            'You have no open positions for this asset. To view other open positions, click Go to Reports'\n                        )}\n                    </Text>\n                </React.Fragment>\n            )}\n        </div>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","import EmptyPortfolioMessage from './empty-portfolio-message.jsx';\n\nexport default EmptyPortfolioMessage;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport { Icon, DataList, Text, PositionsDrawerCard } from '@deriv/components';\nimport { routes, useNewRowTransition } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport EmptyPortfolioMessage from '../EmptyPortfolioMessage';\nimport { filterByContractType } from './helpers';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\nconst PositionsDrawerCardItem = ({\n    row: portfolio_position,\n    measure,\n    onHoverPosition,\n    symbol,\n    is_new_row,\n    ...props\n}) => {\n    const { in_prop } = useNewRowTransition(is_new_row);\n\n    React.useEffect(() => {\n        measure();\n    }, [portfolio_position.contract_info.is_sold, measure]);\n\n    return (\n        <CSSTransition\n            in={in_prop}\n            timeout={150}\n            classNames={{\n                appear: 'dc-contract-card__wrapper--enter',\n                enter: 'dc-contract-card__wrapper--enter',\n                enterDone: 'dc-contract-card__wrapper--enter-done',\n                exit: 'dc-contract-card__wrapper--exit',\n            }}\n            onEntered={measure}\n            unmountOnExit\n        >\n            <div className='dc-contract-card__wrapper'>\n                <PositionsDrawerCard\n                    {...portfolio_position}\n                    {...props}\n                    onMouseEnter={() => {\n                        onHoverPosition(true, portfolio_position, symbol);\n                    }}\n                    onMouseLeave={() => {\n                        onHoverPosition(false, portfolio_position, symbol);\n                    }}\n                    onFooterEntered={measure}\n                    should_show_transition={is_new_row}\n                />\n            </div>\n        </CSSTransition>\n    );\n};\n\nconst PositionsDrawer = observer(({ ...props }) => {\n    const { symbol, contract_type: trade_contract_type } = useTraderStore();\n    const { client, common, contract_trade, portfolio, ui } = useStore();\n    const { currency } = client;\n    const { server_time } = common;\n    const { getContractById } = contract_trade;\n    const {\n        all_positions,\n        error,\n        onHoverPosition,\n        onMount,\n        onClickCancel,\n        onClickSell,\n        removePositionById: onClickRemove,\n    } = portfolio;\n    const {\n        is_mobile,\n        is_positions_drawer_on,\n        togglePositionsDrawer: toggleDrawer,\n        addToast,\n        current_focus,\n        removeToast,\n        setCurrentFocus,\n        should_show_cancellation_warning,\n        toggleCancellationWarning,\n        toggleUnsupportedContractModal,\n    } = ui;\n    const drawer_ref = React.useRef(null);\n    const list_ref = React.useRef(null);\n    const scrollbar_ref = React.useRef(null);\n\n    React.useEffect(() => {\n        onMount();\n    }, [onMount]);\n\n    React.useEffect(() => {\n        list_ref?.current?.scrollTo(0);\n        scrollbar_ref?.current?.scrollToTop();\n    }, [symbol, trade_contract_type]);\n\n    const positions = all_positions.filter(\n        p =>\n            p.contract_info &&\n            symbol === p.contract_info.underlying &&\n            filterByContractType(p.contract_info, trade_contract_type)\n    );\n\n    const body_content = (\n        <DataList\n            data_source={positions}\n            rowRenderer={args => (\n                <PositionsDrawerCardItem\n                    onHoverPosition={onHoverPosition}\n                    symbol={symbol}\n                    currency={currency}\n                    addToast={addToast}\n                    onClickCancel={onClickCancel}\n                    onClickSell={onClickSell}\n                    onClickRemove={onClickRemove}\n                    server_time={server_time}\n                    getContractById={getContractById}\n                    is_mobile={is_mobile}\n                    current_focus={current_focus}\n                    removeToast={removeToast}\n                    setCurrentFocus={setCurrentFocus}\n                    should_show_cancellation_warning={should_show_cancellation_warning}\n                    toggleCancellationWarning={toggleCancellationWarning}\n                    toggleUnsupportedContractModal={toggleUnsupportedContractModal}\n                    {...args}\n                    {...props}\n                />\n            )}\n            keyMapper={row => row.id}\n            row_gap={8}\n        />\n    );\n\n    return (\n        <React.Fragment>\n            <div\n                className={classNames('positions-drawer__bg', {\n                    'positions-drawer__bg--open': is_positions_drawer_on,\n                })}\n            />\n            <div\n                id='dt_positions_drawer'\n                className={classNames('positions-drawer', {\n                    'positions-drawer--open': is_positions_drawer_on,\n                })}\n            >\n                <div className='positions-drawer__header'>\n                    <Text color='prominent' weight='bold' size='xs'>\n                        {localize('Recent positions')}\n                    </Text>\n                    <div\n                        id='dt_positions_drawer_close_icon'\n                        className='positions-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <Icon icon='IcMinusBold' />\n                    </div>\n                </div>\n                <div className='positions-drawer__body' ref={drawer_ref}>\n                    {positions.length === 0 || error ? <EmptyPortfolioMessage error={error} /> : body_content}\n                </div>\n                <div className='positions-drawer__footer'>\n                    <NavLink\n                        id='dt_positions_drawer_report_button'\n                        className='dc-btn dc-btn--secondary dc-btn__large'\n                        to={routes.reports}\n                    >\n                        <Text size='xs' weight='bold'>\n                            {localize('Go to Reports')}\n                        </Text>\n                    </NavLink>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n});\n\nPositionsDrawer.propTypes = {\n    children: PropTypes.node,\n    onChangeContractUpdate: PropTypes.func,\n    onClickContractUpdate: PropTypes.func,\n};\n\nexport default PositionsDrawer;\n","import PositionsDrawer from './positions-drawer.jsx';\n\nexport default PositionsDrawer;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { Text } from '@deriv/components';\nimport { useIsMounted, WS, convertTimeFormat, isMarketClosed } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\n// check market in coming 7 days\nconst days_to_check_before_exit = 7;\n\nconst getTradingTimes = async target_time => {\n    const data = await WS.tradingTimes(target_time);\n    if (data.error) {\n        return { api_initial_load_error: data.error.message };\n    }\n    return data;\n};\n// eslint-disable-next-line consistent-return\nconst getSymbol = (target_symbol, trading_times) => {\n    let symbol;\n    const { markets } = trading_times;\n    for (let i = 0; i < markets.length; i++) {\n        const { submarkets } = markets[i];\n        for (let j = 0; j < submarkets.length; j++) {\n            const { symbols } = submarkets[j];\n            symbol = symbols.find(item => item.symbol === target_symbol);\n            if (symbol !== undefined) return symbol;\n        }\n    }\n};\n\nconst calculateTimeLeft = remaining_time_to_open => {\n    const difference = remaining_time_to_open - Date.now();\n    return difference > 0\n        ? {\n              days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n              hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n              minutes: Math.floor((difference / 1000 / 60) % 60),\n              seconds: Math.floor((difference / 1000) % 60),\n          }\n        : {};\n};\n\nconst MarketCountdownTimer = observer(({ is_main_page, setIsTimerLoading, onMarketOpen, symbol }) => {\n    const { active_symbols } = useTraderStore();\n    const isMounted = useIsMounted();\n    const [when_market_opens, setWhenMarketOpens] = React.useState({});\n    const [time_left, setTimeLeft] = React.useState(calculateTimeLeft(when_market_opens?.remaining_time_to_open));\n    const [is_loading, setLoading] = React.useState(true);\n\n    React.useEffect(() => {\n        if (!is_main_page || (is_main_page && isMarketClosed(active_symbols, symbol))) {\n            setLoading(true);\n            // eslint-disable-next-line consistent-return\n            const whenMarketOpens = async (days_offset, target_symbol) => {\n                // days_offset is 0 for today, 1 for tomorrow, etc.\n                if (days_offset > days_to_check_before_exit) return {};\n                let remaining_time_to_open;\n                const target_date = moment(new Date()).add(days_offset, 'days');\n                const api_response = await getTradingTimes(target_date.format('YYYY-MM-DD'));\n                if (!api_response.api_initial_load_error) {\n                    const { times } = getSymbol(target_symbol, api_response.trading_times);\n                    const { open, close } = times;\n                    const is_closed_all_day = open?.length === 1 && open[0] === '--' && close[0] === '--';\n                    if (is_closed_all_day) {\n                        // check tomorrow trading times\n                        return whenMarketOpens(days_offset + 1, target_symbol);\n                    }\n                    const date_str = target_date.toISOString().substring(0, 11);\n                    const getUTCDate = hour => new Date(`${date_str}${hour}Z`);\n                    for (let i = 0; i < open?.length; i++) {\n                        const diff = +getUTCDate(open[i]) - Date.now();\n                        if (diff > 0) {\n                            remaining_time_to_open = +getUTCDate(open[i]);\n                            if (isMounted() && target_symbol === symbol) {\n                                return setWhenMarketOpens({\n                                    days_offset,\n                                    opening_time: open[i],\n                                    remaining_time_to_open,\n                                });\n                            }\n                        }\n                    }\n                    whenMarketOpens(days_offset + 1, target_symbol);\n                }\n            };\n\n            whenMarketOpens(0, symbol);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [symbol]);\n\n    React.useEffect(() => {\n        let timer;\n        if (when_market_opens?.remaining_time_to_open) {\n            timer = setTimeout(() => {\n                setTimeLeft(calculateTimeLeft(when_market_opens.remaining_time_to_open));\n                if (new Date(when_market_opens.remaining_time_to_open) - +new Date() < 1000) {\n                    setLoading(true);\n                    if (is_main_page) onMarketOpen(false);\n                }\n            }, 1000);\n        }\n        return () => {\n            if (timer) {\n                clearTimeout(timer);\n            }\n        };\n    }, [time_left, when_market_opens, onMarketOpen, is_main_page]);\n\n    React.useEffect(() => {\n        if (!is_loading) setIsTimerLoading(false);\n    }, [is_loading, setIsTimerLoading]);\n\n    let timer_components = '';\n\n    if (Object.keys(time_left).length) {\n        const hours = (time_left.days * 24 + time_left.hours).toString().padStart(2, '0');\n        const minutes = time_left.minutes.toString().padStart(2, '0');\n        const seconds = time_left.seconds.toString().padStart(2, '0');\n        timer_components = `${hours}:${minutes}:${seconds}`;\n    }\n\n    if (!(when_market_opens && timer_components)) return null;\n\n    const { opening_time, days_offset } = when_market_opens;\n    let opening_time_banner = null;\n    if (opening_time) {\n        const formatted_opening_time = convertTimeFormat(opening_time);\n        const target_date = moment(new Date()).add(days_offset, 'days');\n        const opening_date = target_date.format('DD MMM YYYY');\n        const opening_day = target_date.format('dddd');\n        opening_time_banner = (\n            <Text\n                align='center'\n                as='p'\n                className='market-is-closed-overlay__open-date'\n                line_height='m'\n                color='prominent'\n                size={is_main_page ? 's' : 'xs'}\n                weight='bold'\n            >\n                <Localize\n                    i18n_default_text='{{formatted_opening_time}} (GMT) on {{opening_day}},<0></0> {{opening_date}}.'\n                    components={[<div key={0} />]}\n                    values={{\n                        formatted_opening_time,\n                        opening_day,\n                        opening_date,\n                    }}\n                />\n            </Text>\n        );\n    }\n\n    if (is_loading) setLoading(false);\n\n    return (\n        <React.Fragment>\n            <Text\n                as='p'\n                className={classNames('market-is-closed-overlay__open-at', {\n                    'market-is-closed-overlay__open-at--main-page': is_main_page,\n                })}\n                line_height='x'\n                size={is_main_page ? 'xs' : 'xxs'}\n            >\n                <Localize i18n_default_text='It will reopen at' />\n            </Text>\n            {opening_time_banner}\n            <Text\n                align='center'\n                as='p'\n                className={classNames('market-is-closed-overlay__come-back', {\n                    'market-is-closed-overlay__come-back--main-page': is_main_page,\n                })}\n                line_height='x'\n                size={is_main_page ? 'xs' : 'xxs'}\n            >\n                <Localize i18n_default_text='Please come back in' />\n            </Text>\n            <Text\n                as='p'\n                className={classNames('market-is-closed-overlay__timer', {\n                    'market-is-closed-overlay__timer--main-page': is_main_page,\n                })}\n                line_height='m'\n                color='prominent'\n                size={is_main_page ? 's' : 'xs'}\n                weight='bold'\n            >\n                {timer_components}\n            </Text>\n            <div className='market-is-closed-overlay__separator' />\n        </React.Fragment>\n    );\n});\n\nMarketCountdownTimer.propTypes = {\n    is_main_page: PropTypes.bool,\n    setIsTimerLoading: PropTypes.func,\n    onMarketOpen: PropTypes.func,\n    symbol: PropTypes.string.isRequired,\n};\n\nexport default MarketCountdownTimer;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport MarketCountdownTimer from './market-countdown-timer.jsx';\n\nconst MarketIsClosedOverlay = ({ is_eu, is_synthetics_trading_market_available, onClick, onMarketOpen, symbol }) => {\n    const [is_timer_loading, setIsTimerLoading] = React.useState(true);\n\n    let message = (\n        <Localize i18n_default_text='In the meantime, try our synthetic indices. They simulate real-market volatility and are open 24/7.' />\n    );\n    let btn_lbl = localize('Try Synthetic Indices');\n\n    if (!is_synthetics_trading_market_available) {\n        message = null;\n        btn_lbl = localize('See open markets');\n    }\n\n    return (\n        <div\n            className={classNames('market-is-closed-overlay', {\n                'market-is-closed-overlay--loading': is_timer_loading,\n            })}\n        >\n            <Text as='p' className='market-is-closed-overlay__main-heading' color='prominent' weight='bold'>\n                <Localize i18n_default_text='This market is closed' />\n            </Text>\n            <MarketCountdownTimer\n                is_main_page\n                setIsTimerLoading={setIsTimerLoading}\n                onMarketOpen={onMarketOpen}\n                symbol={symbol}\n            />\n            {message && (\n                <Text align='center' as='p' className='market-is-closed-overlay__main-message' size='xs'>\n                    {message}\n                </Text>\n            )}\n            {(!is_eu || (is_eu && is_synthetics_trading_market_available)) && (\n                <Button className='market-is-closed-overlay__button' onClick={onClick} text={btn_lbl} primary />\n            )}\n        </div>\n    );\n};\n\nMarketIsClosedOverlay.propTypes = {\n    is_eu: PropTypes.bool,\n    is_synthetics_trading_market_available: PropTypes.bool,\n    onClick: PropTypes.func,\n    onMarketOpen: PropTypes.func,\n    symbol: PropTypes.string,\n};\n\nexport default MarketIsClosedOverlay;\n","import { toJS } from 'mobx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\nconst styles = {\n    container: {\n        fontSize: '10px',\n        lineHeight: '15px',\n        position: 'absolute',\n        zIndex: 1,\n        background: 'rgba(0, 0, 0, 0.8)',\n        color: '#ccc',\n        padding: '10px',\n        marginTop: '-10px',\n        display: 'none',\n        overflowY: 'auto',\n        height: '100%',\n        width: '100%',\n    },\n    prop_name: {\n        color: 'yellowgreen',\n    },\n    tabs: { display: 'flex', textAlign: 'center', marginBottom: '10px' },\n    tab: {\n        fontSize: '18px',\n        border: '1px solid grey',\n        width: '100%',\n        padding: '10px',\n    },\n};\n\nconst Test = observer(() => {\n    const stores = useStore();\n    const trade_store = useTraderStore();\n    const test_stores = {\n        trade: Object.entries(trade_store),\n        client: Object.entries(stores.client),\n        ui: Object.entries(stores.ui),\n        portfolio: Object.entries(stores.portfolio),\n    };\n\n    const [is_visible, setIsVisible] = React.useState(false);\n    const [store, setStore] = React.useState('trade');\n\n    React.useEffect(() => {\n        document.addEventListener('keyup', stateVisibility, false);\n        return () => {\n            document.removeEventListener('keyup', stateVisibility);\n        };\n    });\n\n    const stateVisibility = e => {\n        // Ctrl + s\n        if (e.ctrlKey && e.keyCode === 83) setIsVisible(!is_visible);\n    };\n\n    const renderStoreContent = ([k, v]) => {\n        return (\n            k !== 'root_store' &&\n            typeof v !== 'function' && (\n                <div key={k}>\n                    <span style={styles.prop_name}>{k}:</span>{' '}\n                    {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}\n                </div>\n            )\n        );\n    };\n\n    const { container, tab, tabs } = styles;\n\n    return (\n        <code id='state_info' style={{ ...container, display: is_visible ? 'block' : 'none' }}>\n            <div style={tabs}>\n                {Object.keys(test_stores).map(storage => (\n                    <p\n                        key={storage}\n                        onClick={() => setStore(storage)}\n                        style={{ ...tab, fontWeight: storage === store && 'bold' }}\n                    >\n                        {storage}\n                    </p>\n                ))}\n            </div>\n            {test_stores[store].sort().map(renderStoreContent)}\n        </code>\n    );\n});\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default Test;\n","export const symbolChange = onSymbolChange =>\n    onSymbolChange &&\n    (symbol => {\n        onSymbolChange({\n            target: {\n                name: 'symbol',\n                value: symbol,\n            },\n        });\n    });\n","import React from 'react';\nimport { isMobile } from '@deriv/shared';\nimport Digits from 'Modules/Contract/Components/Digits';\nimport AccumulatorsStats from 'Modules/Contract/Components/AccumulatorsStats';\nimport BottomWidgets from '../../SmartChart/Components/bottom-widgets.jsx';\nimport TopWidgets from '../../SmartChart/Components/top-widgets.jsx';\nimport { symbolChange } from '../../SmartChart/Helpers/symbol';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\nexport const DigitsWidget = observer(({ digits, tick }) => {\n    const { contract_trade } = useStore();\n    const {\n        onChange: onDigitChange,\n        symbol: underlying,\n        contract_type: trade_type,\n        last_digit: selected_digit,\n    } = useTraderStore();\n    const { last_contract } = contract_trade;\n    const { contract_info = {}, digits_info = {}, display_status, is_digit_contract, is_ended } = last_contract;\n    return (\n        <Digits\n            contract_info={contract_info}\n            digits_array={digits}\n            digits_info={digits_info}\n            display_status={display_status}\n            is_digit_contract={is_digit_contract}\n            is_ended={is_ended}\n            onDigitChange={onDigitChange}\n            is_trade_page\n            tick={tick}\n            trade_type={trade_type}\n            selected_digit={selected_digit}\n            underlying={underlying}\n        />\n    );\n});\n\n// Chart widgets passed into SmartCharts\nexport const ChartTopWidgets = observer(({ charts_ref, is_digits_widget_active, open_market, open }) => {\n    const { ui } = useStore();\n    const { onChange: onSymbolChange } = useTraderStore();\n    const { is_dark_mode_on } = ui;\n    const theme = is_dark_mode_on ? 'dark' : 'light';\n    let yAxiswidth;\n    if (charts_ref && charts_ref.chart) {\n        yAxiswidth = charts_ref.chart.yAxiswidth;\n    }\n    return (\n        <TopWidgets\n            open_market={open_market}\n            open={open}\n            is_mobile={isMobile()}\n            is_digits_widget_active={is_digits_widget_active}\n            onSymbolChange={symbolChange(onSymbolChange)}\n            theme={theme}\n            y_axis_width={yAxiswidth}\n        />\n    );\n});\n\nexport const ChartBottomWidgets = ({ digits, tick, show_accumulators_stats }) => (\n    <BottomWidgets\n        Widget={show_accumulators_stats ? <AccumulatorsStats /> : <DigitsWidget digits={digits} tick={tick} />}\n    />\n);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Loadable from 'react-loadable';\nimport { isMobile } from '@deriv/shared';\n\nconst Screen = Loadable({\n    loader: () =>\n        isMobile()\n            ? import(/* webpackChunkName: \"screen-small\" */ './screen-small.jsx')\n            : import(/* webpackChunkName: \"screen-large\" */ './screen-large.jsx'),\n    loading: () => null,\n    render(loaded, props) {\n        const Component = loaded.default;\n        return <Component {...props} />;\n    },\n});\n\nconst FormLayout = ({ is_market_closed, is_trade_enabled }) => (\n    <React.Fragment>\n        <Screen is_trade_enabled={is_trade_enabled} is_market_closed={isMobile() ? undefined : is_market_closed} />\n    </React.Fragment>\n);\n\nFormLayout.propTypes = {\n    is_market_closed: PropTypes.bool,\n    is_trade_enabled: PropTypes.bool,\n};\n\nexport default React.memo(FormLayout);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Text } from '@deriv/components';\nimport { FastMarker } from 'Modules/SmartChart';\nimport classNames from 'classnames';\n\nconst ACTIONS = {\n    INC: 'increment',\n    DEC: 'decrement',\n    ADD10: 'add10',\n};\n\nconst AccumulatorsProfitLossText = ({\n    current_spot,\n    current_spot_time,\n    currency,\n    className = 'sc-accumulators-profit-loss-text',\n    profit,\n}) => {\n    const [is_fading_in, setIsFadingIn] = React.useState(false);\n    const [is_sliding, setIsSliding] = React.useState(false);\n    const prev_profit = React.useRef(profit);\n    const prev_profit_tenth = +prev_profit.current?.toFixed(2).split('.')[1][0];\n    const [current_profit_tenth, setCurrentProfitTenth] = React.useState(prev_profit_tenth);\n    const profit_tenth_ref = React.useRef();\n    const interval_id_ref = React.useRef(null);\n    const fading_in_timeout_id = React.useRef();\n    const sliding_timeout_id = React.useRef();\n    const profit_portions_array = profit.toFixed(2).split('.');\n    const profit_whole_number = +profit_portions_array[0];\n    const profit_tenth = +profit_portions_array[1][0];\n    const profit_hundredths = +profit_portions_array[1].slice(1);\n    const won = profit >= 0;\n    const sign = profit > 0 ? '+' : '';\n\n    const runThroughTenthDigit = (action, interval_ms, start, end) => {\n        clearInterval(interval_id_ref.current);\n        const interval_id = setInterval(() => {\n            if (action === ACTIONS.INC && profit_tenth_ref.current < end) {\n                profit_tenth_ref.current = (profit_tenth_ref.current + 1) % 10;\n            } else if (action === ACTIONS.DEC && profit_tenth_ref.current > end) {\n                profit_tenth_ref.current = Math.abs(profit_tenth_ref.current - 1) % 10;\n            } else if (action === ACTIONS.ADD10 && profit_tenth_ref.current < start + 10) {\n                profit_tenth_ref.current += 1;\n            } else if (\n                action === ACTIONS.ADD10 ? profit_tenth_ref.current === start + 10 : profit_tenth_ref.current === end\n            ) {\n                clearInterval(interval_id);\n            }\n            setCurrentProfitTenth(profit_tenth_ref.current % 10);\n        }, interval_ms);\n        interval_id_ref.current = interval_id;\n    };\n\n    React.useEffect(() => {\n        if (profit) {\n            setIsFadingIn(true);\n            setIsSliding(true);\n            fading_in_timeout_id.current = setTimeout(() => {\n                setIsFadingIn(false);\n            }, 600);\n            sliding_timeout_id.current = setTimeout(() => {\n                setIsSliding(false);\n            }, 300);\n        }\n        if (profit !== 0) {\n            const updateTenth = (start, end) => {\n                const delta = Math.abs(end - start);\n                profit_tenth_ref.current = start;\n                if (start < end) {\n                    runThroughTenthDigit(ACTIONS.INC, 300 / delta, start, end);\n                } else if (start > end) {\n                    runThroughTenthDigit(ACTIONS.DEC, 300 / delta, start, end);\n                } else {\n                    runThroughTenthDigit(ACTIONS.ADD10, 30, start, end);\n                }\n            };\n            updateTenth(prev_profit_tenth, profit_tenth);\n        }\n        return () => {\n            clearTimeout(fading_in_timeout_id.current);\n            clearTimeout(sliding_timeout_id.current);\n            clearInterval(interval_id_ref.current);\n        };\n    }, [profit, prev_profit_tenth, profit_tenth]);\n\n    const onRef = ref => {\n        if (ref) {\n            if (!current_spot) {\n                // this call will hide the marker:\n                ref.setPosition({ epoch: null, price: null });\n            }\n            ref.setPosition({\n                epoch: +current_spot_time,\n                price: +current_spot,\n            });\n        }\n    };\n\n    return (\n        <FastMarker markerRef={onRef} className={classNames(className, won ? 'won' : 'lost')}>\n            <Text\n                weight='bold'\n                size='m'\n                color={won ? 'profit-success' : 'loss-danger'}\n                className={classNames(`${className}__profit`, {\n                    [`${className}__profit--fading-in`]: is_fading_in,\n                })}\n                data-testid='dt_accumulator_profit_text'\n            >\n                {`${sign}${profit_whole_number}.`}\n                <div className={is_sliding ? `${className}__sliding-tenth` : ''}>{current_profit_tenth}</div>\n                {`${profit_hundredths}`}\n            </Text>\n            <Text size='xxs' as='div' className={`${className}__currency`}>\n                {currency}\n            </Text>\n        </FastMarker>\n    );\n};\n\nAccumulatorsProfitLossText.propTypes = {\n    className: PropTypes.string,\n    currency: PropTypes.string,\n    current_spot: PropTypes.number,\n    current_spot_time: PropTypes.number,\n    profit: PropTypes.number,\n};\n\nexport default React.memo(AccumulatorsProfitLossText);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { CSSTransition } from 'react-transition-group';\nimport { Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { FastMarker } from 'Modules/SmartChart';\nimport AccumulatorsProfitLossText from './accumulators-profit-loss-text';\n\nconst AccumulatorsProfitLossTooltip = ({\n    alignment = 'right',\n    current_spot,\n    current_spot_time,\n    className = 'sc-accumulators-profit-loss-tooltip',\n    currency,\n    exit_tick,\n    exit_tick_time,\n    high_barrier,\n    is_sold,\n    profit,\n    should_show_profit_text,\n}) => {\n    const [is_tooltip_open, setIsTooltipOpen] = React.useState(false);\n    const won = profit >= 0;\n    const sign = profit > 0 ? '+' : '';\n    const tooltip_timeout = React.useRef(null);\n\n    React.useEffect(() => {\n        return () => {\n            clearTimeout(tooltip_timeout.current);\n        };\n    }, []);\n\n    React.useEffect(() => {\n        if (is_sold) {\n            setIsTooltipOpen(true);\n            tooltip_timeout.current = onCloseDelayed(3000);\n        }\n    }, [is_sold]);\n\n    const onCloseDelayed = duration =>\n        setTimeout(() => {\n            setIsTooltipOpen(false);\n        }, duration);\n\n    const onHoverOrTapHandler = () => {\n        clearTimeout(tooltip_timeout.current);\n        tooltip_timeout.current = onCloseDelayed(1500);\n    };\n\n    const opposite_arrow_position = React.useMemo(() => {\n        const horizontal = ['left', 'right'];\n        return horizontal.includes(alignment)\n            ? horizontal.find(el => el !== alignment)\n            : ['top', 'bottom'].find(el => el !== alignment);\n    }, [alignment]);\n\n    const onRef = ref => {\n        if (ref) {\n            if (!exit_tick) {\n                // this call will hide the marker:\n                ref.setPosition({ epoch: null, price: null });\n            }\n            ref.setPosition({\n                epoch: +exit_tick_time,\n                price: +exit_tick,\n            });\n        }\n    };\n\n    if (typeof profit !== 'number') return null;\n    if (!is_sold && current_spot_time && high_barrier && should_show_profit_text)\n        return (\n            <AccumulatorsProfitLossText\n                currency={currency}\n                current_spot={current_spot}\n                current_spot_time={current_spot_time}\n                profit={profit}\n            />\n        );\n    return is_sold && exit_tick_time ? (\n        <FastMarker markerRef={onRef} className={classNames(className, won ? 'won' : 'lost')}>\n            <span\n                className={`${className}__spot-circle`}\n                onMouseEnter={() => setIsTooltipOpen(true)}\n                onMouseLeave={onHoverOrTapHandler}\n                onTouchStart={() => setIsTooltipOpen(true)}\n                onTouchEnd={onHoverOrTapHandler}\n                data-testid='dt_accumulator_tooltip_spot'\n            />\n            <CSSTransition\n                in={is_tooltip_open}\n                timeout={{\n                    exit: 500,\n                }}\n                unmountOnExit\n                classNames={`${className}__content`}\n            >\n                <div className={classNames(`${className}__content`, `arrow-${opposite_arrow_position}`)}>\n                    <Text size='xxs' className={`${className}__text`}>\n                        {localize('Total profit/loss:')}\n                    </Text>\n                    <Text\n                        size='xs'\n                        className={`${className}__text`}\n                        weight='bold'\n                    >{`${sign}${profit} ${currency}`}</Text>\n                </div>\n            </CSSTransition>\n        </FastMarker>\n    ) : null;\n};\n\nAccumulatorsProfitLossTooltip.propTypes = {\n    alignment: PropTypes.string,\n    current_spot: PropTypes.number,\n    current_spot_time: PropTypes.number,\n    className: PropTypes.string,\n    currency: PropTypes.string,\n    exit_tick: PropTypes.number,\n    exit_tick_time: PropTypes.number,\n    high_barrier: PropTypes.string,\n    is_sold: PropTypes.number,\n    profit: PropTypes.number,\n    should_show_profit_text: PropTypes.bool,\n};\n\nexport default React.memo(AccumulatorsProfitLossTooltip);\n","import { filterByContractType } from 'App/Components/Elements/PositionsDrawer/helpers/positions-helper.js';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport AccumulatorsProfitLossTooltip from './accumulators-profit-loss-tooltip.jsx';\nimport ChartMarker from './marker.jsx';\n\nconst AccumulatorsChartElements = ({\n    all_positions,\n    current_spot,\n    current_spot_time,\n    has_crossed_accu_barriers,\n    should_show_profit_text,\n    symbol,\n}) => {\n    const accumulators_positions = all_positions.filter(\n        ({ contract_info }) =>\n            contract_info && symbol === contract_info.underlying && filterByContractType(contract_info, 'accumulator')\n    );\n\n    return (\n        <React.Fragment>\n            {!!accumulators_positions.length &&\n                accumulators_positions.map(({ contract_info }) => (\n                    <AccumulatorsProfitLossTooltip\n                        key={contract_info.contract_id}\n                        {...contract_info}\n                        should_show_profit_text={should_show_profit_text}\n                    />\n                ))}\n            {has_crossed_accu_barriers && !!current_spot_time && (\n                <ChartMarker\n                    marker_config={{\n                        ContentComponent: 'div',\n                        x: current_spot_time,\n                        y: current_spot,\n                    }}\n                    marker_content_props={{ className: 'sc-current-spot-emphasizer' }}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nAccumulatorsChartElements.propTypes = {\n    all_positions: PropTypes.array,\n    current_spot: PropTypes.number,\n    current_spot_time: PropTypes.number,\n    has_crossed_accu_barriers: PropTypes.bool,\n    should_show_profit_text: PropTypes.bool,\n    symbol: PropTypes.string,\n};\n\nexport default React.memo(AccumulatorsChartElements);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { isDesktop, isMobile } from '@deriv/shared';\nimport { ChartMode, DrawTools, Share, StudyLegend, Views, ToolbarWidget } from 'Modules/SmartChart';\n\nconst ToolbarWidgets = ({ position, updateChartType, updateGranularity }) => {\n    return (\n        <ToolbarWidget position={position || isMobile() ? 'bottom' : null}>\n            <ChartMode portalNodeId='modal_root' onChartType={updateChartType} onGranularity={updateGranularity} />\n            {isDesktop() && <StudyLegend portalNodeId='modal_root' searchInputClassName='data-hj-whitelist' />}\n            {isDesktop() && <Views portalNodeId='modal_root' searchInputClassName='data-hj-whitelist' />}\n            {isDesktop() && <DrawTools portalNodeId='modal_root' />}\n            {isDesktop() && <Share portalNodeId='modal_root' />}\n        </ToolbarWidget>\n    );\n};\n\nToolbarWidgets.propTypes = {\n    position: PropTypes.string,\n    updateChartType: PropTypes.func,\n    updateGranularity: PropTypes.func,\n};\n\nexport default React.memo(ToolbarWidgets);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { DesktopWrapper, Div100vhContainer, MobileWrapper, SwipeableWrapper } from '@deriv/components';\nimport { isDesktop, isMobile } from '@deriv/shared';\nimport ChartLoader from 'App/Components/Elements/chart-loader.jsx';\nimport PositionsDrawer from 'App/Components/Elements/PositionsDrawer';\nimport MarketIsClosedOverlay from 'App/Components/Elements/market-is-closed-overlay.jsx';\nimport Test from './test.jsx';\nimport { ChartBottomWidgets, ChartTopWidgets, DigitsWidget } from './chart-widgets.jsx';\nimport FormLayout from '../Components/Form/form-layout.jsx';\nimport AccumulatorsChartElements from '../../SmartChart/Components/Markers/accumulators-chart-elements.jsx';\nimport ToolbarWidgets from '../../SmartChart/Components/toolbar-widgets.jsx';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\nconst BottomWidgetsMobile = ({ tick, digits, setTick, setDigits }) => {\n    React.useEffect(() => {\n        setTick(tick);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [tick]);\n\n    React.useEffect(() => {\n        setDigits(digits);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [digits]);\n\n    // render nothing for bottom widgets on chart in mobile\n    return null;\n};\n\nconst Trade = observer(() => {\n    const { client, common, ui } = useStore();\n    const {\n        form_components,\n        getFirstOpenMarket,\n        should_show_active_symbols_loading,\n        is_chart_loading,\n        is_market_closed,\n        is_trade_enabled,\n        onChange,\n        onMount,\n        onUnmount,\n        prepareTradeStore,\n        setContractTypes,\n        setMobileDigitView,\n        show_digits_stats,\n        is_accumulator,\n        symbol,\n        is_synthetics_available,\n        is_synthetics_trading_market_available,\n        is_vanilla,\n    } = useTraderStore();\n    const {\n        notification_messages_ui: NotificationMessages,\n        has_only_forward_starting_contracts: is_market_unavailable_visible,\n        should_show_multipliers_onboarding,\n        is_dark_mode_on: is_dark_theme,\n    } = ui;\n    const { is_eu } = client;\n    const { network_status } = common;\n\n    const [digits, setDigits] = React.useState([]);\n    const [tick, setTick] = React.useState({});\n    const [try_synthetic_indices, setTrySyntheticIndices] = React.useState(false);\n    const [try_open_markets, setTryOpenMarkets] = React.useState(false);\n    const [category, setCategory] = React.useState(null);\n    const [subcategory, setSubcategory] = React.useState(null);\n    const [is_digits_widget_active, setIsDigitsWidgetActive] = React.useState(false);\n    const charts_ref = React.useRef();\n\n    const open_market = React.useMemo(() => {\n        if (try_synthetic_indices) {\n            return { category: 'synthetics' };\n        } else if (try_open_markets && category) {\n            return { category, subcategory };\n        }\n        return null;\n    }, [try_synthetic_indices, try_open_markets, category, subcategory]);\n\n    React.useEffect(() => {\n        onMount();\n        if (!is_synthetics_available) {\n            const setMarket = async () => {\n                const markets_to_search = ['forex', 'indices', 'commodities']; // none-synthetic\n                const { category: market_cat, subcategory: market_subcat } =\n                    (await getFirstOpenMarket(markets_to_search)) ?? {};\n                if (market_cat) {\n                    setCategory(market_cat);\n                    setSubcategory(market_subcat);\n                }\n            };\n\n            setMarket();\n        }\n        return () => onUnmount();\n    }, [onMount, onUnmount, getFirstOpenMarket, is_synthetics_available]);\n\n    React.useEffect(() => {\n        if (isMobile()) {\n            setDigits([]);\n        }\n        setTrySyntheticIndices(false);\n        setTryOpenMarkets(false);\n    }, [symbol, setDigits, setTrySyntheticIndices, is_synthetics_available]);\n\n    React.useEffect(() => {\n        const selectMultipliers = async () => {\n            await setContractTypes();\n\n            onChange({ target: { name: 'contract_type', value: 'multiplier' } });\n        };\n        if (should_show_multipliers_onboarding && !is_chart_loading && (is_synthetics_available || !is_market_closed)) {\n            selectMultipliers();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [should_show_multipliers_onboarding, is_chart_loading]);\n\n    const bottomWidgets = React.useCallback(({ digits: d, tick: t }) => {\n        return <BottomWidgetsMobile digits={d} tick={t} setTick={setTick} setDigits={setDigits} />;\n    }, []);\n\n    const onChangeSwipeableIndex = index => {\n        setMobileDigitView(index === 0);\n        setIsDigitsWidgetActive(index === 0);\n    };\n\n    const onTryOtherMarkets = async () => {\n        if (!is_synthetics_available) {\n            setTryOpenMarkets(true);\n            setTimeout(() => setTryOpenMarkets(false));\n        } else {\n            setTrySyntheticIndices(true);\n            setTimeout(() => setTrySyntheticIndices(false));\n        }\n    };\n\n    const topWidgets = React.useCallback(\n        ({ ...params }) => (\n            <ChartTopWidgets\n                open_market={open_market}\n                open={try_synthetic_indices || try_open_markets}\n                charts_ref={charts_ref}\n                is_digits_widget_active={is_digits_widget_active}\n                {...params}\n            />\n        ),\n        [open_market, try_synthetic_indices, try_open_markets, charts_ref, is_digits_widget_active]\n    );\n\n    const form_wrapper_class = isMobile() ? 'mobile-wrapper' : 'sidebar__container desktop-only';\n\n    return (\n        <div\n            id='trade_container'\n            className={classNames('trade-container', {\n                'trade-container--accumulators': is_accumulator,\n            })}\n        >\n            <DesktopWrapper>\n                <PositionsDrawer />\n            </DesktopWrapper>\n            {/* Div100vhContainer is workaround for browsers on devices\n                    with toolbars covering screen height,\n                    using css vh is not returning correct screen height */}\n            <Div100vhContainer\n                id='chart_container'\n                className='chart-container'\n                is_disabled={isDesktop()}\n                height_offset={is_accumulator ? '295px' : '259px'}\n            >\n                <NotificationMessages />\n                <React.Suspense\n                    fallback={<ChartLoader is_dark={is_dark_theme} is_visible={!symbol || is_chart_loading} />}\n                >\n                    <DesktopWrapper>\n                        <div className={classNames('chart-container__wrapper', { 'vanilla-trade-chart': is_vanilla })}>\n                            <ChartLoader is_visible={is_chart_loading || should_show_active_symbols_loading} />\n                            <ChartTrade\n                                topWidgets={topWidgets}\n                                charts_ref={charts_ref}\n                                is_accumulator={is_accumulator}\n                            />\n                        </div>\n                    </DesktopWrapper>\n                    <MobileWrapper>\n                        <ChartLoader is_visible={is_chart_loading || should_show_active_symbols_loading} />\n                        <SwipeableWrapper\n                            onChange={onChangeSwipeableIndex}\n                            is_disabled={\n                                !show_digits_stats ||\n                                !is_trade_enabled ||\n                                form_components.length === 0 ||\n                                is_chart_loading ||\n                                should_show_active_symbols_loading\n                            }\n                            className={classNames({ 'vanilla-trade-chart': is_vanilla })}\n                        >\n                            {show_digits_stats && <DigitsWidget digits={digits} tick={tick} />}\n                            <ChartTrade\n                                topWidgets={topWidgets}\n                                charts_ref={charts_ref}\n                                bottomWidgets={show_digits_stats ? bottomWidgets : undefined}\n                                is_accumulator={is_accumulator}\n                            />\n                        </SwipeableWrapper>\n                    </MobileWrapper>\n                </React.Suspense>\n\n                {/* Remove Test component for debugging below for production release */}\n                <Test />\n            </Div100vhContainer>\n            <div className={form_wrapper_class}>\n                {is_market_closed && !is_market_unavailable_visible && (\n                    <MarketIsClosedOverlay\n                        is_eu={is_eu}\n                        is_synthetics_trading_market_available={is_synthetics_trading_market_available}\n                        {...(is_eu && category)}\n                        onClick={onTryOtherMarkets}\n                        onMarketOpen={prepareTradeStore}\n                        symbol={symbol}\n                    />\n                )}\n                <FormLayout\n                    is_market_closed={is_market_closed}\n                    is_trade_enabled={\n                        is_trade_enabled && form_components.length > 0 && network_status.class === 'online'\n                    }\n                />\n            </div>\n        </div>\n    );\n});\n\nexport default Trade;\n\n// CHART (ChartTrade)--------------------------------------------------------\n\n/* eslint-disable */\nimport { SmartChart } from 'Modules/SmartChart';\n\nconst SmartChartWithRef = React.forwardRef((props, ref) => <SmartChart innerRef={ref} {...props} />);\n\nconst ChartTrade = observer(props => {\n    const { is_accumulator, end_epoch, topWidgets, charts_ref } = props;\n    const { client, ui, common, contract_trade, portfolio } = useStore();\n    const {\n        accumulator_barriers_data,\n        chart_type,\n        granularity,\n        markers_array,\n        has_crossed_accu_barriers,\n        updateGranularity,\n        updateChartType,\n    } = contract_trade;\n    const { all_positions } = portfolio;\n    const { is_chart_layout_default, is_chart_countdown_visible, is_dark_mode_on, is_positions_drawer_on } = ui;\n    const { is_socket_opened, current_language } = common;\n    const { should_show_eu_content } = client;\n    const {\n        chartStateChange,\n        is_trade_enabled,\n        main_barrier_flattened: main_barrier,\n        barriers_flattened: extra_barriers,\n        show_digits_stats,\n        symbol,\n        exportLayout,\n        setChartStatus,\n        chart_layout,\n        wsForget,\n        wsForgetStream,\n        wsSendRequest,\n        wsSubscribe,\n        active_symbols,\n        has_alternative_source,\n        refToAddTick,\n    } = useTraderStore();\n\n    const settings = {\n        assetInformation: false, // ui.is_chart_asset_info_visible,\n        countdown: is_chart_countdown_visible,\n        isHighestLowestMarkerEnabled: false, // TODO: Pending UI,\n        language: current_language.toLowerCase(),\n        position: is_chart_layout_default ? 'bottom' : 'left',\n        theme: is_dark_mode_on ? 'dark' : 'light',\n    };\n\n    const { accumulators_high_barrier, current_spot, current_spot_time } = accumulator_barriers_data || {};\n\n    const bottomWidgets = React.useCallback(\n        ({ digits, tick }) => (\n            <ChartBottomWidgets digits={digits} tick={tick} show_accumulators_stats={is_accumulator} is_trade_page />\n        ),\n        [is_accumulator]\n    );\n\n    const getMarketsOrder = active_symbols => {\n        const synthetic_index = 'synthetic_index';\n\n        const has_synthetic_index = !!active_symbols.find(s => s.market === synthetic_index);\n        return active_symbols\n            .slice()\n            .sort((a, b) => (a.display_name < b.display_name ? -1 : 1))\n            .map(s => s.market)\n            .reduce(\n                (arr, market) => {\n                    if (arr.indexOf(market) === -1) arr.push(market);\n                    return arr;\n                },\n                has_synthetic_index ? [synthetic_index] : []\n            );\n    };\n\n    const barriers = main_barrier ? [main_barrier, ...extra_barriers] : extra_barriers;\n\n    // max ticks to display for mobile view for tick chart\n    const max_ticks = granularity === 0 ? 8 : 24;\n\n    if (!symbol || active_symbols.length === 0) return null;\n\n    return (\n        <SmartChartWithRef\n            ref={charts_ref}\n            barriers={barriers}\n            markers_array={markers_array}\n            bottomWidgets={(is_accumulator || show_digits_stats) && isDesktop() ? bottomWidgets : props.bottomWidgets}\n            crosshair={isMobile() ? 0 : undefined}\n            crosshairTooltipLeftAllow={560}\n            showLastDigitStats={isDesktop() ? show_digits_stats : false}\n            chartControlsWidgets={null}\n            chartStatusListener={v => setChartStatus(!v)}\n            chartType={chart_type}\n            initialData={{\n                activeSymbols: JSON.parse(JSON.stringify(active_symbols)),\n            }}\n            chartData={{\n                activeSymbols: JSON.parse(JSON.stringify(active_symbols)),\n            }}\n            feedCall={{\n                activeSymbols: false,\n            }}\n            enabledNavigationWidget={isDesktop()}\n            enabledChartFooter={false}\n            id='trade'\n            isMobile={isMobile()}\n            maxTick={isMobile() ? max_ticks : undefined}\n            granularity={show_digits_stats || is_accumulator ? 0 : granularity}\n            requestAPI={wsSendRequest}\n            requestForget={wsForget}\n            requestForgetStream={wsForgetStream}\n            requestSubscribe={wsSubscribe}\n            settings={settings}\n            should_show_eu_content={should_show_eu_content}\n            allowTickChartTypeOnly={show_digits_stats || is_accumulator}\n            stateChangeListener={chartStateChange}\n            symbol={symbol}\n            topWidgets={is_trade_enabled ? topWidgets : null}\n            isConnectionOpened={is_socket_opened}\n            clearChart={false}\n            toolbarWidget={() => (\n                <ToolbarWidgets updateChartType={updateChartType} updateGranularity={updateGranularity} />\n            )}\n            importedLayout={chart_layout}\n            onExportLayout={exportLayout}\n            shouldFetchTradingTimes={!end_epoch}\n            hasAlternativeSource={has_alternative_source}\n            refToAddTick={refToAddTick}\n            getMarketsOrder={getMarketsOrder}\n            yAxisMargin={{\n                top: isMobile() ? 76 : 106,\n            }}\n            isLive={true}\n            leftMargin={isDesktop() && is_positions_drawer_on ? 328 : 80}\n        >\n            {is_accumulator && (\n                <AccumulatorsChartElements\n                    all_positions={all_positions}\n                    current_spot={current_spot}\n                    current_spot_time={current_spot_time}\n                    has_crossed_accu_barriers={has_crossed_accu_barriers}\n                    should_show_profit_text={!!accumulators_high_barrier}\n                    symbol={symbol}\n                />\n            )}\n        </SmartChartWithRef>\n    );\n});\n","import Trade from './Containers/trade.jsx';\n\nexport default Trade;\n","import React from 'react';\nimport { routes, moduleLoader } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport Trade from 'Modules/Trading';\n\nconst ContractDetails = React.lazy(() =>\n    moduleLoader(() => import(/* webpackChunkName: \"contract\" */ 'Modules/Contract'))\n);\n\n// Error Routes\nconst Page404 = React.lazy(() => moduleLoader(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404')));\n\n// Order matters\nconst initRoutesConfig = () => {\n    return [\n        {\n            path: routes.contract,\n            component: ContractDetails,\n            // Don't use `Localize` component since native html tag like `option` cannot render them\n            getTitle: () => localize('Contract Details'),\n            is_authenticated: true,\n        },\n        { path: routes.trade, component: Trade, getTitle: () => localize('Trader'), exact: true },\n    ];\n};\n\nlet routesConfig;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default = { component: Page404, getTitle: () => localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routesConfig) {\n        routesConfig = initRoutesConfig();\n        routesConfig.push(route_default);\n    }\n    return routesConfig;\n};\n\nexport default getRoutesConfig;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { findRouteByPath, normalizePath } from './helpers';\nimport getRoutesConfig from '../../Constants/routes-config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ active_class, to, children, ...props }) => {\n    const path = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return to ? (\n        <NavLink\n            data-testid='dt_binary_link'\n            to={path}\n            activeClassName={active_class || 'active'}\n            exact={route.exact}\n            {...props}\n        >\n            {children}\n        </NavLink>\n    ) : (\n        <a data-testid='dt_binary_link' {...props}>\n            {children}\n        </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    active_class: PropTypes.string,\n    children: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.string]),\n    to: PropTypes.string,\n};\n\nexport default BinaryLink;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport {\n    alternateLinkTagChange,\n    canonicalLinkTagChange,\n    redirectToLogin,\n    removeBranchName,\n    routes,\n    isEmptyObject,\n    default_title,\n} from '@deriv/shared';\nimport { getLanguage } from '@deriv/translations';\nimport Page404 from 'Modules/Page404';\n\nconst RouteWithSubRoutes = route => {\n    const validateRoute = pathname => {\n        if (pathname === '') return true;\n        if (route.path?.includes(':')) {\n            const static_pathname = pathname.substring(0, pathname.lastIndexOf('/') + 1);\n            return static_pathname === route.path.substring(0, route.path.indexOf(':'));\n        }\n        return route.path === pathname || !!(route.routes && route.routes.find(r => pathname === r.path));\n    };\n\n    const renderFactory = props => {\n        let result = null;\n\n        const pathname = removeBranchName(location.pathname).replace(/\\/$/, '');\n        const is_valid_route = validateRoute(pathname);\n\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else if (is_valid_route && route.is_authenticated && !route.is_logging_in && !route.is_logged_in) {\n            redirectToLogin(route.is_logged_in, getLanguage());\n        } else {\n            const default_subroute = route.routes ? route.routes.find(r => r.default) : {};\n            const has_default_subroute = !isEmptyObject(default_subroute);\n\n            result = (\n                <React.Fragment>\n                    {has_default_subroute && pathname === route.path && <Redirect to={default_subroute.path} />}\n                    {is_valid_route ? <route.component {...props} routes={route.routes} /> : <Page404 />}\n                </React.Fragment>\n            );\n        }\n\n        // eslint-disable-next-line no-nested-ternary\n        const title = route.getTitle?.() || '';\n        document.title = `${title} | ${default_title}`;\n\n        alternateLinkTagChange();\n        canonicalLinkTagChange();\n\n        return result;\n    };\n\n    return <Route exact={route.exact} path={route.path} render={renderFactory} />;\n};\n\nexport default RouteWithSubRoutes;\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport getRoutesConfig from 'App/Constants/routes-config';\nimport RouteWithSubRoutes from './route-with-sub-routes.jsx';\n\nconst BinaryRoutes = props => (\n    <React.Suspense fallback={<div />}>\n        <Switch>\n            {getRoutesConfig().map((route, idx) => (\n                <RouteWithSubRoutes key={idx} {...route} {...props} />\n            ))}\n        </Switch>\n    </React.Suspense>\n);\n\nexport default BinaryRoutes;\n","import BinaryLink from './binary-link.jsx';\nimport RouteWithSubRoutes from './route-with-sub-routes.jsx';\nimport BinaryRoutes from './binary-routes.jsx';\n\nexport * from './helpers';\nexport { BinaryLink, RouteWithSubRoutes };\nexport default BinaryRoutes;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter, matchPath } from 'react-router';\nimport Loadable from 'react-loadable';\nimport { UILoader } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport BinaryRoutes from 'App/Components/Routes';\nimport getRoutesConfig from 'App/Constants/routes-config';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst checkRoutingMatch = (route_list, path) => {\n    return route_list.some(route => !!matchPath(path, { path: route, exact: true }));\n};\n\nconst tradePageMountingMiddleware = ({ path_from, path_to, action, match_patterns, callback }) => {\n    if (action === 'PUSH' || action === 'POP') {\n        // We use matchPath here because on route, there will be extra\n        // parameters which matchPath takes into account.\n        const has_match = match_patterns.some(\n            pattern => checkRoutingMatch(pattern.from, path_from) && checkRoutingMatch(pattern.to, path_to)\n        );\n\n        callback(has_match);\n    }\n\n    return true;\n};\n\nconst Error = Loadable({\n    loader: () => import(/* webpackChunkName: \"error-component\" */ 'App/Components/Elements/Errors'),\n    loading: UILoader,\n    render(loaded, props) {\n        const Component = loaded.default;\n        return <Component {...props} />;\n    },\n});\n\nconst Routes = observer(({ history, passthrough }) => {\n    const { client, common, ui, portfolio } = useStore();\n    const { setSkipPrePostLifecycle: setTradeMountingPolicy } = useTraderStore();\n    const { error, has_error } = common;\n    const { onUnmount: onUnmountPortfolio } = portfolio;\n    const { is_logged_in, is_logging_in } = client;\n    const { setPromptHandler } = ui;\n\n    React.useEffect(() => {\n        if (setPromptHandler) {\n            setPromptHandler(true, (route_to, action) => {\n                // clears portfolio when we navigate to mt5 dashboard\n                tradePageMountingMiddleware({\n                    path_from: history.location.pathname,\n                    path_to: route_to.pathname,\n                    match_patterns: [\n                        {\n                            from: getRoutesConfig()\n                                .flatMap(route => {\n                                    if (route.routes) {\n                                        return route.routes.map(subroute => subroute.path);\n                                    }\n                                    return [route.path];\n                                })\n                                .filter(path => path && path !== routes.mt5 && path !== routes.dxtrade),\n                            to: [routes.mt5, routes.dxtrade],\n                        },\n                    ],\n                    action,\n                    callback: has_match => {\n                        if (has_match) {\n                            onUnmountPortfolio();\n                        }\n                    },\n                });\n\n                return tradePageMountingMiddleware({\n                    path_from: history.location.pathname,\n                    path_to: route_to.pathname,\n                    match_patterns: [\n                        { from: [routes.contract], to: [routes.trade] },\n                        { from: [routes.trade], to: [routes.contract] },\n                    ],\n                    action,\n                    callback: setTradeMountingPolicy,\n                });\n            });\n        }\n\n        return () => {\n            setPromptHandler?.(false);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        return () => onUnmountPortfolio();\n    }, [onUnmountPortfolio]);\n\n    if (has_error) return <Error {...error} />;\n\n    return <BinaryRoutes is_logged_in={is_logged_in} is_logging_in={is_logging_in} passthrough={passthrough} />;\n});\n\nRoutes.propTypes = {\n    history: PropTypes.object,\n    passthrough: PropTypes.object,\n};\n\nexport default withRouter(Routes);\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Icon } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\nconst ResultMobile = ({ is_visible, result }) => {\n    const is_contract_won = result === 'won';\n    return (\n        <React.Fragment>\n            <CSSTransition\n                in={is_visible}\n                timeout={250}\n                classNames={{\n                    enter: 'positions-modal-card__result--enter',\n                    enterDone: 'positions-modal-card__result--enter-done',\n                    exit: 'positions-modal-card__result--exit',\n                }}\n                unmountOnExit\n            >\n                <div className='positions-modal-card__caption-wrapper' data-testid='result_mobile'>\n                    <span\n                        className={classNames('positions-modal-card__caption', {\n                            'positions-modal-card__caption--won': is_contract_won,\n                            'positions-modal-card__caption--lost': !is_contract_won,\n                        })}\n                    >\n                        {is_contract_won ? (\n                            <React.Fragment>\n                                {localize('Won')}\n                                <Icon icon='IcCheckmarkCircle' className='positions-modal-card__icon' color='green' />\n                            </React.Fragment>\n                        ) : (\n                            <React.Fragment>\n                                {localize('Lost')}\n                                <Icon icon='IcCrossCircle' className='positions-modal-card__icon' color='red' />\n                            </React.Fragment>\n                        )}\n                    </span>\n                </div>\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nResultMobile.propTypes = {\n    is_visible: PropTypes.bool,\n    result: PropTypes.string,\n};\n\nexport default ResultMobile;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport { ContractCard, CurrencyBadge, Icon, Money, ProgressSliderMobile, Text } from '@deriv/components';\nimport {\n    getContractPath,\n    isAccumulatorContract,\n    isCryptoContract,\n    isMultiplierContract,\n    isHighLow,\n    isCryptocurrency,\n    hasContractEntered,\n    isOpen,\n    getSymbolDisplayName,\n    getEndTime,\n    getTotalProfit,\n    isVanillaContract,\n} from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { BinaryLink } from 'App/Components/Routes';\nimport { PositionsCardLoader } from 'App/Components/Elements/ContentLoader';\nimport { getContractTypeDisplay, getCardLabels } from 'Constants/contract';\nimport { getMarketInformation } from 'Utils/Helpers/market-underlying';\nimport ResultMobile from './result-mobile.jsx';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst PositionsModalCard = observer(\n    ({\n        className,\n        contract_info,\n        contract_update,\n        currency,\n        current_tick,\n        id,\n        indicative,\n        is_loading,\n        is_sell_requested,\n        is_unsupported,\n        onClickSell,\n        profit_loss,\n        onClickCancel,\n        result,\n        sell_price,\n        status,\n        togglePositions,\n        toggleUnsupportedContractModal,\n        type,\n    }) => {\n        const { ui, common, contract_trade } = useStore();\n        const { active_symbols } = useTraderStore();\n        const { server_time } = common;\n        const { getContractById } = contract_trade;\n        const {\n            addToast,\n            current_focus,\n            is_mobile,\n            removeToast,\n            setCurrentFocus,\n            should_show_cancellation_warning,\n            toggleCancellationWarning,\n        } = ui;\n        const loader_el = (\n            <div className='positions-modal-card__content-loader'>\n                <PositionsCardLoader speed={2} />\n            </div>\n        );\n        const is_multiplier = isMultiplierContract(contract_info.contract_type);\n        const is_accumulator = isAccumulatorContract(contract_info.contract_type);\n        const is_vanilla = isVanillaContract(contract_info.contract_type);\n        const is_crypto = isCryptoContract(contract_info.underlying);\n        const has_progress_slider = !is_multiplier || (is_crypto && is_multiplier);\n        const has_ended = !!getEndTime(contract_info);\n        const fallback_result = profit_loss >= 0 ? 'won' : 'lost';\n        const total_profit = getTotalProfit(contract_info);\n\n        const should_show_sell = hasContractEntered(contract_info) && isOpen(contract_info);\n        const display_name = getSymbolDisplayName(\n            active_symbols,\n            getMarketInformation(contract_info.shortcode).underlying\n        );\n\n        const contract_options_el = (\n            <React.Fragment>\n                <div className={classNames('positions-modal-card__grid', 'positions-modal-card__grid-header')}>\n                    <div className='positions-modal-card__underlying-name'>\n                        <Icon\n                            icon={contract_info.underlying ? `IcUnderlying${contract_info.underlying}` : 'IcUnknown'}\n                            size={34}\n                        />\n                        <Text size='xxs' className='positions-modal-card__symbol' weight='bold'>\n                            {contract_info.display_name}\n                        </Text>\n                    </div>\n                    <div className='positions-modal-card__type'>\n                        <ContractCard.ContractTypeCell\n                            getContractTypeDisplay={getContractTypeDisplay}\n                            is_high_low={isHighLow({ shortcode: contract_info.shortcode })}\n                            multiplier={contract_info.multiplier}\n                            type={type}\n                        />\n                    </div>\n                    <CSSTransition\n                        in={should_show_sell}\n                        timeout={250}\n                        classNames={{\n                            enter: 'positions-modal-card__sell-button--enter',\n                            enterDone: 'positions-modal-card__sell-button--enter-done',\n                            exit: 'positions-modal-card__sell-button--exit',\n                        }}\n                        unmountOnExit\n                    >\n                        <div className='positions-modal-card__sell-button'>\n                            <ContractCard.Sell\n                                contract_info={contract_info}\n                                is_sell_requested={is_sell_requested}\n                                getCardLabels={getCardLabels}\n                                onClickSell={onClickSell}\n                            />\n                        </div>\n                    </CSSTransition>\n                </div>\n                <CurrencyBadge currency={contract_info?.currency ?? ''} />\n                <div className={classNames('positions-modal-card__grid', 'positions-modal-card__grid-body')}>\n                    <div className={classNames('positions-modal-card__grid-profit-payout')}>\n                        <div\n                            className={classNames(\n                                'positions-modal-card__profit-loss',\n                                'positions-modal-card__profit-loss-label'\n                            )}\n                        >\n                            {result ? localize('Profit/Loss:') : localize('Potential profit/loss:')}\n                        </div>\n                        <div\n                            className={classNames(\n                                'positions-modal-card__indicative',\n                                'positions-modal-card__indicative-label'\n                            )}\n                        >\n                            {!result ? localize('Indicative price:') : localize('Payout:')}\n                        </div>\n                        <div\n                            className={classNames('positions-modal-card__profit-loss', {\n                                'positions-modal-card__profit-loss--is-crypto': isCryptocurrency(currency),\n                                'positions-modal-card__profit-loss--negative': profit_loss < 0,\n                                'positions-modal-card__profit-loss--positive': profit_loss > 0,\n                            })}\n                        >\n                            <Money amount={Math.abs(profit_loss)} currency={currency} />\n                            <div\n                                className={classNames('positions-modal-card__indicative--movement', {\n                                    'positions-modal-card__indicative--movement-complete': !!result,\n                                })}\n                            >\n                                {status === 'profit' && <Icon icon='IcProfit' />}\n                                {status === 'loss' && <Icon icon='IcLoss' />}\n                            </div>\n                        </div>\n                        <div className='positions-modal-card__indicative'>\n                            <Money amount={sell_price || indicative} currency={currency} />\n                            <div\n                                className={classNames('positions-modal-card__indicative--movement', {\n                                    'positions-modal-card__indicative--movement-complete': !!result,\n                                })}\n                            >\n                                {status === 'profit' && <Icon icon='IcProfit' />}\n                                {status === 'loss' && <Icon icon='IcLoss' />}\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classNames('positions-modal-card__grid-price-payout')}>\n                        <div className='positions-modal-card__purchase-price'>\n                            <Text size='xxxs' className='positions-modal-card__purchase-label'>\n                                {localize('Purchase price:')}\n                            </Text>\n                            <Text weight='bold' size='xxs' className='positions-modal-card__purchase-value'>\n                                <Money amount={contract_info.buy_price} currency={currency} />\n                            </Text>\n                        </div>\n                        <div className='positions-modal-card__payout-price'>\n                            <Text size='xxxs' className='positions-modal-card__payout-label'>\n                                {localize('Potential payout:')}\n                            </Text>\n                            <Text weight='bold' size='xxs' className='positions-modal-card__payout-value'>\n                                {contract_info.payout ? (\n                                    <Money amount={contract_info.payout} currency={currency} />\n                                ) : (\n                                    <strong>-i</strong>\n                                )}\n                            </Text>\n                        </div>\n                    </div>\n\n                    {result || !!contract_info.is_sold ? (\n                        <ResultMobile\n                            contract_id={id}\n                            is_visible={!!contract_info.is_sold}\n                            result={result || fallback_result}\n                        />\n                    ) : (\n                        <ProgressSliderMobile\n                            className='positions-modal-card__progress'\n                            current_tick={current_tick}\n                            getCardLabels={getCardLabels}\n                            is_loading={is_loading}\n                            start_time={contract_info.date_start}\n                            expiry_time={contract_info.date_expiry}\n                            server_time={server_time}\n                            ticks_count={contract_info.tick_count}\n                        />\n                    )}\n                </div>\n            </React.Fragment>\n        );\n\n        const contract_vanilla_el = (\n            <React.Fragment>\n                <NavLink\n                    className={classNames('dc-contract-card', {\n                        'dc-contract-card--green': !is_multiplier && profit_loss > 0 && !result,\n                        'dc-contract-card--red': !is_multiplier && profit_loss < 0 && !result,\n                    })}\n                    to={{\n                        pathname: `/contract/${contract_info.contract_id}`,\n                    }}\n                >\n                    <ContractCard.Header\n                        contract_info={contract_info}\n                        display_name={display_name}\n                        getCardLabels={getCardLabels}\n                        getContractTypeDisplay={getContractTypeDisplay}\n                        has_progress_slider={!is_mobile && has_progress_slider}\n                        is_mobile={is_mobile}\n                        is_sell_requested={is_sell_requested}\n                        onClickSell={onClickSell}\n                        server_time={server_time}\n                    />\n                </NavLink>\n                <CurrencyBadge currency={contract_info?.currency ?? ''} />\n                <div className={classNames('positions-modal-card__grid', 'positions-modal-card__grid-body')}>\n                    <div className={classNames('positions-modal-card__grid-profit-payout')}>\n                        <div className='positions-modal-card__purchase-price'>\n                            <Text size='xxxs' className='positions-modal-card__purchase-label'>\n                                {localize('Buy price:')}\n                            </Text>\n                            <Text weight='bold' size='xxs' className='positions-modal-card__purchase-value'>\n                                <Money amount={contract_info.buy_price} currency={currency} />\n                            </Text>\n                        </div>\n                        <div className='positions-modal-card__payout-price'>\n                            <Text size='xxxs' className='positions-modal-card__payout-label'>\n                                {localize('Contract value:')}\n                            </Text>\n                            <Text weight='bold' size='xxs' className='positions-modal-card__payout-value'>\n                                <Money amount={contract_info.bid_price} currency={currency} />\n                            </Text>\n                        </div>\n                    </div>\n\n                    <div className={classNames('positions-modal-card__grid-price-payout')}>\n                        <div className='positions-modal-card__purchase-price'>\n                            <Text size='xxxs' className='positions-modal-card__purchase-label'>\n                                {localize('Entry spot:')}\n                            </Text>\n                            <Text weight='bold' size='xxs' className='positions-modal-card__purchase-value'>\n                                <Money amount={contract_info.entry_spot} currency={currency} />\n                            </Text>\n                        </div>\n                        <div className='positions-modal-card__payout-price'>\n                            <Text size='xxxs' className='positions-modal-card__payout-label'>\n                                {localize('Strike:')}\n                            </Text>\n                            <Text weight='bold' size='xxs' className='positions-modal-card__payout-value'>\n                                <Money amount={contract_info.barrier} currency={currency} />\n                            </Text>\n                        </div>\n                    </div>\n\n                    {result || !!contract_info.is_sold ? (\n                        <ResultMobile\n                            contract_id={id}\n                            is_visible={!!contract_info.is_sold}\n                            result={result || fallback_result}\n                        />\n                    ) : (\n                        <ProgressSliderMobile\n                            className='positions-modal-card__progress'\n                            current_tick={current_tick}\n                            getCardLabels={getCardLabels}\n                            is_loading={is_loading}\n                            start_time={contract_info.date_start}\n                            expiry_time={contract_info.date_expiry}\n                            server_time={server_time}\n                            ticks_count={contract_info.tick_count}\n                        />\n                    )}\n                </div>\n                <div className={classNames('positions-modal-card__item', className)}>\n                    <div className='dc-contract-card-item__header'>{getCardLabels().TOTAL_PROFIT_LOSS}</div>\n                    <div\n                        className={classNames('dc-contract-card-item__body', {\n                            'dc-contract-card-item__body--crypto': isCryptocurrency(currency),\n                            'dc-contract-card-item__body--loss': +total_profit < 0,\n                            'dc-contract-card-item__body--profit': +total_profit > 0,\n                        })}\n                    >\n                        <Money amount={total_profit} currency={currency} />\n                        <div\n                            className={classNames('dc-contract-card__indicative--movement', {\n                                'dc-contract-card__indicative--movement-complete': !!contract_info.is_sold,\n                            })}\n                        >\n                            {status === 'profit' && <Icon icon='IcProfit' />}\n                            {status === 'loss' && <Icon icon='IcLoss' />}\n                        </div>\n                    </div>\n                </div>\n                <ContractCard.Footer\n                    contract_info={contract_info}\n                    getCardLabels={getCardLabels}\n                    is_multiplier={is_multiplier}\n                    is_sell_requested={is_sell_requested}\n                    onClickCancel={onClickCancel}\n                    onClickSell={onClickSell}\n                    server_time={server_time}\n                    status={status}\n                />\n            </React.Fragment>\n        );\n\n        const custom_card_header = (\n            <ContractCard.Header\n                contract_info={contract_info}\n                display_name={display_name}\n                getCardLabels={getCardLabels}\n                getContractTypeDisplay={getContractTypeDisplay}\n                has_progress_slider={(!is_mobile && has_progress_slider) || is_accumulator}\n                is_mobile={is_mobile}\n                is_sell_requested={is_sell_requested}\n                onClickSell={onClickSell}\n                server_time={server_time}\n            />\n        );\n\n        const custom_card_body = (\n            <ContractCard.Body\n                addToast={addToast}\n                contract_info={contract_info}\n                contract_update={contract_update}\n                currency={currency}\n                current_focus={current_focus}\n                getCardLabels={getCardLabels}\n                getContractById={getContractById}\n                is_accumulator={is_accumulator}\n                is_mobile={is_mobile}\n                is_multiplier={is_multiplier}\n                is_positions\n                is_sold={!!contract_info.is_sold}\n                has_progress_slider={is_mobile && has_progress_slider && !has_ended}\n                removeToast={removeToast}\n                server_time={server_time}\n                setCurrentFocus={setCurrentFocus}\n                should_show_cancellation_warning={should_show_cancellation_warning}\n                status={status}\n                toggleCancellationWarning={toggleCancellationWarning}\n            />\n        );\n\n        const custom_card_footer = (\n            <ContractCard.Footer\n                contract_info={contract_info}\n                getCardLabels={getCardLabels}\n                is_multiplier={is_multiplier}\n                is_sell_requested={is_sell_requested}\n                onClickCancel={onClickCancel}\n                onClickSell={onClickSell}\n                server_time={server_time}\n                status={status}\n            />\n        );\n\n        const custom_contract_el = (\n            <React.Fragment>\n                <ContractCard\n                    contract_info={contract_info}\n                    getCardLabels={getCardLabels}\n                    is_multiplier={is_multiplier}\n                    profit_loss={profit_loss}\n                    should_show_result_overlay={false}\n                >\n                    {custom_card_header}\n                    {custom_card_body}\n                    {custom_card_footer}\n                </ContractCard>\n            </React.Fragment>\n        );\n\n        const options_el = is_vanilla ? contract_vanilla_el : contract_options_el;\n        const contract_el = is_multiplier || is_accumulator ? custom_contract_el : options_el;\n\n        return (\n            <div id={`dt_drawer_card_${id}`} className={classNames('positions-modal-card__wrapper', className)}>\n                {is_unsupported ? (\n                    <div\n                        className={classNames('positions-modal-card')}\n                        onClick={() => toggleUnsupportedContractModal(true)}\n                    >\n                        {contract_info.underlying ? contract_el : loader_el}\n                    </div>\n                ) : (\n                    <React.Fragment>\n                        <BinaryLink\n                            onClick={togglePositions}\n                            className={classNames('positions-modal-card', {\n                                'positions-modal-card--multiplier': is_multiplier,\n                            })}\n                            to={getContractPath(id)}\n                        >\n                            {contract_info.underlying ? contract_el : loader_el}\n                        </BinaryLink>\n                    </React.Fragment>\n                )}\n            </div>\n        );\n    }\n);\n\nPositionsModalCard.propTypes = {\n    className: PropTypes.string,\n    contract_info: PropTypes.object,\n    contract_update: PropTypes.object,\n    currency: PropTypes.string,\n    current_tick: PropTypes.number,\n    duration: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    duration_unit: PropTypes.string,\n    exit_spot: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    id: PropTypes.number,\n    indicative: PropTypes.number,\n    is_loading: PropTypes.bool,\n    is_sell_requested: PropTypes.bool,\n    is_unsupported: PropTypes.bool,\n    is_valid_to_sell: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    onClickRemove: PropTypes.func,\n    onClickSell: PropTypes.func,\n    onClickCancel: PropTypes.func,\n    profit_loss: PropTypes.number,\n    result: PropTypes.string,\n    sell_price: PropTypes.number,\n    sell_time: PropTypes.number,\n    status: PropTypes.string,\n    togglePositions: PropTypes.func,\n    toggleUnsupportedContractModal: PropTypes.func,\n    type: PropTypes.string,\n};\n\nexport default PositionsModalCard;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon } from '@deriv/components';\nimport 'Sass/app/_common/components/positions-toggle.scss';\n\nconst TogglePositions = ({ positions_count, is_open, togglePositions }) => {\n    const positions_toggle_class = classNames('positions-toggle', {\n        'positions-toggle--active': is_open,\n        'positions-toggle--has-count': positions_count > 0,\n    });\n    return (\n        <a\n            id='dt_positions_toggle'\n            data-testid='dt_positions_toggle'\n            className={positions_toggle_class}\n            onClick={togglePositions}\n            data-count={positions_count}\n        >\n            <Icon data_testid='dt_icon' icon='IcPortfolio' className='positions-toggle__icon' />\n        </a>\n    );\n};\n\nTogglePositions.propTypes = {\n    is_open: PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    positions_count: PropTypes.number,\n    togglePositions: PropTypes.func,\n    togglePositionsDrawer: PropTypes.func,\n};\n\nexport default TogglePositions;\n","import React from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { Icon, Div100vhContainer, Modal, Text } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { NavLink } from 'react-router-dom';\nimport EmptyPortfolioMessage from '../EmptyPortfolioMessage';\nimport PositionsModalCard from 'App/Components/Elements/PositionsDrawer/positions-modal-card.jsx';\nimport { filterByContractType } from 'App/Components/Elements/PositionsDrawer/helpers';\nimport TogglePositions from './toggle-positions.jsx';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\nconst TogglePositionsMobile = observer(\n    ({\n        active_positions_count,\n        all_positions,\n        currency,\n        disableApp,\n        enableApp,\n        error,\n        is_empty,\n        onClickSell,\n        onClickCancel,\n        toggleUnsupportedContractModal,\n    }) => {\n        const { portfolio, ui } = useStore();\n        const { symbol, contract_type: trade_contract_type } = useTraderStore();\n        const { removePositionById: onClickRemove } = portfolio;\n        const { togglePositionsDrawer, is_positions_drawer_on } = ui;\n        let filtered_positions = [];\n\n        const closeModal = () => {\n            filtered_positions.slice(0, 5).map(position => {\n                const { contract_info } = position;\n                if (contract_info?.is_sold) {\n                    onClickRemove(contract_info.contract_id);\n                }\n            });\n            togglePositionsDrawer();\n        };\n\n        filtered_positions = all_positions.filter(\n            p =>\n                p.contract_info &&\n                symbol === p.contract_info.underlying &&\n                filterByContractType(p.contract_info, trade_contract_type)\n        );\n\n        // Show only 5 most recent open contracts\n        const body_content = (\n            <React.Fragment>\n                <TransitionGroup component='div'>\n                    {filtered_positions.slice(0, 5).map(portfolio_position => (\n                        <CSSTransition\n                            appear\n                            key={portfolio_position.id}\n                            in={true}\n                            timeout={150}\n                            classNames={{\n                                appear: 'dc-contract-card__wrapper--enter',\n                                enter: 'dc-contract-card__wrapper--enter',\n                                enterDone: 'dc-contract-card__wrapper--enter-done',\n                                exit: 'dc-contract-card__wrapper--exit',\n                            }}\n                            unmountOnExit\n                        >\n                            <PositionsModalCard\n                                onClickSell={onClickSell}\n                                onClickCancel={onClickCancel}\n                                onClickRemove={onClickRemove}\n                                key={portfolio_position.id}\n                                currency={currency}\n                                toggleUnsupportedContractModal={toggleUnsupportedContractModal}\n                                togglePositions={togglePositionsDrawer}\n                                {...portfolio_position}\n                            />\n                        </CSSTransition>\n                    ))}\n                </TransitionGroup>\n            </React.Fragment>\n        );\n\n        return (\n            <React.Fragment>\n                <TogglePositions\n                    is_open={is_positions_drawer_on}\n                    togglePositions={togglePositionsDrawer}\n                    positions_count={active_positions_count}\n                />\n                <Modal\n                    is_open={is_positions_drawer_on}\n                    toggleModal={closeModal}\n                    id='dt_mobile_positions'\n                    is_vertical_top\n                    has_close_icon\n                    enableApp={enableApp}\n                    disableApp={disableApp}\n                    width='calc(100vw - 32px)'\n                >\n                    <Div100vhContainer className='positions-modal' height_offset='48px'>\n                        <div className='positions-modal__header'>\n                            <Text size='xxxs' className='positions-modal__title'>\n                                <Icon icon='IcPortfolio' className='positions-modal__title-icon' />\n                                {localize('Recent positions')}\n                            </Text>\n                            <div className='positions-modal__close-btn' onClick={closeModal}>\n                                <Icon icon='IcMinusBold' />\n                            </div>\n                        </div>\n                        <div className='positions-modal__body'>\n                            {is_empty || error ? <EmptyPortfolioMessage error={error} /> : body_content}\n                        </div>\n                        <div className='positions-modal__footer'>\n                            <NavLink\n                                onClick={closeModal}\n                                className='dc-btn dc-btn--secondary dc-btn__large positions-modal__footer-btn'\n                                to={routes.positions}\n                            >\n                                <Text size='xs' weight='bold'>\n                                    {localize('Go to Reports')}\n                                </Text>\n                            </NavLink>\n                        </div>\n                    </Div100vhContainer>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n);\n\nexport default TogglePositionsMobile;\n","import React from 'react';\nimport TogglePositionsMobile from 'App/Components/Elements/TogglePositions/toggle-positions-mobile.jsx';\nimport { filterByContractType } from 'App/Components/Elements/PositionsDrawer/helpers';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\nconst PopulateHeader = observer(() => {\n    const { portfolio, ui, client } = useStore();\n    const { symbol, contract_type: trade_contract_type } = useTraderStore();\n    const { currency: positions_currency } = client;\n    const { disableApp, enableApp } = ui;\n    const {\n        active_positions_count,\n        all_positions: positions,\n        error: positions_error,\n        onClickSell: onPositionsSell,\n        removePositionById: onPositionsRemove,\n        onClickCancel: onPositionsCancel,\n    } = portfolio;\n\n    const symbol_positions = positions.filter(\n        p =>\n            p.contract_info &&\n            symbol === p.contract_info.underlying &&\n            filterByContractType(p.contract_info, trade_contract_type)\n    );\n\n    return (\n        <TogglePositionsMobile\n            active_positions_count={active_positions_count}\n            all_positions={positions}\n            currency={positions_currency}\n            disableApp={disableApp}\n            is_empty={!symbol_positions.length}\n            enableApp={enableApp}\n            error={positions_error}\n            onClickSell={onPositionsSell}\n            onClickRemove={onPositionsRemove}\n            onClickCancel={onPositionsCancel}\n        />\n    );\n});\n\nexport default PopulateHeader;\n","import React from 'react';\nimport { StoreProvider } from '@deriv/stores';\nimport { TraderStoreProvider } from 'Stores/useTraderStores';\nimport type { TCoreStores } from '@deriv/stores/types';\n\nexport const TraderProviders = ({ children, store }: React.PropsWithChildren<{ store: TCoreStores }>) => {\n    return (\n        <StoreProvider store={store}>\n            <TraderStoreProvider>{children}</TraderStoreProvider>\n        </StoreProvider>\n    );\n};\n\nexport default TraderProviders;\n","import React from 'react';\nimport { when } from 'mobx';\nimport { MobileWrapper } from '@deriv/components';\nimport { isMobile, routes, WS } from '@deriv/shared';\nimport PopulateHeader from './populate-header';\nimport { observer, useStore } from '@deriv/stores';\nimport TraderProviders from '../../trader-providers';\nimport { TCoreStores } from '@deriv/stores/types';\n\ntype TradeHeaderExtensionsProps = {\n    store: TCoreStores;\n};\n\nconst TradeHeaderExtensions = observer(({ store }: TradeHeaderExtensionsProps) => {\n    const { client, modules, ui, portfolio } = useStore();\n    const { populateHeaderExtensions } = ui;\n    const { onMount: onMountPositions } = portfolio;\n    const { is_logged_in, is_populating_account_list } = client;\n    const { onMountCommon: onMountCashier, setAccountSwitchListener } = modules.cashier.general_store;\n\n    const show_positions_toggle = location.pathname !== routes.mt5;\n    const show_component = is_logged_in && show_positions_toggle;\n\n    const populateHeaderfunction = React.useCallback(() => {\n        const header_items = show_component ? (\n            <MobileWrapper>\n                <TraderProviders store={store}>\n                    <PopulateHeader />\n                </TraderProviders>\n            </MobileWrapper>\n        ) : null;\n\n        populateHeaderExtensions(header_items);\n    }, [populateHeaderExtensions, store, show_positions_toggle, is_populating_account_list]);\n\n    React.useEffect(() => {\n        const waitForLogin = async () => {\n            if (isMobile() && show_positions_toggle) {\n                await when(() => !is_populating_account_list); // Waits for login to complete\n                if (is_logged_in) {\n                    await WS.wait('authorize');\n                    onMountPositions();\n                    onMountCashier(true);\n                    setAccountSwitchListener();\n                }\n            }\n\n            populateHeaderfunction();\n        };\n\n        waitForLogin().catch(() => {\n            // Do nothing: This is to remove the bug reported by SonarCloud about not having a catch statement here.\n        });\n\n        return () => populateHeaderExtensions(null);\n    }, [\n        onMountCashier,\n        onMountPositions,\n        populateHeaderfunction,\n        populateHeaderExtensions,\n        setAccountSwitchListener,\n        store,\n        show_positions_toggle,\n    ]);\n\n    React.useEffect(() => {\n        populateHeaderfunction();\n    });\n\n    return null;\n});\n\nexport default TradeHeaderExtensions;\n","import TogglePositions from './toggle-positions.jsx';\n\nexport default TogglePositions;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { routes } from '@deriv/shared';\nimport TogglePositions from 'App/Components/Elements/TogglePositions';\nimport { observer, useStore } from '@deriv/stores';\n\nconst TradeFooterExtensions = observer(() => {\n    const { client, portfolio, ui } = useStore();\n    const { is_logged_in } = client;\n    const { active_positions_count } = portfolio;\n    const { is_positions_drawer_on, populateFooterExtensions, togglePositionsDrawer } = ui;\n    React.useEffect(() => populateFooter());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    React.useEffect(() => () => populateFooterExtensions([]), []);\n\n    const TogglePositionsIcon = () => (\n        <TogglePositions\n            is_open={is_positions_drawer_on}\n            togglePositions={togglePositionsDrawer}\n            positions_count={active_positions_count}\n        />\n    );\n\n    const populateFooter = () => {\n        const show_positions_toggle = location.pathname === routes.trade;\n\n        if (is_logged_in && show_positions_toggle) {\n            populateFooterExtensions([\n                {\n                    position: 'left',\n                    Component: TogglePositionsIcon,\n                },\n            ]);\n        } else {\n            populateFooterExtensions([]);\n        }\n    };\n\n    return null;\n});\n\nTradeFooterExtensions.propTypes = {\n    location: PropTypes.object,\n};\n\nexport default withRouter(TradeFooterExtensions);\n","import React from 'react';\nimport Loadable from 'react-loadable';\nimport { UILoader } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport TraderProviders from '../../trader-providers';\nimport type { TCoreStores } from '@deriv/stores/types';\n\ntype TTradeSettingsExtensionsProps = {\n    store: TCoreStores;\n};\n\nconst ChartSettingContainer = Loadable({\n    loader: () =>\n        import(\n            /* webpackChunkName: \"settings-chart\", webpackPrefetch: true */ 'App/Containers/SettingsModal/settings-chart.jsx'\n        ),\n    loading: UILoader,\n});\n\n// const PurchaseSettings = Loadable({\n//     loader: () =>\n//     import(/* webpackChunkName: \"settings-chart\", webpackPrefetch: true */'App/Containers/SettingsModal/settings-purchase.jsx'),\n//     loading: UILoader,\n// });\n\nconst renderItemValue = <T extends object>(props: T, store: TCoreStores) => (\n    <TraderProviders store={store}>\n        <ChartSettingContainer {...props} />\n    </TraderProviders>\n);\n\nconst TradeSettingsExtensions = observer(({ store }: TTradeSettingsExtensionsProps) => {\n    const { ui } = useStore();\n    const { populateSettingsExtensions } = ui;\n    const populateSettings = () => {\n        const menu_items: Parameters<typeof populateSettingsExtensions>[0] = [\n            {\n                icon: 'IcChart',\n                label: localize('Charts'),\n                value: props => renderItemValue(props, store),\n                // uncomment below lines to bring back purchase lock and purchase confirmation}\n                // }, {\n                //     icon : IconPurchase,\n                //     label: localize('Purchase'),\n                //     value: PurchaseSettings,\n            },\n        ];\n        populateSettingsExtensions(menu_items);\n    };\n\n    React.useEffect(() => {\n        return () => populateSettingsExtensions(null);\n    }, [populateSettingsExtensions]);\n\n    React.useEffect(() => populateSettings());\n\n    return null;\n});\n\nexport default TradeSettingsExtensions;\n","import { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\n\nexport const onChangeSymbolAsync = async symbol => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","import { localize } from '@deriv/translations';\nimport { isHourValid, isMinuteValid, isTimeValid, toMoment } from '@deriv/shared';\nimport { isSessionAvailable } from '../Helpers/start-date';\n\nconst tradeSpecificBarrierCheck = (is_vanilla, input) => is_vanilla || input !== 0;\n\nexport const getValidationRules = () => ({\n    amount: {\n        rules: [\n            ['req', { message: localize('Amount is a required field.') }],\n            ['number', { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            [\n                'req',\n                {\n                    condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1,\n                    message: localize('Barrier is a required field.'),\n                },\n            ],\n            ['barrier', { condition: store => store.barrier_count }],\n            [\n                'custom',\n                {\n                    func: (value, options, store, inputs) =>\n                        store.barrier_count > 1 ? +value > +inputs.barrier_2 : true,\n                    message: localize('Higher barrier must be higher than lower barrier.'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value, options, store, inputs) =>\n                        /^[+-]/.test(inputs.barrier_1)\n                            ? tradeSpecificBarrierCheck(store.is_vanilla, +inputs.barrier_1)\n                            : true,\n                    message: localize('Barrier cannot be zero.'),\n                },\n            ],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            [\n                'req',\n                {\n                    condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1,\n                    message: localize('Barrier is a required field.'),\n                },\n            ],\n            ['barrier', { condition: store => store.barrier_count }],\n            [\n                'custom',\n                {\n                    func: (value, options, store, inputs) =>\n                        (/^[+-]/g.test(inputs.barrier_1) && /^[+-]/g.test(value)) ||\n                        (/^(?![+-])/g.test(inputs.barrier_1) && /^(?![+-])/g.test(value)),\n                    message: localize('Both barriers should be relative or absolute'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value, options, store, inputs) => +inputs.barrier_1 > +value,\n                    message: localize('Lower barrier must be lower than higher barrier.'),\n                },\n            ],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [['req', { message: localize('Duration is a required field.') }]],\n    },\n    start_date: {\n        trigger: 'start_time',\n    },\n    expiry_date: {\n        trigger: 'expiry_time',\n    },\n    start_time: {\n        rules: [\n            [\n                'custom',\n                {\n                    func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value),\n                    message: localize('Please enter the start time in the format \"HH:MM\".'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value),\n                    message: localize('Hour must be between 0 and 23.'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value),\n                    message: localize('Minute must be between 0 and 59.'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value, options, store) => {\n                        if (store.contract_start_type === 'spot') return true;\n                        if (!isTimeValid(value)) return false;\n                        const start_moment = toMoment(store.start_date);\n                        const start_moment_clone = start_moment.clone();\n                        const [h, m] = value.split(':');\n                        return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n                    },\n                    message: localize('Start time cannot be in the past.'),\n                },\n            ],\n        ],\n    },\n    expiry_time: {\n        rules: [\n            [\n                'custom',\n                {\n                    func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value),\n                    message: localize('Please enter the start time in the format \"HH:MM\".'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value),\n                    message: localize('Hour must be between 0 and 23.'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value),\n                    message: localize('Minute must be between 0 and 59.'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value, options, store) => {\n                        if (store.contract_start_type === 'spot') return true;\n                        if (!isTimeValid(value)) return false;\n                        const start_moment = toMoment(store.start_date);\n                        const start_moment_clone = start_moment.clone();\n                        const [h, m] = value.split(':');\n                        return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n                    },\n                    message: localize('Expiry time cannot be in the past.'),\n                },\n            ],\n        ],\n    },\n    ...getMultiplierValidationRules(),\n});\n\nexport const getMultiplierValidationRules = () => ({\n    stop_loss: {\n        rules: [\n            [\n                'req',\n                {\n                    condition: store => store.has_stop_loss && !store.stop_loss,\n                    message: localize('Please enter a stop loss amount.'),\n                },\n            ],\n        ],\n    },\n    take_profit: {\n        rules: [\n            [\n                'req',\n                {\n                    condition: store => store.has_take_profit && !store.take_profit,\n                    message: localize('Please enter a take profit amount.'),\n                },\n            ],\n        ],\n    },\n});\n","import { WS } from '@deriv/shared';\n\nexport const processPurchase = async (proposal_id, price, passthrough) =>\n    WS.buy({\n        proposal_id,\n        price,\n        ...(passthrough && { passthrough }),\n    });\n","/**\n * @param {Object} previous_ticks_history_stats - an object of type: { ticks_stayed_in: number[], last_tick_epoch: number }\n *                                                with ticks_stayed_in starting with the latest counter value;\n * @param {number[]} new_ticks_history_stats - an array of ticks counters containing 100 last values at first, and then only 1 latest updated counter value;\n * @param {number} last_tick_epoch - an epoch of the latest tick counted by the latest (last) ticks counter in new_ticks_stayed_in array;\n * @returns an object of the same type as previous_ticks_history_stats.\n */\nexport const getUpdatedTicksHistoryStats = ({\n    previous_ticks_history_stats = {},\n    new_ticks_history_stats = [],\n    last_tick_epoch,\n}) => {\n    // we anticipate that the latest counter value will be the last one in the received new_ticks_stayed_in array:\n    let ticks_stayed_in = [];\n    const previous_history = previous_ticks_history_stats.ticks_stayed_in || [];\n    const previous_epoch = previous_ticks_history_stats.last_tick_epoch;\n    if (!new_ticks_history_stats.length || !last_tick_epoch) return previous_ticks_history_stats;\n    if (new_ticks_history_stats.length > 1) {\n        ticks_stayed_in = [...new_ticks_history_stats].reverse();\n    } else if (new_ticks_history_stats[0] <= previous_history[0] && last_tick_epoch > previous_epoch) {\n        ticks_stayed_in = [new_ticks_history_stats[0], ...previous_history.slice(0, previous_history.length - 1)];\n    } else if (last_tick_epoch === previous_epoch) {\n        ticks_stayed_in = previous_history;\n    } else {\n        ticks_stayed_in = [new_ticks_history_stats[0], ...previous_history.slice(1)];\n    }\n    return { ticks_stayed_in, last_tick_epoch };\n};\n","import { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => {\n    return ContractType.getContractType(contract_types_list, contract_type);\n};\nexport const onChangeContractType = store => ContractType.getContractValues(store);\n","import { getExpiryType, getDurationMinMaxValues } from '@deriv/shared';\nimport { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\n\nexport const onChangeExpiry = store => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers =\n        store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n\nexport const onChangeContractType = store => {\n    const contract_expiry_type = getExpiryType(store);\n\n    const { duration, duration_min_max, duration_unit } = store;\n\n    const obj_duration = assertDuration({ contract_expiry_type, duration, duration_min_max, duration_unit });\n\n    return {\n        ...obj_duration,\n    };\n};\n\nconst assertDuration = ({ contract_expiry_type, duration, duration_min_max, duration_unit } = {}) => {\n    const [min, max] = getDurationMinMaxValues(duration_min_max, contract_expiry_type, duration_unit);\n\n    if (duration < min) {\n        return { duration: min };\n    }\n    if (duration > max) {\n        return { duration: max };\n    }\n    return {};\n};\n","import { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\n\nexport const onChangeStartDate = async store => {\n    const { contract_type, duration_unit, start_date } = store;\n    const server_time = store.root_store.common.server_time;\n    let { start_time, expiry_date, expiry_type } = store;\n\n    start_time = start_time || server_time.clone().add(6, 'minute').format('HH:mm'); // when there is not a default value for start_time, it should be set more than 5 min after server_time\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type = obj_contract_start_type.contract_start_type;\n    const obj_sessions = ContractType.getSessions(contract_type, start_date);\n    const sessions = obj_sessions.sessions;\n    const obj_start_time = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const duration_units_list = obj_duration_units_list.duration_units_list;\n    const obj_duration_unit = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_type = ContractType.getExpiryType(duration_units_list, expiry_type);\n    expiry_type = obj_expiry_type.expiry_type;\n    const obj_expiry_date = ContractType.getExpiryDate(duration_units_list, expiry_date, expiry_type, start_date);\n    expiry_date = obj_expiry_date.expiry_date;\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_type,\n    };\n};\n\nexport const onChangeExpiry = async store => {\n    const { start_time, expiry_date, expiry_type, expiry_time, start_date, symbol, sessions } = store;\n\n    const trading_times = await ContractType.getTradingTimes(expiry_date, symbol);\n    const obj_market_open_times = { market_open_times: trading_times.open };\n    const obj_market_close_times = { market_close_times: trading_times.close };\n\n    const market_close_times = obj_market_close_times.market_close_times;\n    const obj_expiry_time = ContractType.getExpiryTime(\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    );\n\n    return {\n        ...obj_expiry_time,\n        ...obj_market_open_times,\n        ...obj_market_close_times,\n    };\n};\n","import { ContractType as ContractTypeHelper } from 'Stores/Modules/Trading/Helpers/contract-type';\nimport * as ContractType from '../Actions/contract-type';\nimport * as Duration from '../Actions/duration';\nimport * as StartDate from '../Actions/start-date';\n\nconst processInSequence = async (store, functions) => {\n    const snapshot = store.getSnapshot();\n    // To make sure that every function is invoked and affects the snapshot respectively, we have to use for instead of forEach\n    for (let i = 0; i < functions.length; i++) {\n        // Shallow copy with Object.assign is good enough to extend the snapshot with new state\n        // we don't need deep extension here, since each function in functions array composes a property of the store completely\n        Object.assign(snapshot, await functions[i](snapshot)); // eslint-disable-line no-await-in-loop\n    }\n    store.updateStore({\n        ...snapshot,\n    });\n};\n\nexport const processTradeParams = async (store, new_state) => {\n    const functions = getMethodsList(store, new_state);\n    await processInSequence(store, functions);\n\n    const duration_functions = getExpiryMethodsList();\n    await processInSequence(store, duration_functions);\n\n    store.updateStore({\n        is_trade_enabled: true,\n    });\n};\n\nconst getMethodsList = (store, new_state) => [\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type|is_equal)\\b/.test(Object.keys(new_state)) || !store.contract_type // symbol/contract_type changed or contract_type not set yet\n        ? [ContractType.onChangeContractType]\n        : []),\n    StartDate.onChangeStartDate,\n    Duration.onChangeExpiry, // it should be always after StartDate.onChangeStartDate\n    ...(/\\b(symbol|contract_type|is_equal)\\b/.test(Object.keys(new_state)) || !store.contract_type // symbol/contract_type changed or contract_type not set yet\n        ? [Duration.onChangeContractType]\n        : []),\n];\n\nconst getExpiryMethodsList = () => [StartDate.onChangeExpiry];\n","export const CONTRACT_SHADES = {\n    CALL: 'ABOVE',\n    PUT: 'BELOW',\n    CALLE: 'ABOVE',\n    PUTE: 'BELOW',\n    EXPIRYRANGE: 'BETWEEN',\n    EXPIRYMISS: 'OUTSIDE',\n    RANGE: 'BETWEEN',\n    UPORDOWN: 'OUTSIDE',\n    ONETOUCH: 'NONE_SINGLE', // no shade\n    NOTOUCH: 'NONE_SINGLE', // no shade\n    ASIANU: 'ABOVE',\n    ASIAND: 'BELOW',\n    MULTUP: 'ABOVE',\n    MULTDOWN: 'BELOW',\n    ACCU: 'NONE_DOUBLE',\n};\n\n// Default non-shade according to number of barriers\nexport const DEFAULT_SHADES = {\n    1: 'NONE_SINGLE',\n    2: 'NONE_DOUBLE',\n};\n\nexport const BARRIER_COLORS = {\n    GREEN: '#4bb4b3',\n    RED: '#ec3f3f',\n    ORANGE: '#ff6444',\n    GRAY: '#999999',\n    DARK_GRAY: '#6E6E6E',\n};\n\nexport const BARRIER_LINE_STYLES = {\n    DASHED: 'dashed',\n    DOTTED: 'dotted',\n    SOLID: 'solid',\n};\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","import { template } from '_common/utility';\nimport { getPreBuildDVRs } from '@deriv/shared';\nimport Error from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input = input;\n        this.rules = rules;\n        this.store = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule, error_message) {\n        let message = error_message || rule.options.message || getPreBuildDVRs()[rule.name].message();\n        if (rule.name === 'length') {\n            message = template(message, [\n                rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`,\n            ]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                let is_valid, error_message;\n                if (ruleObject.name === 'number') {\n                    const { is_ok, message } = ruleObject.validator(\n                        this.input[attribute],\n                        ruleObject.options,\n                        this.store,\n                        this.input\n                    );\n                    is_valid = is_ok;\n                    error_message = message;\n                } else {\n                    is_valid = ruleObject.validator(this.input[attribute], ruleObject.options, this.store, this.input);\n                }\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject, error_message);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name: is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import Validator from './validator';\n\nexport default Validator;\n","import { action, intercept, observable, reaction, toJS, when, makeObservable } from 'mobx';\nimport { isProduction, isEmptyObject } from '@deriv/shared';\n\nimport Validator from 'Utils/Validator';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE: Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    validation_errors = {};\n\n    validation_rules = {};\n\n    preSwitchAccountDisposer = null;\n    pre_switch_account_listener = null;\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    logoutDisposer = null;\n    logout_listener = null;\n\n    clientInitDisposer = null;\n    client_init_listener = null;\n\n    networkStatusChangeDisposer = null;\n    network_status_change_listener = null;\n\n    themeChangeDisposer = null;\n    theme_change_listener = null;\n\n    realAccountSignupEndedDisposer = null;\n    real_account_signup_ended_listener = null;\n\n    partial_fetch_time = 0;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     *     @property {String}   store_name - Explicit store name for browser application storage (to bypass minification)\n     */\n    constructor(options = {}) {\n        makeObservable(this, {\n            validation_errors: observable,\n            validation_rules: observable,\n            partial_fetch_time: observable,\n            retrieveFromStorage: action,\n            setValidationErrorMessages: action,\n            setValidationRules: action,\n            addRule: action,\n            validateProperty: action,\n            validateAllProperties: action,\n            onSwitchAccount: action.bound,\n            onPreSwitchAccount: action.bound,\n            onLogout: action.bound,\n            onClientInit: action.bound,\n            onNetworkStatusChange: action.bound,\n            onThemeChange: action.bound,\n            onRealAccountSignupEnd: action.bound,\n            disposePreSwitchAccount: action.bound,\n            disposeSwitchAccount: action.bound,\n            disposeLogout: action.bound,\n            disposeClientInit: action.bound,\n            disposeNetworkStatusChange: action.bound,\n            disposeThemeChange: action.bound,\n            disposeRealAccountSignupEnd: action.bound,\n            onUnmount: action.bound,\n            assertHasValidCache: action.bound,\n        });\n\n        const { root_store, local_storage_properties, session_storage_properties, validation_rules, store_name } =\n            options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable: true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable: true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable: true,\n        });\n\n        const has_local_or_session_storage =\n            (local_storage_properties && local_storage_properties.length) ||\n            (session_storage_properties && session_storage_properties.length);\n\n        if (has_local_or_session_storage) {\n            if (!store_name) {\n                throw new Error('store_name is required for local/session storage');\n            }\n\n            Object.defineProperty(this, 'store_name', {\n                value: store_name,\n                enumerable: false,\n                writable: false,\n            });\n        }\n\n        this.root_store = root_store;\n        this.local_storage_properties = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n\n        setTimeout(() => {\n            this.setValidationRules(validation_rules);\n\n            this.setupReactionForLocalStorage();\n            this.setupReactionForSessionStorage();\n            this.retrieveFromStorage();\n        }, 0);\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce((result, p) => Object.assign(result, { [p]: snapshot[p] }), {});\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.store_name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.store_name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    retrieveFromStorage() {\n        const local_storage_snapshot = JSON.parse(localStorage.getItem(this.store_name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.store_name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach(k => (this[k] = snapshot[k]));\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param [{String}] messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    setValidationErrorMessages(propertyName, messages) {\n        const is_different = () =>\n            !!this.validation_errors[propertyName]\n                .filter(x => !messages.includes(x))\n                .concat(messages.filter(x => !this.validation_errors[propertyName].includes(x))).length;\n        if (!this.validation_errors[propertyName] || is_different()) {\n            this.validation_errors[propertyName] = messages;\n        }\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    validateProperty(property, value) {\n        const trigger = this.validation_rules[property].trigger;\n        const inputs = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: this.validation_rules[property].rules || [] };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger] = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(inputs, validation_rules, this);\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    validateAllProperties() {\n        const validation_rules = Object.keys(this.validation_rules);\n        const validation_errors = Object.keys(this.validation_errors);\n        validation_rules.forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n\n        // Remove keys that are present in error, but not in rules:\n        validation_errors.forEach(error => {\n            if (!validation_rules.includes(error)) {\n                delete this.validation_errors[error];\n            }\n        });\n    }\n\n    onSwitchAccount(listener) {\n        if (listener) {\n            this.switch_account_listener = listener;\n\n            this.switchAccountDisposer = when(\n                () => this.root_store.client.switch_broadcast,\n                () => {\n                    try {\n                        const result = this.switch_account_listener();\n                        if (result && result.then && typeof result.then === 'function') {\n                            result.then(() => {\n                                this.root_store.client.switchEndSignal();\n                                this.onSwitchAccount(this.switch_account_listener);\n                            });\n                        } else {\n                            throw new Error('Switching account listeners are required to return a promise.');\n                        }\n                    } catch (error) {\n                        // there is no listener currently active. so we can just ignore the error raised from treating\n                        // a null object as a function. Although, in development mode, we throw a console error.\n                        if (!isProduction()) {\n                            console.error(error); // eslint-disable-line\n                        }\n                    }\n                }\n            );\n        }\n    }\n\n    onPreSwitchAccount(listener) {\n        if (listener) {\n            this.pre_switch_account_listener = listener;\n            this.preSwitchAccountDisposer = when(\n                () => this.root_store.client.pre_switch_broadcast,\n                () => {\n                    try {\n                        const result = this.pre_switch_account_listener?.();\n                        if (result && result.then && typeof result.then === 'function') {\n                            result.then(() => {\n                                this.root_store.client.setPreSwitchAccount(false);\n                                this.onPreSwitchAccount(this.pre_switch_account_listener);\n                            });\n                        } else {\n                            throw new Error('Pre-switch account listeners are required to return a promise.');\n                        }\n                    } catch (error) {\n                        // there is no listener currently active. so we can just ignore the error raised from treating\n                        // a null object as a function. Although, in development mode, we throw a console error.\n                        if (!isProduction()) {\n                            console.error(error); // eslint-disable-line\n                        }\n                    }\n                }\n            );\n        }\n    }\n\n    onLogout(listener) {\n        this.logoutDisposer = when(\n            () => this.root_store.client.has_logged_out,\n            async () => {\n                try {\n                    const result = this.logout_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.setLogout(false);\n                            this.onLogout(this.logout_listener);\n                        });\n                    } else {\n                        throw new Error('Logout listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n        this.logout_listener = listener;\n    }\n\n    onClientInit(listener) {\n        this.clientInitDisposer = when(\n            () => this.root_store.client.initialized_broadcast,\n            async () => {\n                try {\n                    const result = this.client_init_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.setInitialized(false);\n                            this.onClientInit(this.client_init_listener);\n                        });\n                    } else {\n                        throw new Error('Client init listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n        this.client_init_listener = listener;\n    }\n\n    onNetworkStatusChange(listener) {\n        this.networkStatusChangeDisposer = reaction(\n            () => this.root_store.common.is_network_online,\n            is_online => {\n                try {\n                    this.network_status_change_listener(is_online);\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.network_status_change_listener = listener;\n    }\n\n    onThemeChange(listener) {\n        this.themeChangeDisposer = reaction(\n            () => this.root_store.ui.is_dark_mode_on,\n            is_dark_mode_on => {\n                try {\n                    this.theme_change_listener(is_dark_mode_on);\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.theme_change_listener = listener;\n    }\n\n    onRealAccountSignupEnd(listener) {\n        this.realAccountSignupEndedDisposer = when(\n            () => this.root_store.ui.has_real_account_signup_ended,\n            () => {\n                try {\n                    const result = this.real_account_signup_ended_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.ui.setRealAccountSignupEnd(false);\n                            this.onRealAccountSignupEnd(this.real_account_signup_ended_listener);\n                        });\n                    } else {\n                        throw new Error('Real account signup listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.real_account_signup_ended_listener = listener;\n    }\n\n    disposePreSwitchAccount() {\n        if (typeof this.preSwitchAccountDisposer === 'function') {\n            this.preSwitchAccountDisposer();\n        }\n        this.pre_switch_account_listener = null;\n    }\n\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    disposeLogout() {\n        if (typeof this.logoutDisposer === 'function') {\n            this.logoutDisposer();\n        }\n        this.logout_listener = null;\n    }\n\n    disposeClientInit() {\n        if (typeof this.clientInitDisposer === 'function') {\n            this.clientInitDisposer();\n        }\n        this.client_init_listener = null;\n    }\n\n    disposeNetworkStatusChange() {\n        if (typeof this.networkStatusChangeDisposer === 'function') {\n            this.networkStatusChangeDisposer();\n        }\n        this.network_status_change_listener = null;\n    }\n\n    disposeThemeChange() {\n        if (typeof this.themeChangeDisposer === 'function') {\n            this.themeChangeDisposer();\n        }\n        this.theme_change_listener = null;\n    }\n\n    disposeRealAccountSignupEnd() {\n        if (typeof this.realAccountSignupEndedDisposer === 'function') {\n            this.realAccountSignupEndedDisposer();\n        }\n        this.real_account_signup_ended_listener = null;\n    }\n\n    onUnmount() {\n        this.disposePreSwitchAccount();\n        this.disposeSwitchAccount();\n        this.disposeLogout();\n        this.disposeClientInit();\n        this.disposeNetworkStatusChange();\n        this.disposeThemeChange();\n        this.disposeRealAccountSignupEnd();\n    }\n\n    assertHasValidCache(loginid, ...reactions) {\n        // account was changed when this was unmounted.\n        if (this.root_store.client.loginid !== loginid) {\n            reactions.forEach(act => act());\n            this.partial_fetch_time = false;\n        }\n    }\n}\n","import { toJS } from 'mobx';\nimport { isEmptyObject } from '@deriv/shared';\nimport { CONTRACT_SHADES } from '../Constants/barriers';\n\nexport const isBarrierSupported = contract_type => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) =>\n    barriers_list\n        .filter(barrier => barrier !== undefined && barrier !== null)\n        .map(barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`);\n\nexport const barriersObjectToArray = (barriers, reference_array) => {\n    Object.keys(barriers).forEach(barrier => {\n        const js_object = toJS(barriers[barrier]);\n        if (!isEmptyObject(js_object)) {\n            reference_array.push(js_object);\n        }\n    });\n\n    return reference_array;\n};\n\nexport const removeBarrier = (barriers, key) => {\n    const index = barriers.findIndex(b => b.key === key);\n    if (index > -1) {\n        barriers.splice(index, 1);\n    }\n};\n","import { action, computed, observable, makeObservable } from 'mobx';\nimport { BARRIER_COLORS, BARRIER_LINE_STYLES, CONTRACT_SHADES, DEFAULT_SHADES } from './Constants/barriers';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    color;\n    lineStyle;\n    shade;\n    shadeColor;\n\n    high;\n    low;\n\n    relative;\n    draggable;\n\n    hidePriceLines;\n    hideBarrierLine;\n    hideOffscreenLine;\n    title;\n\n    onChartBarrierChange;\n\n    constructor(high_barrier, low_barrier, onChartBarrierChange = null, { color, line_style, not_draggable } = {}) {\n        makeObservable(this, {\n            color: observable,\n            lineStyle: observable,\n            shade: observable,\n            shadeColor: observable,\n            high: observable,\n            low: observable,\n            relative: observable,\n            draggable: observable,\n            hidePriceLines: observable,\n            hideBarrierLine: observable,\n            hideOffscreenLine: observable,\n            title: observable,\n            updateBarriers: action.bound,\n            updateBarrierShade: action.bound,\n            onBarrierChange: action.bound,\n            updateBarrierColor: action.bound,\n            barrier_count: computed,\n            default_shade: computed,\n        });\n\n        this.color = color;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.SOLID;\n        this.onChange = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange =\n            typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier = !!high_barrier;\n        this.relative = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    updateBarriers(high, low, isFromChart = false) {\n        if (!isFromChart) {\n            this.relative = /^[+-]/.test(high);\n        }\n        this.high = high || undefined;\n        this.low = low || undefined;\n    }\n\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low, true);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    updateBarrierColor(is_dark_mode) {\n        this.color = is_dark_mode ? BARRIER_COLORS.DARK_GRAY : BARRIER_COLORS.GRAY;\n    }\n\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { isMultiplierContract } from '@deriv/shared';\nimport { BARRIER_COLORS, BARRIER_LINE_STYLES } from '../../SmartChart/Constants/barriers';\nimport { ChartBarrierStore } from '../../SmartChart/chart-barrier-store';\nimport { removeBarrier } from '../../SmartChart/Helpers/barriers';\n\nconst isLimitOrderBarrierSupported = (contract_type, contract_info) =>\n    isMultiplierContract(contract_type) && contract_info.limit_order;\n\nexport const LIMIT_ORDER_TYPES = {\n    STOP_OUT: 'stop_out',\n    TAKE_PROFIT: 'take_profit',\n    STOP_LOSS: 'stop_loss',\n};\n\nexport const setLimitOrderBarriers = ({ barriers, contract_type, contract_info = {}, is_over }) => {\n    if (is_over && isLimitOrderBarrierSupported(contract_type, contract_info)) {\n        const limit_orders = Object.values(LIMIT_ORDER_TYPES);\n        const has_stop_loss = Object.keys(contract_info.limit_order).some(\n            k => k === LIMIT_ORDER_TYPES.STOP_LOSS && contract_info.limit_order[k].value\n        );\n\n        limit_orders.forEach(key => {\n            const obj_limit_order = contract_info.limit_order[key];\n\n            if (!obj_limit_order || !obj_limit_order.value) {\n                removeBarrier(barriers, key);\n                return;\n            }\n\n            let barrier = barriers.find(b => b.key === key);\n\n            if (barrier) {\n                if (barrier.high === +obj_limit_order.value) {\n                    return;\n                }\n\n                barrier.onChange({\n                    high: obj_limit_order.value,\n                });\n            } else {\n                const obj_barrier = {\n                    key,\n                    title: `${obj_limit_order.display_name}`,\n                    color: key === LIMIT_ORDER_TYPES.TAKE_PROFIT ? BARRIER_COLORS.GREEN : BARRIER_COLORS.ORANGE,\n                    draggable: false,\n                    lineStyle:\n                        key === LIMIT_ORDER_TYPES.STOP_OUT ? BARRIER_LINE_STYLES.DOTTED : BARRIER_LINE_STYLES.SOLID,\n                    hidePriceLines: has_stop_loss && key === LIMIT_ORDER_TYPES.STOP_OUT,\n                    hideOffscreenLine: true,\n                    showOffscreenArrows: true,\n                    isSingleBarrier: true,\n                    opacityOnOverlap: key === LIMIT_ORDER_TYPES.STOP_OUT && 0.15,\n                };\n                barrier = new ChartBarrierStore(obj_limit_order.value);\n\n                Object.assign(barrier, obj_barrier);\n                barriers.push(barrier);\n            }\n        });\n    } else {\n        const limit_orders = Object.values(LIMIT_ORDER_TYPES);\n        limit_orders.forEach(l => removeBarrier(barriers, l));\n    }\n};\n\n/**\n * Get limit_order for contract_update API\n * @param {object} contract_update - contract_update input & checkbox values\n */\nexport const getLimitOrder = contract_update => {\n    const {\n        has_contract_update_stop_loss,\n        has_contract_update_take_profit,\n        contract_update_stop_loss,\n        contract_update_take_profit,\n        contract_info,\n    } = contract_update;\n\n    const limit_order = {};\n\n    const new_take_profit = has_contract_update_take_profit ? +contract_update_take_profit : null;\n    const has_take_profit_changed =\n        Math.abs(contract_info.limit_order?.take_profit?.order_amount) !== Math.abs(new_take_profit);\n\n    if (has_take_profit_changed) {\n        // send positive take_profit to update or null cancel\n        limit_order.take_profit = new_take_profit;\n    }\n\n    const new_stop_loss = has_contract_update_stop_loss ? +contract_update_stop_loss : null;\n    const has_stop_loss_changed =\n        Math.abs(contract_info.limit_order?.stop_loss?.order_amount) !== Math.abs(new_stop_loss);\n\n    if (has_stop_loss_changed) {\n        // send positive stop_loss to update or null to cancel\n        limit_order.stop_loss = new_stop_loss;\n    }\n\n    return limit_order;\n};\n","import * as Symbol from './Actions/symbol';\n\nimport {\n    WS,\n    cloneObject,\n    convertDurationLimit,\n    extractInfoFromShortcode,\n    findFirstOpenMarket,\n    getBarrierPipSize,\n    getMinPayout,\n    getPlatformSettings,\n    getPropertyValue,\n    isBarrierSupported,\n    isCryptocurrency,\n    isDesktop,\n    isEmptyObject,\n    isMarketClosed,\n    isMobile,\n    pickDefaultSymbol,\n    removeBarrier,\n    resetEndTimeOnVolatilityIndices,\n    showDigitalOptionsUnavailableError,\n    showMxMltUnavailableError,\n    showUnavailableLocationError,\n    formatMoney,\n    getCurrencyDisplayCode,\n    unsupported_contract_types_list,\n} from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { getValidationRules, getMultiplierValidationRules } from 'Stores/Modules/Trading/Constants/validation-rules';\nimport { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\nimport { isDigitContractType, isDigitTradeType } from 'Modules/Trading/Helpers/digits';\nimport ServerTime from '_common/base/server_time';\nimport { processPurchase } from './Actions/purchase';\nimport { getAvailableContractTypes } from 'Modules/Trading/Helpers/contract-type';\nimport { getUpdatedTicksHistoryStats } from './Helpers/accumulator';\nimport { processTradeParams } from './Helpers/process';\nimport { action, computed, makeObservable, observable, override, reaction, runInAction, toJS, when } from 'mobx';\nimport { createProposalRequests, getProposalErrorField, getProposalInfo } from './Helpers/proposal';\nimport { BARRIER_COLORS } from '../SmartChart/Constants/barriers';\nimport BaseStore from '../../base-store';\nimport { ChartBarrierStore } from '../SmartChart/chart-barrier-store';\nimport debounce from 'lodash.debounce';\nimport { setLimitOrderBarriers } from './Helpers/limit-orders';\n\nconst store_name = 'trade_store';\nconst g_subscribers_map = {}; // blame amin.m\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    is_trade_component_mounted = false;\n    is_purchase_enabled = false;\n    is_trade_enabled = false;\n    is_equal = 0;\n    has_equals_only = false;\n\n    // Underlying\n    symbol;\n    is_market_closed = false;\n    previous_symbol = '';\n    active_symbols = [];\n\n    form_components = [];\n\n    // Contract Type\n    contract_expiry_type = '';\n    contract_start_type = '';\n    contract_type = '';\n    contract_types_list = {};\n    trade_types = {};\n\n    // Amount\n    amount = 10;\n    basis = '';\n    basis_list = [];\n    currency = '';\n    stake_boundary = { VANILLALONGCALL: {}, VANILLALONGPUT: {} };\n\n    // Duration\n    duration = 5;\n    duration_min_max = {};\n    duration_unit = '';\n    duration_units_list = [];\n    expiry_date = '';\n    expiry_epoch = '';\n    expiry_time = '';\n    expiry_type = 'duration';\n\n    // Barrier\n    barrier_1 = '';\n    barrier_2 = '';\n    barrier_count = 0;\n    main_barrier = null;\n    barriers = [];\n    strike_price_choices = [];\n\n    // Start Time\n    start_date = Number(0); // Number(0) refers to 'now'\n    start_dates_list = [];\n    start_time = null;\n    sessions = [];\n\n    market_open_times = [];\n    // End Date Time\n    /**\n     * An array that contains market closing time.\n     *\n     * e.g. [\"04:00:00\", \"08:00:00\"]\n     *\n     */\n    market_close_times = [];\n\n    // Last Digit\n    last_digit = 5;\n    is_mobile_digit_view_selected = false;\n\n    // Purchase\n    proposal_info = {};\n    purchase_info = {};\n\n    // Chart loader observables\n    is_chart_loading;\n    should_show_active_symbols_loading = false;\n\n    // Accumulator trade params\n    accumulator_range_list = [];\n    growth_rate = 0.03;\n    maximum_payout = 0;\n    maximum_ticks = 0;\n    ticks_history_stats = {};\n    tick_size_barrier = 0;\n\n    // Multiplier trade params\n    multiplier;\n    multiplier_range_list = [];\n    stop_loss;\n    take_profit;\n    has_stop_loss = false;\n    has_take_profit = false;\n    has_cancellation = false;\n    commission;\n    cancellation_price;\n    stop_out;\n    expiration;\n    hovered_contract_type;\n    cancellation_duration = '60m';\n    cancellation_range_list = [];\n\n    // Vanilla trade params\n    vanilla_trade_type = 'VANILLALONGCALL';\n\n    // Mobile\n    is_trade_params_expanded = true;\n\n    //Toastbox\n    contract_purchase_toast_box;\n\n    addTickByProposal = () => null;\n    debouncedProposal = debounce(this.requestProposal, 500);\n    proposal_requests = {};\n    is_purchasing_contract = false;\n\n    initial_barriers;\n    is_initial_barrier_applied = false;\n\n    should_skip_prepost_lifecycle = false;\n\n    constructor({ root_store }) {\n        const local_storage_properties = [\n            'amount',\n            'currency',\n            'barrier_1',\n            'barrier_2',\n            'basis',\n            'contract_start_type',\n            'contract_type',\n            'duration',\n            'duration_unit',\n            'expiry_date',\n            'expiry_type',\n            'growth_rate',\n            'has_take_profit',\n            'has_stop_loss',\n            'has_cancellation',\n            'is_equal',\n            'last_digit',\n            'multiplier',\n            'start_date',\n            'start_time',\n            'symbol',\n            'stop_loss',\n            'take_profit',\n            'is_trade_params_expanded',\n        ];\n        super({\n            root_store,\n            local_storage_properties,\n            store_name,\n            validation_rules: getValidationRules(),\n        });\n\n        makeObservable(this, {\n            accumulator_range_list: observable,\n            active_symbols: observable,\n            amount: observable,\n            barrier_1: observable,\n            barrier_2: observable,\n            barrier_count: observable,\n            barriers: observable,\n            basis_list: observable,\n            basis: observable,\n            cancellation_duration: observable,\n            cancellation_price: observable,\n            cancellation_range_list: observable,\n            commission: observable,\n            contract_expiry_type: observable,\n            contract_start_type: observable,\n            contract_type: observable,\n            contract_types_list: observable,\n            currency: observable,\n            duration_min_max: observable,\n            duration_unit: observable,\n            duration_units_list: observable,\n            duration: observable,\n            expiration: observable,\n            expiry_date: observable,\n            expiry_epoch: observable,\n            expiry_time: observable,\n            expiry_type: observable,\n            form_components: observable,\n            growth_rate: observable,\n            has_cancellation: observable,\n            has_equals_only: observable,\n            has_stop_loss: observable,\n            has_take_profit: observable,\n            hovered_contract_type: observable,\n            is_accumulator: computed,\n            is_chart_loading: observable,\n            is_equal: observable,\n            is_market_closed: observable,\n            is_mobile_digit_view_selected: observable,\n            is_purchase_enabled: observable,\n            is_trade_component_mounted: observable,\n            is_trade_enabled: observable,\n            is_trade_params_expanded: observable,\n            last_digit: observable,\n            main_barrier: observable,\n            market_close_times: observable,\n            market_open_times: observable,\n            maximum_payout: observable,\n            maximum_ticks: observable,\n            multiplier_range_list: observable,\n            multiplier: observable,\n            previous_symbol: observable,\n            proposal_info: observable.ref,\n            purchase_info: observable.ref,\n            sessions: observable,\n            setDefaultGrowthRate: action.bound,\n            should_show_active_symbols_loading: observable,\n            should_skip_prepost_lifecycle: observable,\n            stake_boundary: observable,\n            start_date: observable,\n            start_dates_list: observable,\n            start_time: observable,\n            stop_loss: observable,\n            stop_out: observable,\n            strike_price_choices: observable,\n            symbol: observable,\n            take_profit: observable,\n            tick_size_barrier: observable,\n            ticks_history_stats: observable,\n            trade_types: observable,\n            accountSwitcherListener: action.bound,\n            barrier_pipsize: computed,\n            barriers_flattened: computed,\n            changeDurationValidationRules: action.bound,\n            chartStateChange: action.bound,\n            clearContracts: action.bound,\n            clearLimitOrderBarriers: action.bound,\n            clearPurchaseInfo: action.bound,\n            clientInitListener: action.bound,\n            enablePurchase: action.bound,\n            exportLayout: action.bound,\n            forgetAllProposal: action.bound,\n            getFirstOpenMarket: action.bound,\n            has_alternative_source: computed,\n            initAccountCurrency: action.bound,\n            is_multiplier: computed,\n            is_symbol_in_active_symbols: computed,\n            is_synthetics_available: computed,\n            is_vanilla: computed,\n            loadActiveSymbols: action.bound,\n            logoutListener: action.bound,\n            main_barrier_flattened: computed,\n            manageMxMltRemovalNotification: action.bound,\n            networkStatusChangeListener: action.bound,\n            onAllowEqualsChange: action.bound,\n            onChange: action.bound,\n            onChangeMultiple: action.bound,\n            onChartBarrierChange: action.bound,\n            onHoverPurchase: action.bound,\n            onMount: action.bound,\n            onProposalResponse: action.bound,\n            onPurchase: action.bound,\n            onUnmount: override,\n            prepareTradeStore: action.bound,\n            preSwitchAccountListener: action.bound,\n            processPurchase: action.bound,\n            pushPurchaseDataToGtm: action.bound,\n            refresh: action.bound,\n            requestProposal: action.bound,\n            resetAccumulatorData: action.bound,\n            resetErrorServices: action.bound,\n            resetPreviousSymbol: action.bound,\n            setActiveSymbols: action.bound,\n            setAllowEqual: action.bound,\n            setChartStatus: action.bound,\n            setContractTypes: action.bound,\n            setDefaultSymbol: action.bound,\n            setIsTradeParamsExpanded: action.bound,\n            setMarketStatus: action.bound,\n            setMobileDigitView: action.bound,\n            setPreviousSymbol: action.bound,\n            setPurchaseSpotBarrier: action.bound,\n            setSkipPrePostLifecycle: action.bound,\n            setStakeBoundary: action.bound,\n            setStrikeChoices: action.bound,\n            setTradeStatus: action.bound,\n            show_digits_stats: computed,\n            themeChangeListener: action.bound,\n            updateBarrierColor: action.bound,\n            updateLimitOrderBarriers: action.bound,\n            updateStore: action.bound,\n            updateSymbol: action.bound,\n            contract_purchase_toast_box: observable,\n            clearContractPurchaseToastBox: action.bound,\n            setContractPurchaseToastbox: action.bound,\n        });\n\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            }\n        );\n        reaction(\n            () => this.is_equal,\n            () => {\n                this.onAllowEqualsChange();\n            }\n        );\n        reaction(\n            () => this.symbol,\n            () => {\n                const date = resetEndTimeOnVolatilityIndices(this.symbol, this.expiry_type);\n                if (date) {\n                    this.expiry_date = date;\n                }\n                this.setDefaultGrowthRate();\n                this.resetAccumulatorData();\n            }\n        );\n        reaction(\n            () => this.duration_unit,\n            () => {\n                this.contract_expiry_type = this.duration_unit === 't' ? 'tick' : 'intraday';\n            }\n        );\n        reaction(\n            () => [this.has_stop_loss, this.has_take_profit],\n            () => {\n                if (!this.has_stop_loss) {\n                    this.validation_errors.stop_loss = [];\n                }\n                if (!this.has_take_profit) {\n                    this.validation_errors.take_profit = [];\n                }\n            }\n        );\n        reaction(\n            () => [this.contract_type],\n            () => {\n                this.root_store.portfolio.setContractType(this.contract_type);\n                if (this.is_multiplier || this.is_accumulator) {\n                    // when switching back to Multiplier contract, re-apply Stop loss / Take profit validation rules\n                    Object.assign(this.validation_rules, getMultiplierValidationRules());\n                } else {\n                    // we need to remove these two validation rules on contract_type change\n                    // to be able to remove any existing Stop loss / Take profit validation errors\n                    delete this.validation_rules.stop_loss;\n                    delete this.validation_rules.take_profit;\n                }\n                this.resetAccumulatorData();\n            }\n        );\n        reaction(\n            () => this.root_store.common.current_language,\n            () => {\n                this.setValidationRules(getValidationRules());\n                this.changeDurationValidationRules();\n                if (!this.amount) {\n                    this.validateAllProperties();\n                }\n            }\n        );\n        when(\n            () => this.accumulator_range_list.length,\n            () => this.setDefaultGrowthRate()\n        );\n    }\n\n    get is_symbol_in_active_symbols() {\n        return this.active_symbols.some(\n            symbol_info => symbol_info.symbol === this.symbol && symbol_info.exchange_is_open === 1\n        );\n    }\n\n    resetAccumulatorData() {\n        if (!isEmptyObject(this.root_store.contract_trade.accumulator_barriers_data)) {\n            this.root_store.contract_trade.clearAccumulatorBarriersData();\n        }\n    }\n\n    setDefaultGrowthRate() {\n        if (\n            this.is_accumulator &&\n            !this.accumulator_range_list.includes(this.growth_rate) &&\n            this.accumulator_range_list.length\n        ) {\n            this.growth_rate = this.accumulator_range_list[0];\n        }\n    }\n\n    setSkipPrePostLifecycle(should_skip) {\n        if (!!should_skip !== !!this.should_skip_prepost_lifecycle) {\n            // to skip assignment if no change is made\n            this.should_skip_prepost_lifecycle = should_skip;\n        }\n    }\n\n    setTradeStatus(status) {\n        this.is_trade_enabled = status;\n    }\n\n    refresh() {\n        this.forgetAllProposal();\n        this.proposal_info = {};\n        this.purchase_info = {};\n        this.proposal_requests = {};\n    }\n\n    clearContracts = () => {\n        this.root_store.contract_trade.contracts = [];\n    };\n\n    async loadActiveSymbols(should_set_default_symbol = true, should_show_loading = true) {\n        this.should_show_active_symbols_loading = should_show_loading;\n\n        await this.setActiveSymbols();\n        await this.root_store.active_symbols.setActiveSymbols();\n        if (should_set_default_symbol) await this.setDefaultSymbol();\n\n        const r = await WS.storage.contractsFor(this.symbol);\n        if (['InvalidSymbol', 'InputValidationFailed'].includes(r.error?.code)) {\n            const symbol_to_update = await pickDefaultSymbol(this.active_symbols);\n            await this.processNewValuesAsync({ symbol: symbol_to_update });\n        }\n\n        runInAction(() => {\n            this.should_show_active_symbols_loading = false;\n        });\n    }\n\n    async setDefaultSymbol() {\n        if (!this.is_symbol_in_active_symbols) {\n            this.is_trade_enabled = false;\n\n            const symbol = await pickDefaultSymbol(this.active_symbols);\n            await this.processNewValuesAsync({ symbol });\n        }\n    }\n\n    async setActiveSymbols() {\n        const is_on_mf_account = this.root_store.client.landing_company_shortcode === 'maltainvest';\n        const hide_close_mx_mlt_storage_flag = !!parseInt(\n            localStorage.getItem('hide_close_mx_mlt_account_notification')\n        );\n        const is_logged_in = this.root_store.client.is_logged_in;\n        const clients_country = this.root_store.client.clients_country;\n        const showError = this.root_store.common.showError;\n        const setError = this.root_store.common.setError;\n\n        // To resolve infinite load for Belgium and Isle of man logout IPs\n        if (['be', 'im'].includes(clients_country) && !is_logged_in) {\n            showUnavailableLocationError(showError, is_logged_in);\n        }\n\n        const { active_symbols, error } = await WS.authorized.activeSymbols();\n\n        if (error) {\n            showError({ message: localize('Trading is unavailable at this time.') });\n            return;\n        }\n\n        if (!active_symbols || !active_symbols.length) {\n            await WS.wait('get_settings');\n            /*\n             * This logic is related to EU country checks\n             * Avoid moving this upward in the scope since mobx will lose reactivity\n             */\n            const can_have_mx_account = this.root_store.client.can_have_mx_account;\n            const can_have_mlt_account = this.root_store.client.can_have_mlt_account;\n            const can_have_mlt_or_mx_account = can_have_mlt_account || can_have_mx_account;\n\n            if (can_have_mlt_or_mx_account && is_logged_in && !hide_close_mx_mlt_storage_flag) {\n                setError(true, {\n                    type: 'mx_mlt_removal',\n                });\n            } else if (is_logged_in && hide_close_mx_mlt_storage_flag) {\n                showMxMltUnavailableError(showError, can_have_mlt_account, can_have_mx_account);\n            } else if (!is_on_mf_account) {\n                if (!hide_close_mx_mlt_storage_flag) {\n                    setError(true, {\n                        type: 'mx_mlt_removal',\n                    });\n                } else {\n                    showUnavailableLocationError(showError, is_logged_in);\n                }\n                return;\n            } else if (is_on_mf_account) {\n                showDigitalOptionsUnavailableError(showError, {\n                    text: localize(\n                        'We’re working to have this available for you soon. If you have another account, switch to that account to continue trading. You may add a Deriv MT5 Financial.'\n                    ),\n                    title: localize('{{platform_name_trader}} is not available for this account', {\n                        platform_name_trader: getPlatformSettings('trader').name,\n                    }),\n                    link: localize('Go to {{platform_name_mt5}} dashboard', {\n                        platform_name_mt5: getPlatformSettings('mt5').name,\n                    }),\n                });\n                return;\n            }\n        }\n        await this.processNewValuesAsync({ active_symbols });\n    }\n\n    async setContractTypes() {\n        if (this.symbol && this.is_symbol_in_active_symbols) {\n            await Symbol.onChangeSymbolAsync(this.symbol);\n            runInAction(() => {\n                const contract_categories = ContractType.getContractCategories();\n                this.processNewValuesAsync({\n                    ...contract_categories,\n                    ...ContractType.getContractType(contract_categories.contract_types_list, this.contract_type),\n                });\n                this.processNewValuesAsync(ContractType.getContractValues(this));\n            });\n        }\n        this.root_store.common.setSelectedContractType(this.contract_type);\n        this.root_store.portfolio.setContractType(this.contract_type);\n    }\n\n    async prepareTradeStore(should_set_default_symbol = true) {\n        this.initial_barriers = { barrier_1: this.barrier_1, barrier_2: this.barrier_2 };\n        await when(() => !this.root_store.client.is_populating_account_list);\n\n        // waits for `website_status` in order to set `stake_default` for the selected currency\n        await WS.wait('website_status');\n        await runInAction(async () => {\n            await this.processNewValuesAsync(\n                {\n                    // fallback to default currency if current logged-in client hasn't selected a currency yet\n                    currency: this.root_store.client.currency || this.root_store.client.default_currency,\n                },\n                true,\n                null,\n                false\n            );\n        });\n        await this.loadActiveSymbols(should_set_default_symbol);\n        await this.setContractTypes();\n        await this.processNewValuesAsync(\n            {\n                is_market_closed: isMarketClosed(this.active_symbols, this.symbol),\n            },\n            true,\n            null,\n            false\n        );\n    }\n\n    async onChangeMultiple(values) {\n        Object.keys(values).forEach(name => {\n            if (!(name in this)) {\n                throw new Error(`Invalid Argument: ${name}`);\n            }\n        });\n\n        await this.processNewValuesAsync({ ...values }, true); // wait for store to be updated\n        this.validateAllProperties(); // then run validation before sending proposal\n    }\n\n    async onChange(e) {\n        const { name, value } = e.target;\n        if (name === 'symbol' && value) {\n            // set trade params skeleton and chart loader to true until processNewValuesAsync resolves\n            this.setChartStatus(true);\n            // reset market close status\n            this.setMarketStatus(false);\n            this.is_trade_enabled = false;\n            // this.root_store.modules.contract_trade.contracts = [];\n            // TODO: Clear the contracts in contract-trade-store\n        } else if (name === 'currency') {\n            // Only allow the currency dropdown change if client is not logged in\n            if (!this.root_store.client.is_logged_in) {\n                this.root_store.client.selectCurrency(value);\n            }\n        } else if (name === 'expiry_date') {\n            this.expiry_time = null;\n        } else if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        await this.processNewValuesAsync(\n            { [name]: value },\n            true,\n            name === 'contract_type' ? { contract_type: this.contract_type } : {}, // refer to [Multiplier validation rules] below\n            true\n        ); // wait for store to be updated\n        this.validateAllProperties(); // then run validation before sending proposal\n        this.root_store.common.setSelectedContractType(this.contract_type);\n    }\n\n    setPreviousSymbol(symbol) {\n        if (this.previous_symbol !== symbol) this.previous_symbol = symbol;\n    }\n\n    setAllowEqual(is_equal) {\n        this.is_equal = is_equal;\n    }\n\n    setIsTradeParamsExpanded(value) {\n        this.is_trade_params_expanded = value;\n    }\n\n    async resetPreviousSymbol() {\n        this.setMarketStatus(isMarketClosed(this.active_symbols, this.previous_symbol));\n\n        await Symbol.onChangeSymbolAsync(this.previous_symbol);\n        await this.updateSymbol(this.symbol);\n\n        this.setChartStatus(false);\n        runInAction(() => {\n            this.previous_symbol = ''; // reset the symbol to default\n        });\n    }\n\n    updateBarrierColor(is_dark_mode) {\n        if (this.main_barrier) {\n            this.main_barrier.updateBarrierColor(is_dark_mode);\n        }\n    }\n\n    onHoverPurchase(is_over, contract_type) {\n        if (this.is_accumulator) return;\n        if (this.is_purchase_enabled && this.main_barrier && !this.is_multiplier) {\n            this.main_barrier.updateBarrierShade(is_over, contract_type);\n        } else if (!is_over && this.main_barrier && !this.is_multiplier) {\n            this.main_barrier.updateBarrierShade(false, contract_type);\n        }\n\n        this.hovered_contract_type = is_over ? contract_type : null;\n        setLimitOrderBarriers({\n            barriers: this.root_store.portfolio.barriers,\n            is_over,\n            contract_type,\n            contract_info: this.proposal_info[contract_type],\n        });\n    }\n\n    setPurchaseSpotBarrier(is_over, position) {\n        const key = 'PURCHASE_SPOT_BARRIER';\n        if (!is_over) {\n            removeBarrier(this.root_store.portfolio.barriers, key);\n            return;\n        }\n\n        let purchase_spot_barrier = this.root_store.portfolio.barriers.find(b => b.key === key);\n        if (purchase_spot_barrier) {\n            if (purchase_spot_barrier.high !== +position.contract_info.entry_spot) {\n                purchase_spot_barrier.onChange({\n                    high: position.contract_info.entry_spot,\n                });\n            }\n        } else {\n            purchase_spot_barrier = new ChartBarrierStore(position.contract_info.entry_spot);\n            purchase_spot_barrier.key = key;\n            purchase_spot_barrier.draggable = false;\n            purchase_spot_barrier.hideOffscreenBarrier = true;\n            purchase_spot_barrier.isSingleBarrier = true;\n            purchase_spot_barrier.updateBarrierColor(this.root_store.ui.is_dark_mode_on);\n            this.barriers.push(purchase_spot_barrier);\n            this.root_store.portfolio.barriers.push(purchase_spot_barrier);\n        }\n    }\n\n    updateLimitOrderBarriers(is_over, position) {\n        const contract_info = position.contract_info;\n        const { barriers } = this;\n        setLimitOrderBarriers({\n            barriers,\n            contract_info,\n            contract_type: contract_info.contract_type,\n            is_over,\n        });\n    }\n\n    clearLimitOrderBarriers() {\n        this.hovered_contract_type = null;\n        const { barriers } = this;\n        setLimitOrderBarriers({\n            barriers,\n            is_over: false,\n        });\n    }\n\n    get barrier_pipsize() {\n        return getBarrierPipSize(this.barrier_1);\n    }\n\n    get main_barrier_flattened() {\n        const is_digit_trade_type = isDigitTradeType(this.contract_type);\n        return is_digit_trade_type ? null : toJS(this.main_barrier);\n    }\n\n    get barriers_flattened() {\n        return this.root_store.portfolio.barriers && toJS(this.root_store.portfolio.barriers);\n    }\n\n    setMainBarrier = proposal_info => {\n        if (!proposal_info) {\n            return;\n        }\n        const { contract_type, barrier, high_barrier, low_barrier } = proposal_info;\n\n        if (isBarrierSupported(contract_type)) {\n            const color = this.root_store.ui.is_dark_mode_on ? BARRIER_COLORS.DARK_GRAY : BARRIER_COLORS.GRAY;\n            // create barrier only when it's available in response\n            this.main_barrier = new ChartBarrierStore(barrier || high_barrier, low_barrier, this.onChartBarrierChange, {\n                color,\n                not_draggable: this.is_vanilla,\n            });\n            // this.main_barrier.updateBarrierShade(true, contract_type);\n        } else {\n            this.main_barrier = null;\n        }\n    };\n\n    onPurchase = debounce(this.processPurchase, 300);\n\n    processPurchase(proposal_id, price, type) {\n        if (!this.is_purchase_enabled) return;\n        if (proposal_id) {\n            this.is_purchase_enabled = false;\n            this.is_purchasing_contract = true;\n            const is_tick_contract = this.duration_unit === 't';\n            processPurchase(proposal_id, price).then(\n                action(response => {\n                    if (!this.is_trade_component_mounted) {\n                        this.enablePurchase();\n                        this.is_purchasing_contract = false;\n                        return;\n                    }\n\n                    const last_digit = +this.last_digit;\n                    if (response.error) {\n                        // using javascript to disable purchase-buttons manually to compensate for mobx lag\n                        this.disablePurchaseButtons();\n                        // invalidToken error will handle in socket-general.js\n                        if (response.error.code !== 'InvalidToken') {\n                            this.root_store.common.setServicesError({\n                                type: response.msg_type,\n                                ...response.error,\n                            });\n\n                            // Clear purchase info on mobile after toast box error disappears (mobile_toast_timeout = 3500)\n                            if (isMobile() && this.root_store.common?.services_error?.type === 'buy') {\n                                setTimeout(() => {\n                                    this.clearPurchaseInfo();\n                                    this.requestProposal();\n                                }, 3500);\n                            }\n                        }\n                    } else if (response.buy) {\n                        if (this.proposal_info[type] && this.proposal_info[type].id !== proposal_id) {\n                            throw new Error('Proposal ID does not match.');\n                        }\n                        const contract_data = {\n                            ...this.proposal_requests[type],\n                            ...this.proposal_info[type],\n                            buy_price: response.buy.buy_price,\n                        };\n                        const { contract_id, longcode, start_time } = response.buy;\n\n                        // toggle smartcharts to contract mode\n                        if (contract_id) {\n                            const shortcode = response.buy.shortcode;\n                            const { category, underlying } = extractInfoFromShortcode(shortcode);\n                            const is_digit_contract = isDigitContractType(category.toUpperCase());\n                            const contract_type = category.toUpperCase();\n                            this.root_store.contract_trade.addContract({\n                                contract_id,\n                                start_time,\n                                longcode,\n                                underlying,\n                                barrier: is_digit_contract ? last_digit : null,\n                                contract_type,\n                                is_tick_contract,\n                            });\n                            this.root_store.portfolio.onBuyResponse({\n                                contract_id,\n                                longcode,\n                                contract_type,\n                            });\n                            // NOTE: changing chart granularity and chart_type has to be done in a different render cycle\n                            // so we have to set chart granularity to zero, and change the chart_type to 'mountain' first,\n                            // and then set the chart view to the start_time\n                            // draw the start time line and show longcode then mount contract\n                            // this.root_store.modules.contract_trade.drawContractStartTime(start_time, longcode, contract_id);\n                            if (isDesktop()) {\n                                this.root_store.ui.openPositionsDrawer();\n                            } else if (isMobile()) {\n                                // TODO: Remove this when markers for multipliers are enabled\n                                if (this.is_multiplier || this.is_accumulator) {\n                                    this.root_store.ui.openPositionsDrawer();\n                                }\n                            }\n                            this.proposal_info = {};\n                            this.forgetAllProposal();\n                            this.purchase_info = response;\n                            this.proposal_requests = {};\n                            this.debouncedProposal();\n                            this.clearLimitOrderBarriers();\n                            this.pushPurchaseDataToGtm(contract_data);\n                            this.setContractPurchaseToastbox(response.buy);\n                            this.is_purchasing_contract = false;\n                            return;\n                        }\n                    }\n                    this.forgetAllProposal();\n                    this.purchase_info = response;\n                    this.enablePurchase();\n                    this.is_purchasing_contract = false;\n                })\n            );\n        }\n    }\n\n    enablePurchase() {\n        if (!this.root_store.client.is_unwelcome) {\n            this.is_purchase_enabled = true;\n        }\n    }\n\n    disablePurchaseButtons = () => {\n        const el_purchase_value = document.getElementsByClassName('trade-container__price-info');\n        const el_purchase_buttons = document.getElementsByClassName('btn-purchase');\n        [].forEach.bind(el_purchase_buttons, el => {\n            el.classList.add('btn-purchase--disabled');\n        })();\n        [].forEach.bind(el_purchase_value, el => {\n            el.classList.add('trade-container__price-info--fade');\n        })();\n    };\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state) || {}).forEach(key => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors', 'currency'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled = false;\n                }\n\n                if (new_state.start_date && typeof new_state.start_date === 'string') {\n                    new_state.start_date = parseInt(new_state.start_date);\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n        return new_state;\n    }\n\n    async processNewValuesAsync(\n        obj_new_values = {},\n        is_changed_by_user = false,\n        obj_old_values = {},\n        should_forget_first = true\n    ) {\n        // To switch to rise_fall_equal contract type when allow equal is checked on first page refresh or\n        // when switch back to Rise/Fall from another contract type i.e.\n        if (obj_new_values.contract_type && obj_new_values.contract_type === 'rise_fall' && !!this.is_equal) {\n            obj_new_values.contract_type = 'rise_fall_equal';\n        }\n        // when accumulator is selected, we need to change chart type to mountain and granularity to 0\n        // and we need to restore previous chart type and granularity when accumulator is unselected\n        const {\n            prev_chart_type,\n            prev_granularity,\n            chart_type,\n            granularity,\n            savePreviousChartMode,\n            updateChartType,\n            updateGranularity,\n        } = this.root_store.contract_trade || {};\n        if (obj_new_values.contract_type === 'accumulator') {\n            savePreviousChartMode(chart_type, granularity);\n            updateGranularity(0);\n            updateChartType('line');\n        } else if (\n            (obj_new_values.contract_type || obj_new_values.symbol) &&\n            prev_chart_type &&\n            prev_granularity &&\n            (prev_chart_type !== chart_type || prev_granularity !== granularity)\n        ) {\n            updateGranularity(prev_granularity);\n            updateChartType(prev_chart_type);\n            savePreviousChartMode('', null);\n        }\n\n        if (/\\bduration\\b/.test(Object.keys(obj_new_values))) {\n            // TODO: fix this in input-field.jsx\n            if (typeof obj_new_values.duration === 'string') {\n                obj_new_values.duration = +obj_new_values.duration;\n            }\n        }\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        if (should_forget_first) {\n            this.forgetAllProposal();\n            this.proposal_requests = {};\n        }\n        if (is_changed_by_user && /\\bcurrency\\b/.test(Object.keys(obj_new_values))) {\n            const prev_currency = obj_old_values?.currency || this.currency;\n            const has_currency_changed = obj_new_values.currency !== prev_currency;\n\n            const should_reset_stake =\n                isCryptocurrency(obj_new_values.currency) ||\n                // For switch between fiat and crypto and vice versa\n                isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(prev_currency);\n\n            if (has_currency_changed && should_reset_stake) {\n                obj_new_values.amount = obj_new_values.amount || getMinPayout(obj_new_values.currency);\n            }\n            this.currency = obj_new_values.currency;\n        }\n\n        let has_only_forward_starting_contracts;\n\n        if (Object.keys(obj_new_values).includes('symbol')) {\n            this.setPreviousSymbol(this.symbol);\n            await Symbol.onChangeSymbolAsync(obj_new_values.symbol);\n            this.setMarketStatus(isMarketClosed(this.active_symbols, obj_new_values.symbol));\n            has_only_forward_starting_contracts =\n                ContractType.getContractCategories().has_only_forward_starting_contracts;\n        }\n        // TODO: remove all traces of setHasOnlyForwardingContracts and has_only_forward_starting_contracts in app\n        //  once future contracts are implemented\n        this.root_store.ui.setHasOnlyForwardingContracts(has_only_forward_starting_contracts);\n        if (has_only_forward_starting_contracts) return;\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            this.updateStore({\n                // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info: {},\n            });\n\n            // To prevent infinite loop when changing from advanced end_time to digit type contract\n            if (obj_new_values.contract_type && this.root_store.ui.is_advanced_duration) {\n                if (isDigitTradeType(obj_new_values.contract_type)) {\n                    this.barrier_1 = '';\n                    this.barrier_2 = '';\n                    this.expiry_type = 'duration';\n                    this.root_store.ui.is_advanced_duration = false;\n                }\n            }\n\n            // TODO: handle barrier updates on proposal api\n            // const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n            await processTradeParams(this, new_state);\n\n            this.updateStore({\n                ...(!this.is_initial_barrier_applied ? this.initial_barriers : {}),\n            });\n            this.is_initial_barrier_applied = true;\n            if (/\\b(contract_type|currency)\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n            this.debouncedProposal();\n        }\n    }\n\n    get is_synthetics_available() {\n        return !!this.active_symbols?.find(item => item.market === 'synthetic_index');\n    }\n\n    get is_synthetics_trading_market_available() {\n        return !!this.active_symbols?.find(\n            item => item.market === 'synthetic_index' && !isMarketClosed(this.active_symbols, item.symbol)\n        );\n    }\n\n    get show_digits_stats() {\n        return isDigitTradeType(this.contract_type);\n    }\n\n    setMobileDigitView(bool) {\n        this.is_mobile_digit_view_selected = bool;\n    }\n\n    pushPurchaseDataToGtm(contract_data) {\n        const data = {\n            event: 'buy_contract',\n            bom_ui: 'new',\n            contract: {\n                amount: contract_data.amount,\n                barrier1: contract_data.barrier,\n                barrier2: contract_data.barrier2,\n                basis: contract_data.basis,\n                buy_price: contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency: contract_data.currency,\n                date_expiry: contract_data.date_expiry,\n                date_start: contract_data.date_start,\n                duration: contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout: contract_data.payout,\n                symbol: contract_data.symbol,\n            },\n            settings: {\n                theme: this.root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                positions_drawer: this.root_store.ui.is_positions_drawer_on ? 'open' : 'closed',\n                chart: {\n                    toolbar_position: this.root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: this.root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type: this.root_store.contract_trade.chart_type,\n                    granularity: this.root_store.contract_trade.granularity,\n                },\n            },\n        };\n        this.root_store.gtm.pushDataLayer(data);\n    }\n\n    clearPurchaseInfo() {\n        this.purchase_info = {};\n        this.proposal_requests = {};\n        this.proposal_info = {};\n    }\n\n    requestProposal() {\n        const requests = createProposalRequests(this);\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            this.forgetAllProposal();\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            this.proposal_requests = requests;\n            this.purchase_info = {};\n            Object.keys(this.proposal_requests).forEach(type => {\n                WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n            });\n        }\n        this.root_store.ui.resetPurchaseStates();\n    }\n\n    forgetAllProposal() {\n        const length = Object.keys(this.proposal_requests).length;\n        if (length > 0) WS.forgetAll('proposal');\n    }\n\n    setMarketStatus(status) {\n        this.is_market_closed = status;\n    }\n\n    onProposalResponse(response) {\n        const { contract_type } = response.echo_req;\n        const prev_proposal_info = getPropertyValue(this.proposal_info, contract_type) || {};\n        const obj_prev_contract_basis = getPropertyValue(prev_proposal_info, 'obj_contract_basis') || {};\n\n        // add/update expiration or date_expiry for crypto indices from proposal\n        const date_expiry = response.proposal?.date_expiry;\n        this.expiry_epoch = date_expiry || this.expiry_epoch;\n\n        if (!response.error && !!date_expiry && this.is_crypto_multiplier) {\n            this.expiration = date_expiry;\n        }\n\n        this.proposal_info = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response, obj_prev_contract_basis),\n        };\n\n        if (this.is_multiplier && this.proposal_info && this.proposal_info.MULTUP) {\n            const { commission, cancellation, limit_order } = this.proposal_info.MULTUP;\n            // commission and cancellation.ask_price is the same for MULTUP/MULTDOWN\n            if (commission) {\n                this.commission = commission;\n            }\n            if (cancellation) {\n                this.cancellation_price = cancellation.ask_price;\n            }\n            this.stop_out = limit_order?.stop_out?.order_amount;\n        }\n        if (this.is_accumulator && this.proposal_info?.ACCU) {\n            const {\n                barrier_spot_distance,\n                maximum_ticks,\n                ticks_stayed_in,\n                tick_size_barrier,\n                last_tick_epoch,\n                maximum_payout,\n                high_barrier,\n                low_barrier,\n                spot_time,\n            } = this.proposal_info.ACCU;\n            this.ticks_history_stats = getUpdatedTicksHistoryStats({\n                previous_ticks_history_stats: this.ticks_history_stats,\n                new_ticks_history_stats: ticks_stayed_in,\n                last_tick_epoch,\n            });\n            this.maximum_ticks = maximum_ticks;\n            this.maximum_payout = maximum_payout;\n            this.tick_size_barrier = tick_size_barrier;\n            const { updateAccumulatorBarriersData } = this.root_store.contract_trade || {};\n            if (updateAccumulatorBarriersData) {\n                updateAccumulatorBarriersData({\n                    accumulators_high_barrier: high_barrier,\n                    accumulators_low_barrier: low_barrier,\n                    barrier_spot_distance,\n                    current_spot_time: spot_time,\n                    underlying: this.symbol,\n                });\n            }\n        }\n\n        if (!this.main_barrier || this.main_barrier?.shade) {\n            this.setMainBarrier(response.echo_req);\n        }\n\n        if (this.hovered_contract_type === contract_type) {\n            this.addTickByProposal(response);\n            setLimitOrderBarriers({\n                barriers: this.root_store.portfolio.barriers,\n                contract_info: this.proposal_info[this.hovered_contract_type],\n                contract_type,\n                is_over: true,\n            });\n        }\n\n        if (response.error) {\n            const error_id = getProposalErrorField(response);\n            if (error_id) {\n                if (this.is_vanilla) {\n                    /**\n                     * This if-block ensures only the particular trade type's error message is selected\n                     * even though 2 proposal calls are made\n                     */\n                    if (this.vanilla_trade_type === contract_type) {\n                        this.setValidationErrorMessages(error_id, [response.error.message]);\n                    }\n                } else {\n                    this.setValidationErrorMessages(error_id, [response.error.message]);\n                }\n            }\n            // Commission for multipliers is normally set from proposal response.\n            // But when we change the multiplier and if it is invalid, we don't get the proposal response to set the commission. We only get error message.\n            // This is a work around to set the commission from error message.\n            if (this.is_multiplier) {\n                const { message, details } = response.error;\n                const commission_match = (message || '').match(/\\((\\d+\\.*\\d*)\\)/);\n                if (details?.field === 'stop_loss' && commission_match?.[1]) {\n                    this.commission = commission_match[1];\n                }\n            }\n\n            // Sometimes the initial barrier doesn't match with current barrier choices received from API.\n            // When this happens we want to populate the list of barrier choices to choose from since the value cannot be specified manually\n            if (this.is_vanilla) {\n                const { barrier_choices, max_stake, min_stake } = response.error.details;\n                this.setStakeBoundary(contract_type, min_stake, max_stake);\n                this.setStrikeChoices(barrier_choices);\n                if (!this.strike_price_choices.includes(this.barrier_1)) {\n                    // Since on change of duration `proposal` API call is made which returns a new set of barrier values.\n                    // The new list is set and the mid value is assigned\n                    const index = Math.floor(this.strike_price_choices.length / 2);\n                    this.barrier_1 = this.strike_price_choices[index];\n                    this.onChange({\n                        target: {\n                            name: 'barrier_1',\n                            value: this.barrier_1,\n                        },\n                    });\n                }\n            }\n\n            // Sometimes when we navigate fast, `forget_all` proposal is called immediately after proposal subscription calls.\n            // But, in the BE, `forget_all` proposal call is processed before the proposal subscriptions are registered. In this case, `forget_all` proposal doesn't forget the new subscriptions.\n            // So when we send new proposal subscription requests, we get `AlreadySubscribed` error.\n            // If we get an error message with code `AlreadySubscribed`, `forget_all` proposal will be called and all the existing subscriptions will be marked as complete in `deriv-api` and will subscribe to new proposals\n            if (response.error.code === 'AlreadySubscribed') {\n                this.refresh();\n\n                if (this.is_trade_component_mounted) {\n                    this.debouncedProposal();\n                }\n                return;\n            }\n        } else {\n            this.validateAllProperties();\n            if (this.is_vanilla) {\n                const { max_stake, min_stake, barrier_choices } = response.proposal;\n                this.setStrikeChoices(barrier_choices);\n                this.setStakeBoundary(contract_type, min_stake, max_stake);\n            }\n        }\n\n        if (!this.is_purchasing_contract) {\n            this.enablePurchase();\n        }\n    }\n\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    onAllowEqualsChange() {\n        this.processNewValuesAsync({ contract_type: parseInt(this.is_equal) ? 'rise_fall_equal' : 'rise_fall' }, true);\n    }\n\n    updateSymbol(underlying) {\n        if (!underlying) return;\n        this.onChange({\n            target: {\n                name: 'symbol',\n                value: underlying,\n            },\n        });\n    }\n\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        if (!this.validation_rules.duration) return;\n\n        const index = this.validation_rules.duration.rules.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration.rules[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    async accountSwitcherListener() {\n        if (this.root_store.common.is_language_changing) {\n            await this.loadActiveSymbols(false, false);\n            this.root_store.common.is_language_changing = false;\n        } else {\n            await this.loadActiveSymbols(true, false);\n        }\n\n        this.resetErrorServices();\n        await this.setContractTypes();\n        runInAction(async () => {\n            this.processNewValuesAsync(\n                { currency: this.root_store.client.currency || this.root_store.client.default_currency },\n                true,\n                { currency: this.currency },\n                false\n            );\n        });\n        return Promise.resolve();\n    }\n\n    preSwitchAccountListener() {\n        this.clearContracts();\n        this.is_trade_enabled = false;\n        return Promise.resolve();\n    }\n\n    async logoutListener() {\n        this.clearContracts();\n        this.refresh();\n        this.resetErrorServices();\n        if (this.root_store.common.is_language_changing) {\n            await this.loadActiveSymbols(false);\n            this.root_store.common.is_language_changing = false;\n        } else {\n            await this.loadActiveSymbols();\n        }\n        await this.setContractTypes();\n        this.is_trade_enabled = true;\n        this.debouncedProposal();\n    }\n\n    clientInitListener() {\n        this.initAccountCurrency(this.root_store.client.currency || this.root_store.client.default_currency);\n        return Promise.resolve();\n    }\n\n    networkStatusChangeListener(is_online) {\n        this.setTradeStatus(is_online);\n    }\n\n    themeChangeListener(is_dark_mode_on) {\n        this.updateBarrierColor(is_dark_mode_on);\n    }\n\n    resetErrorServices() {\n        this.root_store.ui.toggleServicesErrorModal(false);\n    }\n\n    onMount() {\n        if (this.is_trade_component_mounted && this.should_skip_prepost_lifecycle) {\n            return;\n        }\n        this.root_store.notifications.setShouldShowPopups(false);\n        this.onPreSwitchAccount(this.preSwitchAccountListener);\n        this.onSwitchAccount(this.accountSwitcherListener);\n        this.onLogout(this.logoutListener);\n        this.onClientInit(this.clientInitListener);\n        this.onNetworkStatusChange(this.networkStatusChangeListener);\n        this.onThemeChange(this.themeChangeListener);\n        this.setChartStatus(true);\n        runInAction(async () => {\n            this.is_trade_component_mounted = true;\n            await this.prepareTradeStore();\n            this.root_store.notifications.setShouldShowPopups(true);\n        });\n        // TODO: remove this function when the closure of MX and MLT accounts is completed.\n        this.manageMxMltRemovalNotification();\n    }\n\n    manageMxMltRemovalNotification() {\n        const { addNotificationMessage, client_notifications, notification_messages, unmarkNotificationMessage } =\n            this.root_store.notifications;\n        const get_notification_messages = JSON.parse(localStorage.getItem('notification_messages'));\n        const { has_iom_account, has_malta_account, is_logged_in } = this.root_store.client;\n        unmarkNotificationMessage({ key: 'close_mx_mlt_account' });\n        if (get_notification_messages !== null && is_logged_in && (has_iom_account || has_malta_account)) {\n            when(\n                () => is_logged_in && notification_messages.length === 0,\n                () => {\n                    const hidden_close_account_notification =\n                        parseInt(localStorage.getItem('hide_close_mx_mlt_account_notification')) === 1;\n                    const should_retain_notification =\n                        (has_iom_account || has_malta_account) && !hidden_close_account_notification;\n                    if (should_retain_notification) {\n                        addNotificationMessage(client_notifications.close_mx_mlt_account);\n                    }\n                }\n            );\n        }\n    }\n\n    setChartStatus(status) {\n        this.is_chart_loading = status;\n    }\n\n    async initAccountCurrency(new_currency) {\n        if (this.currency === new_currency) return;\n\n        await this.processNewValuesAsync({ currency: new_currency }, true, { currency: this.currency }, false);\n        this.refresh();\n        this.debouncedProposal();\n    }\n\n    onUnmount() {\n        if (this.should_skip_prepost_lifecycle) {\n            return;\n        }\n        this.disposePreSwitchAccount();\n        this.disposeSwitchAccount();\n        this.disposeLogout();\n        this.disposeClientInit();\n        this.disposeNetworkStatusChange();\n        this.disposeThemeChange();\n        this.is_trade_component_mounted = false;\n        // TODO: Find a more elegant solution to unmount contract-trade-store\n        this.root_store.contract_trade.onUnmount();\n        this.refresh();\n        this.resetErrorServices();\n        if (this.root_store.notifications.is_notifications_visible) {\n            this.root_store.notifications.toggleNotificationsModal();\n        }\n        if (this.prev_chart_layout) {\n            this.prev_chart_layout.is_used = false;\n        }\n        this.resetAccumulatorData();\n    }\n\n    prev_chart_layout = null;\n\n    get chart_layout() {\n        let layout = null;\n        if (this.prev_chart_layout && this.prev_chart_layout.is_used === false) {\n            layout = this.prev_chart_layout;\n        }\n        return layout;\n    }\n\n    get is_crypto_multiplier() {\n        return this.contract_type === 'multiplier' && /^cry/.test(this.symbol);\n    }\n\n    exportLayout(layout) {\n        delete layout.previousMaxTicks; // TODO: fix it in smartcharts\n        this.prev_chart_layout = layout;\n        this.prev_chart_layout.isDone = () => {\n            this.prev_chart_layout.is_used = true;\n            this.setChartStatus(false);\n        };\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (req, callback) => {\n        const passthrough_callback = (...args) => {\n            callback(...args);\n            if (this.is_accumulator) {\n                let current_spot_data = {};\n                if ('tick' in args[0]) {\n                    const { epoch, quote, symbol } = args[0].tick;\n                    if (this.symbol !== symbol) return;\n                    current_spot_data = {\n                        current_spot: quote,\n                        current_spot_time: epoch,\n                    };\n                } else if ('history' in args[0]) {\n                    const { prices, times } = args[0].history;\n                    const symbol = args[0].echo_req.ticks_history;\n                    if (this.symbol !== symbol) return;\n                    current_spot_data = {\n                        current_spot: prices[prices.length - 1],\n                        current_spot_time: times[times.length - 1],\n                    };\n                } else {\n                    return;\n                }\n                this.root_store.contract_trade.updateAccumulatorBarriersData(current_spot_data);\n            }\n        };\n        if (req.subscribe === 1) {\n            const key = JSON.stringify(req);\n            const subscriber = WS.subscribeTicksHistory(req, passthrough_callback);\n            g_subscribers_map[key] = subscriber;\n        }\n    };\n\n    wsForget = req => {\n        const key = JSON.stringify(req);\n        if (g_subscribers_map[key]) {\n            g_subscribers_map[key].unsubscribe();\n            delete g_subscribers_map[key];\n        }\n        // WS.forget('ticks_history', callback, match);\n    };\n\n    wsForgetStream = stream_id => {\n        WS.forgetStream(stream_id);\n    };\n\n    wsSendRequest = req => {\n        if (req.time) {\n            return ServerTime.timePromise().then(server_time => {\n                if (server_time) {\n                    return {\n                        msg_type: 'time',\n                        time: server_time.unix(),\n                    };\n                }\n                return WS.time();\n            });\n        }\n        if (req.active_symbols) {\n            return WS.activeSymbols('brief');\n        }\n        if (req.trading_times) {\n            return WS.tradingTimes(req.trading_times);\n        }\n        return WS.storage.send(req);\n    };\n\n    chartStateChange(state, option) {\n        const market_close_prop = 'isClosed';\n        switch (state) {\n            case 'MARKET_STATE_CHANGE':\n                if (option && market_close_prop in option) {\n                    if (this.is_trade_component_mounted && option[market_close_prop] !== this.is_market_closed)\n                        this.prepareTradeStore(false);\n                }\n                break;\n            default:\n        }\n    }\n\n    refToAddTick = ref => {\n        this.addTickByProposal = ref;\n    };\n\n    get has_alternative_source() {\n        return this.is_multiplier && !!this.hovered_contract_type;\n    }\n\n    get is_accumulator() {\n        return this.contract_type === 'accumulator';\n    }\n\n    get is_multiplier() {\n        return this.contract_type === 'multiplier';\n    }\n\n    get is_vanilla() {\n        return this.contract_type === 'vanilla';\n    }\n\n    setContractPurchaseToastbox(response) {\n        const list = getAvailableContractTypes(this.contract_types_list, unsupported_contract_types_list);\n\n        return (this.contract_purchase_toast_box = {\n            key: true,\n            buy_price: formatMoney(this.root_store.client.currency, response.buy_price, true, 0, 0),\n            contract_type: this.contract_type,\n            currency: getCurrencyDisplayCode(this.root_store.client.currency),\n            list,\n        });\n    }\n\n    clearContractPurchaseToastBox() {\n        this.contract_purchase_toast_box = undefined;\n    }\n\n    async getFirstOpenMarket(markets_to_search) {\n        if (this.active_symbols?.length) {\n            return findFirstOpenMarket(this.active_symbols, markets_to_search);\n        }\n        const { active_symbols, error } = await WS.authorized.activeSymbols();\n        if (error) {\n            this.root_store.common.showError({ message: localize('Trading is unavailable at this time.') });\n            return undefined;\n        }\n        return findFirstOpenMarket(active_symbols, markets_to_search);\n    }\n\n    setStrikeChoices(strike_prices) {\n        this.strike_price_choices = strike_prices ?? [];\n    }\n\n    setStakeBoundary(type, min_stake, max_stake) {\n        this.stake_boundary[type] = { min_stake, max_stake };\n    }\n}\n","import TradeStore from './Trading/trade-store';\n\nexport default class ModulesStore {\n    constructor(root_store, core_store) {\n        this.cashier = core_store.modules.cashier;\n        this.trade = new TradeStore({ root_store });\n    }\n}\n","import ModulesStore from './Modules';\n\nexport default class RootStore {\n    constructor(core_store) {\n        this.client = core_store.client;\n        this.common = core_store.common;\n        this.modules = new ModulesStore(this, core_store);\n        this.ui = core_store.ui;\n        this.gtm = core_store.gtm;\n        this.pushwoosh = core_store.pushwoosh;\n        this.notifications = core_store.notifications;\n        this.contract_replay = core_store.contract_replay;\n        this.contract_trade = core_store.contract_trade;\n        this.portfolio = core_store.portfolio;\n        this.chart_barrier_store = core_store.chart_barrier_store;\n        this.active_symbols = core_store.active_symbols;\n    }\n}\n","import { configure } from 'mobx';\nimport RootStore from 'Stores';\nimport { setWebsocket } from '@deriv/shared';\nimport ServerTime from '_common/base/server_time';\n\nconfigure({ enforceActions: 'observed' });\n\nlet root_store;\n\nconst initStore = (core_store, websocket) => {\n    if (root_store) return root_store;\n\n    ServerTime.init(core_store.common);\n    setWebsocket(websocket);\n    root_store = new RootStore(core_store);\n\n    return root_store;\n};\n\nexport default initStore;\n","import React from 'react';\nimport Loadable from 'react-loadable';\nimport Routes from 'App/Containers/Routes/routes.jsx';\nimport TradeHeaderExtensions from 'App/Containers/trade-header-extensions';\nimport TradeFooterExtensions from 'App/Containers/trade-footer-extensions.jsx';\nimport TradeSettingsExtensions from 'App/Containers/trade-settings-extensions';\nimport { NetworkStatusToastErrorPopup } from 'Modules/Trading/Containers/toast-popup.jsx';\nimport initStore from './init-store';\nimport 'Sass/app.scss';\nimport type { TCoreStores } from '@deriv/stores/types';\nimport TraderProviders from '../trader-providers';\n\ntype Apptypes = {\n    passthrough: {\n        root_store: TCoreStores;\n        WS: unknown;\n    };\n};\n\nconst TradeModals = Loadable({\n    loader: () => import(/* webpackChunkName: \"trade-modals\", webpackPrefetch: true */ './Containers/Modals'),\n    loading: () => null,\n});\n\nconst App = ({ passthrough }: Apptypes) => {\n    const root_store = initStore(passthrough.root_store, passthrough.WS);\n    React.useEffect(() => {\n        return () => root_store.ui.setPromptHandler(false);\n    }, [root_store]);\n\n    return (\n        <TraderProviders store={root_store}>\n            <Routes />\n            <TradeModals />\n            <NetworkStatusToastErrorPopup />\n            <TradeHeaderExtensions store={root_store} />\n            <TradeFooterExtensions />\n            <TradeSettingsExtensions store={root_store} />\n        </TraderProviders>\n    );\n};\n\nexport default App;\n","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport { localize, Localize } from '@deriv/translations';\n\nexport const getCardLabels = () => ({\n    APPLY: localize('Apply'),\n    BUY_PRICE: localize('Buy price:'),\n    CANCEL: localize('Cancel'),\n    CLOSE: localize('Close'),\n    CONTRACT_VALUE: localize('Contract value:'),\n    CURRENT_STAKE: localize('Current stake:'),\n    DAY: localize('day'),\n    DAYS: localize('days'),\n    DEAL_CANCEL_FEE: localize('Deal cancel. fee:'),\n    DECREMENT_VALUE: localize('Decrement value'),\n    DONT_SHOW_THIS_AGAIN: localize(\"Don't show this again\"),\n    ENTRY_SPOT: localize('Entry spot:'),\n    INCREMENT_VALUE: localize('Increment value'),\n    NOT_AVAILABLE: localize('N/A'),\n    RESALE_NOT_OFFERED: localize('Resale not offered'),\n    SELL: localize('Sell'),\n    STAKE: localize('Stake:'),\n    STOP_LOSS: localize('Stop loss:'),\n    STRIKE: localize('Strike:'),\n    TICK: localize('Tick '),\n    TICKS: localize('Ticks'),\n    TOTAL_PROFIT_LOSS: localize('Total profit/loss:'),\n    PROFIT_LOSS: localize('Profit/Loss:'),\n    POTENTIAL_PROFIT_LOSS: localize('Potential profit/loss:'),\n    INDICATIVE_PRICE: localize('Indicative price:'),\n    INITIAL_STAKE: localize('Initial stake:'),\n    LOST: localize('Lost'),\n    PAYOUT: localize('Sell price:'),\n    PURCHASE_PRICE: localize('Buy price:'),\n    POTENTIAL_PAYOUT: localize('Payout limit:'),\n    TAKE_PROFIT: localize('Take profit:'),\n    TAKE_PROFIT_LOSS_NOT_AVAILABLE: localize(\n        'Take profit and/or stop loss are not available while deal cancellation is active.'\n    ),\n    WON: localize('Won'),\n});\n\nexport const getMarketNamesMap = () => ({\n    FRXAUDCAD: localize('AUD/CAD'),\n    FRXAUDCHF: localize('AUD/CHF'),\n    FRXAUDJPY: localize('AUD/JPY'),\n    FRXAUDNZD: localize('AUD/NZD'),\n    FRXAUDPLN: localize('AUD/PLN'),\n    FRXAUDUSD: localize('AUD/USD'),\n    FRXBROUSD: localize('Oil/USD'),\n    FRXEURAUD: localize('EUR/AUD'),\n    FRXEURCAD: localize('EUR/CAD'),\n    FRXEURCHF: localize('EUR/CHF'),\n    FRXEURGBP: localize('EUR/GBP'),\n    FRXEURJPY: localize('EUR/JPY'),\n    FRXEURNZD: localize('EUR/NZD'),\n    FRXEURUSD: localize('EUR/USD'),\n    FRXGBPAUD: localize('GBP/AUD'),\n    FRXGBPCAD: localize('GBP/CAD'),\n    FRXGBPCHF: localize('GBP/CHF'),\n    FRXGBPJPY: localize('GBP/JPY'),\n    FRXGBPNOK: localize('GBP/NOK'),\n    FRXGBPUSD: localize('GBP/USD'),\n    FRXNZDJPY: localize('NZD/JPY'),\n    FRXNZDUSD: localize('NZD/USD'),\n    FRXUSDCAD: localize('USD/CAD'),\n    FRXUSDCHF: localize('USD/CHF'),\n    FRXUSDJPY: localize('USD/JPY'),\n    FRXUSDNOK: localize('USD/NOK'),\n    FRXUSDPLN: localize('USD/PLN'),\n    FRXUSDSEK: localize('USD/SEK'),\n    FRXXAGUSD: localize('Silver/USD'),\n    FRXXAUUSD: localize('Gold/USD'),\n    FRXXPDUSD: localize('Palladium/USD'),\n    FRXXPTUSD: localize('Platinum/USD'),\n    OTC_AEX: localize('Netherlands 25'),\n    OTC_AS51: localize('Australia 200'),\n    OTC_DJI: localize('Wall Street 30'),\n    OTC_FCHI: localize('France 40'),\n    OTC_FTSE: localize('UK 100'),\n    OTC_GDAXI: localize('Germany 40'),\n    OTC_HSI: localize('Hong Kong 50'),\n    OTC_IBEX35: localize('Spanish Index'),\n    OTC_N225: localize('Japan 225'),\n    OTC_NDX: localize('US Tech 100'),\n    OTC_SPC: localize('US 500'),\n    OTC_SSMI: localize('Swiss 20'),\n    OTC_SX5E: localize('Euro 50'),\n    R_10: localize('Volatility 10 Index'),\n    R_25: localize('Volatility 25 Index'),\n    R_50: localize('Volatility 50 Index'),\n    R_75: localize('Volatility 75 Index'),\n    R_100: localize('Volatility 100 Index'),\n    BOOM300N: localize('Boom 300 Index'),\n    BOOM500: localize('Boom 500 Index'),\n    BOOM1000: localize('Boom 1000 Index'),\n    CRASH300N: localize('Crash 300 Index'),\n    CRASH500: localize('Crash 500 Index'),\n    CRASH1000: localize('Crash 1000 Index'),\n    RDBEAR: localize('Bear Market Index'),\n    RDBULL: localize('Bull Market Index'),\n    STPRNG: localize('Step Index'),\n    WLDAUD: localize('AUD Basket'),\n    WLDEUR: localize('EUR Basket'),\n    WLDGBP: localize('GBP Basket'),\n    WLDXAU: localize('Gold Basket'),\n    WLDUSD: localize('USD Basket'),\n    '1HZ10V': localize('Volatility 10 (1s) Index'),\n    '1HZ100V': localize('Volatility 100 (1s) Index'),\n    '1HZ150V': localize('Volatility 150 (1s) Index'),\n    '1HZ200V': localize('Volatility 200 (1s) Index'),\n    '1HZ250V': localize('Volatility 250 (1s) Index'),\n    '1HZ300V': localize('Volatility 300 (1s) Index'),\n    JD10: localize('Jump 10 Index'),\n    JD25: localize('Jump 25 Index'),\n    JD50: localize('Jump 50 Index'),\n    JD75: localize('Jump 75 Index'),\n    JD100: localize('Jump 100 Index'),\n    JD150: localize('Jump 150 Index'),\n    JD200: localize('Jump 200 Index'),\n    CRYBCHUSD: localize('BCH/USD'),\n    CRYBNBUSD: localize('BNB/USD'),\n    CRYBTCLTC: localize('BTC/LTC'),\n    CRYIOTUSD: localize('IOT/USD'),\n    CRYNEOUSD: localize('NEO/USD'),\n    CRYOMGUSD: localize('OMG/USD'),\n    CRYTRXUSD: localize('TRX/USD'),\n    CRYBTCETH: localize('BTC/ETH'),\n    CRYZECUSD: localize('ZEC/USD'),\n    CRYXMRUSD: localize('ZMR/USD'),\n    CRYXMLUSD: localize('XLM/USD'),\n    CRYXRPUSD: localize('XRP/USD'),\n    CRYBTCUSD: localize('BTC/USD'),\n    CRYDSHUSD: localize('DSH/USD'),\n    CRYETHUSD: localize('ETH/USD'),\n    CRYEOSUSD: localize('EOS/USD'),\n    CRYLTCUSD: localize('LTC/USD'),\n});\n\nexport const getUnsupportedContracts = () => ({\n    EXPIRYMISS: {\n        name: <Localize i18n_default_text='Ends Outside' />,\n        position: 'top',\n    },\n    EXPIRYRANGE: {\n        name: <Localize i18n_default_text='Ends Between' />,\n        position: 'bottom',\n    },\n    RANGE: {\n        name: <Localize i18n_default_text='Stays Between' />,\n        position: 'top',\n    },\n    UPORDOWN: {\n        name: <Localize i18n_default_text='Goes Outside' />,\n        position: 'bottom',\n    },\n    RESETCALL: {\n        name: <Localize i18n_default_text='Reset Call' />,\n        position: 'top',\n    },\n    RESETPUT: {\n        name: <Localize i18n_default_text='Reset Put' />,\n        position: 'bottom',\n    },\n    TICKHIGH: {\n        name: <Localize i18n_default_text='High Tick' />,\n        position: 'top',\n    },\n    TICKLOW: {\n        name: <Localize i18n_default_text='Low Tick' />,\n        position: 'bottom',\n    },\n    ASIANU: {\n        name: <Localize i18n_default_text='Asian Up' />,\n        position: 'top',\n    },\n    ASIAND: {\n        name: <Localize i18n_default_text='Asian Down' />,\n        position: 'bottom',\n    },\n    LBFLOATCALL: {\n        name: <Localize i18n_default_text='Close-to-Low' />,\n        position: 'top',\n    },\n    LBFLOATPUT: {\n        name: <Localize i18n_default_text='High-to-Close' />,\n        position: 'top',\n    },\n    LBHIGHLOW: {\n        name: <Localize i18n_default_text='High-to-Low' />,\n        position: 'top',\n    },\n    CALLSPREAD: {\n        name: <Localize i18n_default_text='Spread Up' />,\n        position: 'top',\n    },\n    PUTSPREAD: {\n        name: <Localize i18n_default_text='Spread Down' />,\n        position: 'bottom',\n    },\n    RUNHIGH: {\n        name: <Localize i18n_default_text='Only Ups' />,\n        position: 'top',\n    },\n    RUNLOW: {\n        name: <Localize i18n_default_text='Only Downs' />,\n        position: 'bottom',\n    },\n});\n\n// Config to display trade button and their position\nexport const getSupportedContracts = is_high_low => ({\n    ACCU: {\n        button_name: <Localize i18n_default_text='Buy' />,\n        name: <Localize i18n_default_text='Accumulator' />,\n        position: 'top',\n    },\n    CALL: {\n        name: is_high_low ? <Localize i18n_default_text='Higher' /> : <Localize i18n_default_text='Rise' />,\n        position: 'top',\n    },\n    PUT: {\n        name: is_high_low ? <Localize i18n_default_text='Lower' /> : <Localize i18n_default_text='Fall' />,\n        position: 'bottom',\n    },\n    CALLE: {\n        name: <Localize i18n_default_text='Rise' />,\n        position: 'top',\n    },\n    PUTE: {\n        name: <Localize i18n_default_text='Fall' />,\n        position: 'bottom',\n    },\n    DIGITMATCH: {\n        name: <Localize i18n_default_text='Matches' />,\n        position: 'top',\n    },\n    DIGITDIFF: {\n        name: <Localize i18n_default_text='Differs' />,\n        position: 'bottom',\n    },\n    DIGITEVEN: {\n        name: <Localize i18n_default_text='Even' />,\n        position: 'top',\n    },\n    DIGITODD: {\n        name: <Localize i18n_default_text='Odd' />,\n        position: 'bottom',\n    },\n    DIGITOVER: {\n        name: <Localize i18n_default_text='Over' />,\n        position: 'top',\n    },\n    DIGITUNDER: {\n        name: <Localize i18n_default_text='Under' />,\n        position: 'bottom',\n    },\n    ONETOUCH: {\n        name: <Localize i18n_default_text='Touch' />,\n        position: 'top',\n    },\n    NOTOUCH: {\n        name: <Localize i18n_default_text='No Touch' />,\n        position: 'bottom',\n    },\n    MULTUP: {\n        name: <Localize i18n_default_text='Up' />,\n        position: 'top',\n    },\n    MULTDOWN: {\n        name: <Localize i18n_default_text='Down' />,\n        position: 'bottom',\n    },\n    VANILLALONGCALL: {\n        name: <Localize i18n_default_text='Call' />,\n        position: 'top',\n    },\n    VANILLALONGPUT: {\n        name: <Localize i18n_default_text='Put' />,\n        position: 'bottom',\n    },\n});\n\nexport const getContractConfig = is_high_low => ({\n    ...getSupportedContracts(is_high_low),\n    ...getUnsupportedContracts(),\n});\n\nexport const getContractTypeDisplay = (type, is_high_low = false, show_button_name = false) => {\n    const contract_config = getContractConfig(is_high_low)[type];\n    return (show_button_name && contract_config.button_name) || contract_config.name || '';\n};\n\nexport const getContractTypePosition = (type, is_high_low = false) =>\n    getContractConfig(is_high_low)[type] ? getContractConfig(is_high_low)[type.toUpperCase()].position : 'top';\n","import React from 'react';\nimport classNames from 'classnames';\n\ntype TTicksHistoryCounter = {\n    has_progress_dots: boolean;\n    should_emphasize_last_counter?: boolean;\n    value: number;\n};\n\nconst TicksHistoryCounter = ({ has_progress_dots, value, should_emphasize_last_counter }: TTicksHistoryCounter) => {\n    const should_highlight_last_counter = should_emphasize_last_counter && has_progress_dots && value === 0;\n    return (\n        <div\n            data-testid='dt_accu_stats_history_counter'\n            className={classNames('accumulators-stats__history-counter', {\n                'accumulators-stats__history-counter--emphasized': should_highlight_last_counter,\n            })}\n        >\n            {value}\n            {has_progress_dots && (\n                <div className='accumulators-stats__progress-dots'>\n                    {[1, 2, 3].map(dot => {\n                        return <span key={`ticks-dot-counter${dot}`} className={`dot-${dot}`} />;\n                    })}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default React.memo(TicksHistoryCounter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text } from '@deriv/components';\nimport TicksHistoryCounter from './ticks-history-counter';\n\ntype TExpandedTicksHistoryProps = {\n    history_text_size: string;\n    rows: number[][];\n};\n\nconst ExpandedTicksHistory = ({ history_text_size, rows }: TExpandedTicksHistoryProps) => (\n    <Text size={history_text_size} className='accumulators-stats__history--expanded'>\n        {rows.map((row, i) => (\n            <div\n                key={i.toString() + row[0]}\n                data-testid='dt_accu_stats_history_row'\n                className='accumulators-stats__row'\n            >\n                {row.map((counter, idx) => (\n                    <TicksHistoryCounter\n                        key={idx.toString() + counter}\n                        value={counter}\n                        has_progress_dots={i === 0 && idx === 0}\n                    />\n                ))}\n            </div>\n        ))}\n    </Text>\n);\n\nExpandedTicksHistory.propTypes = {\n    history_text_size: PropTypes.string,\n    rows: PropTypes.array,\n};\n\nexport default React.memo(ExpandedTicksHistory);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon, Loading, Modal, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { getUrlBase, isMobile } from '@deriv/shared';\nimport 'Sass/app/modules/contract/accumulators-stats.scss';\n\nconst AccumulatorsStatsManualModal = ({ icon_classname, is_dark_theme, is_manual_open, title, toggleManual }) => {\n    const [is_loading, setIsLoading] = React.useState(true);\n    const is_mobile = isMobile();\n    // memoize file paths for videos and open the modal only after we get them\n    const getVideoSource = React.useCallback(\n        extension => {\n            return getUrlBase(\n                `/public/images/common/accumulators_manual_${is_mobile ? 'mobile' : 'desktop'}${\n                    is_dark_theme ? '_dark' : ''\n                }.${extension}`\n            );\n        },\n        [is_mobile, is_dark_theme]\n    );\n    const mp4_src = React.useMemo(() => getVideoSource('mp4'), [getVideoSource]);\n    const webm_src = React.useMemo(() => getVideoSource('webm'), [getVideoSource]);\n\n    return (\n        <React.Fragment>\n            <Icon icon='IcInfoOutline' onClick={toggleManual} size={16} className={icon_classname} />\n            <Modal\n                is_open={is_manual_open && !!mp4_src && !!webm_src}\n                should_header_stick_body={false}\n                title={title}\n                toggleModal={toggleManual}\n                width={is_mobile ? '328px' : '596px'}\n                className='accumulators-stats-manual-modal'\n            >\n                <Modal.Body className='accumulators-stats-modal-body'>\n                    <div className='accumulators-stats-modal-body__video'>\n                        {is_loading && <Loading is_fullscreen={false} />}\n                        <video\n                            autoPlay\n                            data-testid='dt_accumulators_stats_manual_video'\n                            loop\n                            onLoadedData={() => setIsLoading(false)}\n                            playsInline\n                            preload='auto'\n                            width={is_mobile ? 296 : 563}\n                        >\n                            {/* a browser will select a source with extension it recognizes */}\n                            <source src={mp4_src} type='video/mp4' />\n                            <source src={webm_src} type='video/webm' />\n                            {localize('Unfortunately, your browser does not support the video.')}\n                        </video>\n                    </div>\n                    <Text\n                        as='p'\n                        size={is_mobile ? 'xs' : 's'}\n                        color='prominent'\n                        className='accumulators-stats-modal-body__text'\n                    >\n                        {localize(\n                            'Stats show the history of consecutive tick counts, i.e. the number of ticks the price remained within range continuously.'\n                        )}\n                    </Text>\n                </Modal.Body>\n            </Modal>\n        </React.Fragment>\n    );\n};\n\nAccumulatorsStatsManualModal.propTypes = {\n    icon_classname: PropTypes.string,\n    is_dark_theme: PropTypes.bool,\n    is_manual_open: PropTypes.bool,\n    title: PropTypes.string,\n    toggleManual: PropTypes.func,\n};\n\nexport { AccumulatorsStatsManualModal };\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { DesktopWrapper, Icon, MobileDialog, MobileWrapper, Text } from '@deriv/components';\nimport { isDesktop, isMobile } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport ExpandedTicksHistory from './expanded-ticks-history';\nimport TicksHistoryCounter from './ticks-history-counter';\nimport { AccumulatorsStatsManualModal } from './accumulators-stats-manual-modal';\nimport 'Sass/app/modules/contract/accumulators-stats.scss';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\nexport const ROW_SIZES = {\n    DESKTOP_COLLAPSED: 10,\n    DESKTOP_EXPANDED: 10,\n    MOBILE_COLLAPSED: 15,\n    MOBILE_EXPANDED: 5,\n};\n\nconst AccumulatorsStats = observer(({ is_expandable = true }) => {\n    const { ui } = useStore();\n    const { ticks_history_stats = {} } = useTraderStore();\n    const { is_dark_mode_on: is_dark_theme } = ui;\n\n    const [is_collapsed, setIsCollapsed] = React.useState(true);\n    const [is_manual_open, setIsManualOpen] = React.useState(false);\n    const widget_title = localize('Stats');\n    const ticks_history = ticks_history_stats?.ticks_stayed_in || [];\n    const history_text_size = isDesktop() || !is_collapsed ? 'xxs' : 'xxxs';\n\n    const rows = ticks_history.reduce((acc, _el, index) => {\n        const desktop_row_size = is_collapsed ? ROW_SIZES.DESKTOP_COLLAPSED : ROW_SIZES.DESKTOP_EXPANDED;\n        const mobile_row_size = is_collapsed ? ROW_SIZES.MOBILE_COLLAPSED : ROW_SIZES.MOBILE_EXPANDED;\n        const row_size = isDesktop() ? desktop_row_size : mobile_row_size;\n        if (index % row_size === 0) {\n            acc.push(ticks_history.slice(index, index + row_size));\n        }\n        return acc;\n    }, []);\n\n    if (!ticks_history.length) return null;\n\n    return (\n        <div className='accumulators-stats'>\n            <div className={classNames('accumulators-stats__container--collapsed')}>\n                <div className='accumulators-stats__title'>\n                    <AccumulatorsStatsManualModal\n                        is_dark_theme={is_dark_theme}\n                        icon_classname='info'\n                        is_manual_open={is_manual_open}\n                        title={widget_title}\n                        toggleManual={() => setIsManualOpen(!is_manual_open)}\n                    />\n                    <Text weight='bold' size={isMobile() ? 'xxxs' : 'xxs'} className='accumulators-stats__title-text'>\n                        {widget_title}\n                    </Text>\n                </div>\n                <Text size={history_text_size} className='accumulators-stats__history'>\n                    {!is_collapsed ? (\n                        <div className='accumulators-stats__history-heading'>{localize('Number of ticks')}</div>\n                    ) : (\n                        rows[0]?.map((el, i) => <TicksHistoryCounter key={i} value={el} has_progress_dots={i === 0} />)\n                    )}\n                </Text>\n            </div>\n            {is_expandable && !is_collapsed && (\n                <React.Fragment>\n                    <DesktopWrapper>\n                        <ExpandedTicksHistory history_text_size={history_text_size} rows={rows} />\n                    </DesktopWrapper>\n                    <MobileWrapper>\n                        <MobileDialog\n                            onClose={() => setIsCollapsed(!is_collapsed)}\n                            portal_element_id='modal_root'\n                            title={widget_title}\n                            visible={!is_collapsed}\n                            wrapper_classname='accumulators-stats'\n                        >\n                            <ExpandedTicksHistory history_text_size={history_text_size} rows={rows} />\n                        </MobileDialog>\n                    </MobileWrapper>\n                </React.Fragment>\n            )}\n            {is_expandable && (\n                <Icon\n                    icon={is_collapsed ? 'IcArrowUp' : 'IcArrowDown'}\n                    onClick={() => setIsCollapsed(!is_collapsed)}\n                    className='accordion-toggle-arrow'\n                />\n            )}\n        </div>\n    );\n});\n\nAccumulatorsStats.propTypes = {\n    is_expandable: PropTypes.bool,\n};\n\nexport default AccumulatorsStats;\n","import AccumulatorsStats from './accumulators-stats.jsx';\n\nexport default AccumulatorsStats;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Digit = ({ is_latest, is_lost, is_selected, is_won, percentage, value }) => {\n    const display_percentage = percentage && !isNaN(percentage) ? parseFloat(percentage).toFixed(1) : null;\n    return (\n        <React.Fragment>\n            <span\n                className={classNames('digits__digit-value', {\n                    'digits__digit-value--latest': is_latest,\n                    'digits__digit-value--selected': is_selected,\n                    'digits__digit-value--win': is_won && is_latest,\n                    'digits__digit-value--loss': is_lost && is_latest,\n                })}\n            >\n                <i\n                    className={classNames('digits__digit-display-value', {\n                        'digits__digit-display-value--no-stats': !display_percentage,\n                    })}\n                >\n                    {value}\n                </i>\n                {!!display_percentage && <i className='digits__digit-display-percentage'>{display_percentage}%</i>}\n            </span>\n        </React.Fragment>\n    );\n};\n\nDigit.propTypes = {\n    is_latest: PropTypes.bool,\n    is_lost: PropTypes.bool,\n    is_selected: PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    is_won: PropTypes.bool,\n    percentage: PropTypes.number,\n    value: PropTypes.number,\n};\n\nexport default Digit;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Text } from '@deriv/components';\n\nconst DigitSpot = ({ current_spot, is_selected_winning, is_lost, is_won }) => (\n    <React.Fragment>\n        <Text size='xs' align='center' weight='bold' className='digits__digit-spot-value'>\n            {current_spot.slice(0, -1)}\n        </Text>\n        <span\n            className={classNames('digits__digit-spot-last', {\n                'digits__digit-spot-last--selected-win': is_selected_winning,\n                'digits__digit-spot-last--win': is_won,\n                'digits__digit-spot-last--loss': is_lost,\n            })}\n        >\n            {current_spot.slice(-1)}\n        </span>\n    </React.Fragment>\n);\n\nDigitSpot.propTypes = {\n    current_spot: PropTypes.string,\n    is_lost: PropTypes.bool,\n    is_selected_winning: PropTypes.bool,\n    is_won: PropTypes.bool,\n};\n\nexport default DigitSpot;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst LastDigitStat = ({ is_max, is_min, is_selected, percentage }) => {\n    // interpolate color opacity within 7.5 to 12.5 range\n    let opacity = (percentage - 10) / 4;\n    opacity = Math.min(Math.max(opacity, -1), +1);\n    opacity = ((opacity + 1) / 2) * 0.85 + 0.15;\n    const w = 339.292;\n    let p = (20 * percentage - 102) / 3 / 100;\n    p = Math.max(Math.min(p, 0.66), 0.06);\n\n    return (\n        <div\n            className={classNames('digits__pie-container', {\n                'digits__pie-container--selected': is_selected,\n            })}\n        >\n            <svg className='digits__pie-progress' width='120' height='120' viewBox='0 0 120 120'>\n                <circle className='progress__bg' cx='60' cy='60' r='54' fill='none' stroke='#E8EEFC' strokeWidth='12' />\n                {percentage && (\n                    <circle\n                        className={classNames('progress__value', {\n                            'progress__value--is-max': is_max,\n                            'progress__value--is-min': is_min,\n                        })}\n                        cx='60'\n                        cy='60'\n                        r='54'\n                        fill='none'\n                        strokeOpacity={is_max || is_min ? 1 : opacity}\n                        strokeWidth='12'\n                        strokeDasharray={[w * p, w * (1 - p)]}\n                        // strokeDashoffset={(w * (1 - (0 * 3.5 * percentage / 100)))}\n                        strokeDashoffset={w * ((p + 1) / 2)}\n                    />\n                )}\n            </svg>\n        </div>\n    );\n};\n\nLastDigitStat.propTypes = {\n    is_max: PropTypes.bool,\n    is_min: PropTypes.bool,\n    is_selected: PropTypes.bool,\n    percentage: PropTypes.number,\n};\n\nexport default LastDigitStat;\n","import classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { DesktopWrapper } from '@deriv/components';\nimport { isMobile } from '@deriv/shared';\nimport { Bounce } from 'App/Components/Animations';\nimport Digit from './digit.jsx';\nimport DigitSpot from './digit-spot.jsx';\nimport LastDigitStat from './last-digit-stat.jsx';\n\nconst DigitDisplay = ({\n    barrier,\n    is_digit_contract,\n    has_entry_spot,\n    is_lost,\n    is_max,\n    is_min,\n    is_won,\n    onSelect,\n    latest_digit,\n    selected_digit,\n    status,\n    stats,\n    value,\n    onLastDigitSpot,\n}) => {\n    const { digit, spot } = latest_digit;\n    const is_latest = value === digit;\n    const is_selected = value === barrier;\n    const is_selected_winning = digit === barrier;\n    const percentage = stats ? (stats * 100) / 1000 : null;\n\n    React.useEffect(() => {\n        if (onLastDigitSpot) {\n            onLastDigitSpot({ spot, is_lost, is_selected_winning, is_latest, is_won });\n        }\n    }, [latest_digit, spot, barrier, value, is_lost, is_selected_winning, is_latest, is_won, onLastDigitSpot]);\n\n    const is_digit_selectable = isMobile() && typeof onSelect === 'function' && !status;\n    const is_digit_selected = isMobile() && value === selected_digit && !status;\n    return (\n        <div\n            className={classNames('digits__digit', {\n                'digits__digit--latest': is_latest,\n                'digits__digit--win': is_won && is_latest,\n                'digits__digit--loss': is_lost && is_latest,\n                'digits__digit--is-selectable': is_digit_selectable,\n                'digits__digit--is-selected': is_digit_selected,\n            })}\n            onClick={() => {\n                if (!is_digit_selectable) return;\n                onSelect(value);\n            }}\n        >\n            <LastDigitStat is_min={is_min} is_max={is_max} is_selected={is_selected} percentage={percentage} />\n            <DesktopWrapper>\n                <Bounce\n                    is_visible={!!(is_digit_contract && is_latest && spot && status && has_entry_spot)}\n                    className='digits__digit-spot'\n                    keyname='digits__digit-spot'\n                >\n                    <DigitSpot\n                        current_spot={spot}\n                        is_lost={is_lost}\n                        is_selected_winning={is_selected_winning}\n                        is_visible={!!(is_latest && spot)}\n                        is_won={is_won}\n                    />\n                </Bounce>\n            </DesktopWrapper>\n            <Digit\n                is_latest={is_latest}\n                is_lost={is_lost}\n                is_selected={is_selected}\n                is_won={is_won}\n                percentage={percentage}\n                value={value}\n            />\n        </div>\n    );\n};\n\nDigitDisplay.propTypes = {\n    barrier: PropTypes.number,\n    has_entry_spot: PropTypes.bool,\n    is_digit_contract: PropTypes.bool,\n    is_lost: PropTypes.bool,\n    is_max: PropTypes.bool,\n    is_min: PropTypes.bool,\n    is_won: PropTypes.bool,\n    latest_digit: PropTypes.object,\n    onLastDigitSpot: PropTypes.func,\n    onSelect: PropTypes.func,\n    selected_digit: PropTypes.number,\n    stats: PropTypes.number,\n    status: PropTypes.string,\n    value: PropTypes.number,\n};\n\nexport default observer(DigitDisplay);\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon } from '@deriv/components';\n\nconst LastDigitPointer = ({ is_lost, is_trade_page, is_won, position }) => (\n    <React.Fragment>\n        {!!position && (\n            <span\n                className='digits__pointer'\n                style={{ transform: `translate3d(calc(${position.left}px), ${position.top}px, 0px)` }}\n            >\n                <Icon\n                    icon='IcProfit'\n                    className={classNames('digits__icon', {\n                        'digits__icon--win': is_won && !is_trade_page,\n                        'digits__icon--loss': is_lost && !is_trade_page,\n                    })}\n                    color={is_won ? 'green' : 'red'}\n                    custom_color={!(is_won || is_lost) ? 'var(--brand-orange)' : undefined}\n                />\n            </span>\n        )}\n    </React.Fragment>\n);\n\nLastDigitPointer.propTypes = {\n    is_lost: PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    is_won: PropTypes.bool,\n    position: PropTypes.object,\n};\n\nexport default LastDigitPointer;\n","import classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { isMobile } from '@deriv/shared';\nimport DigitDisplay from './digit-display.jsx';\nimport LastDigitPointer from './last-digit-pointer.jsx';\n\nconst display_array = Array.from(Array(10).keys()); // digits array [0 - 9]\n\nconst LastDigitPrediction = ({\n    barrier,\n    contract_type,\n    digits,\n    digits_info,\n    dimension,\n    is_digit_contract,\n    has_entry_spot,\n    is_ended,\n    is_trade_page,\n    onDigitChange,\n    onLastDigitSpot,\n    selected_digit,\n    status,\n    tick,\n    trade_type,\n}) => {\n    const [digit_offset] = React.useState({\n        0: { left: 6, top: 0 },\n        1: { left: 6 + dimension * 1, top: 0 },\n        2: { left: 6 + dimension * 2, top: 0 },\n        3: { left: 6 + dimension * 3, top: 0 },\n        4: { left: 6 + dimension * 4, top: 0 },\n        5: { left: 6 + dimension * 5, top: 0 },\n        6: { left: 6 + dimension * 6, top: 0 },\n        7: { left: 6 + dimension * 7, top: 0 },\n        8: { left: 6 + dimension * 8, top: 0 },\n        9: { left: 6 + dimension * 9, top: 0 },\n    });\n\n    const [digit_offset_mobile] = React.useState({\n        0: { left: 6, top: -60 },\n        1: { left: 6 + dimension * 1, top: -60 },\n        2: { left: 6 + dimension * 2, top: -60 },\n        3: { left: 6 + dimension * 3, top: -60 },\n        4: { left: 6 + dimension * 4, top: -60 },\n        5: { left: 6 + dimension * 0, top: 8 },\n        6: { left: 6 + dimension * 1, top: 8 },\n        7: { left: 6 + dimension * 2, top: 8 },\n        8: { left: 6 + dimension * 3, top: 8 },\n        9: { left: 6 + dimension * 4, top: 8 },\n    });\n\n    const handleSelect = digit_value => {\n        if (!isSelectableDigitType()) return;\n        if (digit_value !== selected_digit && typeof onDigitChange === 'function') {\n            onDigitChange({ target: { name: 'last_digit', value: digit_value } });\n        }\n    };\n\n    const getBarrier = num => {\n        const barrier_map = {\n            DIGITMATCH: val => val === barrier,\n            DIGITDIFF: val => val !== barrier && !isNaN(barrier),\n            DIGITOVER: val => val > barrier,\n            DIGITUNDER: val => val < barrier,\n            DIGITODD: val => val % 2,\n            DIGITEVEN: val => !(val % 2),\n        };\n        if (!contract_type || !barrier_map[contract_type]) return null;\n        return barrier_map[contract_type](num) ? num : null;\n    };\n\n    const getOffset = () => (isMobile() ? digit_offset_mobile : digit_offset);\n\n    const isSelectableDigitType = () => (isMobile() ? trade_type !== 'even_odd' : false);\n\n    const digits_array = Object.keys(digits_info)\n        .sort()\n        .map(spot_time => digits_info[spot_time]);\n    const last_contract_digit = digits_array.slice(-1)[0] || {};\n\n    // 'won' or 'lost' status exists after contract expiry\n    const is_won = is_ended && status === 'won' && is_digit_contract;\n    // need to explicitly have is_lost condition here\n    // because negating is_won would always be true,\n    // but we only need is_lost condition only once we have the 'won' or 'lost' status\n    const is_lost = is_ended && status === 'lost' && is_digit_contract;\n\n    const min = digits ? Math.min(...digits) : null;\n    const max = digits ? Math.max(...digits) : null;\n\n    // latest last digit refers to digit and spot values from latest price\n    // latest contract digit refers to digit and spot values from last digit contract in contracts array\n    const latest_tick_pip_size = tick ? +tick.pip_size : null;\n    const latest_tick_ask_price = tick && tick.ask ? tick.ask.toFixed(latest_tick_pip_size) : null;\n    const latest_tick_digit = latest_tick_ask_price ? +latest_tick_ask_price.split('').pop() : null;\n    const position = tick ? getOffset()[latest_tick_digit] : getOffset()[last_contract_digit.digit];\n    const latest_digit = !(is_won || is_lost)\n        ? { digit: latest_tick_digit, spot: latest_tick_ask_price }\n        : last_contract_digit;\n    return (\n        <div\n            className={classNames('digits', {\n                'digits--trade': is_trade_page,\n            })}\n        >\n            {display_array.map(idx => (\n                <DigitDisplay\n                    barrier={getBarrier(idx)}\n                    has_entry_spot={has_entry_spot}\n                    is_digit_contract={is_digit_contract}\n                    is_lost={is_lost}\n                    is_trade_page={is_trade_page}\n                    is_won={is_won}\n                    key={idx}\n                    is_max={digits ? digits[idx] === max : null}\n                    is_min={digits ? digits[idx] === min : null}\n                    stats={digits ? digits[idx] : null}\n                    status={status}\n                    latest_digit={is_trade_page ? latest_digit : last_contract_digit}\n                    value={idx}\n                    onLastDigitSpot={onLastDigitSpot}\n                    onSelect={isSelectableDigitType() ? handleSelect : null}\n                    selected_digit={isSelectableDigitType() ? selected_digit : false}\n                />\n            ))}\n            <LastDigitPointer is_lost={is_lost} is_trade_page={is_trade_page} is_won={is_won} position={position} />\n        </div>\n    );\n};\n\nLastDigitPrediction.propTypes = {\n    barrier: PropTypes.number,\n    contract_type: PropTypes.string,\n    digits: PropTypes.array,\n    digits_info: PropTypes.object,\n    dimension: PropTypes.number,\n    has_entry_spot: PropTypes.bool,\n    is_digit_contract: PropTypes.bool,\n    is_ended: PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    status: PropTypes.string,\n    trade_type: PropTypes.string,\n    onDigitChange: PropTypes.func,\n    onLastDigitSpot: PropTypes.func,\n    selected_digit: PropTypes.number,\n    tick: PropTypes.object,\n};\n\nexport default observer(LastDigitPrediction);\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { toJS } from 'mobx';\nimport { DesktopWrapper, MobileWrapper, Popover, Text } from '@deriv/components';\nimport { isMobile, useIsMounted, isContractElapsed } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport { Bounce, SlideIn } from 'App/Components/Animations';\nimport { getMarketNamesMap } from '../../../../Constants';\nimport { DigitSpot, LastDigitPrediction } from '../LastDigitPrediction';\nimport 'Sass/app/modules/contract/digits.scss';\n\nconst DigitsWrapper = ({\n    contract_info,\n    digits_array,\n    digits_info,\n    display_status,\n    is_digit_contract,\n    is_ended,\n    is_trade_page,\n    onDigitChange,\n    selected_digit,\n    trade_type,\n    onChangeStatus,\n    ...props\n}) => {\n    const has_contract = contract_info.date_start;\n    let tick = props.tick;\n\n    const is_tick_ready = is_trade_page ? !!tick : true;\n    const is_contract_elapsed = is_trade_page ? isContractElapsed(contract_info, tick) : false;\n    const status = !is_contract_elapsed && is_tick_ready ? display_status : null;\n\n    // tick from contract_info.tick_stream has totally different\n    // format from the tick from tick_history api call.\n    if (has_contract && !is_contract_elapsed) {\n        tick = null;\n        const tick_stream = contract_info.tick_stream;\n        if (tick_stream && tick_stream.length) {\n            const t = toJS(tick_stream.slice(-1)[0]);\n            tick = {\n                ask: t.tick,\n                bid: t.tick,\n                epoch: t.epoch,\n                pip_size: t.tick_display_value.split('.')[1].length,\n                current_tick: tick_stream.length,\n            };\n        }\n    }\n\n    React.useEffect(() => {\n        if (onChangeStatus) {\n            onChangeStatus({ status, current_tick: tick ? tick.current_tick : null });\n        }\n    }, [tick, is_trade_page, display_status, onChangeStatus, status]);\n\n    return (\n        <LastDigitPrediction\n            // dimension of a single digit widget including margin/padding (number)\n            // i.e - 40px + 6px left and 6px right padding/margin = 52\n            dimension={isMobile() ? 64 : 52}\n            has_entry_spot={!!contract_info.entry_tick}\n            barrier={!is_contract_elapsed && is_tick_ready ? +contract_info.barrier : null}\n            contract_type={!is_contract_elapsed && is_tick_ready ? contract_info.contract_type : null}\n            digits={digits_array}\n            digits_info={!is_contract_elapsed && is_tick_ready ? digits_info : {}}\n            is_digit_contract={is_digit_contract}\n            is_ended={is_ended}\n            is_trade_page={is_trade_page}\n            status={status}\n            tick={tick}\n            trade_type={trade_type}\n            onDigitChange={onDigitChange}\n            selected_digit={selected_digit}\n            onLastDigitSpot={props.onLastDigitSpot}\n        />\n    );\n};\n\nconst Digits = React.memo(props => {\n    const [status, setStatus] = React.useState();\n    const [current_tick, setCurrentTick] = React.useState();\n    const [spot, setSpot] = React.useState();\n    const [is_selected_winning, setIsSelectedWinning] = React.useState();\n    const [is_latest, setIsLatest] = React.useState();\n    const [is_won, setIsWon] = React.useState();\n    const [is_lost, setIsLost] = React.useState();\n    const isMounted = useIsMounted();\n\n    const { contract_info, digits_array, is_digit_contract, is_trade_page, underlying } = props;\n\n    const onChangeStatus = params => {\n        setStatus(params.status);\n        setCurrentTick(params.current_tick);\n    };\n\n    const onLastDigitSpot = params => {\n        setSpot(params.spot);\n        setIsLost(params.is_lost);\n        setIsSelectedWinning(params.is_selected_winning);\n        setIsLatest(params.is_latest);\n        setIsWon(params.is_won);\n    };\n\n    const getPopoverMessage = () => {\n        const underlying_name = is_trade_page ? underlying : contract_info.underlying;\n\n        return localize('Last digit stats for latest 1000 ticks for {{underlying_name}}', {\n            underlying_name: getMarketNamesMap()[underlying_name.toUpperCase()],\n        });\n    };\n\n    return (\n        <React.Fragment>\n            <DesktopWrapper>\n                <SlideIn\n                    is_visible={(digits_array || is_digit_contract) && isMounted()}\n                    className='digits__container'\n                    keyname='digits'\n                    type='bottom'\n                >\n                    {is_trade_page && (\n                        <div className='digits__tooltip-container'>\n                            <Popover\n                                alignment='top'\n                                classNameBubble='digits__tooltip-bubble'\n                                icon='info'\n                                id='dt_last_digits_info_tooltip'\n                                margin={4}\n                                message={getPopoverMessage()}\n                            />\n                        </div>\n                    )}\n                    <DigitsWrapper {...props} />\n                </SlideIn>\n            </DesktopWrapper>\n            <MobileWrapper>\n                <div className='digits__container'>\n                    <Bounce\n                        is_visible={!!(is_digit_contract && status && spot && !!contract_info.entry_tick)}\n                        className={classNames('digits__digit-spot', {\n                            'digits__digit-spot--is-trading': is_trade_page,\n                        })}\n                        keyname='digits__digit-spot'\n                    >\n                        {is_trade_page && (\n                            <Text size='xs' align='center' className='digits__digit-spot-value'>\n                                <Localize i18n_default_text='Tick {{current_tick}} - ' values={{ current_tick }} />\n                            </Text>\n                        )}\n                        <DigitSpot\n                            current_spot={spot}\n                            is_lost={is_lost}\n                            is_selected_winning={is_selected_winning}\n                            is_visible={!!(is_latest && spot)}\n                            is_won={is_won}\n                        />\n                    </Bounce>\n                    <DigitsWrapper {...props} onChangeStatus={onChangeStatus} onLastDigitSpot={onLastDigitSpot} />\n                </div>\n            </MobileWrapper>\n        </React.Fragment>\n    );\n});\n\nDigits.displayName = 'Digits';\n\nDigits.propTypes = {\n    contract_info: PropTypes.object,\n    digits_array: PropTypes.array,\n    digits_info: PropTypes.object,\n    display_status: PropTypes.string,\n    is_digit_contract: PropTypes.bool,\n    is_ended: PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    trade_type: PropTypes.string,\n    onDigitChange: PropTypes.func,\n    selected_digit: PropTypes.number,\n    underlying: PropTypes.string,\n};\n\nexport default Digits;\n","import Digits from './digits.jsx';\n\nexport default Digits;\n","import React from 'react';\nimport { PageError } from '@deriv/components';\nimport { routes, getUrlBase } from '@deriv/shared';\n\nimport { localize } from '@deriv/translations';\n\nconst Page404 = () => (\n    <PageError\n        header={localize('We couldn’t find that page')}\n        messages={[\n            localize('You may have followed a broken link, or the page has moved to a new address.'),\n            localize('Error code: {{error_code}} page not found', { error_code: 404 }),\n        ]}\n        redirect_urls={[routes.trade]}\n        redirect_labels={[localize('Return to trade')]}\n        classNameImage='page-404__image'\n        image_url={getUrlBase('/public/images/common/404.png')}\n    />\n);\n\nexport default Page404;\n","import Page404 from './Components/Page404.jsx';\n\nexport default Page404;\n","import { toJS } from 'mobx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { FastMarker } from 'Modules/SmartChart';\n\nconst ChartMarker = ({ marker_config, marker_content_props }) => {\n    const { ContentComponent, ...marker_props } = marker_config;\n\n    // TODO:\n    //  - rename x to epoch\n    //  - rename y to price\n    const onRef = ref => {\n        if (ref) {\n            // NOTE: null price means vertical line.\n            if (!marker_props.y) {\n                const margin = 24; // height of line marker icon\n\n                ref.div.style.height = `calc(100% - ${margin}px)`;\n            } else {\n                ref.div.style.zIndex = '1';\n            }\n            ref.setPosition({\n                epoch: +marker_props.x,\n                price: +marker_props.y,\n            });\n        }\n    };\n\n    return (\n        <FastMarker markerRef={onRef}>\n            <ContentComponent {...toJS(marker_content_props)} />\n        </FastMarker>\n    );\n};\n\nChartMarker.propTypes = {\n    marker_config: PropTypes.object,\n    marker_content_props: PropTypes.object,\n};\n\nexport default ChartMarker;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst BottomWidgets = ({ Widget }) => <div className='bottom-widgets'>{Widget}</div>;\n\nBottomWidgets.propTypes = {\n    Widget: PropTypes.node,\n};\n\nexport default BottomWidgets;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MobileWrapper, Toast, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { findContractCategory } from 'Modules/Trading/Helpers/contract-type';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TContractType = {\n    text: string;\n    value: string;\n};\n\nconst BuyToastNotification = observer(() => {\n    const portal = document.getElementById('popup_root');\n    const { modules } = useStore();\n    const { trade } = modules;\n    const { contract_purchase_toast_box, clearContractPurchaseToastBox } = trade;\n\n    React.useEffect(() => {\n        const timeout = setTimeout(() => {\n            clearContractPurchaseToastBox();\n        }, 4000);\n\n        return () => {\n            clearTimeout(timeout);\n        };\n    }, [clearContractPurchaseToastBox, contract_purchase_toast_box]);\n\n    if (!portal || !contract_purchase_toast_box) return <React.Fragment />;\n\n    const { buy_price, currency, contract_type, list } = contract_purchase_toast_box;\n    const active_trade_type = { value: contract_type };\n\n    const trade_type_name = findContractCategory(list, active_trade_type)?.contract_types?.find(\n        (item: TContractType) => item.value === contract_type\n    ).text;\n\n    return ReactDOM.createPortal(\n        <MobileWrapper>\n            <Toast\n                className='dc-toast-popup-mobile'\n                is_open={!!contract_purchase_toast_box.key}\n                timeout={0}\n                type='notification'\n            >\n                <Text as='p' size='xxs' className='dc-toast__notification'>\n                    <Localize\n                        i18n_default_text='The purchase of <0>{{trade_type_name}} contract</0> has been completed successfully for the amount of <0> {{buy_price}} {{currency}}</0>'\n                        components={[<strong key={0} />]}\n                        values={{ trade_type_name, buy_price, currency }}\n                        shouldUnescape\n                    />\n                </Text>\n            </Toast>\n        </MobileWrapper>,\n        portal\n    );\n});\n\nexport default BuyToastNotification;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DesktopWrapper, MobileWrapper, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { isEnded, isAccumulatorContract, isDigitContract } from '@deriv/shared';\nimport { ChartTitle } from 'Modules/SmartChart';\nimport BuyToastNotification from './buy-toast-notification';\nimport { observer, useStore } from '@deriv/stores';\n\nconst RecentTradeInfo = observer(() => {\n    const { contract_trade } = useStore();\n    const { granularity, filtered_contracts } = contract_trade;\n\n    const latest_tick_contract = filtered_contracts[filtered_contracts.length - 1];\n    if (\n        !latest_tick_contract ||\n        !latest_tick_contract.contract_info.tick_stream ||\n        isAccumulatorContract(latest_tick_contract.contract_info.contract_type)\n    )\n        return null;\n\n    const is_ended = isEnded(latest_tick_contract.contract_info);\n    if (is_ended || granularity !== 0) return null;\n\n    const { contract_type, tick_stream, tick_count } = latest_tick_contract.contract_info;\n    const current_tick = isDigitContract(contract_type) ? tick_stream.length : Math.max(tick_stream.length - 1, 0);\n    return (\n        <Text weight='bold' className='recent-trade-info'>\n            {localize('Tick')} {current_tick}/{tick_count}\n        </Text>\n    );\n});\n\nconst TopWidgets = ({\n    InfoBox,\n    is_mobile,\n    is_title_enabled = true,\n    onSymbolChange,\n    y_axis_width,\n    theme,\n    open_market,\n    open,\n    is_digits_widget_active,\n}) => {\n    const ChartTitleLocal = (\n        <ChartTitle\n            open_market={open_market}\n            open={open}\n            enabled={is_title_enabled}\n            onChange={onSymbolChange}\n            searchInputClassName='data-hj-whitelist'\n            isNestedList={is_mobile}\n            portalNodeId={is_mobile ? 'deriv_app' : undefined}\n        />\n    );\n\n    const portal = ReactDOM.createPortal(\n        <div className={`smartcharts-${theme}`}>\n            <div\n                className='top-widgets-portal'\n                style={{\n                    width: `calc(100% - ${y_axis_width ? y_axis_width + 5 : 0}px)`,\n                }}\n            >\n                {is_mobile && <BuyToastNotification />}\n                {ChartTitleLocal}\n                {!is_digits_widget_active && <RecentTradeInfo />}\n            </div>\n        </div>,\n        document.getElementById('app_contents')\n    );\n\n    return (\n        <React.Fragment>\n            {InfoBox}\n            <MobileWrapper>{portal}</MobileWrapper>\n            <DesktopWrapper>{ChartTitleLocal}</DesktopWrapper>\n        </React.Fragment>\n    );\n};\n\nTopWidgets.propTypes = {\n    InfoBox: PropTypes.node,\n    is_digits_widget_active: PropTypes.bool,\n    is_mobile: PropTypes.bool,\n    is_title_enabled: PropTypes.bool,\n    onSymbolChange: PropTypes.func,\n    open: PropTypes.bool,\n    open_market: PropTypes.object,\n    theme: PropTypes.string,\n    y_axis_width: PropTypes.number,\n};\n\nexport default TopWidgets;\n","import React from 'react';\nimport { getUrlBase, moduleLoader } from '@deriv/shared';\n\nconst Module = moduleLoader(() =>\n    import(/* webpackChunkName: \"smart_chart\", webpackPreload: true */ '@deriv/deriv-charts')\n);\n\nModule.then(({ setSmartChartsPublicPath }) => {\n    setSmartChartsPublicPath(getUrlBase('/js/smartcharts/'));\n});\n\n// React.Lazy expects a default export for the component\n// SmartChart library exports many components\nconst load = component_name => () =>\n    Module.then(module => {\n        return { default: module[component_name] };\n    });\n\nexport const SmartChart = React.lazy(load('SmartChart'));\nexport const ChartTitle = React.lazy(load('ChartTitle'));\n\nexport const ChartSize = React.lazy(load('ChartSize'));\nexport const ChartMode = React.lazy(load('ChartMode'));\nexport const DrawTools = React.lazy(load('DrawTools'));\nexport const Share = React.lazy(load('Share'));\nexport const StudyLegend = React.lazy(load('StudyLegend'));\nexport const Views = React.lazy(load('Views'));\nexport const ToolbarWidget = React.lazy(load('ToolbarWidget'));\n\nexport const FastMarker = React.lazy(load('FastMarker'));\nexport const RawMarker = React.lazy(load('RawMarker'));\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MobileWrapper, Toast } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\n\nexport const ToastPopup = ({ portal_id = 'popup_root', children, className, ...props }) => {\n    if (!document.getElementById(portal_id)) return null;\n    return ReactDOM.createPortal(\n        <Toast className={classNames('dc-toast-popup', className)} {...props}>\n            {children}\n        </Toast>,\n        document.getElementById(portal_id)\n    );\n};\n\n/**\n * Network status Toast components\n */\nconst NetworkStatusToastError = ({ status, portal_id, message }) => {\n    const [is_open, setIsOpen] = React.useState(false);\n\n    if (!document.getElementById(portal_id) || !message) return null;\n\n    if (!is_open && status !== 'online') {\n        setIsOpen(true); // open if status === 'blinker' or 'offline'\n    } else if (is_open && status === 'online') {\n        setTimeout(() => {\n            setIsOpen(false);\n        }, 1500);\n    }\n\n    return ReactDOM.createPortal(\n        <MobileWrapper>\n            <Toast\n                className={classNames({\n                    'dc-toast--blinker': status === 'blinker',\n                })}\n                is_open={is_open}\n                timeout={0}\n                type='error'\n            >\n                {message}\n            </Toast>\n        </MobileWrapper>,\n        document.getElementById(portal_id)\n    );\n};\n\nNetworkStatusToastError.propTypes = {\n    portal_id: PropTypes.string,\n    status: PropTypes.string,\n    message: PropTypes.string,\n};\n\nexport const NetworkStatusToastErrorPopup = observer(() => {\n    const {\n        common: { network_status },\n    } = useStore();\n    return (\n        <NetworkStatusToastError\n            portal_id='popup_root'\n            message={network_status.tooltip}\n            status={network_status.class}\n        />\n    );\n});\n","import React from 'react';\nimport { localize } from '@deriv/translations';\n\nexport const contract_category_icon = {\n    [localize('Ups & Downs')]: 'IcUpsDowns',\n    [localize('Highs & Lows')]: 'IcHighsLows',\n    [localize('Ins & Outs')]: 'IcInsOuts',\n    [localize('Look Backs')]: 'IcLookbacks',\n    [localize('Digits')]: 'IcDigits',\n    [localize('Multipliers')]: 'IcMultiplier',\n    [localize('Accumulators')]: 'IcCatAccumulator',\n};\n\nexport const getContractTypeCategoryIcons = () => ({\n    All: 'IcCatAll',\n    Accumulators: 'IcCatAccumulator',\n    Options: 'IcCatOptions',\n    Multipliers: 'IcCatMultiplier',\n});\n\n/**\n * Returns a list of contracts in the following format:\n * {\n *      label: '', // contract category label\n *      contract_types: [], // list of contract types\n *      icon: '', // contract categoty icon\n * }\n * @param {object} contract_types_list  - list of all contracts\n * @param {array}  unsupported_list - list of unsupported contract types\n */\nexport const getAvailableContractTypes = (contract_types_list, unsupported_list) => {\n    return Object.keys(contract_types_list)\n        .map(key => {\n            const contract_types = contract_types_list[key].categories;\n            const contract_name = contract_types_list[key].name;\n            const available_contract_types = contract_types.filter(type =>\n                type.value &&\n                // TODO: remove this check once all contract types are supported\n                !unsupported_list.includes(type.value)\n                    ? type\n                    : undefined\n            );\n\n            if (available_contract_types.length) {\n                return {\n                    key,\n                    label: contract_name,\n                    contract_types: available_contract_types,\n                    icon: contract_category_icon[contract_name],\n                    component:\n                        contract_name === localize('Accumulators') ? (\n                            <span className='dc-vertical-tab__header--new'>{localize('NEW!')}</span>\n                        ) : null,\n                };\n            }\n            return undefined;\n        })\n        .filter(Boolean);\n};\n\n/**\n * Returns a filtered list\n * @param {object} contract_types_list  - list of all contracts\n * @param {array}  filtered_items_array - list of filtered contract category names and/or contract types names\n */\nexport const getFilteredList = (contract_types_list, filtered_items_array) => {\n    return Object.keys(contract_types_list)\n        .map(key => {\n            const { label, contract_types, icon } = contract_types_list[key];\n\n            const filtered_by_contract_types = contract_types.filter(c =>\n                filtered_items_array.includes(c.text.toLowerCase())\n            );\n\n            const filtered_by_contract_category = filtered_items_array.includes(label.toLowerCase());\n\n            if (filtered_by_contract_types.length) {\n                return {\n                    label,\n                    contract_types: filtered_by_contract_types,\n                    icon,\n                };\n            } else if (filtered_by_contract_category) {\n                return {\n                    label,\n                    contract_types,\n                    icon,\n                };\n            }\n            return undefined;\n        })\n        .filter(Boolean);\n};\n\nconst flatten = arr => [].concat(...arr);\n/**\n * Flatten list object into an array of contract category label and contract types names\n * @param {object} list\n */\nexport const getContractsList = list =>\n    flatten(\n        Object.keys(list).map(\n            k => [\n                list[k].label.toLowerCase(), // contract category names\n                ...list[k].contract_types.map(c => c.text.toLowerCase()),\n            ] // contract types names\n        )\n    );\n\nexport const findContractCategory = (list, item) =>\n    list?.find(list_item => list_item.contract_types.some(i => i.value === item.value)) || {};\n\nexport const getContractCategoryKey = (list, item) => findContractCategory(list, item).key;\n\nexport const getContractTypes = (list, item) => findContractCategory(list, item).contract_types;\n","const digitCategoriesMap = ['even_odd', 'match_diff', 'over_under'];\nconst digitTypesMap = ['DIGITDIFF', 'DIGITMATCH', 'DIGITOVER', 'DIGITUNDER', 'DIGITEVEN', 'DIGITODD'];\n\nexport const isDigitTradeType = trade_type => digitCategoriesMap.includes(trade_type);\nexport const isDigitContractType = contract_type => digitTypesMap.includes(contract_type);\n","import {\n    WS,\n    getPropertyValue,\n    cloneObject,\n    isTimeValid,\n    minDate,\n    toMoment,\n    shouldShowCancellation,\n    getUnitMap,\n    buildBarriersConfig,\n    buildDurationConfig,\n    hasIntradayDurationUnit,\n    buildForwardStartingConfig,\n    unsupported_contract_types_list,\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getLocalizedBasis,\n} from '@deriv/shared';\nimport ServerTime from '_common/base/server_time';\nimport { localize } from '@deriv/translations';\nimport { isSessionAvailable } from './start-date';\n\nexport const ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories = {};\n    let contract_types;\n    const trading_events = {};\n    const trading_times = {};\n    let has_only_forward_starting_contracts = false;\n\n    const buildContractTypesConfig = symbol =>\n        WS.storage.contractsFor(symbol).then(r => {\n            const has_contracts = getPropertyValue(r, ['contracts_for']);\n            has_only_forward_starting_contracts =\n                has_contracts && !r.contracts_for.available.find(contract => contract.start_type !== 'forward');\n            if (!has_contracts || has_only_forward_starting_contracts) return;\n            const contract_categories = getContractCategoriesConfig();\n            contract_types = getContractTypesConfig(symbol);\n            available_contract_types = {};\n            available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n            r.contracts_for.available.forEach(contract => {\n                const type = Object.keys(contract_types).find(\n                    key =>\n                        contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                        (typeof contract_types[key].barrier_count === 'undefined' ||\n                            +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n                );\n\n                if (!type) return; // ignore unsupported contract types\n\n                if (!available_contract_types[type]) {\n                    // extend contract_categories to include what is needed to create the contract list\n                    const sub_cats =\n                        available_categories[\n                            Object.keys(available_categories).find(\n                                key => available_categories[key].categories.indexOf(type) !== -1\n                            )\n                        ].categories;\n\n                    if (!sub_cats) return;\n\n                    sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                    // populate available contract types\n                    available_contract_types[type] = cloneObject(contract_types[type]);\n                }\n                const config = available_contract_types[type].config || {};\n\n                // set config values\n                config.has_spot = config.has_spot || contract.start_type === 'spot';\n                config.durations = !config.hide_duration && buildDurationConfig(contract, config.durations);\n                config.trade_types = buildTradeTypesConfig(contract, config.trade_types);\n                config.barriers = buildBarriersConfig(contract, config.barriers);\n                config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n                config.growth_rate_range = contract.growth_rate_range;\n                config.multiplier_range = contract.multiplier_range;\n                config.cancellation_range = contract.cancellation_range;\n\n                available_contract_types[type].config = config;\n            });\n\n            // cleanup categories\n            Object.keys(available_categories).forEach(key => {\n                available_categories[key].categories = available_categories[key].categories?.filter(\n                    item => typeof item === 'object'\n                );\n                if (available_categories[key].categories?.length === 0) {\n                    delete available_categories[key];\n                }\n            });\n        });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) =>\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0];\n\n    const getContractValues = store => {\n        const {\n            contract_expiry_type,\n            contract_type,\n            basis,\n            duration_unit,\n            expiry_type,\n            multiplier,\n            start_date,\n            cancellation_duration,\n            symbol,\n        } = store;\n\n        if (!contract_type) return {};\n\n        const form_components = getComponents(contract_type);\n        const obj_basis = getBasis(contract_type, basis);\n        const obj_trade_types = getTradeTypes(contract_type);\n        const obj_start_dates = getStartDates(contract_type, start_date);\n        const obj_start_type = getStartType(obj_start_dates.start_date);\n        const obj_barrier = getBarriers(contract_type, contract_expiry_type);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n\n        const obj_accumulator_range_list = getAccumulatorRange(contract_type);\n        const obj_multiplier_range_list = getMultiplierRange(contract_type, multiplier);\n        const obj_cancellation = getCancellation(contract_type, cancellation_duration, symbol);\n        const obj_expiry_type = getExpiryType(obj_duration_units_list, expiry_type);\n        const obj_equal = getEqualProps(contract_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n            ...obj_expiry_type,\n            ...obj_accumulator_range_list,\n            ...obj_multiplier_range_list,\n            ...obj_cancellation,\n            ...obj_equal,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => [...k, ...list[l].categories.map(ct => ct.value)], [])\n            .filter(type => unsupported_contract_types_list.indexOf(type) === -1)\n            .sort((a, b) => (a === 'multiplier' || b === 'multiplier' ? -1 : 0));\n\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = c_type => {\n        let check = [];\n        if (contract_types[c_type]?.config?.should_override) {\n            check = [...contract_types[c_type].components];\n        } else {\n            check = ['duration', 'amount', ...contract_types[c_type].components].filter(\n                component =>\n                    !(\n                        component === 'duration' &&\n                        contract_types[c_type].config &&\n                        contract_types[c_type].config.hide_duration\n                    )\n            );\n        }\n        return (\n            contract_types && {\n                form_components: check,\n            }\n        );\n    };\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => {\n        return {\n            duration_units_list:\n                getPropertyValue(available_contract_types, [\n                    contract_type,\n                    'config',\n                    'durations',\n                    'units_display',\n                    contract_start_type,\n                ]) || [],\n        };\n    };\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units =\n            getPropertyValue(available_contract_types, [\n                contract_type,\n                'config',\n                'durations',\n                'units_display',\n                contract_start_type,\n            ]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max =\n            getPropertyValue(available_contract_types, [\n                contract_type,\n                'config',\n                'durations',\n                'min_max',\n                contract_start_type,\n            ]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getFullContractTypes = () => available_contract_types;\n\n    const getStartType = start_date => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config?.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config?.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date)\n            ? current_start_date\n            : start_dates_list[0]?.value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions = ((config.forward_starting_dates || []).find(option => option.value === start_date) || {})\n            .sessions;\n        return { sessions };\n    };\n\n    const hours = [...Array(24).keys()].map(a => `0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map(a => `0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(\n                minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm')\n            );\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(\n                    hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) ||\n                        compare_moment.format('HH')\n                );\n                compare_moment.minute(\n                    minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) ||\n                        compare_moment.format('mm')\n                );\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const [hour, minute] = isTimeValid(time) ? time.split(':') : [0, 0];\n        return toMoment(date || ServerTime.get())\n            .hour(hour)\n            .minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: start_date ? getValidTime(sessions, buildMoment(start_date, start_time)) : null,\n    });\n\n    const getTradingEvents = async (date, underlying = null) => {\n        if (!date) {\n            return [];\n        }\n        if (!(date in trading_events)) {\n            const trading_times_response = await WS.tradingTimes(date);\n\n            if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n                for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                    const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                    if (submarkets) {\n                        for (let j = 0; j < submarkets.length; j++) {\n                            const symbols = submarkets[j].symbols;\n                            if (symbols) {\n                                for (let k = 0; k < symbols.length; k++) {\n                                    const symbol = symbols[k];\n                                    if (!trading_events[trading_times_response.echo_req.trading_times]) {\n                                        trading_events[trading_times_response.echo_req.trading_times] = {};\n                                    }\n                                    trading_events[trading_times_response.echo_req.trading_times][symbol.symbol] =\n                                        symbol.events;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return trading_events[date][underlying];\n    };\n\n    const getTradingTimes = async (date, underlying = null) => {\n        if (!date) {\n            return [];\n        }\n\n        if (!(date in trading_times)) {\n            const trading_times_response = await WS.tradingTimes(date);\n\n            if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n                for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                    const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                    if (submarkets) {\n                        for (let j = 0; j < submarkets.length; j++) {\n                            const symbols = submarkets[j].symbols;\n                            if (symbols) {\n                                for (let k = 0; k < symbols.length; k++) {\n                                    const symbol = symbols[k];\n                                    if (!trading_times[trading_times_response.echo_req.trading_times]) {\n                                        trading_times[trading_times_response.echo_req.trading_times] = {};\n                                    }\n                                    trading_times[trading_times_response.echo_req.trading_times][symbol.symbol] = {\n                                        open: symbol.times.open,\n                                        close: symbol.times.close,\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return underlying ? trading_times[date][underlying] : trading_times[date];\n    };\n\n    const getExpiryType = (duration_units_list, expiry_type) => {\n        if (duration_units_list) {\n            if (\n                (!expiry_type && duration_units_list.length > 0) ||\n                (duration_units_list.length === 1 && duration_units_list[0].value === 't')\n            ) {\n                return { expiry_type: 'duration' };\n            }\n            if (duration_units_list.length === 0) {\n                return {\n                    expiry_type: null,\n                };\n            }\n        }\n\n        return { expiry_type };\n    };\n\n    const getExpiryDate = (duration_units_list, expiry_date, expiry_type, start_date) => {\n        let proper_expiry_date = null;\n\n        if (expiry_type === 'endtime') {\n            const moment_start = toMoment(start_date);\n            const moment_expiry = toMoment(expiry_date);\n\n            if (!hasIntradayDurationUnit(duration_units_list)) {\n                const is_invalid = moment_expiry.isSameOrBefore(moment_start, 'day');\n                proper_expiry_date = (is_invalid ? moment_start.clone().add(1, 'day') : moment_expiry).format(\n                    'YYYY-MM-DD'\n                );\n            } else {\n                // forward starting contracts should only show today and tomorrow as expiry date\n                const is_invalid =\n                    moment_expiry.isBefore(moment_start, 'day') ||\n                    (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n                proper_expiry_date = (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD');\n            }\n        }\n\n        return { expiry_date: proper_expiry_date };\n    };\n\n    // It has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is at least 5 minute after start time\n    const getExpiryTime = (\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    ) => {\n        let end_time = null;\n\n        if (expiry_type === 'endtime') {\n            let market_close_time = '23:59:59';\n\n            if (market_close_times && market_close_times.length && market_close_times[0] !== '--') {\n                // Some of underlyings (e.g. Australian Index) have two close time during a day so we always select the further one as the end time of the contract.\n                market_close_time = market_close_times.slice(-1)[0];\n            }\n\n            // For contracts with a duration of more that 24 hours must set the expiry_time to the market's close time on the expiry date.\n            if (!start_date && ServerTime.get().isBefore(buildMoment(expiry_date), 'day')) {\n                end_time = market_close_time;\n            } else {\n                const start_moment = start_date ? buildMoment(start_date, start_time) : ServerTime.get();\n                const end_moment = buildMoment(expiry_date, expiry_time);\n\n                end_time = end_moment.format('HH:mm');\n                // When the contract is forwarding, and the duration is endtime, users can purchase the contract within 24 hours.\n                const expiry_sessions = [\n                    {\n                        open: start_moment.clone().add(5, 'minute'), // expiry time should be at least 5 minute after start_time\n                        close: minDate(\n                            start_moment.clone().add(24, 'hour'),\n                            buildMoment(expiry_date, market_close_time)\n                        ),\n                    },\n                ];\n\n                if (!isSessionAvailable(expiry_sessions, end_moment)) {\n                    end_time = getValidTime(expiry_sessions, end_moment.clone(), start_moment.clone());\n                }\n                if (end_moment.isSameOrBefore(start_moment) || end_moment.diff(start_moment, 'minute') < 5) {\n                    const is_end_of_day = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n                    const is_end_of_session =\n                        sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n                    end_time = start_moment.clone().add(is_end_of_day || is_end_of_session ? 0 : 5, 'minutes');\n                    // Set the end_time to be multiple of 5 to be equal as the SELECTED_TIME that shown to the client.\n                    end_time = setMinuteMultipleByFive(end_time).format('HH:mm');\n                }\n                // Set the expiry_time to 5 minute less than start_time for forwading contracts when the expiry_time is null and the expiry_date is tomorrow.\n                if (end_time === '00:00' && start_moment.isBefore(end_moment, 'day')) {\n                    end_time = start_moment.clone().subtract(5, 'minute').format('HH:mm');\n                }\n            }\n        }\n        return { expiry_time: end_time };\n    };\n\n    const setMinuteMultipleByFive = moment_obj => moment_obj.minute(Math.ceil(moment_obj.minute() / 5) * 5);\n\n    const getTradeTypes = contract_type => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type) => {\n        const barriers = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1 = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2 = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1: barrier_1.toString(),\n            barrier_2: barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis = getPropertyValue(available_contract_types, [contract_type, 'basis']) || [];\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => [...cur, { text: localized_basis[bas], value: bas }], []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    const getAccumulatorRange = contract_type => ({\n        accumulator_range_list:\n            getPropertyValue(available_contract_types, [contract_type, 'config', 'growth_rate_range']) || [],\n    });\n\n    const getMultiplierRange = (contract_type, multiplier) => {\n        const arr_multiplier =\n            getPropertyValue(available_contract_types, [contract_type, 'config', 'multiplier_range']) || [];\n\n        return {\n            multiplier_range_list: arr_multiplier.map(m => ({ text: `x${m}`, value: m })),\n            multiplier: getArrayDefaultValue(arr_multiplier, multiplier),\n        };\n    };\n\n    const getCancellation = (contract_type, cancellation_duration, symbol) => {\n        const arr_cancellation_range =\n            getPropertyValue(available_contract_types, [contract_type, 'config', 'cancellation_range']) || [];\n\n        const regex = new RegExp('^([0-9]+)|([a-zA-Z]+)$', 'g');\n        const getText = str => {\n            const [duration, unit] = str.match(regex);\n            const unit_map = getUnitMap();\n            return `${duration} ${unit_map[unit].name_plural}`;\n        };\n\n        const should_show_cancellation = shouldShowCancellation(symbol);\n\n        return {\n            cancellation_duration: getArrayDefaultValue(arr_cancellation_range, cancellation_duration),\n            cancellation_range_list: arr_cancellation_range.map(d => ({ text: `${getText(d)}`, value: d })),\n            ...(should_show_cancellation ? {} : { has_cancellation: false }),\n        };\n    };\n\n    const getEqualProps = contract_type => {\n        const base_contract_type = /^(.*)_equal$/.exec(contract_type)?.[1];\n\n        if (base_contract_type && !available_contract_types[base_contract_type]) {\n            return {\n                is_equal: 1,\n                has_equals_only: true,\n            };\n        }\n        return {};\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getFullContractTypes,\n        getExpiryDate,\n        getExpiryTime,\n        getExpiryType,\n        getSessions,\n        getStartTime,\n        getStartType,\n        getTradingEvents,\n        getTradingTimes,\n        getContractCategories: () => ({\n            contract_types_list: available_categories,\n            has_only_forward_starting_contracts,\n        }),\n    };\n})();\n","import { convertToUnix, getDecimalPlaces, getPropertyValue, isAccumulatorContract, toMoment } from '@deriv/shared';\n\nconst isVisible = elem => !(!elem || (elem.offsetWidth === 0 && elem.offsetHeight === 0));\n\nconst map_error_field = {\n    barrier: 'barrier_1',\n    barrier2: 'barrier_2',\n    date_expiry: 'expiry_date',\n};\n\nexport const getProposalErrorField = response => {\n    const error_field = getPropertyValue(response, ['error', 'details', 'field']);\n    if (!error_field) {\n        return null;\n    }\n    const error_id = map_error_field[error_field] || error_field;\n    const el_error = document.getElementsByName(error_id)[0];\n    return el_error && isVisible(el_error) ? error_id : null;\n};\n\nexport const getProposalInfo = (store, response, obj_prev_contract_basis) => {\n    const proposal = response.proposal || {};\n    const profit = proposal.payout - proposal.ask_price || 0;\n    const returns = (profit * 100) / (proposal.ask_price || 1);\n    const stake = proposal.display_value;\n    const basis_list = store.basis_list;\n\n    const contract_basis = store.is_vanilla\n        ? { text: 'Payout', value: 'number_of_contracts' }\n        : basis_list.find(o => o.value !== store.basis) || {};\n\n    const is_stake = contract_basis.value === 'stake';\n    const price = is_stake ? stake : proposal[contract_basis.value];\n    let has_increased = price > obj_prev_contract_basis.value;\n\n    if (!obj_prev_contract_basis.value || price === obj_prev_contract_basis.value) {\n        has_increased = null;\n    }\n\n    const obj_contract_basis = {\n        text: contract_basis.text || '',\n        value: price || '',\n    };\n\n    const commission = proposal.commission;\n    const cancellation = proposal.cancellation;\n    const accumulators_details = {\n        ...proposal.contract_details,\n        growth_rate: store.growth_rate,\n        spot_time: proposal.spot_time,\n    };\n\n    return {\n        commission,\n        cancellation,\n        id: proposal.id || '',\n        has_error: !!response.error,\n        has_error_details: !!getProposalErrorField(response),\n        error_code: response?.error?.code,\n        error_field: response?.error?.details?.field,\n        has_increased,\n        limit_order: proposal.limit_order,\n        message: proposal.longcode || response.error.message,\n        obj_contract_basis,\n        payout: proposal.payout,\n        profit: profit.toFixed(getDecimalPlaces(store.currency)),\n        returns: `${returns.toFixed(2)}%`,\n        stake,\n        spot: proposal.spot,\n        ...accumulators_details,\n    };\n};\n\nexport const createProposalRequests = store => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach(type => {\n        const new_req = createProposalRequestForContract(store, type);\n        requests[type] = new_req;\n    });\n\n    return requests;\n};\n\nconst setProposalMultiplier = (store, obj_multiplier) => {\n    obj_multiplier.multiplier = store.multiplier;\n    obj_multiplier.cancellation = store.has_cancellation ? store.cancellation_duration : undefined;\n\n    obj_multiplier.limit_order = store.has_take_profit || store.has_stop_loss ? {} : undefined;\n\n    if (store.has_take_profit && store.take_profit) {\n        obj_multiplier.limit_order.take_profit = +store.take_profit || 0; // send positive take_profit to API\n    }\n\n    if (store.has_stop_loss && store.stop_loss) {\n        obj_multiplier.limit_order.stop_loss = +store.stop_loss || 0; // send positive stop_loss to API\n    }\n};\n\nconst setProposalAccumulator = (store, obj_accumulator) => {\n    obj_accumulator.growth_rate = store.growth_rate;\n\n    obj_accumulator.limit_order = store.has_take_profit ? {} : undefined;\n\n    if (store.has_take_profit && store.take_profit) {\n        obj_accumulator.limit_order.take_profit = +store.take_profit || 0; // send positive take_profit to API\n    }\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_accumulator = {};\n    const obj_expiry = {};\n    const obj_multiplier = {};\n\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = toMoment(store.expiry_date);\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), store.expiry_time);\n    }\n\n    if (store.contract_type === 'multiplier') {\n        setProposalMultiplier(store, obj_multiplier);\n    }\n\n    if (store.contract_type === 'accumulator') {\n        setProposalAccumulator(store, obj_accumulator);\n    }\n\n    return {\n        proposal: 1,\n        subscribe: 1,\n        amount: parseFloat(store.amount) || 0,\n        basis: store.basis,\n        contract_type: type_of_contract,\n        currency: store.currency,\n        symbol: store.symbol,\n        ...(store.start_date && { date_start: convertToUnix(store.start_date, store.start_time) }),\n        ...(store.expiry_type === 'duration'\n            ? {\n                  duration: parseInt(store.duration),\n                  duration_unit: store.duration_unit,\n              }\n            : obj_expiry),\n        ...((store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            !isAccumulatorContract(type_of_contract) && {\n                barrier: store.barrier_1 || store.last_digit,\n            }),\n        ...(store.barrier_count === 2 && !isAccumulatorContract(type_of_contract) && { barrier2: store.barrier_2 }),\n        ...obj_accumulator,\n        ...obj_multiplier,\n    };\n};\n","import ServerTime from '_common/base/server_time';\nimport { toMoment } from '@deriv/shared';\n\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = toMoment(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions = [],\n    compare_moment = toMoment(ServerTime.get()),\n    start_moment = toMoment(ServerTime.get()),\n    should_only_check_hour = false\n) =>\n    !isBeforeDate(compare_moment, ServerTime.get(), should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n    (!sessions.length ||\n        !!sessions.find(session =>\n            compare_moment.isBetween(session.open, session.close, should_only_check_hour ? 'hour' : null, '[]')\n        ));\n","import React from 'react';\nimport { useStore } from '@deriv/stores';\nimport TradeStore from './Modules/Trading/trade-store';\n\nconst TraderStoreContext = React.createContext<TradeStore | null>(null);\n\nexport const TraderStoreProvider = ({ children }: React.PropsWithChildren<unknown>) => {\n    const { modules } = useStore();\n    // const memoizedValue = useMemo(() => new TraderStore(), []);\n\n    return <TraderStoreContext.Provider value={modules?.trade}>{children}</TraderStoreContext.Provider>;\n};\n\nexport const useTraderStore = () => {\n    const store = React.useContext(TraderStoreContext);\n\n    if (!store) {\n        throw new Error('useTraderStore must be used within TraderStoreProvider');\n    }\n\n    return store;\n};\n","import { getMarketNamesMap, getContractConfig } from 'Constants/contract';\n\n/**\n * Fetch market information from shortcode\n * @param shortcode: string\n * @returns {{underlying: string, category: string}}\n */\n\n// TODO: Combine with  extractInfoFromShortcode function in shared, both are currently used\nexport const getMarketInformation = shortcode => {\n    const market_info = {\n        category: '',\n        underlying: '',\n    };\n\n    const pattern = new RegExp(\n        '^([A-Z]+)_((1HZ[0-9-V]+)|((CRASH|BOOM)[0-9\\\\d]+[A-Z]?)|(OTC_[A-Z0-9]+)|R_[\\\\d]{2,3}|[A-Z]+)'\n    );\n    const extracted = pattern.exec(shortcode);\n    if (extracted !== null) {\n        market_info.category = extracted[1].toLowerCase();\n        market_info.underlying = extracted[2];\n    }\n\n    return market_info;\n};\n\nexport const getMarketName = underlying => (underlying ? getMarketNamesMap()[underlying.toUpperCase()] : null);\n\nexport const getTradeTypeName = category => (category ? getContractConfig()[category.toUpperCase()]?.name : null);\n","const PromiseClass = require('../utility').PromiseClass;\n\nconst ServerTime = (() => {\n    let clock_started = false;\n    const pending = new PromiseClass();\n    let common_store;\n\n    const init = store => {\n        if (!clock_started) {\n            common_store = store;\n            pending.resolve(common_store.server_time);\n            clock_started = true;\n        }\n    };\n\n    const get = () => (clock_started && common_store.server_time ? common_store.server_time.clone() : undefined);\n\n    return {\n        init,\n        get,\n        timePromise: () => (clock_started ? Promise.resolve(common_store.server_time) : pending.promise),\n    };\n})();\n\nmodule.exports = ServerTime;\n","const template = (string, content) => {\n    let to_replace = content;\n    if (content && !Array.isArray(content)) {\n        to_replace = [content];\n    }\n    return string.replace(/\\[_(\\d+)]/g, (s, index) => to_replace[+index - 1]);\n};\n\n/**\n * Creates a DOM element and adds any attributes to it.\n *\n * @param {String} tag_name: the tag to create, e.g. 'div', 'a', etc\n * @param {Object} attributes: all the attributes to assign, e.g. { id: '...', class: '...', html: '...', ... }\n * @return the created DOM element\n */\nconst createElement = (tag_name, attributes = {}) => {\n    const el = document.createElement(tag_name);\n    Object.keys(attributes).forEach(attr => {\n        const value = attributes[attr];\n        if (attr === 'text') {\n            el.textContent = value;\n        } else if (attr === 'html') {\n            el.html(value);\n        } else {\n            el.setAttribute(attr, value);\n        }\n    });\n    return el;\n};\n\nlet static_hash;\nconst getStaticHash = () => {\n    static_hash =\n        static_hash || (document.querySelector('script[src*=\"main\"]').getAttribute('src') || '').split('.')[1];\n    return static_hash;\n};\n\nclass PromiseClass {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.reject = reject;\n            this.resolve = resolve;\n        });\n    }\n}\n\nmodule.exports = {\n    template,\n    createElement,\n    getStaticHash,\n    PromiseClass,\n};\n"],"names":["createContext","QueryClient","name","useState","is_loading","setIsLoading","is_subscribed","setSubscribed","error","setError","data","setData","subscriber","useRef","WS","useWS","subscribe","useCallback","props","prop","payload","undefined","current","response","e","unsubscribe","useEffect","store","useContext","StoreContext","Error","ExchangeRatesProvider","observer","children","useSubscription","update","useStore","exchange_rates","base_currency","prev","merge","BaseStore","onHydrationDone","makeObservable","this","observable","action","unmount","makePersistable","properties","storage","window","localStorage","then","Function","stopPersisting","ExchangeRatesStore","FLAGS","foo","bar","baz","FeatureFlagsStore","Object","keys","length","old","forEach","flag","memoizedValue","useMemo","is_mock","feature_flags","values","value","BounceUp","animate","y","opacity","initial","transition","type","stiffness","damping","duration","Bounce","className","is_visible","keyname","motion","key","propTypes","PropTypes","SlideInFromTop","SlideInFromBottom","SlideIn","PositionsCardLoader","speed","height","width","backgroundColor","foregroundColor","x","rx","ry","TradeParamsLoader","MobileWrapper","viewBox","DesktopWrapper","addCommaToNumber","num","decimal_places","isNaN","n","String","toFixed","p","indexOf","replace","m","i","getBarrierLabel","contract_info","isDigitType","contract_type","localize","isVanillaContract","getBarrierValue","digitTypeMap","barrier","test","toLowerCase","DIGITDIFF","DIGITEVEN","DIGITMATCH","DIGITODD","DIGITOVER","DIGITUNDER","filterByContractType","trade_contract_type","shortcode","is_call_put","isCallPut","is_high_low","isHighLow","is_vanilla","trade_types","getContractTypesConfig","match","includes","is_invisible","theme","id","classNames","invisible","Array","from","map","_x","inx","ChartLoader","is_dark","findRouteByPath","path","routes_config","result","some","route_info","match_path","matchPath","message","routes","Text","color","size","Icon","icon","align","PositionsDrawerCardItem","portfolio_position","row","measure","onHoverPosition","symbol","is_new_row","in_prop","useNewRowTransition","React","is_sold","CSSTransition","in","timeout","appear","enter","enterDone","exit","onEntered","unmountOnExit","PositionsDrawerCard","onMouseEnter","onMouseLeave","onFooterEntered","should_show_transition","PositionsDrawer","useTraderStore","client","common","contract_trade","portfolio","ui","currency","server_time","getContractById","all_positions","onMount","onClickCancel","onClickSell","onClickRemove","removePositionById","is_mobile","is_positions_drawer_on","toggleDrawer","togglePositionsDrawer","addToast","current_focus","removeToast","setCurrentFocus","should_show_cancellation_warning","toggleCancellationWarning","toggleUnsupportedContractModal","drawer_ref","list_ref","scrollbar_ref","scrollTo","scrollToTop","positions","filter","underlying","body_content","DataList","data_source","rowRenderer","args","keyMapper","row_gap","weight","onClick","ref","NavLink","to","onChangeContractUpdate","onClickContractUpdate","getTradingTimes","target_time","api_initial_load_error","getSymbol","target_symbol","trading_times","markets","submarkets","j","symbols","find","item","calculateTimeLeft","remaining_time_to_open","difference","Date","now","days","Math","floor","hours","minutes","seconds","MarketCountdownTimer","is_main_page","setIsTimerLoading","onMarketOpen","active_symbols","isMounted","useIsMounted","when_market_opens","setWhenMarketOpens","time_left","setTimeLeft","setLoading","isMarketClosed","whenMarketOpens","days_offset","target_date","moment","add","format","api_response","times","open","close","date_str","toISOString","substring","getUTCDate","hour","opening_time","timer","setTimeout","clearTimeout","timer_components","toString","padStart","opening_time_banner","formatted_opening_time","convertTimeFormat","opening_date","opening_day","as","line_height","Localize","i18n_default_text","components","MarketIsClosedOverlay","is_eu","is_synthetics_trading_market_available","is_timer_loading","btn_lbl","Button","text","primary","styles","container","fontSize","lineHeight","position","zIndex","background","padding","marginTop","display","overflowY","prop_name","tabs","textAlign","marginBottom","tab","border","Test","stores","trade_store","test_stores","trade","entries","setIsVisible","setStore","document","addEventListener","stateVisibility","removeEventListener","ctrlKey","keyCode","style","fontWeight","sort","k","v","JSON","stringify","toJS","symbolChange","onSymbolChange","target","DigitsWidget","digits","tick","onDigitChange","onChange","trade_type","selected_digit","last_digit","last_contract","digits_info","display_status","is_digit_contract","is_ended","Digits","digits_array","is_trade_page","ChartTopWidgets","yAxiswidth","charts_ref","is_digits_widget_active","open_market","is_dark_mode_on","chart","isMobile","y_axis_width","ChartBottomWidgets","show_accumulators_stats","Widget","AccumulatorsStats","Screen","Loadable","loader","loading","render","loaded","Component","FormLayout","is_market_closed","is_trade_enabled","ACTIONS","AccumulatorsProfitLossText","current_spot","current_spot_time","profit","is_fading_in","setIsFadingIn","is_sliding","setIsSliding","prev_profit_tenth","split","current_profit_tenth","setCurrentProfitTenth","profit_tenth_ref","interval_id_ref","fading_in_timeout_id","sliding_timeout_id","profit_portions_array","profit_whole_number","profit_tenth","profit_hundredths","slice","won","sign","runThroughTenthDigit","interval_ms","start","end","clearInterval","interval_id","setInterval","abs","delta","markerRef","setPosition","epoch","price","AccumulatorsProfitLossTooltip","alignment","exit_tick","exit_tick_time","high_barrier","should_show_profit_text","is_tooltip_open","setIsTooltipOpen","tooltip_timeout","onCloseDelayed","onHoverOrTapHandler","opposite_arrow_position","horizontal","el","onTouchStart","onTouchEnd","AccumulatorsChartElements","has_crossed_accu_barriers","accumulators_positions","contract_id","marker_config","ContentComponent","marker_content_props","ToolbarWidgets","updateChartType","updateGranularity","portalNodeId","onChartType","onGranularity","isDesktop","searchInputClassName","BottomWidgetsMobile","setTick","setDigits","Trade","form_components","getFirstOpenMarket","should_show_active_symbols_loading","is_chart_loading","onUnmount","prepareTradeStore","setContractTypes","setMobileDigitView","show_digits_stats","is_accumulator","is_synthetics_available","NotificationMessages","notification_messages_ui","is_market_unavailable_visible","has_only_forward_starting_contracts","should_show_multipliers_onboarding","is_dark_theme","network_status","try_synthetic_indices","setTrySyntheticIndices","try_open_markets","setTryOpenMarkets","category","setCategory","subcategory","setSubcategory","setIsDigitsWidgetActive","setMarket","markets_to_search","market_cat","market_subcat","selectMultipliers","bottomWidgets","d","t","onTryOtherMarkets","topWidgets","params","form_wrapper_class","Div100vhContainer","is_disabled","height_offset","fallback","ChartTrade","SwipeableWrapper","index","SmartChartWithRef","SmartChart","innerRef","end_epoch","accumulator_barriers_data","chart_type","granularity","markers_array","is_chart_layout_default","is_chart_countdown_visible","is_socket_opened","current_language","should_show_eu_content","chartStateChange","main_barrier","main_barrier_flattened","extra_barriers","barriers_flattened","exportLayout","setChartStatus","chart_layout","wsForget","wsForgetStream","wsSendRequest","wsSubscribe","has_alternative_source","refToAddTick","settings","assetInformation","countdown","isHighestLowestMarkerEnabled","language","accumulators_high_barrier","barriers","max_ticks","crosshair","crosshairTooltipLeftAllow","showLastDigitStats","chartControlsWidgets","chartStatusListener","chartType","initialData","activeSymbols","parse","chartData","feedCall","enabledNavigationWidget","enabledChartFooter","maxTick","requestAPI","requestForget","requestForgetStream","requestSubscribe","allowTickChartTypeOnly","stateChangeListener","isConnectionOpened","clearChart","toolbarWidget","importedLayout","onExportLayout","shouldFetchTradingTimes","hasAlternativeSource","getMarketsOrder","synthetic_index","has_synthetic_index","s","market","a","b","display_name","reduce","arr","push","yAxisMargin","top","isLive","leftMargin","routesConfig","ContractDetails","moduleLoader","route_default","component","getTitle","is_authenticated","exact","BinaryLink","active_class","normalizePath","route","getRoutesConfig","activeClassName","Route","pathname","removeBranchName","location","is_valid_route","lastIndexOf","r","validateRoute","Redirect","is_logging_in","is_logged_in","redirectToLogin","getLanguage","default_subroute","has_default_subroute","isEmptyObject","title","default_title","alternateLinkTagChange","canonicalLinkTagChange","Switch","idx","checkRoutingMatch","route_list","tradePageMountingMiddleware","path_from","path_to","match_patterns","callback","pattern","UILoader","Routes","history","passthrough","setTradeMountingPolicy","setSkipPrePostLifecycle","has_error","onUnmountPortfolio","setPromptHandler","route_to","flatMap","subroute","has_match","withRouter","ResultMobile","is_contract_won","PositionsModalCard","contract_update","current_tick","indicative","is_sell_requested","is_unsupported","profit_loss","sell_price","status","togglePositions","loader_el","is_multiplier","isMultiplierContract","isAccumulatorContract","is_crypto","isCryptoContract","has_progress_slider","has_ended","getEndTime","fallback_result","total_profit","getTotalProfit","should_show_sell","hasContractEntered","isOpen","getSymbolDisplayName","getMarketInformation","contract_options_el","ContractCard","getContractTypeDisplay","multiplier","getCardLabels","CurrencyBadge","isCryptocurrency","Money","amount","buy_price","payout","ProgressSliderMobile","start_time","date_start","expiry_time","date_expiry","ticks_count","tick_count","contract_vanilla_el","bid_price","entry_spot","TOTAL_PROFIT_LOSS","custom_card_header","custom_card_body","is_positions","custom_card_footer","custom_contract_el","should_show_result_overlay","contract_el","getContractPath","duration_unit","exit_spot","is_valid_to_sell","sell_time","TogglePositions","positions_count","is_open","positions_toggle_class","data_testid","active_positions_count","disableApp","enableApp","is_empty","filtered_positions","closeModal","TransitionGroup","Modal","toggleModal","is_vertical_top","has_close_icon","positions_currency","positions_error","onPositionsSell","onPositionsRemove","onPositionsCancel","symbol_positions","modules","populateHeaderExtensions","onMountPositions","is_populating_account_list","cashier","general_store","onMountCashier","onMountCommon","setAccountSwitchListener","show_positions_toggle","show_component","populateHeaderfunction","header_items","waitForLogin","when","TradeFooterExtensions","populateFooterExtensions","populateFooter","TogglePositionsIcon","ChartSettingContainer","populateSettingsExtensions","populateSettings","menu_items","label","renderItemValue","onChangeSymbolAsync","ContractType","getValidationRules","rules","min","barrier_1","condition","barrier_count","func","options","inputs","barrier_2","input","trigger","start_date","expiry_date","contract_start_type","isTimeValid","isHourValid","isMinuteValid","start_moment","toMoment","start_moment_clone","clone","h","isSessionAvailable","sessions","minute","getMultiplierValidationRules","stop_loss","has_stop_loss","take_profit","has_take_profit","processPurchase","proposal_id","onChangeContractTypeList","contract_types_list","onChangeContractType","onChangeExpiry","contract_expiry_type","getExpiryType","duration_min_max","assertDuration","getDurationMinMaxValues","max","onChangeStartDate","root_store","expiry_type","obj_contract_start_type","obj_sessions","obj_start_time","obj_duration_units_list","duration_units_list","obj_duration_unit","obj_expiry_type","obj_expiry_date","obj_duration_min_max","obj_market_open_times","market_open_times","obj_market_close_times","market_close_times","obj_expiry_time","processInSequence","functions","snapshot","getSnapshot","assign","updateStore","processTradeParams","new_state","getMethodsList","duration_functions","getExpiryMethodsList","ContractTypeHelper","StartDate","Duration","CONTRACT_SHADES","CALL","PUT","CALLE","PUTE","EXPIRYRANGE","EXPIRYMISS","RANGE","UPORDOWN","ONETOUCH","NOTOUCH","ASIANU","ASIAND","MULTUP","MULTDOWN","ACCU","DEFAULT_SHADES","BARRIER_COLORS","BARRIER_LINE_STYLES","errors","attribute","has","prototype","hasOwnProperty","call","error_count","rule","is_rule_string","rule_object","validator","getPreBuildDVRs","error_message","template","name1","name2","ruleObject","Validator","getRuleObject","is_valid","is_ok","addFailure","check","validation_errors","validation_rules","preSwitchAccountDisposer","pre_switch_account_listener","switchAccountDisposer","switch_account_listener","logoutDisposer","logout_listener","clientInitDisposer","client_init_listener","networkStatusChangeDisposer","network_status_change_listener","themeChangeDisposer","theme_change_listener","realAccountSignupEndedDisposer","real_account_signup_ended_listener","partial_fetch_time","retrieveFromStorage","setValidationErrorMessages","setValidationRules","addRule","validateProperty","validateAllProperties","onSwitchAccount","onPreSwitchAccount","onLogout","onClientInit","onNetworkStatusChange","onThemeChange","onRealAccountSignupEnd","disposePreSwitchAccount","disposeSwitchAccount","disposeLogout","disposeClientInit","disposeNetworkStatusChange","disposeThemeChange","disposeRealAccountSignupEnd","assertHasValidCache","local_storage_properties","session_storage_properties","store_name","defineProperty","enumerable","writable","setupReactionForLocalStorage","setupReactionForSessionStorage","reaction","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","setItem","sessionStorage","local_storage_snapshot","getItem","session_storage_snapshot","propertyName","messages","concat","property","intercept","change","newValue","isPassed","get","listener","switch_broadcast","switchEndSignal","isProduction","console","pre_switch_broadcast","setPreSwitchAccount","has_logged_out","setLogout","initialized_broadcast","setInitialized","is_network_online","is_online","has_real_account_signup_ended","setRealAccountSignupEnd","loginid","reactions","act","freeze","Symbol","removeBarrier","findIndex","splice","ChartBarrierStore","low_barrier","onChartBarrierChange","line_style","not_draggable","lineStyle","shade","shadeColor","high","low","relative","draggable","hidePriceLines","hideBarrierLine","hideOffscreenLine","updateBarriers","updateBarrierShade","onBarrierChange","updateBarrierColor","computed","default_shade","bind","has_barrier","should_display","is_relative","barriers_list","barriersToString","is_dark_mode","LIMIT_ORDER_TYPES","STOP_OUT","TAKE_PROFIT","STOP_LOSS","setLimitOrderBarriers","is_over","limit_order","isLimitOrderBarrierSupported","limit_orders","obj_limit_order","obj_barrier","showOffscreenArrows","isSingleBarrier","opacityOnOverlap","l","g_subscribers_map","TradeStore","is_trade_component_mounted","is_purchase_enabled","is_equal","has_equals_only","previous_symbol","basis","basis_list","stake_boundary","VANILLALONGCALL","VANILLALONGPUT","expiry_epoch","strike_price_choices","Number","start_dates_list","is_mobile_digit_view_selected","proposal_info","purchase_info","accumulator_range_list","growth_rate","maximum_payout","maximum_ticks","ticks_history_stats","tick_size_barrier","multiplier_range_list","has_cancellation","commission","cancellation_price","stop_out","expiration","hovered_contract_type","cancellation_duration","cancellation_range_list","vanilla_trade_type","is_trade_params_expanded","contract_purchase_toast_box","addTickByProposal","debouncedProposal","debounce","requestProposal","proposal_requests","is_purchasing_contract","initial_barriers","is_initial_barrier_applied","should_skip_prepost_lifecycle","clearContracts","contracts","setMainBarrier","isBarrierSupported","onPurchase","disablePurchaseButtons","el_purchase_value","getElementsByClassName","el_purchase_buttons","classList","prev_chart_layout","req","current_spot_data","quote","prices","echo_req","ticks_history","updateAccumulatorBarriersData","stream_id","time","ServerTime","msg_type","unix","setDefaultGrowthRate","accountSwitcherListener","barrier_pipsize","changeDurationValidationRules","clearLimitOrderBarriers","clearPurchaseInfo","clientInitListener","enablePurchase","forgetAllProposal","initAccountCurrency","is_symbol_in_active_symbols","loadActiveSymbols","logoutListener","manageMxMltRemovalNotification","networkStatusChangeListener","onAllowEqualsChange","onChangeMultiple","onHoverPurchase","onProposalResponse","override","preSwitchAccountListener","pushPurchaseDataToGtm","refresh","resetAccumulatorData","resetErrorServices","resetPreviousSymbol","setActiveSymbols","setAllowEqual","setDefaultSymbol","setIsTradeParamsExpanded","setMarketStatus","setPreviousSymbol","setPurchaseSpotBarrier","setStakeBoundary","setStrikeChoices","setTradeStatus","themeChangeListener","updateLimitOrderBarriers","updateSymbol","clearContractPurchaseToastBox","setContractPurchaseToastbox","date","resetEndTimeOnVolatilityIndices","setContractType","symbol_info","exchange_is_open","clearAccumulatorBarriersData","should_skip","should_set_default_symbol","should_show_loading","code","pickDefaultSymbol","symbol_to_update","processNewValuesAsync","runInAction","is_on_mf_account","landing_company_shortcode","hide_close_mx_mlt_storage_flag","parseInt","clients_country","showError","showUnavailableLocationError","can_have_mx_account","can_have_mlt_account","showMxMltUnavailableError","showDigitalOptionsUnavailableError","platform_name_trader","getPlatformSettings","link","platform_name_mt5","contract_categories","setSelectedContractType","default_currency","selectCurrency","purchase_spot_barrier","hideOffscreenBarrier","getBarrierPipSize","isDigitTradeType","is_tick_contract","setServicesError","services_error","buy","contract_data","longcode","extractInfoFromShortcode","isDigitContractType","toUpperCase","addContract","onBuyResponse","openPositionsDrawer","is_unwelcome","cloneObject","is_changed_by_user","obj_old_values","should_forget_first","obj_new_values","prev_chart_type","prev_granularity","savePreviousChartMode","prev_currency","has_currency_changed","should_reset_stake","getMinPayout","setHasOnlyForwardingContracts","is_advanced_duration","bool","event","bom_ui","contract","barrier1","barrier2","positions_drawer","toolbar_position","chart_asset_info","is_chart_asset_info_visible","gtm","pushDataLayer","requests","createProposalRequests","resetPurchaseStates","prev_proposal_info","getPropertyValue","obj_prev_contract_basis","proposal","is_crypto_multiplier","getProposalInfo","cancellation","ask_price","order_amount","barrier_spot_distance","ticks_stayed_in","last_tick_epoch","spot_time","previous_ticks_history_stats","new_ticks_history_stats","previous_history","previous_epoch","reverse","getUpdatedTicksHistoryStats","accumulators_low_barrier","error_id","getProposalErrorField","details","commission_match","field","barrier_choices","max_stake","min_stake","limits","duration_options","convertDurationLimit","is_language_changing","Promise","resolve","toggleServicesErrorModal","notifications","setShouldShowPopups","addNotificationMessage","client_notifications","notification_messages","unmarkNotificationMessage","get_notification_messages","has_iom_account","has_malta_account","hidden_close_account_notification","close_mx_mlt_account","new_currency","is_notifications_visible","toggleNotificationsModal","is_used","layout","previousMaxTicks","isDone","state","option","market_close_prop","list","getAvailableContractTypes","unsupported_contract_types_list","formatMoney","getCurrencyDisplayCode","findFirstOpenMarket","strike_prices","ModulesStore","core_store","RootStore","pushwoosh","contract_replay","chart_barrier_store","configure","enforceActions","websocket","setWebsocket","TradeModals","initStore","APPLY","BUY_PRICE","CANCEL","CLOSE","CONTRACT_VALUE","CURRENT_STAKE","DAY","DAYS","DEAL_CANCEL_FEE","DECREMENT_VALUE","DONT_SHOW_THIS_AGAIN","ENTRY_SPOT","INCREMENT_VALUE","NOT_AVAILABLE","RESALE_NOT_OFFERED","SELL","STAKE","STRIKE","TICK","TICKS","PROFIT_LOSS","POTENTIAL_PROFIT_LOSS","INDICATIVE_PRICE","INITIAL_STAKE","LOST","PAYOUT","PURCHASE_PRICE","POTENTIAL_PAYOUT","TAKE_PROFIT_LOSS_NOT_AVAILABLE","WON","getMarketNamesMap","FRXAUDCAD","FRXAUDCHF","FRXAUDJPY","FRXAUDNZD","FRXAUDPLN","FRXAUDUSD","FRXBROUSD","FRXEURAUD","FRXEURCAD","FRXEURCHF","FRXEURGBP","FRXEURJPY","FRXEURNZD","FRXEURUSD","FRXGBPAUD","FRXGBPCAD","FRXGBPCHF","FRXGBPJPY","FRXGBPNOK","FRXGBPUSD","FRXNZDJPY","FRXNZDUSD","FRXUSDCAD","FRXUSDCHF","FRXUSDJPY","FRXUSDNOK","FRXUSDPLN","FRXUSDSEK","FRXXAGUSD","FRXXAUUSD","FRXXPDUSD","FRXXPTUSD","OTC_AEX","OTC_AS51","OTC_DJI","OTC_FCHI","OTC_FTSE","OTC_GDAXI","OTC_HSI","OTC_IBEX35","OTC_N225","OTC_NDX","OTC_SPC","OTC_SSMI","OTC_SX5E","R_10","R_25","R_50","R_75","R_100","BOOM300N","BOOM500","BOOM1000","CRASH300N","CRASH500","CRASH1000","RDBEAR","RDBULL","STPRNG","WLDAUD","WLDEUR","WLDGBP","WLDXAU","WLDUSD","JD10","JD25","JD50","JD75","JD100","JD150","JD200","CRYBCHUSD","CRYBNBUSD","CRYBTCLTC","CRYIOTUSD","CRYNEOUSD","CRYOMGUSD","CRYTRXUSD","CRYBTCETH","CRYZECUSD","CRYXMRUSD","CRYXMLUSD","CRYXRPUSD","CRYBTCUSD","CRYDSHUSD","CRYETHUSD","CRYEOSUSD","CRYLTCUSD","getContractConfig","button_name","getSupportedContracts","RESETCALL","RESETPUT","TICKHIGH","TICKLOW","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","CALLSPREAD","PUTSPREAD","RUNHIGH","RUNLOW","show_button_name","contract_config","getContractTypePosition","TicksHistoryCounter","has_progress_dots","should_highlight_last_counter","should_emphasize_last_counter","dot","ExpandedTicksHistory","history_text_size","rows","counter","AccumulatorsStatsManualModal","icon_classname","is_manual_open","toggleManual","getVideoSource","extension","getUrlBase","mp4_src","webm_src","should_header_stick_body","Loading","is_fullscreen","autoPlay","loop","onLoadedData","playsInline","preload","src","ROW_SIZES","is_expandable","is_collapsed","setIsCollapsed","setIsManualOpen","widget_title","acc","_el","desktop_row_size","mobile_row_size","row_size","MobileDialog","onClose","portal_element_id","visible","wrapper_classname","Digit","is_latest","is_lost","is_selected","is_won","percentage","display_percentage","parseFloat","DigitSpot","is_selected_winning","LastDigitStat","is_max","is_min","w","cx","cy","fill","stroke","strokeWidth","strokeOpacity","strokeDasharray","strokeDashoffset","DigitDisplay","has_entry_spot","onSelect","latest_digit","stats","onLastDigitSpot","digit","spot","is_digit_selectable","is_digit_selected","LastDigitPointer","transform","left","custom_color","display_array","LastDigitPrediction","dimension","digit_offset","digit_offset_mobile","handleSelect","digit_value","isSelectableDigitType","getOffset","last_contract_digit","latest_tick_pip_size","pip_size","latest_tick_ask_price","ask","latest_tick_digit","pop","barrier_map","val","DigitsWrapper","onChangeStatus","has_contract","is_tick_ready","is_contract_elapsed","isContractElapsed","tick_stream","bid","tick_display_value","entry_tick","underlying_name","setStatus","setCurrentTick","setSpot","setIsSelectedWinning","setIsLatest","setIsWon","setIsLost","Popover","classNameBubble","margin","displayName","PageError","header","error_code","redirect_urls","redirect_labels","classNameImage","image_url","ChartMarker","marker_props","div","BottomWidgets","portal","getElementById","active_trade_type","trade_type_name","findContractCategory","contract_types","ReactDOM","Toast","shouldUnescape","RecentTradeInfo","filtered_contracts","latest_tick_contract","isEnded","isDigitContract","TopWidgets","InfoBox","is_title_enabled","ChartTitleLocal","enabled","isNestedList","Module","setSmartChartsPublicPath","load","component_name","module","default","ChartTitle","ChartMode","DrawTools","Share","StudyLegend","Views","ToolbarWidget","FastMarker","ToastPopup","portal_id","NetworkStatusToastError","setIsOpen","NetworkStatusToastErrorPopup","tooltip","contract_category_icon","getContractTypeCategoryIcons","All","Accumulators","Options","Multipliers","unsupported_list","categories","contract_name","available_contract_types","Boolean","list_item","getContractCategoryKey","getContractTypes","digitCategoriesMap","digitTypesMap","available_categories","trading_events","buildTradeTypesConfig","getArrayDefaultValue","getComponents","getDurationUnitsList","getDurationUnit","getDurationMinMax","getStartType","getStartDates","getValidTime","buildMoment","setMinuteMultipleByFive","getTradeTypes","getBarriers","getBasis","getAccumulatorRange","getMultiplierRange","getCancellation","getEqualProps","contract_display","arr_new_values","c_type","config","should_override","hide_duration","duration_units","arr_units","obj","current_start_date","has_spot","forward_starting_dates","compare_moment","moment_obj","ceil","arr_basis","localized_basis","getLocalizedBasis","cur","bas","arr_multiplier","arr_cancellation_range","regex","RegExp","should_show_cancellation","shouldShowCancellation","str","unit","unit_map","getUnitMap","name_plural","base_contract_type","exec","buildContractTypesConfig","has_contracts","contracts_for","available","start_type","getContractCategoriesConfig","sub_cats","durations","buildDurationConfig","buildBarriersConfig","buildForwardStartingConfig","growth_rate_range","multiplier_range","cancellation_range","barrier_values","count","getContractType","arr_list","ct","getContractValues","obj_basis","obj_trade_types","obj_start_dates","obj_start_type","obj_duration_units_min_max","obj_accumulator_range_list","obj_multiplier_range_list","obj_cancellation","obj_equal","getFullContractTypes","getExpiryDate","proper_expiry_date","moment_start","moment_expiry","hasIntradayDurationUnit","isBefore","isAfter","isSameOrBefore","getExpiryTime","end_time","market_close_time","end_moment","expiry_sessions","minDate","diff","is_end_of_day","is_end_of_session","subtract","getSessions","getStartTime","getTradingEvents","trading_times_response","events","getContractCategories","map_error_field","error_field","elem","el_error","getElementsByName","offsetWidth","offsetHeight","returns","stake","display_value","contract_basis","o","has_increased","obj_contract_basis","accumulators_details","contract_details","has_error_details","getDecimalPlaces","new_req","createProposalRequestForContract","type_of_contract","obj_accumulator","obj_expiry","obj_multiplier","convertToUnix","setProposalMultiplier","setProposalAccumulator","isBeforeDate","should_only_check_hour","now_moment","second","session","isBetween","TraderStoreContext","TraderStoreProvider","Provider","market_info","extracted","common_store","clock_started","pending","PromiseClass","require","init","timePromise","promise","exports","static_hash","reject","string","content","to_replace","isArray","createElement","tag_name","attributes","attr","textContent","html","setAttribute","getStaticHash","querySelector","getAttribute"],"sourceRoot":""}