/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
/**
 * Define Breakpoints here.
 */
/* @define account-signup; weak */
.account-signup {
  padding: 1.2rem 1.2rem 0; }
  @media (min-width: 320px) and (max-width: 767px) {
    .account-signup form {
      max-height: 36.5rem; } }
  .account-signup .dc-select-native__placeholder {
    background-color: var(--general-main-2); }
  .account-signup .signup-separator-container {
    width: calc(100% + 40px);
    border-bottom: 1px solid var(--general-section-1);
    margin: 2.4rem 0 1.4rem; }
    @media (min-width: 320px) and (max-width: 767px) {
      .account-signup .signup-separator-container {
        display: none; } }
  .account-signup__dialog .dc-dialog__content {
    margin-bottom: 0; }
  .account-signup__error-wrapper {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-gap: 0.8rem;
    margin: 0; }
    @media (min-width: 320px) and (max-width: 767px) {
      .account-signup__error-wrapper {
        margin-left: 0;
        margin-left: initial; } }
  .account-signup__residence-selection, .account-signup__password-selection {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-flow: nowrap column;
    background-color: var(--general-main-2);
    border-radius: 1rem;
    position: relative;
    left: 50%;
    transform: translate(-50%); }
    @media (min-width: 320px) and (max-width: 767px) {
      .account-signup__residence-selection, .account-signup__password-selection {
        width: calc(90vw - 10px);
        padding: 6rem 4rem;
        background-color: var(--general-main-2); } }
  .account-signup__same-citizenship {
    display: flex;
    justify-content: space-between; }
    .account-signup__same-citizenship-buttons {
      display: flex;
      gap: 1rem; }
  .account-signup .dc-password-input__visibility-icon {
    background-color: var(--general-main-2); }
  .account-signup__residence-selection .dc-select-native {
    margin-bottom: 2.5rem; }
  @media (min-width: 320px) and (max-width: 767px) {
    .account-signup__residence-selection {
      height: 100%; }
      .account-signup__residence-selection .dc-select-native {
        margin-bottom: 4.8rem; } }
  .account-signup__password-selection .account-signup__heading {
    padding-top: 1.5rem;
    margin-bottom: 4.3rem; }
    @media (min-width: 320px) and (max-width: 767px) {
      .account-signup__password-selection .account-signup__heading {
        padding-top: 0;
        text-align: center;
        margin-top: -3rem; } }
  .account-signup__password-selection .dc-password-meter__container {
    max-height: 4rem;
    margin-bottom: 3.3rem; }
    @media (min-width: 1024px) {
      .account-signup__password-selection .dc-password-meter__container {
        width: calc(100% - 3.2rem); } }
    @media (min-width: 320px) and (max-width: 767px) {
      .account-signup__password-selection .dc-password-meter__container {
        width: 100%; } }
  .account-signup__password-selection .dc-field--error {
    top: 4.4rem; }
  @media (min-width: 320px) and (max-width: 767px) {
    .account-signup__password-selection .initial-loader__barspinner {
      margin: 0; } }
  .account-signup__heading {
    margin-bottom: 2.4rem; }
    .account-signup__heading-citizen {
      margin-bottom: 1.6rem; }
    @media (min-width: 320px) and (max-width: 767px) {
      .account-signup__heading {
        margin-top: -7rem; } }
  .account-signup__text {
    text-align: center;
    margin-bottom: 2.4rem; }
  .account-signup__subtext {
    margin: 0; }
    @media (min-width: 320px) and (max-width: 767px) {
      .account-signup__subtext {
        margin-bottom: 3.4rem; } }
    .account-signup__subtext--error {
      margin-bottom: 1rem; }
      @media (min-width: 320px) and (max-width: 767px) {
        .account-signup__subtext--error {
          margin-top: -1.4rem;
          margin-bottom: 0.8rem; } }
  .account-signup__btn {
    align-self: flex-end;
    margin: 0;
    background-color: var(--button-primary-default);
    font-weight: bold;
    color: var(--text-colored-background); }
    .account-signup__btn:hover {
      background-color: var(--button-primary-hover); }
    .account-signup__btn--disabled {
      opacity: 0.32;
      cursor: not-allowed; }
    @media (min-width: 320px) and (max-width: 767px) {
      .account-signup__btn {
        height: 4rem;
        bottom: 2rem;
        left: 0;
        right: 0;
        position: absolute;
        width: calc(100% - 8rem);
        margin: 0 auto; } }
  .account-signup__residence-field {
    margin-bottom: 4.4rem; }
    @media (min-width: 1024px) {
      .account-signup__residence-field {
        min-width: 30rem; } }
  .account-signup__password-field {
    width: 100%; }
  @media (min-width: 320px) and (max-width: 767px) {
    .account-signup {
      width: calc(90vw - 10px);
      border-radius: 1rem;
      position: relative;
      left: 50%;
      transform: translate(-50%);
      margin: 0;
      text-align: center; }
      .account-signup__password-selection {
        height: 36.5rem !important; } }

@media screen and (min-width: 320px) and (max-width: 450px) {
  .account-signup__password-selection {
    height: calc(100% + 8rem); } }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
/**
 * Define Breakpoints here.
 */
.acuity-download-modal__body {
  padding: 0rem 2.4rem 2.4rem; }
  .acuity-download-modal__body--image {
    padding-bottom: 1.6rem;
    text-align: center; }
  .acuity-download-modal__body--description {
    padding: 0.8rem 0rem 1.6rem; }
  .acuity-download-modal__body--guide {
    padding: 0.9rem 0.8rem;
    margin-bottom: 1.6rem;
    background-color: var(--general-section-1);
    border-radius: 4px; }
    .acuity-download-modal__body--guide__link {
      cursor: pointer; }
  .acuity-download-modal__body--info {
    display: flex;
    flex-direction: row;
    padding: 0.8rem;
    gap: 0.8rem;
    background-color: var(--transparent-info);
    border-radius: 4px; }
    .acuity-download-modal__body--info p {
      width: 35.2rem; }
  .acuity-download-modal__body--button {
    text-align: center;
    padding-top: 1.6rem; }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
/**
 * Define Breakpoints here.
 */
/* @define set-residence */
.set-residence {
  margin: 1.6rem 1.6rem 0; }
  .set-residence__residence-selection {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-flow: nowrap column; }
  .set-residence__heading {
    font-weight: bold;
    text-align: center;
    margin-bottom: 3.3rem; }
  .set-residence__text {
    text-align: center;
    margin-bottom: 3.3rem; }
  .set-residence__subtext {
    margin: 0 0 2.4rem;
    max-width: 90%; }
  .set-residence__btn {
    align-self: flex-end;
    margin: 0;
    background-color: var(--button-primary-default);
    font-weight: bold;
    color: var(--text-colored-background);
    margin-bottom: -16px; }
    .set-residence__btn:hover {
      background-color: var(--button-primary-hover); }
    .set-residence__btn--disabled {
      opacity: 0.32;
      cursor: not-allowed; }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
/**
 * Define Breakpoints here.
 */
#warning_scam_message_modal {
  overflow: auto; }

.warning-scam-message {
  padding: 2.4rem 0; }
  @media (min-width: 320px) and (max-width: 767px) {
    .warning-scam-message {
      height: 80vh;
      overflow: auto; } }
  .warning-scam-message--content {
    display: flex;
    flex-direction: column;
    align-items: center; }
    .warning-scam-message--content__title {
      display: flex;
      flex-direction: column;
      margin: 2.6rem 0 2.4rem; }
      @media screen and (max-width: 768px) {
        .warning-scam-message--content__title {
          width: 80%; } }
      @media screen and (max-width: 430px) {
        .warning-scam-message--content__title {
          width: 90%; } }
    .warning-scam-message--content__info {
      display: flex;
      flex-direction: column;
      align-items: center;
      border: solid var(--general-hover);
      border-radius: 0.5rem;
      margin-top: 0.625rem;
      padding: 1.6rem;
      background-color: var(--general-section-1);
      width: 90%; }
      .warning-scam-message--content__info--title {
        margin-bottom: 1.6rem;
        display: flex;
        width: 96%; }
      .warning-scam-message--content__info--message {
        display: flex;
        width: 100%;
        padding: 2.4rem 0.5rem; }
  .warning-scam-message__checkbox-container {
    display: flex;
    width: 85%;
    margin: 2.4rem 0; }
    .warning-scam-message__checkbox-container--checkbox {
      margin-right: 1rem; }
  @media screen and (max-width: 375px) {
    .warning-scam-message__button {
      padding: 1.2rem 0; } }
  .warning-scam-message__icon {
    margin: 0.5rem 0.8rem 0.5rem 0.5rem; }
    .warning-scam-message__icon--cross {
      height: 2.6rem;
      width: 2.6rem;
      margin: 0 0.8rem 0.5rem 0.5rem; }
      @media (min-width: 320px) and (max-width: 767px) {
        .warning-scam-message__icon--cross {
          height: 3.4rem;
          width: 3.4rem;
          margin: -0.3rem 0.8rem 0.5rem 0.5rem; } }
      .warning-scam-message__icon--cross-content {
        height: 2.2rem;
        width: 2.2rem;
        margin: 0.2rem 0.8rem 0.5rem 0.5rem; }
        @media (min-width: 320px) and (max-width: 767px) {
          .warning-scam-message__icon--cross-content {
            height: 3rem;
            width: 3rem;
            margin: -0.2rem 0.8rem 0.5rem 0.5rem; } }
  .warning-scam-message__small-text-message {
    width: 96%; }
  .warning-scam-message__website-icon {
    margin: 0 0.5rem 0 0; }
  .warning-scam-message__scam-message-icon {
    height: 4rem;
    margin: 2.4rem 0 2.6rem; }
  .warning-scam-message__divider {
    width: 97.5%;
    border: 1px solid var(--general-hover);
    margin-right: 0.7rem;
    margin-bottom: 1.6rem; }

.correct-link__container {
  display: flex;
  width: 98%;
  background-color: var(--transparent-correct-message);
  padding: 1rem 0.5rem;
  margin-right: 0.5rem; }

.correct-link__message-container {
  display: flex;
  width: 100%;
  flex-direction: column; }

.correct-link__link-container {
  background-color: var(--general-main-2);
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0.8rem 0;
  margin: 0.8rem 0.8rem 1.6rem 0; }

.fake-link__container {
  display: flex;
  background-color: var(--transparent-fake-message);
  padding: 1rem 0.5rem;
  margin-right: 0.5rem;
  margin-top: 1.6rem; }

.fake-link__message-container {
  display: flex;
  flex-direction: column; }

.fake-link__link-container {
  background-color: var(--general-main-2);
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0.8rem 0;
  margin: 0.8rem 0.8rem 1.6rem 0; }

