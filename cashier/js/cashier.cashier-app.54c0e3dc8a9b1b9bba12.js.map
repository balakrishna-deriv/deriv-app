{"version":3,"file":"cashier/js/cashier.cashier-app.54c0e3dc8a9b1b9bba12.js","mappings":"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","sources":["webpack://@deriv/cashier/../../api/src/APIProvider.tsx","webpack://@deriv/cashier/../../api/src/utils.ts","webpack://@deriv/cashier/../../api/src/useFetch.ts","webpack://@deriv/cashier/../../api/src/useInvalidateQuery.ts","webpack://@deriv/cashier/../../api/src/useRequest.ts","webpack://@deriv/cashier/../../api/src/useSubscription.ts","webpack://@deriv/cashier/./utils/server_time.ts","webpack://@deriv/cashier/./cashier-providers.tsx","webpack://@deriv/cashier/./containers/cashier/cashier.tsx","webpack://@deriv/cashier/./containers/cashier/index.ts","webpack://@deriv/cashier/./constants/routes-config.ts","webpack://@deriv/cashier/./containers/routes/route-with-sub-routes.tsx","webpack://@deriv/cashier/./containers/routes/binary-routes.tsx","webpack://@deriv/cashier/./containers/routes/error-component/error-component.tsx","webpack://@deriv/cashier/./containers/routes/error-component/index.ts","webpack://@deriv/cashier/./containers/routes/routes.tsx","webpack://@deriv/cashier/./containers/routes/index.ts","webpack://@deriv/cashier/./containers/routes/useUnsafeCashierRouteHandler.ts","webpack://@deriv/cashier/./app-content.tsx","webpack://@deriv/cashier/./app.tsx","webpack://@deriv/cashier/./components/cashier-breadcrumb/cashier-breadcrumb.tsx","webpack://@deriv/cashier/./components/cashier-breadcrumb/index.ts","webpack://@deriv/cashier/./components/cashier-container/real/real.tsx","webpack://@deriv/cashier/./components/cashier-container/real/index.ts","webpack://@deriv/cashier/./components/cashier-container/virtual/virtual.tsx","webpack://@deriv/cashier/./components/cashier-container/virtual/index.ts","webpack://@deriv/cashier/./components/cashier-locked/cashier-locked-provider.tsx","webpack://@deriv/cashier/./components/cashier-locked/cashier-locked.tsx","webpack://@deriv/cashier/./components/cashier-locked/index.ts","webpack://@deriv/cashier/./components/crypto-fiat-converter/crypto-fiat-converter.tsx","webpack://@deriv/cashier/./components/crypto-fiat-converter/index.ts","webpack://@deriv/cashier/./components/crypto-transactions-history/crypto-transactions-cancel-modal.tsx","webpack://@deriv/cashier/./components/crypto-transactions-history/crypto-transactions-status-modal.tsx","webpack://@deriv/cashier/./components/crypto-transactions-history/crypto-transactions-renderer.tsx","webpack://@deriv/cashier/./components/crypto-transactions-history/crypto-transactions-history.tsx","webpack://@deriv/cashier/./components/crypto-transactions-history/index.ts","webpack://@deriv/cashier/./components/email-verification-empty-state/email-verification-resend-empty-state.tsx","webpack://@deriv/cashier/./components/email-verification-empty-state/email-verification-empty-state.tsx","webpack://@deriv/cashier/./components/email-verification-empty-state/index.ts","webpack://@deriv/cashier/./components/empty-state/empty-state.tsx","webpack://@deriv/cashier/./components/empty-state/index.ts","webpack://@deriv/cashier/./components/error-dialog/error-dialog.tsx","webpack://@deriv/cashier/./components/error-dialog/index.ts","webpack://@deriv/cashier/./components/error/error.tsx","webpack://@deriv/cashier/./components/error/index.ts","webpack://@deriv/cashier/./components/no-balance/no-balance.tsx","webpack://@deriv/cashier/./components/no-balance/index.ts","webpack://@deriv/cashier/./components/percentage-selector/percentage-selector.tsx","webpack://@deriv/cashier/./components/percentage-selector/index.ts","webpack://@deriv/cashier/./components/recent-transaction/recent-transaction.tsx","webpack://@deriv/cashier/./components/recent-transaction/index.ts","webpack://@deriv/cashier/./components/side-note/side-note.tsx","webpack://@deriv/cashier/./components/side-note/index.ts","webpack://@deriv/cashier/./components/transfer-confirm/transfer-confirm.tsx","webpack://@deriv/cashier/./components/transfer-confirm/index.ts","webpack://@deriv/cashier/./components/usdt-side-note/usdt-side-note.tsx","webpack://@deriv/cashier/./components/usdt-side-note/index.ts","webpack://@deriv/cashier/./constants/transaction-status.tsx","webpack://@deriv/cashier/./assets/svgs/trading-platform/index.tsx","webpack://@deriv/cashier/./assets/svgs/trading-platform/ic-appstore-derived.svg","webpack://@deriv/cashier/./assets/svgs/trading-platform/ic-appstore-financial.svg","webpack://@deriv/cashier/./assets/svgs/trading-platform/ic-appstore-options.svg","webpack://@deriv/cashier/./assets/svgs/trading-platform/ic-appstore-cfds.svg","webpack://@deriv/cashier/./assets/svgs/trading-platform/ic-appstore-swap-free.svg","webpack://@deriv/cashier/./components/account-platform-icon/account-platform-icon.tsx","webpack://@deriv/cashier/./components/account-platform-icon/index.ts","webpack://@deriv/cashier/./pages/account-transfer/account-transfer-receipt/account-transfer-receipt.tsx","webpack://@deriv/cashier/./pages/account-transfer/account-transfer-receipt/index.ts","webpack://@deriv/cashier/./pages/account-transfer/account-transfer-form/account-transfer-form-side-note.tsx","webpack://@deriv/cashier/./pages/account-transfer/account-transfer-form/account-transfer-form.tsx","webpack://@deriv/cashier/./pages/account-transfer/account-transfer-form/index.ts","webpack://@deriv/cashier/./pages/account-transfer/account-transfer-no-account/account-transfer-no-account.tsx","webpack://@deriv/cashier/./pages/account-transfer/account-transfer-no-account/index.ts","webpack://@deriv/cashier/./pages/account-transfer/account-transfer-locked/account-transfer-locked.tsx","webpack://@deriv/cashier/./pages/account-transfer/account-transfer-locked/index.ts","webpack://@deriv/cashier/./pages/account-transfer/account-transfer.tsx","webpack://@deriv/cashier/./pages/account-transfer/index.ts","webpack://@deriv/cashier/./components/funds-protection/funds-protection.tsx","webpack://@deriv/cashier/./components/funds-protection/index.ts","webpack://@deriv/cashier/./components/alert-banner/alert-banner.tsx","webpack://@deriv/cashier/./pages/deposit/crypto-deposit/crypto-deposit.tsx","webpack://@deriv/cashier/./pages/deposit/crypto-deposit/index.ts","webpack://@deriv/cashier/./pages/deposit/deposit-locked/deposit-locked.tsx","webpack://@deriv/cashier/./pages/deposit/deposit-locked/index.ts","webpack://@deriv/cashier/./components/page-container/page-container.tsx","webpack://@deriv/cashier/./modules/cashier-onboarding/components/cashier-onboarding-card/cashier-onboarding-card.tsx","webpack://@deriv/cashier/./modules/cashier-onboarding/components/cashier-onboarding-icon-marquee/cashier-onboarding-icon-marquee.tsx","webpack://@deriv/cashier/./modules/cashier-onboarding/components/cashier-onboarding-crypto-card/cashier-onboarding-crypto-card.tsx","webpack://@deriv/cashier/./modules/cashier-onboarding/components/switch-to-fiat-account-dialog/switch-to-fiat-account-dialog.tsx","webpack://@deriv/cashier/./modules/cashier-onboarding/components/cashier-onboarding-fiat-card/cashier-onboarding-fiat-card.tsx","webpack://@deriv/cashier/./modules/cashier-onboarding/components/cashier-onboarding-onramp-card/cashier-onboarding-onramp-card.tsx","webpack://@deriv/cashier/./modules/cashier-onboarding/components/cashier-onboarding-p2p-card/cashier-onboarding-p2p-card.tsx","webpack://@deriv/cashier/./modules/cashier-onboarding/components/cashier-onboarding-payment-agent-card/cashier-onboarding-payment-agent-card.tsx","webpack://@deriv/cashier/./components/side-note-card/side-note-card.tsx","webpack://@deriv/cashier/./modules/cashier-onboarding/components/cashier-onboarding-side-notes/cashier-onboarding-side-note-crypto.tsx","webpack://@deriv/cashier/./modules/cashier-onboarding/components/cashier-onboarding-side-notes/cashier-onboarding-side-note-fiat.tsx","webpack://@deriv/cashier/./modules/cashier-onboarding/components/cashier-onboarding-side-notes/cashier-onboarding-side-notes.tsx","webpack://@deriv/cashier/./modules/cashier-onboarding/components/cashier-onboarding-title/cashier-onboarding-title.tsx","webpack://@deriv/cashier/./modules/cashier-onboarding/index.tsx","webpack://@deriv/cashier/./modules/deposit-fiat/components/deposit-fiat-iframe/deposit-fiat-iframe.tsx","webpack://@deriv/cashier/./modules/deposit-fiat/deposit-fiat.tsx","webpack://@deriv/cashier/./pages/deposit/deposit.tsx","webpack://@deriv/cashier/./pages/deposit/index.ts","webpack://@deriv/cashier/./pages/on-ramp/on-ramp-provider-card/on-ramp-provider-card.tsx","webpack://@deriv/cashier/./pages/on-ramp/on-ramp-provider-card/index.ts","webpack://@deriv/cashier/./pages/on-ramp/on-ramp-provider-popup/on-ramp-provider-popup.tsx","webpack://@deriv/cashier/./pages/on-ramp/on-ramp-provider-popup/index.ts","webpack://@deriv/cashier/./pages/on-ramp/on-ramp.tsx","webpack://@deriv/cashier/./pages/on-ramp/index.ts","webpack://@deriv/cashier/./pages/payment-agent-transfer/payment-agent-transfer-confirm/payment-agent-transfer-confirm.tsx","webpack://@deriv/cashier/./pages/payment-agent-transfer/payment-agent-transfer-confirm/index.ts","webpack://@deriv/cashier/./pages/payment-agent-transfer/payment-agent-transfer-form/payment-agent-transfer-form.tsx","webpack://@deriv/cashier/./pages/payment-agent-transfer/payment-agent-transfer-form/index.ts","webpack://@deriv/cashier/./pages/payment-agent-transfer/payment-agent-transfer-receipt/payment-agent-transfer-receipt.tsx","webpack://@deriv/cashier/./pages/payment-agent-transfer/payment-agent-transfer-receipt/index.ts","webpack://@deriv/cashier/./pages/payment-agent-transfer/payment-agent-transfer.tsx","webpack://@deriv/cashier/./pages/payment-agent-transfer/index.ts","webpack://@deriv/cashier/./pages/payment-agent/missing-payment-method-note/missing-payment-method-note.tsx","webpack://@deriv/cashier/./pages/payment-agent/missing-payment-method-note/index.ts","webpack://@deriv/cashier/./constants/constants.ts","webpack://@deriv/cashier/./pages/payment-agent/payment-agent-detail/payment-agent-detail.tsx","webpack://@deriv/cashier/./pages/payment-agent/payment-agent-detail/index.ts","webpack://@deriv/cashier/./pages/payment-agent/payment-agent-card/payment-agent-card-description.tsx","webpack://@deriv/cashier/./pages/payment-agent/payment-agent-card/helpers/helpers.ts","webpack://@deriv/cashier/./pages/payment-agent/payment-agent-deposit-details/payment-agent-deposit-details.tsx","webpack://@deriv/cashier/./pages/payment-agent/payment-agent-deposit-details/index.ts","webpack://@deriv/cashier/./pages/payment-agent/payment-agent-listed-withdraw-form/payment-agent-listed-withdraw-form.tsx","webpack://@deriv/cashier/./pages/payment-agent/payment-agent-listed-withdraw-form/index.ts","webpack://@deriv/cashier/./pages/payment-agent/payment-agent-card/payment-agent-card.tsx","webpack://@deriv/cashier/./pages/payment-agent/payment-agent-card/index.ts","webpack://@deriv/cashier/./pages/payment-agent/payment-agent-disclaimer/payment-agent-disclaimer.tsx","webpack://@deriv/cashier/./pages/payment-agent/payment-agent-disclaimer/index.ts","webpack://@deriv/cashier/./pages/payment-agent/payment-agent-receipt/payment-agent-receipt.tsx","webpack://@deriv/cashier/./pages/payment-agent/payment-agent-receipt/index.ts","webpack://@deriv/cashier/./components/cashier-search-box/cashier-search-box.tsx","webpack://@deriv/cashier/./components/cashier-search-box/index.ts","webpack://@deriv/cashier/./pages/payment-agent/payment-agent-search-box/payment-agent-search-box.tsx","webpack://@deriv/cashier/./pages/payment-agent/payment-agent-search-box/index.ts","webpack://@deriv/cashier/./pages/payment-agent/payment-agent-unlisted-withdraw-form/payment-agent-unlisted-withdraw-form.tsx","webpack://@deriv/cashier/./pages/payment-agent/payment-agent-unlisted-withdraw-form/index.ts","webpack://@deriv/cashier/./pages/payment-agent/payment-agent-withdraw-confirm/payment-agent-withdraw-confirm.tsx","webpack://@deriv/cashier/./pages/payment-agent/payment-agent-withdraw-confirm/index.ts","webpack://@deriv/cashier/./pages/payment-agent/payment-agent-container/payment-agent-container.tsx","webpack://@deriv/cashier/./pages/payment-agent/payment-agent-container/index.ts","webpack://@deriv/cashier/./pages/payment-agent/payment-agent-list/deposit-tab.tsx","webpack://@deriv/cashier/./pages/payment-agent/payment-agent-withdrawal-locked/payment-agent-withdrawal-locked.tsx","webpack://@deriv/cashier/./pages/payment-agent/payment-agent-withdrawal-locked/index.ts","webpack://@deriv/cashier/./pages/payment-agent/payment-agent-list/withdrawal-tab.tsx","webpack://@deriv/cashier/./pages/payment-agent/payment-agent-list/payment-agent-list.tsx","webpack://@deriv/cashier/./pages/payment-agent/payment-agent-list/index.ts","webpack://@deriv/cashier/./pages/payment-agent/payment-agent.tsx","webpack://@deriv/cashier/./pages/payment-agent/index.ts","webpack://@deriv/cashier/./pages/withdrawal/crypto-withdraw-form/crypto-withdraw-form.tsx","webpack://@deriv/cashier/./pages/withdrawal/crypto-withdraw-form/index.ts","webpack://@deriv/cashier/./pages/withdrawal/crypto-withdraw-receipt/crypto-withdraw-receipt.tsx","webpack://@deriv/cashier/./pages/withdrawal/crypto-withdraw-receipt/index.ts","webpack://@deriv/cashier/./pages/withdrawal/withdraw/withdraw.tsx","webpack://@deriv/cashier/./pages/withdrawal/withdraw/index.ts","webpack://@deriv/cashier/./pages/withdrawal/withdrawal-locked/withdrawal-locked.tsx","webpack://@deriv/cashier/./pages/withdrawal/withdrawal-locked/index.ts","webpack://@deriv/cashier/./pages/withdrawal/withdrawal-verification-email/withdrawal-verification-email.tsx","webpack://@deriv/cashier/./pages/withdrawal/withdrawal-verification-email/index.ts","webpack://@deriv/cashier/./pages/withdrawal/withdrawal.tsx","webpack://@deriv/cashier/./pages/withdrawal/index.ts","webpack://@deriv/cashier/./stores/useCashierStores.tsx","webpack://@deriv/cashier/./utils/utility.ts","webpack://@deriv/cashier/../../hooks/src/useHasMaltaInvestAccount.ts","webpack://@deriv/cashier/../../hooks/src/useAccountTransferVisible.ts","webpack://@deriv/cashier/../../hooks/src/useCashierLocked.ts","webpack://@deriv/cashier/../../hooks/src/useCountdown.ts","webpack://@deriv/cashier/../../hooks/src/useDepositFiatAddress.ts","webpack://@deriv/cashier/../../hooks/src/useNeedAuthentication.ts","webpack://@deriv/cashier/../../hooks/src/useNeedFinancialAssessment.ts","webpack://@deriv/cashier/../../hooks/src/useRealSTPAccount.ts","webpack://@deriv/cashier/../../hooks/src/useNeedTNC.ts","webpack://@deriv/cashier/../../hooks/src/useDepositLocked.ts","webpack://@deriv/cashier/../../hooks/src/useExchangeRate.ts","webpack://@deriv/cashier/../../hooks/src/useFiatAccountList.ts","webpack://@deriv/cashier/../../hooks/src/useHasActiveRealAccount.ts","webpack://@deriv/cashier/../../hooks/src/useHasCryptoCurrency.ts","webpack://@deriv/cashier/../../hooks/src/useHasFiatCurrency.ts","webpack://@deriv/cashier/../../hooks/src/useHasSetCurrency.ts","webpack://@deriv/cashier/../../hooks/src/useHasUSDCurrency.ts","webpack://@deriv/cashier/../../hooks/src/useIsP2PEnabled.ts","webpack://@deriv/cashier/../../hooks/src/useIsSystemMaintenance.ts","webpack://@deriv/cashier/../../hooks/src/useOnrampVisible.ts","webpack://@deriv/cashier/../../hooks/src/useP2PNotificationCount.ts","webpack://@deriv/cashier/../../hooks/src/usePaymentAgentList.ts","webpack://@deriv/cashier/../../hooks/src/usePaymentAgentTransferVisible.ts","webpack://@deriv/cashier/../../hooks/src/useVerifyEmail.ts","webpack://@deriv/cashier/../../stores/src/storeContext.ts","webpack://@deriv/cashier/../../stores/src/useStore.ts","webpack://@deriv/cashier/../../stores/src/providers/ExchangeRatesProvider.tsx","webpack://@deriv/cashier/../../stores/src/stores/BaseStore.ts","webpack://@deriv/cashier/../../stores/src/stores/ExchangeRatesStore.ts","webpack://@deriv/cashier/../../stores/src/stores/FeatureFlagsStore.ts","webpack://@deriv/cashier/../../stores/src/storeProvider.tsx"],"sourcesContent":["import React, { PropsWithChildren } from 'react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\n// import { ReactQueryDevtools } from '@tanstack/react-query-devtools';\n\nconst queryClient = new QueryClient();\n\nconst APIProvider = ({ children }: PropsWithChildren<unknown>) => (\n    <QueryClientProvider client={queryClient}>\n        {children}\n        {/*Temporary disabled due to the problem on codecov, You can uncomment to use in development environment, DO NOT COMMIT THIS UNCOMMENTED*/}\n        {/*<ReactQueryDevtools />*/}\n    </QueryClientProvider>\n);\n\nexport default APIProvider;\n","import { WS } from '@deriv/shared';\nimport { TSocketEndpointNames, TSocketRequestPayload, TSocketResponseData } from '../types';\n\nexport const send = async <T extends TSocketEndpointNames>(\n    name: T,\n    payload?: TSocketRequestPayload<T>\n): Promise<TSocketResponseData<T>> => {\n    const response = await WS.send({ [name]: 1, ...(payload || {}) });\n\n    if (response.error) {\n        throw response.error;\n    }\n\n    return response;\n};\n\nexport const getQueryKeys = (name: string, props?: Record<string, unknown>) => {\n    if (!props) return [name];\n\n    delete props.req_id;\n    if (name && props[name] === 1) delete props[name];\n\n    if (Object.keys(props).length === 0) return [name];\n\n    const ordered_props = Object.keys(props)\n        .sort()\n        .reduce((obj, key) => {\n            obj[key] = props[key];\n\n            return obj;\n        }, {} as { [k: string]: unknown });\n\n    const query_props = JSON.stringify(ordered_props);\n\n    return [name, query_props];\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { getQueryKeys, send } from './utils';\nimport type {\n    TSocketAcceptableProps,\n    TSocketEndpointNames,\n    TSocketRequestPayload,\n    TSocketRequestQueryOptions,\n    TSocketResponseData,\n} from '../types';\n\nconst useFetch = <T extends TSocketEndpointNames>(name: T, ...props: TSocketAcceptableProps<T, true>) => {\n    const prop = props?.[0];\n    const payload = prop && 'payload' in prop ? (prop.payload as TSocketRequestPayload<T>) : undefined;\n    const options = prop && 'options' in prop ? (prop.options as TSocketRequestQueryOptions<T>) : undefined;\n\n    return useQuery<TSocketResponseData<T>, unknown>(getQueryKeys(name, payload), () => send(name, payload), options);\n};\n\nexport default useFetch;\n","import { useCallback } from 'react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { TSocketEndpointNames } from '../types';\n\nconst useInvalidateQuery = () => {\n    const queryClient = useQueryClient();\n\n    const invalidate = useCallback(\n        <T extends TSocketEndpointNames>(name: T) => queryClient.invalidateQueries([name]),\n        [queryClient]\n    );\n\n    return invalidate;\n};\n\nexport default useInvalidateQuery;\n","import { useCallback } from 'react';\nimport { useMutation } from '@tanstack/react-query';\nimport { send } from './utils';\nimport type {\n    TSocketAcceptableProps,\n    TSocketEndpointNames,\n    TSocketRequestMutationOptions,\n    TSocketRequestPayload,\n    TSocketResponseData,\n} from '../types';\n\nconst useRequest = <T extends TSocketEndpointNames>(name: T, options?: TSocketRequestMutationOptions<T>) => {\n    const { mutate: _mutate, ...rest } = useMutation<TSocketResponseData<T>, unknown, TSocketAcceptableProps<T>>(\n        props => {\n            const prop = props?.[0];\n            const payload = prop && 'payload' in prop ? (prop.payload as TSocketRequestPayload<T>) : undefined;\n\n            return send(name, payload);\n        },\n        options\n    );\n\n    const mutate = useCallback((...payload: TSocketAcceptableProps<T>) => _mutate(payload), [_mutate]);\n\n    return {\n        mutate,\n        ...rest,\n    };\n};\n\nexport default useRequest;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { useWS } from '@deriv/shared';\nimport type {\n    TSocketAcceptableProps,\n    TSocketRequestPayload,\n    TSocketResponseData,\n    TSocketSubscribableEndpointNames,\n} from '../types';\n\nconst useSubscription = <T extends TSocketSubscribableEndpointNames>(name: T) => {\n    const [is_loading, setIsLoading] = useState(false);\n    const [is_subscribed, setSubscribed] = useState(false);\n    const [error, setError] = useState<unknown>();\n    const [data, setData] = useState<TSocketResponseData<T>>();\n    const subscriber = useRef<{ unsubscribe?: VoidFunction }>();\n    const WS = useWS();\n\n    const subscribe = useCallback(\n        (...props: TSocketAcceptableProps<T>) => {\n            const prop = props?.[0];\n            const payload = prop && 'payload' in prop ? (prop.payload as TSocketRequestPayload<T>) : undefined;\n\n            setIsLoading(true);\n            setSubscribed(true);\n\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const onData = (response: any) => {\n                setData(response);\n                setIsLoading(false);\n            };\n\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const onError = (response: any) => {\n                setError(response.error);\n                setIsLoading(false);\n            };\n\n            try {\n                subscriber.current = WS.subscribe({ [name]: 1, subscribe: 1, ...(payload || {}) }).subscribe(\n                    onData,\n                    onError\n                );\n            } catch (e) {\n                setError(e);\n            }\n        },\n        [WS, name]\n    );\n\n    const unsubscribe = useCallback(() => {\n        subscriber.current?.unsubscribe?.();\n        setSubscribed(false);\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            unsubscribe();\n        };\n    }, [unsubscribe]);\n\n    return { subscribe, unsubscribe, is_loading, is_subscribed, error, data };\n};\n\nexport default useSubscription;\n","import moment from 'moment';\nimport { WS } from '@deriv/shared';\nimport { PromiseClass } from './utility';\n\nlet clock_started = false;\nconst pending = new PromiseClass();\nlet server_time: moment.Moment,\n    performance_request_time: number,\n    get_time_interval: ReturnType<typeof setInterval>,\n    update_time_interval: ReturnType<typeof setInterval>,\n    onTimeUpdated: VoidFunction;\n\nconst requestTime = () => {\n    performance_request_time = performance.now();\n    WS.send({ time: 1 }).then(timeCounter);\n};\n\nexport const init = (fncTimeUpdated?: VoidFunction) => {\n    if (!clock_started) {\n        if (fncTimeUpdated) {\n            onTimeUpdated = fncTimeUpdated;\n        }\n        requestTime();\n        clearInterval(get_time_interval);\n        get_time_interval = setInterval(requestTime, 30000);\n        clock_started = true;\n    }\n};\n\nexport const timeCounter = (response: { error: unknown; time: number }) => {\n    if (response.error) return;\n\n    if (!clock_started) {\n        init();\n        return;\n    }\n\n    clearInterval(update_time_interval);\n\n    const start_timestamp = response.time;\n    const performance_response_time = performance.now();\n    const time_taken = performance_response_time - performance_request_time;\n    const server_time_at_response = start_timestamp * 1000 + time_taken;\n\n    const updateTime = () => {\n        const time_since_response = performance.now() - performance_response_time;\n        server_time = moment(server_time_at_response + time_since_response).utc();\n\n        if (typeof onTimeUpdated === 'function') {\n            onTimeUpdated();\n        }\n    };\n    updateTime();\n    pending.resolve?.();\n\n    update_time_interval = setInterval(updateTime, 1000);\n};\n\nexport const timePromise = pending.promise;\n\nexport const get = () => (server_time ? server_time.clone() : undefined);\n","import React from 'react';\nimport { APIProvider } from '@deriv/api';\nimport { StoreProvider } from '@deriv/stores';\nimport { ThemeProvider } from '@deriv/ui';\nimport { CashierStoreProvider } from './stores/useCashierStores';\nimport type { TCoreStores } from '@deriv/stores/types';\n\nconst CashierProviders = ({ children, store }: React.PropsWithChildren<{ store: TCoreStores }>) => {\n    return (\n        <StoreProvider store={store}>\n            <CashierStoreProvider>\n                <APIProvider>\n                    <ThemeProvider>{children}</ThemeProvider>\n                </APIProvider>\n            </CashierStoreProvider>\n        </StoreProvider>\n    );\n};\n\nexport default CashierProviders;\n","import React from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { withRouter } from 'react-router-dom';\nimport {\n    Button,\n    DesktopWrapper,\n    Div100vhContainer,\n    FadeWrapper,\n    MobileWrapper,\n    PageOverlay,\n    VerticalTab,\n    Loading,\n} from '@deriv/components';\nimport {\n    useOnrampVisible,\n    useAccountTransferVisible,\n    useIsP2PEnabled,\n    usePaymentAgentTransferVisible,\n    useP2PNotificationCount,\n} from '@deriv/hooks';\nimport { getSelectedRoute, getStaticUrl, isMobile, routes, WS } from '@deriv/shared';\nimport ErrorDialog from '../../components/error-dialog';\nimport { TRoute } from '../../types';\nimport { localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport { useCashierStore } from '../../stores/useCashierStores';\nimport type { TCoreStores } from '@deriv/stores/types';\nimport './cashier.scss';\n\ntype TCashierProps = RouteComponentProps & {\n    routes: TRoute[];\n    tab_index: number;\n    onMount: (should_remount?: boolean) => void;\n    setAccountSwitchListener: () => void;\n    setTabIndex: (index: number) => void;\n    routeBackInApp: TCoreStores['common']['routeBackInApp'];\n    toggleCashier: TCoreStores['ui']['toggleCashier'];\n    resetLastLocation: () => void;\n};\n\ntype TCashierOptions = {\n    count?: number;\n    default?: boolean;\n    has_side_note: boolean;\n    icon: string;\n    label: string;\n    path?: string;\n    value?: typeof React.Component;\n};\n\nconst Cashier = observer(({ history, location, routes: routes_config }: TCashierProps) => {\n    const { common, ui, client } = useStore();\n    const { withdraw, general_store, transaction_history, payment_agent } = useCashierStore();\n    const { error } = withdraw;\n    const {\n        is_cashier_onboarding,\n        is_loading,\n        onMountCommon: onMount,\n        setAccountSwitchListener,\n        setCashierTabIndex: setTabIndex,\n        cashier_route_tab_index: tab_index,\n    } = general_store;\n    const { is_crypto_transactions_visible } = transaction_history;\n    const {\n        data: is_payment_agent_transfer_visible,\n        isLoading: is_payment_agent_checking,\n        isSuccess: is_payment_agent_transfer_visible_is_success,\n    } = usePaymentAgentTransferVisible();\n    const { is_payment_agent_visible } = payment_agent;\n    const { is_from_derivgo } = common;\n    const { is_cashier_visible: is_visible, toggleCashier } = ui;\n    const { is_account_setting_loaded, is_logged_in, is_logging_in } = client;\n    const is_account_transfer_visible = useAccountTransferVisible();\n    const is_onramp_visible = useOnrampVisible();\n    const p2p_notification_count = useP2PNotificationCount();\n    const {\n        data: is_p2p_enabled,\n        isSuccess: is_p2p_enabled_success,\n        isLoading: is_p2p_enabled_loading,\n    } = useIsP2PEnabled();\n\n    React.useEffect(() => {\n        toggleCashier();\n        // we still need to populate the tabs shown on cashier\n        return () => {\n            toggleCashier();\n        };\n    }, [toggleCashier]);\n\n    React.useEffect(() => {\n        (async () => {\n            await WS?.wait('authorize');\n            if (is_logged_in) {\n                onMount();\n                setAccountSwitchListener();\n            }\n        })();\n    }, [is_logged_in, onMount, setAccountSwitchListener]);\n\n    React.useEffect(() => {\n        if (\n            is_payment_agent_transfer_visible_is_success &&\n            !is_payment_agent_transfer_visible &&\n            history.location.pathname === routes.cashier_pa_transfer\n        ) {\n            history.push(routes.cashier_deposit);\n        }\n    }, [history, is_payment_agent_transfer_visible, is_payment_agent_transfer_visible_is_success]);\n\n    React.useEffect(() => {\n        if (is_p2p_enabled_success && !is_p2p_enabled && history.location.pathname === routes.cashier_p2p) {\n            history.push(routes.cashier_deposit);\n        }\n    }, [history, is_p2p_enabled, is_p2p_enabled_success]);\n\n    const onClickClose = () => history.push(routes.traders_hub);\n    const getMenuOptions = () => {\n        const options: TCashierOptions[] = [];\n        routes_config.forEach(route => {\n            if (\n                !route.is_invisible &&\n                (route.path !== routes.cashier_pa || is_payment_agent_visible) &&\n                (route.path !== routes.cashier_pa_transfer || is_payment_agent_transfer_visible) &&\n                (route.path !== routes.cashier_p2p || is_p2p_enabled) &&\n                (route.path !== routes.cashier_onramp || is_onramp_visible) &&\n                (route.path !== routes.cashier_acc_transfer || is_account_transfer_visible)\n            ) {\n                options.push({\n                    ...(route.path === routes.cashier_p2p && { count: p2p_notification_count }),\n                    default: route.default,\n                    icon: route.icon_component,\n                    label: route.getTitle(),\n                    value: route.component,\n                    path: route.path,\n                    has_side_note: is_crypto_transactions_visible ? false : route.path !== routes.cashier_p2p, // Set to true to create the 3-column effect without passing any content. If there is content, the content should be passed in.\n                });\n            }\n        });\n\n        return options;\n    };\n\n    const selected_route = getSelectedRoute({ routes: routes_config, pathname: location.pathname });\n    // const should_show_tab_headers_note =\n    //     !is_virtual &&\n    //     (location.pathname.startsWith(routes.cashier_deposit) ||\n    //         location.pathname.startsWith(routes.cashier_withdrawal));\n\n    const is_default_route = !!getSelectedRoute({ routes: routes_config, pathname: location.pathname }).default;\n\n    // '|| !is_account_setting_loaded' condition added to make sure client_tnc_status loaded\n    if (\n        ((!is_logged_in || isMobile()) && is_logging_in) ||\n        !is_account_setting_loaded ||\n        is_payment_agent_checking ||\n        is_p2p_enabled_loading\n    ) {\n        return <Loading is_fullscreen />;\n    }\n\n    const getHeaderTitle = () => {\n        if (!isMobile() || (is_default_route && (is_loading || is_cashier_onboarding))) return localize('Cashier');\n\n        return selected_route.getTitle?.();\n    };\n\n    return (\n        <FadeWrapper is_visible={is_visible} className='cashier__page-wrapper' keyname='cashier__page-wrapper'>\n            <ErrorDialog error={error} />\n            <div className='cashier'>\n                <PageOverlay header={getHeaderTitle()} onClickClose={onClickClose} is_from_app={is_from_derivgo}>\n                    <DesktopWrapper>\n                        <VerticalTab\n                            current_path={location.pathname}\n                            is_floating\n                            setVerticalTabIndex={setTabIndex}\n                            vertical_tab_index={is_default_route ? 0 : tab_index}\n                            is_full_width\n                            is_routed\n                            list={getMenuOptions()}\n                            tab_headers_note={\n                                <Button\n                                    id='cashier_learn_more'\n                                    className='cashier__page-wrapper-button'\n                                    text={localize('Learn more about payment methods')}\n                                    onClick={() => window.open(getStaticUrl('/payment-methods'))}\n                                    secondary\n                                />\n                            }\n                            // TODO: Uncomment when Ewallet.Exchange is available\n                            // tab_headers_note={\n                            //     should_show_tab_headers_note ? (\n                            //         <Text as='p' size='xxs' className='cashier__tab-header-note'>\n                            //             <Localize\n                            //                 i18n_default_text='Want to exchange between e-wallet currencies? Try <0>Ewallet.Exchange</0>'\n                            //                 components={[\n                            //                     <a\n                            //                         key={0}\n                            //                         href='https://ewallet.exchange'\n                            //                         rel='noopener noreferrer'\n                            //                         target='_blank'\n                            //                         className='link'\n                            //                     />,\n                            //                 ]}\n                            //             />\n                            //         </Text>\n                            //     ) : undefined\n                            // }\n                        />\n                    </DesktopWrapper>\n                    <MobileWrapper>\n                        <Div100vhContainer className='cashier__wrapper--is-mobile' height_offset='80px'>\n                            {selected_route && selected_route.component && (\n                                <selected_route.component\n                                    component_icon={selected_route.icon_component}\n                                    history={history}\n                                    menu_options={getMenuOptions()}\n                                />\n                            )}\n                        </Div100vhContainer>\n                    </MobileWrapper>\n                </PageOverlay>\n            </div>\n        </FadeWrapper>\n    );\n});\nexport default withRouter(Cashier);\n","import Cashier from './cashier';\n\nexport default Cashier;\n","import React from 'react';\nimport P2P from '@deriv/p2p';\nimport { routes, moduleLoader } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { Cashier } from '../containers';\nimport { AccountTransfer, Deposit, OnRamp, PaymentAgent, PaymentAgentTransfer, Withdrawal } from '../pages';\nimport { TRouteConfig, TRoute } from '../types';\n\n// Error Routes\nconst Page404 = React.lazy(() => moduleLoader(() => import(/* webpackChunkName: \"404\" */ '../components/page-404')));\nexport type TPage404 = typeof Page404;\n\n// Order matters\nconst initRoutesConfig = (): TRouteConfig[] => [\n    {\n        path: routes.cashier,\n        component: Cashier,\n        is_modal: true,\n        is_authenticated: true,\n        getTitle: () => localize('Cashier'),\n        icon_component: 'IcCashier',\n        routes: [\n            {\n                path: routes.cashier_deposit,\n                component: Deposit,\n                getTitle: () => localize('Deposit'),\n                icon_component: 'IcCashierAdd',\n                default: true,\n            },\n            {\n                path: routes.cashier_withdrawal,\n                component: Withdrawal,\n                getTitle: () => localize('Withdrawal'),\n                icon_component: 'IcCashierMinus',\n            },\n            {\n                path: routes.cashier_pa,\n                component: PaymentAgent,\n                getTitle: () => localize('Payment agents'),\n                icon_component: 'IcPaymentAgent',\n            },\n            {\n                path: routes.cashier_acc_transfer,\n                component: AccountTransfer,\n                getTitle: () => localize('Transfer'),\n                icon_component: 'IcAccountTransfer',\n            },\n            {\n                path: routes.cashier_pa_transfer,\n                component: PaymentAgentTransfer,\n                getTitle: () => localize('Transfer to client'),\n                icon_component: 'IcAccountTransfer',\n            },\n            {\n                path: routes.cashier_p2p,\n                component: P2P,\n                getTitle: () => localize('Deriv P2P'),\n                icon_component: 'IcDp2p',\n            },\n            {\n                path: routes.p2p_verification,\n                component: P2P,\n                getTitle: () => localize('P2P verification'),\n                icon_component: 'IcDp2p',\n                is_invisible: true,\n            },\n            {\n                id: 'gtm-onramp-tab',\n                path: routes.cashier_onramp,\n                component: OnRamp,\n                getTitle: () => localize('Fiat onramp'),\n                icon_component: 'IcCashierOnRamp',\n            },\n        ],\n    },\n];\n\nlet routesConfig: undefined | TRouteConfig[];\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default: TRoute = { component: Page404, getTitle: () => localize('Error 404') };\n\nconst getRoutesConfig = (): TRouteConfig[] => {\n    if (!routesConfig) {\n        routesConfig = initRoutesConfig();\n        routesConfig.push(route_default);\n    }\n    return routesConfig;\n};\n\nexport default getRoutesConfig;\n","import React from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { Redirect, Route } from 'react-router-dom';\nimport {\n    alternateLinkTagChange,\n    canonicalLinkTagChange,\n    redirectToLogin,\n    routes,\n    removeBranchName,\n    default_title,\n} from '@deriv/shared';\nimport { getLanguage } from '@deriv/translations';\nimport { TRootStore, TRouteConfig, TRoute } from '../../types';\n\ntype TRouteWithSubRoutesProps = TRouteConfig & {\n    is_logged_in: TRootStore['client']['is_logged_in'];\n    is_logging_in: TRootStore['client']['is_logging_in'];\n};\n\ntype TDefaultSubroute = TRoute | undefined;\n\nconst RouteWithSubRoutes = (route: TRouteWithSubRoutesProps) => {\n    const renderFactory = (props: RouteComponentProps) => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else if (route.is_authenticated && !route.is_logging_in && !route.is_logged_in) {\n            redirectToLogin(route.is_logged_in, getLanguage());\n        } else {\n            const default_subroute: TDefaultSubroute = route.routes?.find(r => r.default);\n            const pathname = removeBranchName(location.pathname);\n            result = (\n                <React.Fragment>\n                    {!!default_subroute && pathname === route.path && <Redirect to={default_subroute.path} />}\n                    <route.component {...props} routes={route.routes} />\n                </React.Fragment>\n            );\n        }\n\n        const title = route.getTitle?.() || '';\n        document.title = `${title} | ${default_title}`;\n\n        alternateLinkTagChange();\n        canonicalLinkTagChange();\n\n        return result;\n    };\n\n    return <Route exact={route.exact} path={route.path} render={renderFactory} />;\n};\n\nexport default RouteWithSubRoutes;\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport { Localize } from '@deriv/translations';\nimport getRoutesConfig from 'Constants/routes-config';\nimport RouteWithSubRoutes from './route-with-sub-routes';\n\ntype TBinaryRoutesProps = {\n    is_logged_in: boolean;\n    is_logging_in: boolean;\n};\n\nconst Loading = () => {\n    return (\n        <div>\n            <Localize i18n_default_text='Loading...' />\n        </div>\n    );\n};\n\nconst BinaryRoutes = (props: TBinaryRoutesProps) => {\n    return (\n        <React.Suspense fallback={<Loading />}>\n            <Switch>\n                {getRoutesConfig().map((route, idx: number) => (\n                    <RouteWithSubRoutes key={idx} {...route} {...props} />\n                ))}\n            </Switch>\n        </React.Suspense>\n    );\n};\n\nexport default BinaryRoutes;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { PageErrorContainer } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { TRootStore } from '../../../types';\nimport { localize, Localize } from '@deriv/translations';\n\nconst ErrorComponent = ({\n    header,\n    message,\n    redirect_label,\n    redirectOnClick,\n    redirect_to = routes.trade,\n    setError,\n    should_clear_error_on_click,\n    should_show_refresh = true,\n}: TRootStore['common']['error']) => {\n    const history = useHistory();\n\n    React.useEffect(() => {\n        if (!history) return undefined;\n        return history.listen(() => {\n            if (typeof setError === 'function') {\n                setError(false, null);\n            }\n        });\n    }, [history, setError]);\n\n    const refresh_message = should_show_refresh ? (\n        <Localize i18n_default_text='Please refresh this page to continue.' />\n    ) : (\n        ''\n    );\n\n    return (\n        <PageErrorContainer\n            error_header={header ?? ''}\n            error_messages={message ? [message, refresh_message] : []}\n            redirect_urls={[redirect_to]}\n            redirect_labels={[redirect_label || localize('Refresh')]}\n            buttonOnClick={redirectOnClick || (() => location.reload())}\n            should_clear_error_on_click={should_clear_error_on_click}\n            setError={setError}\n        />\n    );\n};\n\nexport default ErrorComponent;\n","import ErrorComponent from './error-component';\n\nexport default ErrorComponent;\n","import { observer, useStore } from '@deriv/stores';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport BinaryRoutes from './binary-routes';\nimport ErrorComponent from './error-component';\n\nconst Routes = observer(() => {\n    const { client, common } = useStore();\n    const { is_logged_in, is_logging_in } = client;\n    const { error, has_error } = common;\n\n    if (has_error) return <ErrorComponent {...error} />;\n\n    return <BinaryRoutes is_logged_in={is_logged_in} is_logging_in={is_logging_in} />;\n});\n\nexport default withRouter(Routes);\n","import Routes from './routes';\n\nexport default Routes;\n","import { useEffect } from 'react';\nimport { routes } from '@deriv/shared';\nimport { useCashierStore } from 'Stores/useCashierStores';\nimport { RouterChildContext, useHistory } from 'react-router';\n\n/** @deprecated This is a temporary solution to handle routing in cashier. */\nconst useUnsafeCashierRouteHandler = () => {\n    const history: RouterChildContext['router']['history'] = useHistory();\n    const { transaction_history, general_store } = useCashierStore();\n    const { setIsCryptoTransactionsVisible } = transaction_history;\n    const { setIsCashierOnboarding, setIsDeposit } = general_store;\n\n    useEffect(() => {\n        const destination_hash = history.location.hash;\n        const is_current_route_deposit = history.location.pathname === routes.cashier_deposit;\n        const is_hash_cashier_onboarding = destination_hash === '#cashier_onboarding';\n        const is_hash_deposit = destination_hash === '#deposit';\n        const is_hash_crypto_transactions_visible = destination_hash === '#crypto_transactions';\n\n        if (is_current_route_deposit) {\n            setIsCashierOnboarding(is_hash_cashier_onboarding);\n            setIsDeposit(is_hash_deposit);\n            setIsCryptoTransactionsVisible(is_hash_crypto_transactions_visible);\n\n            history.replace({ pathname: history.location.pathname, hash: '' });\n        }\n    }, [history, setIsCashierOnboarding, setIsCryptoTransactionsVisible, setIsDeposit]);\n};\n\nexport default useUnsafeCashierRouteHandler;\n","import React from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTheme } from '@deriv/ui';\nimport Routes from './containers/routes';\nimport useUnsafeCashierRouteHandler from './containers/routes/useUnsafeCashierRouteHandler';\n\nconst AppContent = observer(() => {\n    const { ui } = useStore();\n    const { is_dark_mode_on, notification_messages_ui: Notifications } = ui;\n    const { setColorMode } = useTheme();\n    useUnsafeCashierRouteHandler();\n\n    React.useEffect(() => {\n        const theme = (is_dark_mode_on ? 'dark' : 'light') as Parameters<typeof setColorMode>[0];\n        setColorMode(theme);\n    }, [is_dark_mode_on, setColorMode]);\n\n    return (\n        <>\n            {Notifications && <Notifications />}\n            <Routes />\n        </>\n    );\n});\n\nexport default AppContent;\n","import React from 'react';\nimport { setWebsocket } from '@deriv/shared';\nimport { init } from 'Utils/server_time';\nimport CashierProviders from './cashier-providers';\nimport type { TWebSocket } from './types';\nimport type { TCoreStores } from '@deriv/stores/types';\nimport AppContent from './app-content';\n\ntype TAppProps = {\n    passthrough: {\n        WS: TWebSocket;\n        root_store: TCoreStores;\n    };\n};\n\nconst App = ({ passthrough: { WS, root_store } }: TAppProps) => {\n    React.useEffect(() => {\n        setWebsocket(WS);\n        init();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <CashierProviders store={root_store}>\n            <AppContent />\n        </CashierProviders>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport { localize } from '@deriv/translations';\nimport { Breadcrumb } from '@deriv/ui';\nimport { useCashierStore } from '../../stores/useCashierStores';\nimport './cashier-breadcrumb.scss';\n\nconst CashierBreadcrumb = ({ is_crypto_deposit = false }: { is_crypto_deposit?: boolean }) => {\n    const {\n        general_store: { setIsDeposit },\n    } = useCashierStore();\n\n    const crypto_deposit_crumbs: React.ComponentProps<typeof Breadcrumb>['items'] = [\n        { value: 0, text: localize('Cashier') },\n        { value: 1, text: localize('Deposit cryptocurrencies') },\n    ];\n\n    const fiat_deposit_crumbs: React.ComponentProps<typeof Breadcrumb>['items'] = [\n        { value: 0, text: localize('Cashier') },\n        { value: 1, text: localize('Deposit via bank wire, credit card, and e-wallet') },\n    ];\n\n    const onBreadcrumbHandler: React.ComponentProps<typeof Breadcrumb>['handleOnClick'] = item => {\n        switch (item.value) {\n            case 0:\n                setIsDeposit(false);\n                break;\n            default:\n        }\n    };\n\n    // TODO: improve Breadcrumb component in deriv-ui project that it can accept custom classnames\n    return (\n        <div className='cashier-breadcrumb'>\n            <Breadcrumb\n                items={is_crypto_deposit ? crypto_deposit_crumbs : fiat_deposit_crumbs}\n                handleOnClick={onBreadcrumbHandler}\n            />\n        </div>\n    );\n};\n\nexport default CashierBreadcrumb;\n","import CashierBreadcrumb from './cashier-breadcrumb';\n\nexport default CashierBreadcrumb;\n","import React from 'react';\nimport { Loading } from '@deriv/components';\nimport { useStore, observer } from '@deriv/stores';\nimport CashierBreadcrumb from '../../cashier-breadcrumb';\nimport { useCashierStore } from '../../../stores/useCashierStores';\nimport './real.scss';\n\nconst Real = observer(({ is_deposit = false }: { is_deposit?: boolean }) => {\n    const { traders_hub, ui } = useStore();\n    const { is_low_risk_cr_eu_real } = traders_hub;\n    const { is_dark_mode_on } = ui;\n    const { iframe, deposit, general_store } = useCashierStore();\n    const { clearIframe, iframe_height, iframe_url, checkIframeLoaded, setContainerHeight } = iframe;\n    const { is_loading } = general_store;\n    const { onMountDeposit } = deposit;\n\n    const should_show_breadcrumbs = !is_low_risk_cr_eu_real && is_deposit && Boolean(iframe_height);\n    const should_show_loader = is_loading || !iframe_height;\n\n    React.useEffect(() => {\n        return () => {\n            clearIframe();\n            onMountDeposit?.();\n        };\n    }, [clearIframe, onMountDeposit]);\n\n    React.useEffect(() => {\n        // To show loading state when switching theme\n        setContainerHeight(0);\n        checkIframeLoaded();\n    }, [checkIframeLoaded, is_dark_mode_on, setContainerHeight]);\n\n    return (\n        <div className='cashier__wrapper real'>\n            {should_show_loader && <Loading className='real__loader' />}\n            {should_show_breadcrumbs && <CashierBreadcrumb />}\n            {iframe_url && (\n                <iframe\n                    className='cashier__content'\n                    height={iframe_height}\n                    src={`${iframe_url}&DarkMode=${is_dark_mode_on ? 'on' : 'off'}`}\n                    frameBorder='0'\n                    scrolling='auto'\n                    data-testid='dt_doughflow_section'\n                />\n            )}\n        </div>\n    );\n});\n\nexport default Real;\n","import Real from './real';\n\nexport default Real;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Text } from '@deriv/components';\nimport { isMobile } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { useStore, observer } from '@deriv/stores';\nimport './virtual.scss';\n\nconst Virtual = observer(() => {\n    const {\n        ui: { is_dark_mode_on, toggleAccountsDialog },\n    } = useStore();\n\n    return (\n        <div className='cashier__wrapper' data-testid='dt_cashier_wrapper_id'>\n            <React.Fragment>\n                <div\n                    data-testid={\n                        is_dark_mode_on\n                            ? 'dt_virtual_account_switch_icon_dark_id'\n                            : 'dt_virtual_account_switch_icon_light_id'\n                    }\n                    className={classNames(\n                        'virtual__account-switch-icon',\n                        is_dark_mode_on ? 'virtual__account-switch-icon--dark' : 'virtual__account-switch-icon--light'\n                    )}\n                />\n                <Text as='h2' align='center' weight='bold' color='prominent' className='virtual__header'>\n                    <Localize i18n_default_text={'You are using a demo account'} />\n                </Text>\n                <Text\n                    as='p'\n                    size={isMobile() ? 'xxs' : 'xs'}\n                    line_height='s'\n                    align='center'\n                    className='cashier__paragraph cashier__text'\n                >\n                    <Localize\n                        i18n_default_text='You need to switch to a real money account to use this feature.<0/>You can do this by selecting a real account from the <1>Account Switcher.</1>'\n                        components={[\n                            <br key={0} />,\n                            <span key={1} className='virtual__account-switch-text' onClick={toggleAccountsDialog} />,\n                        ]}\n                    />\n                </Text>\n            </React.Fragment>\n        </div>\n    );\n});\n\nexport default withRouter(Virtual);\n","import Virtual from './virtual';\n\nexport default Virtual;\n","import React from 'react';\nimport { Localize, localize } from '@deriv/translations';\nimport { formatDate } from '@deriv/shared';\nimport { TEmptyStateProps } from '../empty-state/empty-state';\n\ntype TProps = {\n    cashier_validation: string[] | undefined;\n    is_crypto: boolean;\n    is_system_maintenance: boolean;\n    is_cashier_locked: boolean;\n    is_deposit_locked: boolean;\n    is_withdrawal_locked: boolean;\n    is_identity_verification_needed: boolean;\n    excluded_until: number | undefined;\n};\n\nconst getMessage = ({\n    cashier_validation,\n    is_crypto,\n    is_system_maintenance,\n    is_cashier_locked,\n    is_deposit_locked,\n    is_withdrawal_locked,\n    is_identity_verification_needed,\n    excluded_until,\n}: TProps): TEmptyStateProps => {\n    const no_residence = cashier_validation?.includes('no_residence');\n    const unwelcome_status = cashier_validation?.includes('unwelcome_status');\n    const self_exclusion = cashier_validation?.includes('SelfExclusion');\n    const no_withdrawal_or_trading_status = cashier_validation?.includes('no_withdrawal_or_trading_status');\n    const only_pa_withdrawals_allowed_status = cashier_validation?.includes('only_pa_withdrawals_allowed_status');\n    const withdraw_service_unavailable_for_pa = cashier_validation?.includes('WithdrawServiceUnavailableForPA');\n    const withdrawal_locked_status = cashier_validation?.includes('withdrawal_locked_status');\n    const documents_expired = cashier_validation?.includes('documents_expired');\n    const cashier_locked_status = cashier_validation?.includes('cashier_locked_status');\n    const disabled_status = cashier_validation?.includes('disabled_status');\n    const financial_assessment_required = cashier_validation?.includes('FinancialAssessmentRequired');\n    const ask_currency = cashier_validation?.includes('ASK_CURRENCY');\n    const ask_authenticate = cashier_validation?.includes('ASK_AUTHENTICATE');\n    const ask_financial_risk_approval = cashier_validation?.includes('ASK_FINANCIAL_RISK_APPROVAL');\n    const ask_tin_information = cashier_validation?.includes('ASK_TIN_INFORMATION');\n    const ask_self_exclusion_max_turnover_set = cashier_validation?.includes('ASK_SELF_EXCLUSION_MAX_TURNOVER_SET');\n    const ask_fix_details = cashier_validation?.includes('ASK_FIX_DETAILS');\n    const ask_uk_funds_protection = cashier_validation?.includes('ASK_UK_FUNDS_PROTECTION');\n    const pa_commision_withdrawal_limit = cashier_validation?.includes('PACommisionWithdrawalLimit');\n\n    if (is_system_maintenance) {\n        if (is_crypto && is_withdrawal_locked)\n            return {\n                icon: 'IcCashierLocked',\n                title: localize('Withdrawals are locked'),\n                description: localize(\n                    'Withdrawals are temporarily unavailable due to system maintenance. You can make your withdrawals when the maintenance is complete.'\n                ),\n            };\n        if (is_crypto && is_deposit_locked)\n            return {\n                icon: 'IcCashierLocked',\n                title: localize('Cashier is locked'),\n                description: localize(\n                    'Deposits are temporarily unavailable due to system maintenance. You can make your deposits when the maintenance is complete.'\n                ),\n            };\n        if (is_crypto)\n            return {\n                icon: 'IcCashierLocked',\n                title: localize('Cashier is locked'),\n                description: localize(\n                    'Our cryptocurrency cashier is temporarily down due to system maintenance. You can access the Cashier in a few minutes when the maintenance is complete.'\n                ),\n            };\n        return {\n            icon: 'IcCashierLocked',\n            title: localize('Cashier is locked'),\n            description: localize(\n                'Our cashier is temporarily down due to system maintenance. You can access the Cashier in a few minutes when the maintenance is complete.'\n            ),\n        };\n    }\n\n    if (is_cashier_locked) {\n        if (no_residence)\n            return {\n                icon: 'IcCashierLocked',\n                title: localize('Cashier is locked'),\n                description: localize(\n                    'You’ve not set your country of residence. To access Cashier, please update your country of residence in the Personal details section in your account settings.'\n                ),\n            };\n        if (documents_expired)\n            return {\n                icon: 'IcCashierLocked',\n                title: localize('Cashier is locked'),\n                description: localize(\n                    'The identification documents you submitted have expired. Please submit valid identity documents to unlock Cashier. '\n                ),\n            };\n        if (cashier_locked_status)\n            return {\n                icon: 'IcCashierLocked',\n                title: localize('Cashier is locked'),\n                description: (\n                    <Localize\n                        i18n_default_text='Your cashier is currently locked. Please contact us via <0>live chat</0> to find out how to unlock it.'\n                        components={[\n                            <span\n                                key={0}\n                                className='link link--orange'\n                                onClick={() => window.LC_API.open_chat_window()}\n                            />,\n                        ]}\n                    />\n                ),\n            };\n        if (disabled_status)\n            return {\n                icon: 'IcCashierLocked',\n                title: localize('Cashier is locked'),\n                description: (\n                    <Localize\n                        i18n_default_text='Your account is temporarily disabled. Please contact us via <0>live chat</0> to enable deposits and withdrawals again.'\n                        components={[\n                            <span\n                                key={0}\n                                className='link link--orange'\n                                onClick={() => window.LC_API.open_chat_window()}\n                            />,\n                        ]}\n                    />\n                ),\n            };\n        if (ask_currency)\n            return {\n                icon: 'IcCashierLocked',\n                title: localize('Cashier is locked'),\n                description: localize('Please set your account currency to enable deposits and withdrawals.'),\n            };\n        if (ask_authenticate && is_identity_verification_needed)\n            return {\n                icon: 'IcCashierLocked',\n                title: localize('Cashier is locked'),\n                description: (\n                    <Localize\n                        i18n_default_text='Please submit your <0>proof of identity</0> to authenticate your account and access your Cashier.'\n                        components={[<a key={0} className='link' href={'/account/proof-of-identity'} />]}\n                    />\n                ),\n            };\n        if (ask_authenticate)\n            return {\n                icon: 'IcCashierLocked',\n                title: localize('Cashier is locked'),\n                description: (\n                    <Localize\n                        i18n_default_text='Your account has not been authenticated. Please submit your <0>proof of identity</0> and <1>proof of address</1> to authenticate your account and access your cashier.'\n                        components={[\n                            <a\n                                key={0}\n                                className='link'\n                                rel='noopener noreferrer'\n                                href={'/account/proof-of-identity'}\n                            />,\n                            <a key={1} className='link' rel='noopener noreferrer' href={'/account/proof-of-address'} />,\n                        ]}\n                    />\n                ),\n            };\n        if (ask_financial_risk_approval)\n            return {\n                icon: 'IcCashierLocked',\n                title: localize('Cashier is locked'),\n                description: (\n                    <Localize\n                        i18n_default_text='Please complete the <0>Appropriateness Test</0> to access your cashier.'\n                        components={[\n                            <a\n                                key={0}\n                                className='link'\n                                rel='noopener noreferrer'\n                                href={'/account/financial-assessment'}\n                                data-testid='dt_financial_assessment_link'\n                            />,\n                        ]}\n                    />\n                ),\n            };\n        if (financial_assessment_required)\n            return {\n                icon: 'IcCashierLocked',\n                title: localize('Cashier is locked'),\n                description: (\n                    <Localize\n                        i18n_default_text='Your cashier is locked. Please complete the <0>financial assessment</0> to unlock it.'\n                        components={[\n                            <a\n                                key={0}\n                                className='link'\n                                rel='noopener noreferrer'\n                                href={'/account/financial-assessment'}\n                                data-testid='dt_financial_assessment_link'\n                            />,\n                        ]}\n                    />\n                ),\n            };\n        if (ask_tin_information)\n            return {\n                icon: 'IcCashierLocked',\n                title: localize('Cashier is locked'),\n                description: (\n                    <Localize\n                        i18n_default_text='You have not provided your tax identification number. This information is necessary for legal and regulatory requirements. Please go to <0>Personal details</0> in your account settings, and fill in your latest tax identification number.'\n                        components={[\n                            <a key={0} className='link' rel='noopener noreferrer' href={'/account/personal-details'} />,\n                        ]}\n                    />\n                ),\n            };\n        if (ask_uk_funds_protection)\n            return {\n                icon: 'IcCashierLocked',\n                title: localize('Cashier is locked'),\n                description: (\n                    <Localize\n                        i18n_default_text='Your cashier is locked. See <0>how we protect your funds</0> before you proceed.'\n                        components={[\n                            <a key={0} className='link' rel='noopener noreferrer' href={'/cashier/deposit'} />,\n                        ]}\n                    />\n                ),\n            };\n        if (ask_self_exclusion_max_turnover_set)\n            return {\n                icon: 'IcCashierLocked',\n                title: localize('Cashier is locked'),\n                description: (\n                    <Localize\n                        i18n_default_text='Your access to Cashier has been temporarily disabled as you have not set your 30-day turnover limit. Please go to <0>Self-exclusion</0> and set your 30-day turnover limit.'\n                        components={[\n                            <a key={0} className='link' rel='noopener noreferrer' href={'/account/self-exclusion'} />,\n                        ]}\n                    />\n                ),\n            };\n        if (ask_fix_details)\n            return {\n                icon: 'IcCashierLocked',\n                title: localize('Cashier is locked'),\n                description: (\n                    <Localize\n                        i18n_default_text='Your <0>personal details</0> are incomplete. Please go to your account settings and complete your personal details to enable deposits and withdrawals.'\n                        components={[\n                            <a key={0} className='link' rel='noopener noreferrer' href={'/account/personal-details'} />,\n                        ]}\n                    />\n                ),\n            };\n    }\n\n    if (is_deposit_locked) {\n        if (ask_fix_details)\n            return {\n                icon: 'IcCashierDepositLock',\n                title: localize('Deposits are locked'),\n                description: (\n                    <Localize\n                        i18n_default_text='Your <0>personal details</0> are incomplete. Please go to your account settings and complete your personal details to enable deposits.'\n                        components={[\n                            <a key={0} className='link' rel='noopener noreferrer' href={'/account/personal-details'} />,\n                        ]}\n                    />\n                ),\n            };\n        if (self_exclusion)\n            return {\n                icon: 'IcCashierDepositLock',\n                title: localize('Deposits are locked'),\n                description: (\n                    <Localize\n                        i18n_default_text='You have chosen to exclude yourself from trading on our website until {{exclude_until}}. If you are unable to place a trade or deposit after your self-exclusion period, please contact us via <0>live chat</0>.'\n                        values={{ exclude_until: formatDate(excluded_until, 'DD MMM, YYYY') }}\n                        components={[\n                            <span\n                                key={0}\n                                className='link link--orange'\n                                onClick={() => window.LC_API.open_chat_window()}\n                            />,\n                        ]}\n                    />\n                ),\n            };\n        if (unwelcome_status)\n            return {\n                icon: 'IcCashierDepositLock',\n                title: localize('Deposits are locked'),\n                description: (\n                    <Localize\n                        i18n_default_text='Please contact us via <0>live chat</0>.'\n                        components={[\n                            <span\n                                key={0}\n                                className='link link--orange'\n                                onClick={() => window.LC_API.open_chat_window()}\n                            />,\n                        ]}\n                    />\n                ),\n            };\n    }\n\n    if (is_withdrawal_locked) {\n        if (financial_assessment_required)\n            return {\n                icon: 'IcCashierWithdrawalLock',\n                title: localize('Withdrawals are locked'),\n                description: (\n                    <Localize\n                        i18n_default_text='You can only make deposits. Please complete the <0>financial assessment</0> to unlock withdrawals.'\n                        components={[\n                            <a\n                                key={0}\n                                className='link'\n                                href={'/account/financial-assessment'}\n                                data-testid='dt_financial_assessment_link'\n                            />,\n                        ]}\n                    />\n                ),\n            };\n        if (ask_authenticate)\n            return {\n                icon: 'IcCashierWithdrawalLock',\n                title: localize('Withdrawals are locked'),\n                description: (\n                    <Localize\n                        i18n_default_text='Your account has not been authenticated. Please submit your <0>proof of identity</0> and <1>proof of address</1> to authenticate your account and request for withdrawals.'\n                        components={[\n                            <a\n                                key={0}\n                                className='link'\n                                rel='noopener noreferrer'\n                                href={'/account/proof-of-identity'}\n                            />,\n                            <a key={1} className='link' rel='noopener noreferrer' href={'/account/proof-of-address'} />,\n                        ]}\n                    />\n                ),\n            };\n        if (ask_fix_details)\n            return {\n                icon: 'IcCashierWithdrawalLock',\n                title: localize('Withdrawals are locked'),\n                description: (\n                    <Localize\n                        i18n_default_text='Your <0>personal details</0> are incomplete. Please go to your account settings and complete your personal details to enable withdrawals.'\n                        components={[\n                            <a key={0} className='link' rel='noopener noreferrer' href={'/account/personal-details'} />,\n                        ]}\n                    />\n                ),\n            };\n        if (withdraw_service_unavailable_for_pa)\n            return {\n                icon: 'IcCashierWithdrawalLock',\n                title: localize('Withdrawals are locked'),\n                description: localize('This feature is not available for payment agents.'),\n            };\n        if (no_withdrawal_or_trading_status)\n            return {\n                icon: 'IcCashierWithdrawalLock',\n                title: localize('Withdrawals are locked'),\n                description: (\n                    <Localize\n                        i18n_default_text='Unfortunately, you can only make deposits. Please contact us via <0>live chat</0> to enable withdrawals.'\n                        components={[\n                            <span\n                                key={0}\n                                className='link link--orange'\n                                onClick={() => window.LC_API.open_chat_window()}\n                            />,\n                        ]}\n                    />\n                ),\n            };\n        if (withdrawal_locked_status)\n            return {\n                icon: 'IcCashierWithdrawalLock',\n                title: localize('Withdrawals are locked'),\n                description: (\n                    <Localize\n                        i18n_default_text='Unfortunately, you can only make deposits. Please contact us via <0>live chat</0> to enable withdrawals.'\n                        components={[\n                            <span\n                                key={0}\n                                className='link link--orange'\n                                onClick={() => window.LC_API.open_chat_window()}\n                            />,\n                        ]}\n                    />\n                ),\n            };\n        if (only_pa_withdrawals_allowed_status)\n            return {\n                icon: 'IcCashierWithdrawalLock',\n                title: localize('Withdrawals are locked'),\n                description: (\n                    <Localize\n                        i18n_default_text='You can only make deposits. Please contact us via <0>live chat</0> for more information.'\n                        components={[\n                            <span\n                                key={0}\n                                className='link link--orange'\n                                onClick={() => window.LC_API.open_chat_window()}\n                            />,\n                        ]}\n                    />\n                ),\n            };\n        if (pa_commision_withdrawal_limit)\n            return {\n                icon: 'IcCashierWithdrawalLock',\n                title: localize('Cashier is locked for withdrawals'),\n                description: localize(\n                    \"It seems that you've no commissions to withdraw at the moment. You can make withdrawals once you receive your commissions.\"\n                ),\n            };\n    }\n\n    return {\n        icon: 'IcCashierLocked',\n        title: localize('Cashier is locked'),\n        description: (\n            <Localize\n                i18n_default_text='Your cashier is currently locked. Please contact us via <0>live chat</0> to find out how to unlock it.'\n                components={[\n                    <span key={0} className='link link--orange' onClick={() => window.LC_API.open_chat_window()} />,\n                ]}\n            />\n        ),\n    };\n};\n\nexport default getMessage;\n","import React from 'react';\nimport { useStore, observer } from '@deriv/stores';\nimport { useCashierLocked, useDepositLocked, useIsSystemMaintenance } from '@deriv/hooks';\nimport EmptyState from 'Components/empty-state';\nimport getMessage from './cashier-locked-provider';\n\nconst CashierLocked = observer(() => {\n    const { client } = useStore();\n    const {\n        account_status,\n        accounts,\n        current_currency_type,\n        is_withdrawal_lock: is_withdrawal_locked,\n        loginid,\n        is_identity_verification_needed,\n    } = client;\n    const is_cashier_locked = useCashierLocked();\n    const is_system_maintenance = useIsSystemMaintenance();\n    const is_deposit_locked = useDepositLocked();\n\n    const state = getMessage({\n        cashier_validation: account_status.cashier_validation,\n        is_crypto: current_currency_type === 'crypto',\n        is_system_maintenance,\n        is_cashier_locked,\n        is_deposit_locked,\n        is_withdrawal_locked,\n        is_identity_verification_needed,\n        excluded_until: loginid ? accounts[loginid]?.excluded_until : undefined,\n    });\n\n    return <EmptyState icon={state.icon} title={state.title} description={state.description} />;\n});\n\nexport default CashierLocked;\n","import CashierLocked from './cashier-locked';\n\nexport default CashierLocked;\n","import React from 'react';\nimport { Field, FieldProps, useFormikContext } from 'formik';\nimport { DesktopWrapper, Input, Icon, MobileWrapper, Text, useInterval } from '@deriv/components';\nimport { getCurrencyDisplayCode } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { TReactChangeEvent } from '../../types';\nimport { useCashierStore } from '../../stores/useCashierStores';\nimport { useExchangeRate } from '@deriv/hooks';\nimport './crypto-fiat-converter.scss';\n\ntype TTimerProps = {\n    onComplete: VoidFunction;\n};\n\ntype TInputGroupProps = React.PropsWithChildren<{\n    className: string;\n}>;\n\ntype TCryptoFiatConverterProps = {\n    from_currency: string;\n    hint?: React.ReactNode;\n    onChangeConverterFromAmount: (\n        event: { target: { value: string } },\n        from_currency: string,\n        to_currency: string,\n        converted_amount?: number\n    ) => void;\n    onChangeConverterToAmount: (\n        event: TReactChangeEvent,\n        from_currency: string,\n        to_currency: string,\n        converted_amount?: number\n    ) => void;\n    resetConverter: VoidFunction;\n    to_currency: string;\n    validateFromAmount: VoidFunction;\n    validateToAmount: VoidFunction;\n};\n\nconst Timer = ({ onComplete }: TTimerProps) => {\n    const initial_time = 60;\n    const [remaining_time, setRemainingTime] = React.useState<number>(initial_time);\n\n    useInterval(() => {\n        if (remaining_time > 0) {\n            setRemainingTime(remaining_time - 1);\n        }\n    }, 1000);\n\n    React.useEffect(() => {\n        if (remaining_time === 0) {\n            onComplete();\n            setRemainingTime(initial_time);\n        }\n    }, [onComplete, remaining_time]);\n\n    return (\n        <Text as='p' size='xs' color='less-prominent' className='timer'>\n            <Localize i18n_default_text='{{remaining_time}}s' values={{ remaining_time }} />\n        </Text>\n    );\n};\n\nconst InputGroup = ({ children, className }: TInputGroupProps) => {\n    return (\n        <fieldset>\n            <div className={className}>{children}</div>\n        </fieldset>\n    );\n};\n\nconst CryptoFiatConverter = observer(\n    ({\n        from_currency,\n        hint,\n        onChangeConverterFromAmount,\n        onChangeConverterToAmount,\n        resetConverter,\n        to_currency,\n        validateFromAmount,\n        validateToAmount,\n    }: TCryptoFiatConverterProps) => {\n        const { crypto_fiat_converter } = useCashierStore();\n        const { getRate } = useExchangeRate();\n\n        const {\n            converter_from_amount,\n            converter_from_error,\n            converter_to_error,\n            converter_to_amount,\n            is_timer_visible,\n        } = crypto_fiat_converter;\n\n        const { handleChange } = useFormikContext();\n        const [arrow_icon_direction, setArrowIconDirection] = React.useState<string>('right');\n\n        React.useEffect(() => {\n            return () => resetConverter();\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, []);\n\n        React.useEffect(() => {\n            setArrowIconDirection('right');\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [from_currency]);\n\n        return (\n            <div className='crypto-fiat-converter'>\n                <Field name='converter_from_amount' validate={validateFromAmount}>\n                    {({ field }: FieldProps<string>) => (\n                        <Input\n                            {...field}\n                            onFocus={() => {\n                                setArrowIconDirection('right');\n                            }}\n                            onChange={(e: TReactChangeEvent) => {\n                                const from_rate = getRate(from_currency || '');\n                                const to_rate = getRate(to_currency || '');\n                                const converted_amount = (Number(e.target.value) * to_rate) / from_rate;\n                                onChangeConverterFromAmount(e, from_currency, to_currency, converted_amount);\n                                handleChange(e);\n                            }}\n                            type='text'\n                            error={converter_from_error as string}\n                            label={localize('Amount ({{currency}})', {\n                                currency: getCurrencyDisplayCode(from_currency),\n                            })}\n                            value={converter_from_amount}\n                            autoComplete='off'\n                            required\n                            hint={hint}\n                            classNameHint='crypto-fiat-converter__hint'\n                            data-testid='dt_converter_from_amount_input'\n                        />\n                    )}\n                </Field>\n                <MobileWrapper>\n                    {arrow_icon_direction === 'right' ? <Icon icon='IcArrowDownBold' /> : <Icon icon='IcArrowUpBold' />}\n                </MobileWrapper>\n                <DesktopWrapper>\n                    {arrow_icon_direction === 'right' ? (\n                        <Icon icon='IcArrowRightBold' id='arrow_right_bold' data_testid='dti_arrow_right_bold' />\n                    ) : (\n                        <Icon icon='IcArrowLeftBold' id='arrow_left_bold' data_testid='dti_arrow_left_bold' />\n                    )}\n                </DesktopWrapper>\n                <Field name='converter_to_amount' validate={validateToAmount}>\n                    {({ field }: FieldProps<string>) => (\n                        <InputGroup className='input-group'>\n                            <Input\n                                {...field}\n                                onFocus={() => {\n                                    setArrowIconDirection('left');\n                                }}\n                                onChange={(e: TReactChangeEvent) => {\n                                    const from_rate = getRate(from_currency || '');\n                                    const to_rate = getRate(to_currency || '');\n                                    const converted_amount = (Number(e.target.value) * from_rate) / to_rate;\n                                    onChangeConverterToAmount(e, to_currency, from_currency, converted_amount);\n                                    handleChange(e);\n                                }}\n                                type='text'\n                                error={converter_to_error}\n                                label={localize('Amount ({{currency}})', {\n                                    currency: getCurrencyDisplayCode(to_currency),\n                                })}\n                                value={converter_to_amount}\n                                autoComplete='off'\n                                hint={localize('Approximate value')}\n                                classNameHint='crypto-fiat-converter__hint'\n                                data-testid='dt_converter_to_amount_input'\n                            />\n                            {is_timer_visible && (\n                                <Timer\n                                    onComplete={() => {\n                                        const from_rate = getRate(from_currency || '');\n                                        const to_rate = getRate(to_currency || '');\n                                        const converted_amount = (Number(converter_from_amount) * to_rate) / from_rate;\n                                        onChangeConverterFromAmount(\n                                            { target: { value: converter_from_amount } },\n                                            from_currency,\n                                            to_currency,\n                                            converted_amount\n                                        );\n                                    }}\n                                />\n                            )}\n                        </InputGroup>\n                    )}\n                </Field>\n            </div>\n        );\n    }\n);\n\nexport default CryptoFiatConverter;\n","import CryptoFiatConverter from './crypto-fiat-converter';\n\nexport default CryptoFiatConverter;\n","import React from 'react';\nimport { Button, Modal } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useCashierStore } from '../../stores/useCashierStores';\n\nconst CryptoTransactionsCancelModal = observer(() => {\n    const { transaction_history } = useCashierStore();\n    const {\n        cancelCryptoTransaction,\n        hideCryptoTransactionsCancelModal,\n        is_crypto_transactions_cancel_modal_visible: is_cancel_modal_visible,\n        selected_crypto_transaction_id,\n    } = transaction_history;\n\n    return (\n        <React.Fragment>\n            <Modal\n                small\n                title={localize('Cancel transaction')}\n                is_open={is_cancel_modal_visible}\n                toggleModal={hideCryptoTransactionsCancelModal}\n                has_close_icon\n            >\n                <Modal.Body>\n                    <Localize i18n_default_text='Are you sure you want to cancel this transaction?' />\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button text={localize('No')} onClick={hideCryptoTransactionsCancelModal} large secondary />\n                    <Button\n                        text={localize('Yes')}\n                        onClick={() => {\n                            cancelCryptoTransaction(selected_crypto_transaction_id);\n                        }}\n                        large\n                        primary\n                    />\n                </Modal.Footer>\n            </Modal>\n        </React.Fragment>\n    );\n});\n\nexport default CryptoTransactionsCancelModal;\n","import React from 'react';\nimport { Button, Modal } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useCashierStore } from '../../stores/useCashierStores';\n\nconst CryptoTransactionsStatusModal = observer(() => {\n    const { transaction_history } = useCashierStore();\n    const {\n        hideCryptoTransactionsStatusModal,\n        is_crypto_transactions_status_modal_visible: is_status_modal_visible,\n        selected_crypto_status,\n        selected_crypto_status_description,\n    } = transaction_history;\n\n    return (\n        <React.Fragment>\n            <Modal\n                small\n                title={selected_crypto_status}\n                is_open={is_status_modal_visible}\n                toggleModal={hideCryptoTransactionsStatusModal}\n                has_close_icon={false}\n            >\n                <Modal.Body>{selected_crypto_status_description}</Modal.Body>\n                <Modal.Footer>\n                    <Button text={localize('OK')} onClick={hideCryptoTransactionsStatusModal} large primary />\n                </Modal.Footer>\n            </Modal>\n        </React.Fragment>\n    );\n});\n\nexport default CryptoTransactionsStatusModal;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Button, Icon, Money, Popover, Table, Text } from '@deriv/components';\nimport { epochToMoment, formatMoney, isMobile } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport { useStore, observer } from '@deriv/stores';\nimport { getStatus } from '../../constants/transaction-status';\nimport { TCryptoTransactionDetails } from '../../types';\nimport { useCashierStore } from '../../stores/useCashierStores';\n\ntype TCryptoTransactionsRendererProps = {\n    row: TCryptoTransactionDetails;\n    onTooltipClick: VoidFunction;\n};\n\nconst CryptoTransactionsRenderer = observer(({ row: crypto, onTooltipClick }: TCryptoTransactionsRendererProps) => {\n    const { client } = useStore();\n    const { transaction_history } = useCashierStore();\n    const { cancelCryptoTransaction, showCryptoTransactionsCancelModal, showCryptoTransactionsStatusModal } =\n        transaction_history;\n    const { currency } = client;\n\n    const {\n        address_hash,\n        address_url,\n        amount,\n        id,\n        is_valid_to_cancel,\n        status_code,\n        submit_date,\n        transaction_hash,\n        transaction_url,\n        transaction_type,\n    } = crypto;\n    const formatted_address_hash = address_hash\n        ? `${address_hash.substring(0, 4)}....${address_hash.substring(address_hash.length - 4)}`\n        : '';\n    const formatted_amount = transaction_type === 'withdrawal' ? `-${amount}` : `+${amount}`;\n    const formatted_submit_date = isMobile()\n        ? epochToMoment(submit_date).format('DD MMM YYYY')\n        : epochToMoment(submit_date).format('DD MMM YYYY HH:mm:ss [GMT]');\n    const formatted_submit_time = epochToMoment(submit_date).format('HH:mm:ss [GMT]');\n    const status = getStatus(transaction_hash, transaction_type, status_code);\n\n    const [is_transaction_clicked, setTransactionClicked] = React.useState(false);\n    const onClickCancel = () => {\n        setTransactionClicked(true);\n    };\n    const onClickNo = () => {\n        setTransactionClicked(false);\n    };\n    const cancelTransaction = () => {\n        setTransactionClicked(false);\n        cancelCryptoTransaction(id);\n    };\n    const onClickCancelTransaction = () => {\n        showCryptoTransactionsCancelModal(id);\n    };\n    const onClickStatus = () => {\n        if (status) showCryptoTransactionsStatusModal(status.description, status.name);\n    };\n\n    const is_third_party_transaction = transaction_url?.includes('CP:');\n\n    if (status && isMobile()) {\n        return (\n            <div>\n                <Table.Row className='crypto-transactions-history__table-row'>\n                    <Table.Cell className='crypto-transactions-history__table-cell'>\n                        <Icon\n                            icon={transaction_type === 'withdrawal' ? 'IcCashierWithdrawal' : 'IcCashierDeposit'}\n                            size={32}\n                        />\n                        <Text as='p' size='xs' weight='bold' className='crypto-transactions-history__table-type'>\n                            <Localize i18n_default_text={transaction_type} />\n                        </Text>\n                        <div\n                            className='crypto-transactions-history__table-status'\n                            onClick={onClickStatus}\n                            data-testid='dt_table_status'\n                        >\n                            <div\n                                className={classNames(\n                                    'crypto-transactions-history__table-status-code',\n                                    `crypto-transactions-history__table-status-code-${status.renderer}`\n                                )}\n                            />\n                            <Text as='p' size='xxs'>\n                                {status.name}\n                            </Text>\n                        </div>\n                    </Table.Cell>\n                    <Table.Cell>\n                        <Text as='p' color='prominent' size='xxs' weight='bold'>\n                            {localize('Amount')}\n                        </Text>\n                    </Table.Cell>\n                    <Table.Cell className='crypto-transactions-history__table-amount'>\n                        <Text\n                            as='p'\n                            size='xxs'\n                            weight='bold'\n                            color={status.renderer === 'successful' ? 'profit-success' : 'red'}\n                        >\n                            <Money\n                                currency={currency}\n                                amount={formatMoney(currency, formatted_amount, true)}\n                                should_format={false}\n                                show_currency\n                            />\n                        </Text>\n                    </Table.Cell>\n                    <Table.Cell>\n                        <Text as='p' color='prominent' size='xxs' weight='bold'>\n                            {localize('Address')}\n                        </Text>\n                    </Table.Cell>\n                    <Table.Cell className='crypto-transactions-history__table-hash'>\n                        <a\n                            className='crypto-transactions-history__table-link'\n                            href={address_url}\n                            rel='noopener noreferrer'\n                            target='_blank'\n                        >\n                            <Text as='p' size='xxs' color='red'>\n                                {address_hash}\n                            </Text>\n                        </a>\n                    </Table.Cell>\n                    <Table.Cell>\n                        <Text as='p' color='prominent' size='xxs' weight='bold'>\n                            {localize('Transaction hash')}\n                        </Text>\n                        {is_third_party_transaction && (\n                            <Icon\n                                className='crypto-transactions-history__table-tooltip'\n                                data_testid='dt_crypto_transactions_history_table_tooltip_mobile'\n                                onClick={onTooltipClick}\n                                icon='IcHelpCentre'\n                                custom_color='var(--button-secondary-default)'\n                            />\n                        )}\n                    </Table.Cell>\n                    <Table.Cell className='crypto-transactions-history__table-hash'>\n                        <a\n                            className='crypto-transactions-history__table-link'\n                            href={transaction_url}\n                            rel='noopener noreferrer'\n                            target='_blank'\n                        >\n                            <Text as='p' size='xxs' color='red'>\n                                {status.transaction_hash}\n                            </Text>\n                        </a>\n                    </Table.Cell>\n                    <Table.Cell>\n                        <Text as='p' color='prominent' size='xxs' weight='bold'>\n                            {localize('Time')}\n                        </Text>\n                    </Table.Cell>\n                    <Table.Cell className='crypto-transactions-history__table-time'>\n                        <Text as='p' size='xxs'>\n                            {formatted_submit_date}\n                        </Text>\n                        <div className='crypto-transactions-history__bullet' />\n                        <Text as='p' size='xxs'>\n                            {formatted_submit_time}\n                        </Text>\n                    </Table.Cell>\n                    <Table.Cell className='crypto-transactions-history__table-action'>\n                        {is_valid_to_cancel === 1 && (\n                            <Button\n                                onClick={onClickCancelTransaction}\n                                small\n                                secondary\n                                data-testid='dt_cancel_transaction'\n                            >\n                                <Text as='p' size='xxxs' weight='bolder'>\n                                    <Localize i18n_default_text='Cancel transaction' />\n                                </Text>\n                            </Button>\n                        )}\n                    </Table.Cell>\n                </Table.Row>\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <Table.Row className='crypto-transactions-history__table-row'>\n                <Table.Cell className='crypto-transactions-history__table-type'>\n                    <Icon\n                        icon={transaction_type === 'withdrawal' ? 'IcCashierWithdrawal' : 'IcCashierDeposit'}\n                        size={32}\n                    />\n                    <Text as='p' size='xs' weight='bold'>\n                        <Localize i18n_default_text={transaction_type} />\n                    </Text>\n                </Table.Cell>\n                <Table.Cell className='crypto-transactions-history__table-amount'>\n                    {status && (\n                        <Text\n                            as='p'\n                            size='xs'\n                            weight='bold'\n                            color={status.renderer === 'successful' ? 'profit-success' : 'red'}\n                        >\n                            <Money\n                                currency={currency}\n                                amount={formatMoney(currency, formatted_amount, true)}\n                                should_format={false}\n                                show_currency\n                            />\n                        </Text>\n                    )}\n                </Table.Cell>\n                <Table.Cell className='crypto-transactions-history__table-hash'>\n                    <Popover\n                        alignment='right'\n                        className='crypto-transactions-history__table-popover'\n                        message={localize('View address on Blockchain')}\n                    >\n                        <a\n                            className='crypto-transactions-history__table-link'\n                            href={address_url}\n                            rel='noopener noreferrer'\n                            target='_blank'\n                        >\n                            <Text as='p' size='xs' color='red'>\n                                {formatted_address_hash}\n                            </Text>\n                        </a>\n                    </Popover>\n                </Table.Cell>\n                <Table.Cell className='crypto-transactions-history__table-hash'>\n                    {status &&\n                        (transaction_url ? (\n                            <>\n                                <Popover\n                                    alignment='right'\n                                    className='crypto-transactions-history__table-popover'\n                                    message={localize('View transaction on Blockchain')}\n                                >\n                                    <a\n                                        className='crypto-transactions-history__table-link'\n                                        href={transaction_url}\n                                        rel='noopener noreferrer'\n                                        target='_blank'\n                                    >\n                                        <Text as='p' size='xs' color='red'>\n                                            {status.transaction_hash}\n                                        </Text>\n                                    </a>\n                                </Popover>\n                                {is_third_party_transaction && (\n                                    <Popover\n                                        alignment='right'\n                                        className='crypto-transactions-history__table-tooltip'\n                                        data_testid='dt_crypto_transactions_history_table_tooltip'\n                                        message={localize('The details of this transaction is available on CoinsPaid.')}\n                                    >\n                                        <Icon icon='IcHelpCentre' custom_color='var(--button-secondary-default)' />\n                                    </Popover>\n                                )}\n                            </>\n                        ) : (\n                            <Text as='p' size='xs' color='red'>\n                                {status.transaction_hash}\n                            </Text>\n                        ))}\n                </Table.Cell>\n                {!is_transaction_clicked && (\n                    <Table.Cell>\n                        <Text as='p' size='xs'>\n                            {formatted_submit_date}\n                        </Text>\n                    </Table.Cell>\n                )}\n                {!is_transaction_clicked && (\n                    <Table.Cell className='crypto-transactions-history__table-status'>\n                        {status && (\n                            <Popover\n                                alignment='left'\n                                className='crypto-transactions-history__table-popover'\n                                message={status.description}\n                            >\n                                <div\n                                    className={classNames(\n                                        'crypto-transactions-history__table-status-code',\n                                        `crypto-transactions-history__table-status-code-${status.renderer}`\n                                    )}\n                                />\n                                <Text as='p' size='xs'>\n                                    {status.name}\n                                </Text>\n                            </Popover>\n                        )}\n                    </Table.Cell>\n                )}\n                {is_transaction_clicked ? (\n                    <Table.Cell className='crypto-transactions-history__table-confirm'>\n                        <div>\n                            <Text as='p' color='prominent' size='xxs'>\n                                {localize('Are you sure you want to cancel this transaction?')}\n                            </Text>\n                            <Button onClick={cancelTransaction} primary text={localize('Yes')} />\n                            <Button onClick={onClickNo} secondary text={localize('No')} />\n                        </div>\n                    </Table.Cell>\n                ) : (\n                    <Table.Cell className='crypto-transactions-history__table-action'>\n                        {is_valid_to_cancel === 1 && (\n                            <div onClick={onClickCancel} data-testid='dt_crypto_transactions_history_table_button'>\n                                <Popover\n                                    alignment='left'\n                                    className='crypto-transactions-history__table-popover'\n                                    message={localize('Cancel transaction')}\n                                >\n                                    <Icon icon='IcCrossLight' size={10} />\n                                </Popover>\n                            </div>\n                        )}\n                    </Table.Cell>\n                )}\n            </Table.Row>\n        </div>\n    );\n});\n\nexport default CryptoTransactionsRenderer;\n","import React from 'react';\nimport { DataList, Icon, Loading, MobileWrapper, Modal, Table, Text } from '@deriv/components';\nimport { isDesktop, isMobile, routes } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport { useStore, observer } from '@deriv/stores';\nimport { TCryptoTransactionDetails } from '../../types';\nimport CryptoTransactionsCancelModal from './crypto-transactions-cancel-modal';\nimport CryptoTransactionsStatusModal from './crypto-transactions-status-modal';\nimport CryptoTransactionsRenderer from './crypto-transactions-renderer';\nimport { useCashierStore } from '../../stores/useCashierStores';\n\ntype TCryptoTransactionDetailsRow = {\n    row: TCryptoTransactionDetails;\n};\n\nconst getHeaders = () => [\n    { text: localize('Transaction') },\n    { text: localize('Amount') },\n    { text: localize('Address') },\n    { text: localize('Transaction hash') },\n    { text: localize('Time') },\n    { text: localize('Status') },\n    { text: localize('Action') },\n];\n\nconst CryptoTransactionsHistory = observer(() => {\n    const { client } = useStore();\n    const { transaction_history, general_store } = useCashierStore();\n    const { crypto_transactions, is_loading, setIsCryptoTransactionsVisible } = transaction_history;\n    const { setIsDeposit } = general_store;\n    const { currency } = client;\n    const [is_modal_visible, setIsModalVisible] = React.useState(false);\n\n    React.useEffect(() => {\n        return () => setIsCryptoTransactionsVisible(false);\n    }, [setIsCryptoTransactionsVisible, currency]);\n\n    const onClickBack = () => {\n        setIsCryptoTransactionsVisible(false);\n        if (window.location.pathname.endsWith(routes.cashier_deposit)) {\n            setIsDeposit(true);\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <div className='crypto-transactions-history'>\n                <div className='crypto-transactions-history__header'>\n                    <div\n                        className='crypto-transactions-history__back'\n                        onClick={onClickBack}\n                        data-testid='dt_crypto_transactions_history_back'\n                    >\n                        <Icon icon={isMobile() ? 'IcChevronLeftBold' : 'IcArrowLeftBold'} />\n                        <Text as='p' size='xs' weight='bold'>\n                            <Localize i18n_default_text={` ${currency} recent transactions`} />\n                        </Text>\n                    </div>\n                </div>\n                <MobileWrapper>\n                    <CryptoTransactionsCancelModal />\n                    <CryptoTransactionsStatusModal />\n                </MobileWrapper>\n                {crypto_transactions.length > 0 ? (\n                    <Table className='crypto-transactions-history__table'>\n                        {isDesktop() && (\n                            <Table.Header className='crypto-transactions-history__table-header'>\n                                <Table.Row className='crypto-transactions-history__table-row'>\n                                    {getHeaders().map(header => (\n                                        <Table.Head key={header.text}>{header.text}</Table.Head>\n                                    ))}\n                                </Table.Row>\n                            </Table.Header>\n                        )}\n                        <Table.Body className='crypto-transactions-history__table-body'>\n                            {is_loading ? (\n                                <Loading is_fullscreen={false} />\n                            ) : (\n                                <DataList\n                                    // TODO: CHECK THIS TYPE ERROR\n                                    data_source={crypto_transactions}\n                                    rowRenderer={(row_props: TCryptoTransactionDetailsRow) => (\n                                        <CryptoTransactionsRenderer\n                                            {...row_props}\n                                            onTooltipClick={() => setIsModalVisible(true)}\n                                        />\n                                    )}\n                                    keyMapper={(row: TCryptoTransactionDetails) => row.id}\n                                    row_gap={isMobile() ? 8 : 0}\n                                />\n                            )}\n                        </Table.Body>\n                    </Table>\n                ) : (\n                    <div className='crypto-transactions-history__empty-text'>\n                        <Text as='p' size='xs' color='disabled' align='center'>\n                            <Localize i18n_default_text='No current transactions available' />\n                        </Text>\n                    </div>\n                )}\n            </div>\n            <Modal\n                has_close_icon\n                is_open={is_modal_visible}\n                title='Note'\n                toggleModal={() => setIsModalVisible(old => !old)}\n                width='44rem'\n                height='14rem'\n                className='crypto-transactions-history__modal'\n            >\n                <Modal.Body className='crypto-transactions-history__modal-body'>\n                    {localize('The details of this transaction is available on CoinsPaid.')}\n                </Modal.Body>\n            </Modal>\n        </React.Fragment>\n    );\n});\n\nexport default CryptoTransactionsHistory;\n","import CryptoTransactionsHistory from './crypto-transactions-history';\nimport './crypto-transactions-history.scss';\n\nexport default CryptoTransactionsHistory;\n","import React from 'react';\nimport { localize } from '@deriv/translations';\nimport EmptyState from 'Components/empty-state';\n\ntype TEmailVerificationResendEmptyStateProps = {\n    is_counter_running: boolean;\n    counter: number;\n    resend: VoidFunction;\n};\n\nconst EmailVerificationResendEmptyState = ({\n    is_counter_running,\n    counter,\n    resend,\n}: TEmailVerificationResendEmptyStateProps) => {\n    return (\n        <EmptyState\n            title={localize(\"Didn't receive the email?\")}\n            description={localize(\"Check your spam or junk folder. If it's not there, try resending the email.\")}\n            action={{\n                label: is_counter_running\n                    ? localize('Resend email in {{seconds}}s', { seconds: counter })\n                    : localize('Resend email'),\n                onClick: resend,\n                disabled: is_counter_running,\n            }}\n        />\n    );\n};\n\nexport default EmailVerificationResendEmptyState;\n","import React from 'react';\nimport { useVerifyEmail } from '@deriv/hooks';\nimport { localize } from '@deriv/translations';\nimport EmptyState from 'Components/empty-state';\nimport EmailVerificationResendEmptyState from './email-verification-resend-empty-state';\nimport './email-verification-empty-state.scss';\n\ntype TEmailVerificationEmptyStateProps = {\n    type: Parameters<typeof useVerifyEmail>[0];\n};\n\nconst EmailVerificationEmptyState = ({ type }: TEmailVerificationEmptyStateProps) => {\n    const verify = useVerifyEmail(type);\n\n    const action = {\n        label: localize(\"Didn't receive the email?\"),\n        onClick: verify.send,\n        tertiary: true,\n    };\n\n    return (\n        <div className='email-verification-empty-state'>\n            <EmptyState\n                icon='IcEmailSent'\n                title={localize(\"We've sent you an email.\")}\n                description={localize('Please check your email for the verification link to complete the process.')}\n                action={verify.has_been_sent ? undefined : action}\n            />\n            {verify.has_been_sent && (\n                <EmailVerificationResendEmptyState\n                    is_counter_running={verify.is_counter_running}\n                    counter={verify.counter}\n                    resend={verify.send}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default EmailVerificationEmptyState;\n","import EmailVerificationEmptyState from './email-verification-empty-state';\n\nexport default EmailVerificationEmptyState;\n","import React from 'react';\nimport { Icon, Text, Button } from '@deriv/components';\nimport './empty-state.scss';\n\ntype TAction = {\n    label: string;\n    onClick?: VoidFunction;\n    primary?: boolean;\n    tertiary?: boolean;\n    disabled?: boolean;\n};\n\nexport type TEmptyStateProps = {\n    icon?: string;\n    title?: React.ReactNode;\n    description?: React.ReactNode;\n    action?: TAction;\n} & ({ title: React.ReactNode } | { description: React.ReactNode });\n\nconst EmptyState = ({ icon, title, description, action }: TEmptyStateProps) => (\n    <div className='cashier-empty-state'>\n        {icon && <Icon icon={icon} data_testid='dt_empty_state_icon' className='cashier-empty-state__icon' />}\n        {title && (\n            <Text\n                as='h2'\n                weight='bold'\n                align='center'\n                data-testid='dt_empty_state_title'\n                className='cashier-empty-state__title'\n            >\n                {title}\n            </Text>\n        )}\n        {description && (\n            <Text\n                as='p'\n                size='xs'\n                align='center'\n                data-testid='dt_empty_state_description'\n                className='cashier-empty-state__desc'\n            >\n                {description}\n            </Text>\n        )}\n        {action && (\n            <Button\n                has_effect\n                text={action.label}\n                onClick={action.onClick}\n                primary={action.primary || true}\n                tertiary={action.tertiary}\n                is_disabled={action.disabled}\n                large\n                data-testid='dt_empty_state_action'\n                className='cashier-empty-state__action'\n            />\n        )}\n    </div>\n);\n\nexport default EmptyState;\n","import EmptyState from './empty-state';\n\nexport default EmptyState;\n","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Dialog } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { routes } from '@deriv/shared';\nimport { useStore, observer } from '@deriv/stores';\nimport { TError, TReactElement } from '../../types';\n\ntype TErrorDialogProps = {\n    className?: string;\n    error?: Partial<TError> | Record<string, never>;\n};\n\ntype TSetDetails = {\n    title: string;\n    cancel_button_text: undefined | string;\n    confirm_button_text: undefined | string;\n    onConfirm: undefined | (() => void);\n    message: undefined | string | TReactElement;\n    has_close_icon?: boolean;\n};\n\nconst ErrorDialog = observer(({ className, error = {} }: TErrorDialogProps) => {\n    const {\n        ui: { disableApp, enableApp },\n    } = useStore();\n\n    const history = useHistory();\n    const [is_visible, setIsVisible] = React.useState(false);\n    const [details, setDetails] = React.useState<TSetDetails>({\n        title: '',\n        cancel_button_text: undefined,\n        confirm_button_text: '',\n        onConfirm: undefined,\n        message: '',\n    });\n\n    const dismissError = React.useCallback(() => {\n        if (error.setErrorMessage) {\n            error.setErrorMessage({ code: '', message: '' }, null, false);\n        }\n        setErrorVisibility(false);\n    }, [error]);\n\n    const mapErrorToDetails = React.useCallback(\n        (error_code?: string, error_message?: string) => {\n            if (\n                error_code &&\n                [\n                    'Fiat2CryptoTransferOverLimit',\n                    'Crypto2FiatTransferOverLimit',\n                    'Crypto2CryptoTransferOverLimit',\n                    'CryptoLimitAgeVerified',\n                ].includes(error_code)\n            ) {\n                setDetails({\n                    title: localize('Please verify your identity'),\n                    cancel_button_text: localize('Cancel'),\n                    confirm_button_text: localize('Verify identity'),\n                    onConfirm: () => history.push(routes.proof_of_identity),\n                    message: error_message,\n                });\n            } else if (error_code === 'FinancialAssessmentRequired') {\n                setDetails({\n                    title: localize('Cashier Error'),\n                    cancel_button_text: undefined,\n                    confirm_button_text: localize('OK'),\n                    onConfirm: undefined,\n                    message: (\n                        <Localize\n                            i18n_default_text='Please complete your <0>financial assessment</0>.'\n                            components={[\n                                <Link\n                                    to={routes.financial_assessment}\n                                    key={0}\n                                    className='link'\n                                    onClick={dismissError}\n                                />,\n                            ]}\n                        />\n                    ),\n                });\n            } else if (\n                error_code &&\n                [\n                    'CryptoMissingRequiredParameter',\n                    'CryptoWithdrawalBalanceExceeded',\n                    'CryptoWithdrawalLimitExceeded',\n                    'CryptoWithdrawalMaxReached',\n                    'CryptoWithdrawalNotAuthenticated',\n                    'CryptoWithdrawalError',\n                ].includes(error_code)\n            ) {\n                setDetails({\n                    title: localize('Error'),\n                    cancel_button_text: undefined,\n                    confirm_button_text: localize('Retry'),\n                    onConfirm: undefined,\n                    message: error_message,\n                    has_close_icon: true,\n                });\n            } else if (error_code === 'CryptoWithdrawalReadMore') {\n                setDetails({\n                    title: '',\n                    cancel_button_text: undefined,\n                    confirm_button_text: localize('OK'),\n                    onConfirm: undefined,\n                    message: error_message,\n                });\n            } else {\n                setDetails({\n                    title: localize('Cashier Error'),\n                    cancel_button_text: undefined,\n                    confirm_button_text: localize('OK'),\n                    onConfirm: undefined,\n                    message: error_message,\n                });\n            }\n        },\n        [dismissError, history]\n    );\n\n    React.useEffect(() => {\n        // avoid resetting the text when dismissing the pop up\n        if (error.message) {\n            mapErrorToDetails(error.code, error.message);\n        }\n    }, [error.code, error.message, mapErrorToDetails]);\n\n    React.useEffect(() => {\n        setErrorVisibility(!!error.message);\n    }, [error.message]);\n\n    React.useEffect(() => {\n        return () => dismissError();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const setErrorVisibility = (is_error_visible: boolean) => {\n        setIsVisible(is_error_visible);\n    };\n\n    return (\n        <Dialog\n            title={details.title}\n            confirm_button_text={details.confirm_button_text}\n            cancel_button_text={details.cancel_button_text}\n            className={className}\n            onConfirm={() => {\n                if (typeof details.onConfirm === 'function') {\n                    details.onConfirm();\n                }\n                dismissError();\n            }}\n            onEscapeButtonCancel={dismissError}\n            onCancel={details.cancel_button_text ? dismissError : undefined}\n            disableApp={disableApp}\n            enableApp={enableApp}\n            is_visible={is_visible}\n            portal_element_id='modal_root'\n            dismissable={false}\n            has_close_icon={details.has_close_icon ?? false}\n        >\n            {/* to avoid the message disappearing before the pop-up */}\n            {/* use details.message instead of error.message */}\n            {/* since the setErrorVisibility hook gets called after error.message is removed */}\n            {details.message}\n        </Dialog>\n    );\n});\n\nexport default ErrorDialog;\n","import ErrorDialog from './error-dialog';\n\nexport default ErrorDialog;\n","import React from 'react';\nimport { Button, Icon, ButtonLink, StaticUrl, Text } from '@deriv/components';\nimport { isMobile } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport ErrorStore from '../../stores/error-store';\nimport './error.scss';\n\ntype TErrorComponentProps = {\n    button_link?: string;\n    button_text?: string;\n    footer?: JSX.Element;\n    header?: JSX.Element | string;\n    message?: JSX.Element;\n    onClickButton?: VoidFunction;\n};\n\ntype TErrorFields = {\n    [k: string]: string;\n};\n\nconst ErrorComponent = ({ header, message, button_link, onClickButton, button_text, footer }: TErrorComponentProps) => (\n    <div className='cashier__wrapper cashier__wrapper-error'>\n        <Icon icon='IcCashierError' className='error__icon' />\n        {header && (\n            <Text as='h2' color='loss-danger' weight='bold' align='center' className='error__header'>\n                {header}\n            </Text>\n        )}\n        {message && (\n            <Text as='p' align='center' size={isMobile() ? 'xxs' : 'xs'} line_height='s' className='cashier__paragraph'>\n                {message}\n            </Text>\n        )}\n        {button_link && (\n            <ButtonLink className='error__button' to={button_link} onClick={onClickButton} size='large'>\n                <span className='dc-btn__text'>{button_text}</span>\n            </ButtonLink>\n        )}\n        {!button_link && button_text && (\n            <Button className='error__button' onClick={onClickButton} text={button_text} primary large />\n        )}\n        {footer && (\n            <Text as='h2' size='xxs'>\n                {footer}\n            </Text>\n        )}\n    </div>\n);\n\nconst Error = ({\n    error,\n}: {\n    error: Pick<ErrorStore, 'code' | 'message'> &\n        Partial<Pick<ErrorStore, 'fields' | 'onClickButton' | 'setErrorMessage'>>;\n}) => {\n    const error_fields: TErrorFields = {\n        address_city: localize('Town/City'),\n        address_line_1: localize('First line of home address'),\n        address_postcode: localize('Postal Code/ZIP'),\n        address_state: localize('State/Province'),\n        email: localize('Email address'),\n        phone: localize('Telephone'),\n        residence: localize('Country of Residence'),\n    };\n\n    const onClickButton = () => {\n        if (typeof error.onClickButton === 'function') {\n            error.onClickButton();\n        }\n        clearErrorMessage();\n    };\n\n    const clearErrorMessage = () => {\n        error.setErrorMessage?.({ code: '', message: '' });\n    };\n\n    let AccountError;\n    switch (error.code) {\n        case 'InvalidToken':\n            AccountError = (\n                <ErrorComponent\n                    header={localize('Email verification failed')}\n                    message={\n                        <Localize i18n_default_text='The verification link you used is invalid or expired. Please request for a new one.' />\n                    }\n                    onClickButton={onClickButton}\n                    button_text={localize('Resend email')}\n                />\n            );\n            break;\n        case 'ASK_FIX_DETAILS':\n            AccountError = (\n                <ErrorComponent\n                    header={localize('Update your personal details')}\n                    message={\n                        <React.Fragment>\n                            <Localize\n                                i18n_default_text={\n                                    \"We can't validate your personal details because there is some information missing.\"\n                                }\n                            />\n                            &nbsp;\n                            {Array.isArray(error.fields) ? (\n                                <Localize\n                                    i18n_default_text={'Please update your {{details}} to continue.'}\n                                    values={{\n                                        details: error.fields\n                                            .map((field: string) => error_fields[field] || field)\n                                            .join(', '),\n                                        interpolation: { escapeValue: false },\n                                    }}\n                                />\n                            ) : (\n                                <Localize i18n_default_text={'Please update your details to continue.'} />\n                            )}\n                        </React.Fragment>\n                    }\n                    button_link='/account/personal-details'\n                    onClickButton={onClickButton}\n                    button_text={localize('Update my details')}\n                    footer={\n                        <Localize\n                            i18n_default_text='Need help? <0>Contact us</0>.'\n                            components={[<StaticUrl key={0} className='link' href='help-centre' is_document={false} />]}\n                        />\n                    }\n                />\n            );\n            break;\n        case 'WrongResponse':\n            AccountError = (\n                <ErrorComponent\n                    header={error.message}\n                    onClickButton={onClickButton}\n                    button_text={localize('Try again')}\n                />\n            );\n            break;\n        case 'PaymentAgentWithdrawError':\n            AccountError = <ErrorComponent header={error.message} onClickButton={onClickButton} />;\n            break;\n        default:\n            AccountError = <ErrorComponent header={error.message} />;\n            break;\n    }\n    return AccountError;\n};\n\nexport default Error;\n","import Error from './error';\n\nexport default Error;\n","import React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { Button, Icon, Text } from '@deriv/components';\nimport { useDepositLocked } from '@deriv/hooks';\nimport { routes, getCurrencyDisplayCode } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport { useStore, observer } from '@deriv/stores';\nimport { useCashierStore } from '../../stores/useCashierStores';\n\ntype TNoBalanceProps = RouteComponentProps & {\n    onClickDeposit?: () => void;\n};\n\nconst NoBalance = observer(({ history, onClickDeposit }: TNoBalanceProps) => {\n    const { client } = useStore();\n    const { currency } = client;\n    const { general_store } = useCashierStore();\n    const { setCashierTabIndex: setTabIndex } = general_store;\n    const is_deposit_locked = useDepositLocked();\n\n    const onClickDepositHandler = () => {\n        if (onClickDeposit) {\n            onClickDeposit();\n        } else {\n            // index of deposit tab in the cashier modal is 0\n            setTabIndex(0);\n            history.push(routes.cashier_deposit);\n        }\n    };\n\n    return (\n        <div className='cashier__wrapper cashier__no-balance'>\n            <Icon icon='IcCashierNoBalance' className='cashier__no-balance-icon' size={116} />\n            <Text as='h2' weight='bold' align='center'>\n                <Localize\n                    i18n_default_text='You have no funds in your {{currency}} account'\n                    values={{ currency: getCurrencyDisplayCode(currency) }}\n                />\n            </Text>\n            {!is_deposit_locked && (\n                <>\n                    <Text as='p' size='xs' line_height='s' align='center' className='cashier__text'>\n                        <Localize i18n_default_text='Please make a deposit to use this feature.' />\n                    </Text>\n                    <Button\n                        style={{ marginTop: '2rem' }}\n                        className='cashier__no-balance-button'\n                        has_effect\n                        text={localize('Deposit now')}\n                        onClick={onClickDepositHandler}\n                        primary\n                        large\n                    />\n                </>\n            )}\n        </div>\n    );\n});\n\nexport default withRouter(NoBalance);\n","import NoBalance from './no-balance';\n\nexport default NoBalance;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { formatMoney, getCurrencyDisplayCode, getDecimalPlaces } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { TReactMouseEvent } from '../../types';\nimport { useExchangeRate } from '@deriv/hooks';\n\ntype TPercentageSelectorProps = {\n    amount: number;\n    from_account?: string;\n    getCalculatedAmount: (amount: string, converted_amount: number) => void;\n    percentage: number;\n    should_percentage_reset: boolean;\n    to_account?: string;\n    from_currency: string;\n    to_currency: string;\n};\n\ntype TCalculateAmountInputEvent = { target: { id: number } };\n\nconst PercentageSelector = ({\n    amount,\n    from_account,\n    getCalculatedAmount,\n    percentage,\n    should_percentage_reset,\n    to_account,\n    from_currency,\n    to_currency,\n}: TPercentageSelectorProps) => {\n    const [selected_percentage, setSelectedPercentage] = React.useState<number | string>('0');\n    const { getRate } = useExchangeRate();\n    React.useEffect(() => {\n        if (should_percentage_reset) {\n            for (let i = 1; i <= 4; i++) {\n                const percentage_selector_block = document.getElementById(String(i));\n                if (percentage_selector_block)\n                    percentage_selector_block.style.backgroundColor = 'var(--general-section-1)';\n            }\n        }\n    }, [should_percentage_reset]);\n\n    React.useEffect(() => {\n        setSelectedPercentage(percentage || 0);\n    }, [percentage]);\n\n    React.useEffect(() => {\n        calculateAmount({ target: { id: 0 } }, 0);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [from_account, to_account]);\n\n    const calculateAmount = (e: TCalculateAmountInputEvent | TReactMouseEvent, percent: number) => {\n        let new_percentage = percent;\n        const is_percentage_selected = percent > 0 && percent <= Number(selected_percentage);\n        if (is_percentage_selected) new_percentage -= 25;\n\n        setSelectedPercentage(new_percentage || 0);\n        const from_rate = getRate(from_currency || '');\n        const to_rate = getRate(to_currency || '');\n        const converted_amount = (amount * (new_percentage / 100) * to_rate) / from_rate;\n        getCalculatedAmount(\n            (amount * (new_percentage / 100)).toFixed(getDecimalPlaces(from_currency)),\n            converted_amount\n        );\n\n        for (let i = 1; i <= 4; i++) {\n            const percentage_selector_block = document.getElementById(String(i));\n            if (percentage_selector_block) {\n                if (\n                    i < (e as TCalculateAmountInputEvent).target.id ||\n                    (i === Number((e as TCalculateAmountInputEvent).target.id) && !is_percentage_selected)\n                ) {\n                    percentage_selector_block.style.backgroundColor = 'var(--status-success)';\n                } else {\n                    percentage_selector_block.style.backgroundColor = 'var(--general-section-1)';\n                }\n            }\n        }\n    };\n    const format_amount = formatMoney(from_currency, amount, true);\n    const currency__display_code = getCurrencyDisplayCode(from_currency);\n    return (\n        <React.Fragment>\n            <div className='percentage-selector' data-testid='dt_percentage_selector_id'>\n                <div className='percentage-selector__block-container'>\n                    <Text color='prominent' size='xs' className='percentage-selector__text'>\n                        {'25%'}\n                    </Text>\n                    <div\n                        id='1'\n                        className='percentage-selector-block'\n                        onClick={e => calculateAmount(e, 25)}\n                        data-testid='dt_percentage_selector_block_id_1'\n                    />\n                </div>\n                <div className='percentage-selector__block-container'>\n                    <Text color='prominent' size='xs' className='percentage-selector__text'>\n                        {'50%'}\n                    </Text>\n                    <div\n                        id='2'\n                        className='percentage-selector-block'\n                        onClick={e => calculateAmount(e, 50)}\n                        data-testid='dt_percentage_selector_block_id_2'\n                    />\n                </div>\n                <div className='percentage-selector__block-container'>\n                    <Text color='prominent' size='xs' className='percentage-selector__text'>\n                        {'75%'}\n                    </Text>\n                    <div\n                        id='3'\n                        className='percentage-selector-block'\n                        onClick={e => calculateAmount(e, 75)}\n                        data-testid='dt_percentage_selector_block_id_3'\n                    />\n                </div>\n                <div className='percentage-selector__block-container'>\n                    <Text color='prominent' size='xs' className='percentage-selector__text'>\n                        <Localize i18n_default_text='All' />\n                    </Text>\n                    <div\n                        id='4'\n                        className='percentage-selector-block'\n                        onClick={e => calculateAmount(e, 100)}\n                        data-testid='dt_percentage_selector_block_id_4'\n                    />\n                </div>\n            </div>\n            <Text color='less-prominent' size='xxs' line_height='l' className='percentage-selector__text'>\n                <Localize\n                    i18n_default_text='{{selected_percentage}}% of available balance ({{format_amount}} {{currency__display_code}})'\n                    values={{ selected_percentage, format_amount, currency__display_code }}\n                />\n            </Text>\n        </React.Fragment>\n    );\n};\n\nexport default PercentageSelector;\n","import PercentageSelector from './percentage-selector';\nimport './percentage-selector.scss';\n\nexport default PercentageSelector;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { ButtonLink, Text, Icon } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { epochToMoment } from '@deriv/shared';\nimport { useStore, observer } from '@deriv/stores';\nimport { getStatus } from '../../constants/transaction-status';\nimport { useCashierStore } from '../../stores/useCashierStores';\nimport './recent-transaction.scss';\n\nconst RecentTransaction = observer(() => {\n    const { client } = useStore();\n    const { currency } = client;\n    const { transaction_history } = useCashierStore();\n    const { crypto_transactions, onMount, setIsCryptoTransactionsVisible } = transaction_history;\n\n    React.useEffect(() => {\n        onMount();\n    }, [onMount]);\n\n    if (!crypto_transactions.length) {\n        return null;\n    }\n    const { address_hash, transaction_hash, transaction_type, status_code, submit_date } = crypto_transactions[0];\n    const status = getStatus(transaction_hash, transaction_type, status_code);\n    const submit_date_moment = epochToMoment(submit_date).format('MMM D, YYYY');\n    const transaction_type_display_text = transaction_type[0].toUpperCase() + transaction_type.slice(1);\n    const address_hash_display_value = `${address_hash.substring(0, 4)}....${address_hash.substring(\n        address_hash.length - 4\n    )}`;\n\n    const amount = crypto_transactions[0].amount;\n\n    const onClickViewAll = () => {\n        setIsCryptoTransactionsVisible(true);\n    };\n\n    return (\n        <div className='recent-transaction__wrapper'>\n            <div className='cashier-recent-transaction'>\n                <Text weight='bold' as='p' line_height='s' size='xs'>\n                    <Localize i18n_default_text='Recent transactions' />\n                </Text>\n                <div className='cashier-recent-transaction__data-wrapper'>\n                    <Icon\n                        className='cashier-recent-transaction__icon'\n                        data_testid={transaction_type === 'deposit' ? 'dti_icon_cashier_add' : 'dti_icon_cashier_minus'}\n                        icon={transaction_type === 'deposit' ? 'IcCashierAdd' : 'IcCashierMinus'}\n                        size={32}\n                    />\n                    <div>\n                        <div className='cashier-recent-transaction__status-wrapper'>\n                            <Text as='p' size='xxs'>\n                                <Localize\n                                    i18n_default_text='{{transaction_type_display_text}} {{currency}}'\n                                    values={{\n                                        transaction_type_display_text,\n                                        currency,\n                                    }}\n                                />\n                            </Text>\n                            {status && (\n                                <div className='cashier-recent-transaction__status'>\n                                    <span\n                                        className={classNames(\n                                            'cashier-recent-transaction__status-indicator',\n                                            `cashier-recent-transaction__status-indicator-${status.renderer}`\n                                        )}\n                                    />\n                                    <Text as='p' size='xxxs'>\n                                        {status.name}\n                                    </Text>\n                                </div>\n                            )}\n                        </div>\n                        <Text as='p' size='xxxs' color='less-prominent' line_height='s'>\n                            <Localize\n                                i18n_default_text='{{amount}} {{currency}} on {{submit_date_moment}}'\n                                values={{\n                                    amount,\n                                    currency,\n                                    submit_date_moment,\n                                }}\n                            />\n                        </Text>\n                        <div className='cashier-recent-transaction__hash-wrapper'>\n                            <div className='cashier-recent-transaction__hash'>\n                                <Text as='p' size='xxxs' line_height='s'>\n                                    <Localize i18n_default_text='Address:' />\n                                    &nbsp;\n                                </Text>\n                                <Text as='p' size='xxxs' color='red' line_height='s'>\n                                    {address_hash_display_value}\n                                </Text>\n                            </div>\n\n                            <div className='cashier-recent-transaction__hash'>\n                                <Text as='p' size='xxxs' line_height='xs'>\n                                    <Localize i18n_default_text='Transaction hash:' />\n                                    &nbsp;\n                                </Text>\n                                {status && (\n                                    <Text as='p' size='xxxs' color='red' line_height='s'>\n                                        {status.transaction_hash}\n                                    </Text>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <ButtonLink\n                    to='#'\n                    className='dc-btn--secondary cashier-recent-transaction__view-all-button'\n                    onClick={onClickViewAll}\n                >\n                    <Text weight='bold' as='p' size='xxs'>\n                        <Localize i18n_default_text='View all' />\n                    </Text>\n                </ButtonLink>\n            </div>\n        </div>\n    );\n});\n\nexport default RecentTransaction;\n","import RecentTransaction from './recent-transaction';\n\nexport default RecentTransaction;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { DesktopWrapper, MobileWrapper, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { isMobile } from '@deriv/shared';\nimport { TSideNotesProps } from '../../types';\nimport './side-note.scss';\n\ntype TSideNoteTitle = {\n    children_length?: number;\n    side_notes_length?: number;\n    title?: string | JSX.Element;\n};\n\ntype TSideNoteBullet = React.PropsWithChildren<{\n    id: number;\n}>;\n\ntype TSideNoteProps = React.PropsWithChildren<{\n    className?: string;\n    has_bullets?: boolean;\n    has_title?: boolean;\n    is_mobile?: boolean;\n    side_notes?: TSideNotesProps;\n    title?: string | JSX.Element;\n}>;\n\nconst SideNoteTitle = ({ children_length, side_notes_length, title }: TSideNoteTitle) => {\n    const length_of_notes = children_length || side_notes_length || 0;\n\n    return (\n        <Text className='side-note-legacy__title' weight='bold' as='p'>\n            {title ||\n                (length_of_notes > 1 ? <Localize i18n_default_text='Notes' /> : <Localize i18n_default_text='Note' />)}\n        </Text>\n    );\n};\n\nconst SideNoteBullet = ({ children, id }: TSideNoteBullet) => (\n    <div className='side-note-legacy__bullet-wrapper' data-testid={`dt_side_note_bullet_wrapper_${id}`}>\n        <div className='side-note-legacy__bullet' data-testid={`dt_side_note_bullet_${id}`} />\n        <div>{children}</div>\n    </div>\n);\n\n/** @deprecated Use `SideNote` from `@deriv/components` package instead. */\nconst SideNote = ({\n    children,\n    className,\n    has_bullets = true,\n    has_title = true,\n    is_mobile,\n    side_notes,\n    title,\n}: TSideNoteProps) => {\n    const Wrapper = is_mobile ? MobileWrapper : DesktopWrapper;\n\n    return (\n        <>\n            {(children || side_notes?.length) && (\n                <Wrapper>\n                    <div\n                        className={classNames(\n                            'side-note-legacy',\n                            { 'side-note-legacy--mobile': isMobile() },\n                            className\n                        )}\n                    >\n                        {has_title && (\n                            <SideNoteTitle\n                                title={title}\n                                children_length={Array.isArray(children) ? children?.length : 1}\n                                side_notes_length={side_notes?.length}\n                            />\n                        )}\n\n                        {children && <>{children}</>}\n\n                        {!children &&\n                            side_notes?.map((note, i) =>\n                                has_bullets ? (\n                                    <SideNoteBullet id={i} key={i}>\n                                        {note}\n                                    </SideNoteBullet>\n                                ) : (\n                                    <Text key={i} className='side-note-legacy__text' size='xxs' as='p'>\n                                        {note}\n                                    </Text>\n                                )\n                            )}\n                    </div>\n                </Wrapper>\n            )}\n        </>\n    );\n};\n\nexport default SideNote;\n","import SideNote from './side-note';\n\nexport default SideNote;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Button, Checkbox, Icon, Text } from '@deriv/components';\nimport { isMobile } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\nimport ErrorDialog from 'Components/error-dialog';\nimport { TError } from '../../types';\nimport './transfer-confirm.scss';\n\ntype TRowProps = {\n    item_key?: string | number;\n    label: string | string[];\n    value: string | string[] | JSX.Element;\n    key: string | number;\n};\n\ntype WarningBulletProps = {\n    children: JSX.Element | string;\n};\n\ntype TTransferConfirmProps = {\n    data: TRowProps[];\n    error?: TError | Record<string, never>;\n    header?: string;\n    is_payment_agent_withdraw?: boolean;\n    onClickBack?: VoidFunction;\n    onClickConfirm?: VoidFunction;\n    warning_messages?: JSX.Element[];\n};\n\nconst Row = ({ item_key, label, value }: TRowProps) => (\n    <div className='transfer-confirm__row'>\n        {Array.isArray(label) ? (\n            <div className='transfer-confirm__row-label'>\n                {label.map((label_text, idx) => (\n                    <Text as='div' key={idx} size='xs' align='left'>\n                        {label_text}\n                    </Text>\n                ))}\n            </div>\n        ) : (\n            <Text size='xs'>{label}</Text>\n        )}\n        {Array.isArray(value) ? (\n            <div className='transfer-confirm__row-value'>\n                {value.map((v, idx) => (\n                    <Text as='div' key={idx} size='xs' weight='bold' align='right'>\n                        {v}\n                    </Text>\n                ))}\n            </div>\n        ) : (\n            <Text\n                size='xs'\n                weight='bold'\n                align='right'\n                className={classNames({\n                    description: item_key === 'description',\n                })}\n            >\n                {value}\n            </Text>\n        )}\n    </div>\n);\n\nconst WarningBullet = ({ children }: WarningBulletProps) => (\n    <div className='transfer-confirm__warnings-bullet-wrapper'>\n        <div className='transfer-confirm__warnings-bullet' />\n        {children}\n    </div>\n);\n\nconst TransferConfirm = ({\n    data,\n    error,\n    is_payment_agent_withdraw,\n    onClickBack,\n    onClickConfirm,\n}: TTransferConfirmProps) => {\n    const [is_transfer_consent_checked, setIsTransferConsentChecked] = React.useState(false);\n\n    const warning_messages = [\n        <Localize\n            i18n_default_text='Please ensure <0>all details</0> are <0>correct</0> before making your transfer.'\n            components={[<strong key={0} />]}\n            key={0}\n        />,\n        <Localize\n            i18n_default_text='We <0>do not</0> guarantee a refund if you make a wrong transfer.'\n            components={[<strong key={0} />]}\n            key={1}\n        />,\n    ];\n\n    return (\n        <div\n            className={classNames('cashier__wrapper--align-center', {\n                'transfer-confirm': !is_payment_agent_withdraw,\n            })}\n        >\n            <Icon\n                icon='IcCashierRedWarning'\n                className='transfer-confirm__warning-icon'\n                data_testid='dt_red_warning_icon'\n            />\n            <Text\n                as='h2'\n                color='loss-danger'\n                weight='bold'\n                align='center'\n                className='transfer-confirm__warning-icon__description'\n                size={isMobile() ? 'xs' : 's'}\n            >\n                {is_payment_agent_withdraw\n                    ? localize('Funds transfer information')\n                    : localize('Check transfer information')}\n            </Text>\n            <div className='transfer-confirm__column-wrapper'>\n                <div className='transfer-confirm__column'>\n                    {data.map((d, key) => (\n                        <Row item_key={key} label={d.label} value={d.value} key={key} />\n                    ))}\n                </div>\n            </div>\n            <div className='transfer-confirm__warnings'>\n                {warning_messages.map((warning, idx) => (\n                    <WarningBullet key={idx}>\n                        <Text as='p' size='xxs' line_height='m' color='loss-danger' align='left'>\n                            {warning}\n                        </Text>\n                    </WarningBullet>\n                ))}\n            </div>\n            <div className='transfer-confirm__checkbox'>\n                <Checkbox\n                    name='transfer_consent'\n                    value={is_transfer_consent_checked}\n                    onChange={() => setIsTransferConsentChecked(!is_transfer_consent_checked)}\n                    label={\n                        is_payment_agent_withdraw\n                            ? localize('I confirm that I have verified the payment agent’s transfer information.')\n                            : localize('I confirm that I have verified the client’s transfer information.')\n                    }\n                    classNameLabel='transfer-confirm__checkbox-label'\n                />\n            </div>\n            <div className='transfer-confirm__submit'>\n                <Button large text={localize('Back')} onClick={onClickBack} secondary />\n                <Button\n                    large\n                    text={localize('Transfer now')}\n                    onClick={onClickConfirm}\n                    primary\n                    disabled={!is_transfer_consent_checked}\n                />\n            </div>\n            <ErrorDialog error={error} />\n        </div>\n    );\n};\n\nexport default TransferConfirm;\n","import TransferConfirm from './transfer-confirm';\n\nexport default TransferConfirm;\n","import React from 'react';\nimport { Modal, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport './usdt-side-note.scss';\n\ntype TUSDTSideNoteProps = {\n    type: 'eusdt' | 'usdt';\n};\n\nconst USDTSideNote = ({ type }: TUSDTSideNoteProps) => {\n    const [is_modal_open, setModalOpen] = React.useState(false);\n\n    const handleLearnMore = () => {\n        setModalOpen(!is_modal_open);\n    };\n\n    return (\n        <div className='cashier__usdt-side-note'>\n            <Text as='h2' weight='bold' color='prominent'>\n                {type === 'eusdt' && <Localize i18n_default_text='About Tether (Ethereum)' />}\n                {type === 'usdt' && <Localize i18n_default_text='About Tether (Omni)' />}\n            </Text>\n            {type === 'eusdt' && (\n                <Text as='p' size='xxs'>\n                    <Localize\n                        i18n_default_text='Deriv currently supports withdrawals of Tether eUSDT to Ethereum wallet. To ensure a successful transaction, enter a wallet address compatible with the tokens you wish to withdraw. <0>Learn more</0>'\n                        components={[<a key={0} className='link link--orange' onClick={handleLearnMore} />]}\n                    />\n                </Text>\n            )}\n            {type === 'usdt' && (\n                <Text as='p' size='xxs'>\n                    <Localize\n                        i18n_default_text='Deriv currently supports withdrawals of Tether USDT to Omni wallet. To ensure a successful transaction, enter a wallet address compatible with the tokens you wish to withdraw. <0>Learn more</0>'\n                        components={[<a key={0} className='link link--orange' onClick={handleLearnMore} />]}\n                    />\n                </Text>\n            )}\n            <Modal\n                className='usdt-note-modal'\n                title={<Localize i18n_default_text='About Tether' />}\n                has_close_icon\n                is_open={is_modal_open}\n                small\n                toggleModal={handleLearnMore}\n            >\n                <Modal.Body>\n                    <Text as='p' size='xs'>\n                        <Localize i18n_default_text='Tether is a blockchain-enabled platform designed to facilitate the use of fiat currencies in a digital manner.' />\n                    </Text>\n                    {type === 'eusdt' && (\n                        <div>\n                            <li className='title'>\n                                <Localize i18n_default_text='Tether on Ethereum (eUSDT)' />\n                            </li>\n                            <Text as='p' size='xs' className='description'>\n                                <Localize i18n_default_text='Tether on the Ethereum blockchain, as an ERC20 token, is a newer transport layer, which now makes Tether available in Ethereum smart contracts. As a standard ERC20 token, it can also be sent to any Ethereum address.' />\n                            </Text>\n                        </div>\n                    )}\n                    {type === 'usdt' && (\n                        <div>\n                            <li className='title'>\n                                <Localize i18n_default_text='Tether on Omni Layer (USDT)' />\n                            </li>\n                            <Text as='p' className='description' size='xs'>\n                                <Localize i18n_default_text='Tether was originally created to use the bitcoin network as its transport protocol ‒ specifically, the Omni Layer ‒ to allow transactions of tokenised traditional currency.' />\n                            </Text>\n                        </div>\n                    )}\n                </Modal.Body>\n            </Modal>\n        </div>\n    );\n};\n\nexport default USDTSideNote;\n","import USDTSideNote from './usdt-side-note';\n\nexport default USDTSideNote;\n","import React from 'react';\nimport { StaticUrl } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { TStatusCode, TTransactionType } from '../types';\n\nexport const getStatus = (transaction_hash: string, transaction_type: TTransactionType, status_code: TStatusCode) => {\n    const formatted_transaction_hash = transaction_hash\n        ? `${transaction_hash.substring(0, 4)}....${transaction_hash.substring(transaction_hash.length - 4)}`\n        : localize('Pending');\n    const status_list = {\n        deposit: {\n            CONFIRMED: {\n                name: localize('Successful'),\n                description: localize('Your deposit is successful.'),\n                renderer: 'successful',\n                transaction_hash: formatted_transaction_hash,\n            },\n            ERROR: {\n                name: localize('Unsuccessful'),\n                description: localize(\n                    'Your deposit is unsuccessful due to an error on the blockchain. Please contact your crypto wallet service provider for more info.'\n                ),\n                renderer: 'unsuccessful',\n                transaction_hash: localize('NA'),\n            },\n            PENDING: {\n                name: localize('In process'),\n                description: localize('We’ve received your request and are waiting for more blockchain confirmations.'),\n                renderer: 'in-process',\n                transaction_hash: formatted_transaction_hash,\n            },\n        },\n        withdrawal: {\n            CANCELLED: {\n                name: localize('Cancelled'),\n                description: localize('You’ve cancelled your withdrawal request.'),\n                renderer: 'unsuccessful',\n                transaction_hash: localize('NA'),\n            },\n            ERROR: {\n                name: localize('Unsuccessful'),\n                description: (\n                    <Localize\n                        key={0}\n                        i18n_default_text='Your withdrawal is unsuccessful due to an error on the blockchain. Please <0>contact us</0> via live chat for more info.'\n                        values={{\n                            interpolation: { escapeValue: false },\n                        }}\n                        components={[<StaticUrl key={0} className='link' href='contact-us/?is_livechat_open=true' />]}\n                    />\n                ),\n                renderer: 'unsuccessful',\n                transaction_hash: localize('NA'),\n            },\n            LOCKED: {\n                name: localize('In review'),\n                description: localize(\n                    \"We're reviewing your withdrawal request. You may still cancel this transaction if you wish. Once we start processing, you won't be able to cancel.\"\n                ),\n                renderer: 'in-review',\n                transaction_hash: formatted_transaction_hash,\n            },\n            PERFORMING_BLOCKCHAIN_TXN: {\n                name: localize('In process'),\n                description: localize('We’re sending your request to the blockchain.'),\n                renderer: 'in-process',\n                transaction_hash: formatted_transaction_hash,\n            },\n            PROCESSING: {\n                name: localize('In process'),\n                description: localize('We’re awaiting confirmation from the blockchain.'),\n                renderer: 'in-process',\n                transaction_hash: formatted_transaction_hash,\n            },\n            REJECTED: {\n                name: localize('Unsuccessful'),\n                description: localize(\n                    \"Your withdrawal is unsuccessful. We've sent you an email with more information.\"\n                ),\n                renderer: 'unsuccessful',\n                transaction_hash: localize('NA'),\n            },\n            SENT: {\n                name: localize('Successful'),\n                description: localize('Your withdrawal is successful.'),\n                renderer: 'successful',\n                transaction_hash: formatted_transaction_hash,\n            },\n            VERIFIED: {\n                name: localize('In process'),\n                description: localize('We’re processing your withdrawal.'),\n                renderer: 'in-process',\n                transaction_hash: formatted_transaction_hash,\n            },\n        },\n    };\n\n    const isDeposit = (status: TStatusCode): status is keyof typeof status_list.deposit =>\n        Object.keys(status_list.deposit).includes(status);\n    const isWithdrawal = (status: TStatusCode): status is keyof typeof status_list.withdrawal =>\n        Object.keys(status_list.withdrawal).includes(status);\n\n    if (transaction_type === 'deposit' && isDeposit(status_code)) {\n        return status_list[transaction_type][status_code];\n    } else if (transaction_type === 'withdrawal' && isWithdrawal(status_code)) {\n        return status_list[transaction_type][status_code];\n    }\n\n    return null;\n};\n","import React from 'react';\nimport Derived from './ic-appstore-derived.svg';\nimport Financial from './ic-appstore-financial.svg';\nimport Options from './ic-appstore-options.svg';\nimport CFDs from './ic-appstore-cfds.svg';\nimport SwapFree from './ic-appstore-swap-free.svg';\n\nexport interface IconProps<T> {\n    icon: T;\n    className?: string;\n    size?: number;\n    onClick?: () => void;\n}\n\nexport const PlatformIcons = {\n    Derived,\n    Financial,\n    Options,\n    CFDs,\n    SwapFree,\n};\n\nconst TradingPlatformIcon = ({ icon, className, size, onClick }: IconProps<keyof typeof PlatformIcons>) => {\n    const PlatformIcon = PlatformIcons[icon] as React.ElementType;\n\n    return PlatformIcon ? (\n        <PlatformIcon className={className} style={{ width: size, height: size }} onClick={onClick} />\n    ) : null;\n};\n\nexport default TradingPlatformIcon;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M0 23h32v3a6 6 0 01-6 6H6a6 6 0 01-6-6v-3z\" fill=\"#2A3052\" /><path d=\"M26.7 23H0V6.18l29.91-4.73c.22.2.43.4.62.62L26.7 23z\" fill=\"#0364B9\" /><path d=\"M0 6a6 6 0 016-6h20c1.5 0 2.86.55 3.92 1.45L0 6.17V6zm26.7 17l3.83-20.93A5.97 5.97 0 0132 6v17h-5.3z\" fill=\"#0A559E\" /><path d=\"M7.34 9.68c.15.27.31.6.5.99.19.38.38.8.58 1.26.21.45.41.9.61 1.38l.57 1.33.56-1.33a78.87 78.87 0 011.19-2.64l.5-.99h1.7a52.27 52.27 0 01.4 4l.15 2.22.12 2.1h-1.83c-.02-.8-.05-1.69-.1-2.64-.03-.95-.1-1.91-.17-2.88a517.56 517.56 0 01-1.01 2.34 108.94 108.94 0 01-.9 2.12h-1.3a118.46 118.46 0 00-.92-2.12l-.52-1.22L7 12.48c-.08.97-.14 1.93-.18 2.88L6.71 18H4.9L5 15.9l.15-2.22a47.67 47.67 0 01.4-4h1.8zm14.02 0v1.6h-2.51V18h-1.88v-6.72h-2.5v-1.6h6.89zm3.96 5.87a1.18 1.18 0 00-.16-.61c-.1-.18-.28-.34-.54-.46a3.8 3.8 0 00-1.03-.27 11.46 11.46 0 00-1.63-.1 50.7 50.7 0 00.35-4.43h4.5v1.5h-3a25.92 25.92 0 01-.12 1.54 4.4 4.4 0 012.58.83c.56.46.84 1.11.84 1.94 0 .39-.07.74-.2 1.07a2.3 2.3 0 01-.62.85 2.9 2.9 0 01-1.03.57 4.56 4.56 0 01-2.13.15 6.41 6.41 0 01-.68-.1 7.3 7.3 0 01-.59-.14 2.3 2.3 0 01-.4-.14l.32-1.48a5.02 5.02 0 001.97.38c.55 0 .95-.1 1.2-.32.24-.22.37-.48.37-.78zM10.87 28.81l.15.02h.21c.47 0 .82-.12 1.04-.36.23-.23.34-.56.34-.98 0-.43-.1-.76-.32-.99-.22-.22-.56-.33-1.03-.33a3.37 3.37 0 00-.39.02v2.62zm2.7-1.32c0 .36-.05.68-.16.95a1.73 1.73 0 01-.48.66 2 2 0 01-.75.4 3.5 3.5 0 01-1 .13c-.16 0-.36 0-.58-.02a4.51 4.51 0 01-.66-.09v-4.05a9.16 9.16 0 011.28-.1c.35 0 .67.04.96.12.3.08.54.2.75.38.2.17.37.39.48.66.11.27.17.59.17.96zm2-2.12c.63 0 1.1.11 1.44.34.33.22.5.56.5 1.03 0 .29-.07.53-.2.71-.14.18-.33.32-.58.43a5.31 5.31 0 01.53.78 10.05 10.05 0 01.5.92h-1.05a49.79 49.79 0 00-.23-.42 6.82 6.82 0 00-.24-.4 7.53 7.53 0 00-.24-.38 3.8 3.8 0 00-.24-.32h-.47v1.52h-.93v-4.1a5.31 5.31 0 01.63-.09 8.2 8.2 0 01.59-.02zm.06.8a2.63 2.63 0 00-.34.02v1.12h.27c.35 0 .6-.04.75-.13.16-.09.23-.24.23-.45 0-.2-.07-.35-.23-.43a1.38 1.38 0 00-.68-.13zm3.88 3.4a31.27 31.27 0 01-.94-2.2 58.21 58.21 0 01-.72-1.95h1.03l.26.78.3.83.28.79.26.65a17.1 17.1 0 00.54-1.44 96.8 96.8 0 00.55-1.61h1l-.32.9a37.71 37.71 0 01-.86 2.17l-.48 1.09h-.9z\" fill=\"#fff\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M0 23h32v3a6 6 0 01-6 6H6a6 6 0 01-6-6v-3z\" fill=\"#71BD0E\" /><path d=\"M26.7 23H0V6.18l29.91-4.73c.22.2.43.4.62.62L26.7 23z\" fill=\"#0364B9\" /><path d=\"M0 6a6 6 0 016-6h20c1.5 0 2.86.55 3.92 1.45L0 6.17V6zm26.7 17l3.83-20.93A5.97 5.97 0 0132 6v17h-5.3z\" fill=\"#0A559E\" /><path d=\"M7.34 9.68c.15.27.31.6.5.99.19.38.38.8.58 1.26.21.45.41.9.61 1.38l.57 1.33.56-1.33a78.87 78.87 0 011.19-2.64l.5-.99h1.7a52.27 52.27 0 01.4 4l.15 2.22.12 2.1h-1.83c-.02-.8-.05-1.69-.1-2.64-.03-.95-.1-1.91-.17-2.88a517.56 517.56 0 01-1.01 2.34 108.94 108.94 0 01-.9 2.12h-1.3a118.46 118.46 0 00-.92-2.12l-.52-1.22L7 12.48c-.08.97-.14 1.93-.18 2.88L6.71 18H4.9L5 15.9l.15-2.22a47.67 47.67 0 01.4-4h1.8zm14.02 0v1.6h-2.51V18h-1.88v-6.72h-2.5v-1.6h6.89zm3.96 5.87a1.18 1.18 0 00-.16-.61c-.1-.18-.28-.34-.54-.46a3.8 3.8 0 00-1.03-.27 11.46 11.46 0 00-1.63-.1 50.7 50.7 0 00.35-4.43h4.5v1.5h-3a25.92 25.92 0 01-.12 1.54 4.4 4.4 0 012.58.83c.56.46.84 1.11.84 1.94 0 .39-.07.74-.2 1.07a2.3 2.3 0 01-.62.85 2.9 2.9 0 01-1.03.57 4.56 4.56 0 01-2.13.15 6.41 6.41 0 01-.68-.1 7.3 7.3 0 01-.59-.14 2.3 2.3 0 01-.4-.14l.32-1.48a5.02 5.02 0 001.97.38c.55 0 .95-.1 1.2-.32.24-.22.37-.48.37-.78zM11.54 29.58v-4.16h2.78v.79h-1.84v.87h1.64v.78h-1.64v1.72h-.94zm3.45-4.16h.93v4.16H15v-4.16zm4.68 4.16a20.92 20.92 0 00-.87-1.41 14.33 14.33 0 00-1-1.32v2.73h-.92v-4.16h.77a7.33 7.33 0 01.92 1.1 15.66 15.66 0 01.96 1.35v-2.45h.93v4.16h-.79z\" fill=\"#fff\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 32 32\" {...props}><path fill=\"var(--text-prominent)\" d=\"M0 6a6 6 0 016-6h20a6 6 0 016 6v20a6 6 0 01-6 6H6a6 6 0 01-6-6V6z\" /><path fill=\"var(--text-general)\" d=\"M6 0a6 6 0 00-6 6v.17l29.91-4.72A5.98 5.98 0 0026 0H6zm24.53 2.07L25.04 32H26a6 6 0 006-6V6c0-1.5-.55-2.88-1.47-3.93z\" /><path fill=\"#EF8933\" d=\"M17 19c0-1.1.9-2 2-2h4a2 2 0 012 2v4a2 2 0 01-2 2h-4a2 2 0 01-2-2v-4z\" /><path fill=\"#4B6FA8\" d=\"M7 19c0-1.1.9-2 2-2h4a2 2 0 012 2v4a2 2 0 01-2 2H9a2 2 0 01-2-2v-4z\" /><path fill=\"#76C0E3\" d=\"M17 9c0-1.1.9-2 2-2h4a2 2 0 012 2v4a2 2 0 01-2 2h-4a2 2 0 01-2-2V9z\" /><path fill=\"#FF444F\" d=\"M7 9c0-1.1.9-2 2-2h4a2 2 0 012 2v4a2 2 0 01-2 2H9a2 2 0 01-2-2V9z\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M0 23h32v3a6 6 0 01-6 6H6a6 6 0 01-6-6v-3z\" fill=\"#FF8C00\" /><path d=\"M26.7 23H0V6.18l29.91-4.73c.22.2.43.4.62.62L26.7 23z\" fill=\"#0364B9\" /><path d=\"M0 6a6 6 0 016-6h20c1.5 0 2.86.55 3.92 1.45L0 6.17V6zm26.7 17l3.83-20.93A5.97 5.97 0 0132 6v17h-5.3z\" fill=\"#0A559E\" /><path d=\"M7.35 9.68l.49.99a44.57 44.57 0 011.2 2.64l.56 1.33.57-1.33a78.87 78.87 0 011.18-2.64l.5-.99h1.71a52.27 52.27 0 01.4 4l.14 2.22.12 2.1H12.4l-.1-2.64c-.04-.95-.1-1.91-.18-2.88a517.56 517.56 0 01-1 2.34 108.94 108.94 0 01-.9 2.12H8.9a118.46 118.46 0 00-.92-2.12l-.51-1.22L7 12.48c-.08.97-.14 1.93-.18 2.88L6.72 18H4.9l.1-2.1.15-2.22.18-2.14c.07-.68.15-1.3.23-1.86h1.79zm14 0v1.6h-2.5V18h-1.87v-6.72h-2.51v-1.6h6.89zm3.97 5.87a1.18 1.18 0 00-.15-.61c-.1-.18-.29-.34-.54-.46a3.8 3.8 0 00-1.04-.27 11.46 11.46 0 00-1.63-.1 50.7 50.7 0 00.35-4.43h4.5v1.5h-3a25.92 25.92 0 01-.12 1.54 4.4 4.4 0 012.58.83c.56.46.84 1.11.84 1.94 0 .39-.07.74-.2 1.07a2.3 2.3 0 01-.62.85 2.9 2.9 0 01-1.03.57 4.56 4.56 0 01-2.12.15 6.41 6.41 0 01-.69-.1 7.3 7.3 0 01-.58-.14 2.3 2.3 0 01-.41-.14l.32-1.48a5.02 5.02 0 001.97.38c.55 0 .95-.1 1.2-.32s.37-.48.37-.78zm-14.3 14.12c-.68 0-1.2-.19-1.55-.57-.36-.37-.53-.9-.53-1.6 0-.34.05-.65.16-.91a1.84 1.84 0 011.12-1.11 2.42 2.42 0 011.32-.1c.15.02.27.05.38.08a1.68 1.68 0 01.43.19l-.27.76a2.25 2.25 0 00-.45-.18 2.1 2.1 0 00-.58-.07c-.14 0-.29.02-.43.07a.97.97 0 00-.36.24c-.1.1-.19.24-.25.4a1.72 1.72 0 00-.1.62c0 .19.02.37.06.54.04.16.11.3.2.42.1.12.22.22.38.29.15.07.33.1.55.1a2.52 2.52 0 00.65-.08 1.77 1.77 0 00.22-.07l.18-.08.26.75a2.2 2.2 0 01-.56.21c-.24.07-.52.1-.84.1zm1.99-.09v-4.15h2.78v.78h-1.84v.87h1.64v.79h-1.65v1.72h-.93zm4.38-.76l.15.02h.21c.47 0 .81-.12 1.04-.36.23-.23.34-.56.34-.98 0-.43-.1-.76-.32-.99-.22-.22-.56-.33-1.03-.33a3.37 3.37 0 00-.39.02v2.62zm2.7-1.32c0 .36-.05.68-.16.95a1.73 1.73 0 01-.48.66 2 2 0 01-.75.4 3.5 3.5 0 01-1 .13c-.17 0-.36 0-.59-.02a4.51 4.51 0 01-.66-.09v-4.05a9.16 9.16 0 011.28-.1c.36 0 .68.04.97.12.29.08.54.2.75.38.2.17.37.39.48.66.11.27.17.59.17.96zm1.63 1.44a.9.9 0 00.35-.04c.07-.04.1-.1.1-.2 0-.06-.04-.12-.13-.18a2.31 2.31 0 00-.4-.18 4.45 4.45 0 01-.38-.16 1.18 1.18 0 01-.3-.2.84.84 0 01-.18-.28 1.03 1.03 0 01-.06-.4c0-.3.1-.52.33-.7.22-.17.52-.25.9-.25a2.75 2.75 0 01.97.16l-.15.7a3.2 3.2 0 00-.34-.1 1.8 1.8 0 00-.41-.04c-.28 0-.42.07-.42.23 0 .04 0 .07.02.1a.23.23 0 00.07.08 1.77 1.77 0 00.38.18c.2.07.36.14.49.22.13.06.23.14.3.22.07.08.13.17.15.27.04.1.05.22.05.35a.8.8 0 01-.35.7c-.23.17-.56.25-1 .25a2.9 2.9 0 01-.7-.07 2.85 2.85 0 01-.38-.12l.15-.73a2.41 2.41 0 00.94.2z\" fill=\"#fff\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M26 0H6a6 6 0 00-6 6v17.5h32V6a6 6 0 00-6-6z\" fill=\"#0364B9\" /><path d=\"M6 0a6 6 0 00-6 6v.17l29.91-4.72A5.98 5.98 0 0026 0H6zm26 6c0-1.5-.55-2.88-1.47-3.93L26.6 23.5H32V6z\" fill=\"#0A559E\" /><path d=\"M0 23h32v3a6 6 0 01-6 6H6a6 6 0 01-6-6v-3z\" fill=\"#0CC\" /><path d=\"M7.35 9.68l.49.99a44.57 44.57 0 011.2 2.64l.56 1.33.57-1.33a78.87 78.87 0 011.18-2.64l.5-.99h1.71a52.27 52.27 0 01.4 4l.14 2.22.12 2.1H12.4l-.1-2.64c-.04-.95-.1-1.91-.18-2.88a517.56 517.56 0 01-1 2.34 108.94 108.94 0 01-.9 2.12H8.9a118.46 118.46 0 00-.92-2.12l-.51-1.22L7 12.48c-.08.97-.14 1.93-.18 2.88L6.72 18H4.9l.1-2.1.15-2.22.18-2.14c.07-.68.15-1.3.23-1.86h1.79zm14 0v1.6h-2.5V18h-1.87v-6.72h-2.51v-1.6h6.89zm3.97 5.87a1.18 1.18 0 00-.15-.61c-.1-.18-.29-.34-.54-.46a3.8 3.8 0 00-1.04-.27 11.46 11.46 0 00-1.63-.1 50.7 50.7 0 00.35-4.43h4.5v1.5h-3a25.92 25.92 0 01-.12 1.54 4.4 4.4 0 012.58.83c.56.46.84 1.11.84 1.94 0 .39-.07.74-.2 1.07a2.3 2.3 0 01-.62.85 2.9 2.9 0 01-1.03.57 4.56 4.56 0 01-2.12.15 6.41 6.41 0 01-.69-.1 7.3 7.3 0 01-.58-.14 2.3 2.3 0 01-.41-.14l.32-1.48a5.02 5.02 0 001.97.38c.55 0 .95-.1 1.2-.32s.37-.48.37-.78zM11.31 28.87c.13 0 .24 0 .32-.03a.69.69 0 00.21-.09.32.32 0 00.11-.14.48.48 0 00.03-.17c0-.14-.06-.25-.19-.34-.13-.09-.35-.19-.66-.3a5.76 5.76 0 01-.4-.15 1.63 1.63 0 01-.38-.24 1.17 1.17 0 01-.26-.34 1.09 1.09 0 01-.1-.5 1.11 1.11 0 01.41-.91c.14-.1.3-.18.48-.24.2-.06.4-.09.64-.09a2.59 2.59 0 011.23.29l-.27.74a2.33 2.33 0 00-.39-.16 1.58 1.58 0 00-.51-.07.93.93 0 00-.49.1c-.1.05-.14.15-.14.28 0 .07.02.14.05.19.04.05.09.1.15.14l.23.12.29.1c.22.08.4.16.56.24.16.07.3.16.4.27a.97.97 0 01.24.36c.05.14.08.31.08.51 0 .4-.14.7-.41.91-.27.21-.68.32-1.23.32-.18 0-.35-.01-.5-.04a2.48 2.48 0 01-.69-.18 2.41 2.41 0 01-.2-.1l.26-.74c.13.06.28.13.46.18a2.5 2.5 0 00.67.08zm5.09-3l.15.56.2.63.2.66c.06.22.13.43.2.62a18.97 18.97 0 00.3-1.41 62.02 62.02 0 00.28-1.5h.97a40.98 40.98 0 01-.49 2.11c-.18.72-.37 1.4-.59 2.04h-.85a28.26 28.26 0 01-.41-1.2l-.4-1.27-.38 1.27c-.13.42-.26.82-.4 1.2h-.86a32 32 0 01-.6-2.04c-.17-.71-.33-1.42-.47-2.11h1.01a43.02 43.02 0 00.28 1.5 58.65 58.65 0 00.33 1.4 12.62 12.62 0 00.4-1.28l.18-.63.15-.55h.8zm2.9 3.71v-4.15h2.78v.78h-1.84v.87h1.64v.79h-1.64v1.72h-.94z\" fill=\"#fff\" /></svg>);","import React from 'react';\nimport { Icon } from '@deriv/components';\nimport TradingPlatformIcon from 'Assets/svgs/trading-platform';\nimport { TAccountsList } from '../../types';\n\ntype TAccountPlatformIcon = {\n    size: number;\n    account: TAccountsList['account'];\n    icon_class_name?: string;\n    appstore_icon_class_name?: string;\n    appstoreIconOnClickHandler?: () => void;\n};\n\nconst AccountPlatformIcon = ({\n    account,\n    size,\n    icon_class_name,\n    appstore_icon_class_name,\n    appstoreIconOnClickHandler,\n}: TAccountPlatformIcon) => {\n    return account.is_mt && account.platform_icon ? (\n        <TradingPlatformIcon\n            icon={account.platform_icon}\n            size={size}\n            className={appstore_icon_class_name}\n            onClick={appstoreIconOnClickHandler}\n        />\n    ) : (\n        <Icon\n            icon={account.platform_icon || `IcCurrency-${account?.currency?.toLowerCase()}`}\n            size={size}\n            className={icon_class_name}\n            data_testid={`dt_account_platform_icon_${\n                account.platform_icon || `currency_${account?.currency?.toLowerCase()}`\n            }`}\n        />\n    );\n};\n\nexport default AccountPlatformIcon;\n","import AccountPlatformIcon from './account-platform-icon';\n\nexport default AccountPlatformIcon;\n","import React from 'react';\nimport classNames from 'classnames';\nimport AccountPlatformIcon from '../../../components/account-platform-icon';\nimport { withRouter, RouteComponentProps } from 'react-router';\nimport { Button, Modal, Icon, Text } from '@deriv/components';\nimport { getCurrencyDisplayCode, isMobile, routes } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport { useStore, observer } from '@deriv/stores';\nimport { useCashierStore } from '../../../stores/useCashierStores';\nimport './account-transfer-receipt.scss';\n\ntype TSwitch = {\n    value?: string;\n    currency?: string;\n};\n\ntype TAccountTransferReceipt = RouteComponentProps & {\n    onClose: () => void;\n};\n\nconst AccountTransferReceipt = observer(({ onClose, history }: TAccountTransferReceipt) => {\n    const { common, client, traders_hub } = useStore();\n    const { account_transfer } = useCashierStore();\n    const { is_from_derivgo } = common;\n    const { loginid, switchAccount } = client;\n    const { closeAccountTransferModal } = traders_hub;\n    const { receipt, resetAccountTransfer, selected_from, selected_to, setShouldSwitchAccount } = account_transfer;\n\n    const is_from_outside_cashier = !location.pathname.startsWith(routes.cashier);\n\n    const [is_switch_visible, setIsSwitchVisible] = React.useState(false);\n    const [switch_to, setSwitchTo] = React.useState<TSwitch>({});\n\n    React.useEffect(() => {\n        return () => {\n            resetAccountTransfer();\n            closeAccountTransferModal();\n        };\n    }, [resetAccountTransfer]);\n\n    const openStatement = () => {\n        history.push(routes.statement);\n        resetAccountTransfer();\n    };\n\n    const switchAndRedirect = async () => {\n        await switchAccount(switch_to.value);\n        openStatement();\n    };\n\n    const toggleSwitchAlert = () => {\n        setIsSwitchVisible(!is_switch_visible);\n    };\n\n    const checkAccount = () => {\n        // we should always show the statement of the account transferred to\n        // unless if the account transferred to is your logged in account, or\n        // the account transferred to is a Deriv MT5 account that can't be switched to and from account is your logged in account\n        if (\n            selected_to.value === loginid ||\n            ((selected_to.is_mt || selected_to.is_dxtrade) && selected_from.value === loginid)\n        ) {\n            openStatement();\n        } else {\n            // if the account transferred to is a Deriv MT5 account that can't be switched to, switch to from account instead\n            // otherwise switch to the account transferred to\n            setShouldSwitchAccount(true);\n            setSwitchTo(selected_to.is_mt ? selected_from : selected_to);\n            toggleSwitchAlert();\n        }\n    };\n\n    return (\n        <div\n            className={classNames(\n                'account-transfer-receipt__crypto',\n                !is_from_outside_cashier && 'account-transfer-receipt__crypto-padding'\n            )}\n        >\n            <Text as='h2' color='prominent' align='center' weight='bold' className='cashier__header'>\n                <Localize i18n_default_text='Your funds have been transferred' />\n            </Text>\n            <div className='account-transfer-receipt__crypto--amount'>\n                <Text as='p' size='l' weight='bold' color='profit-success'>\n                    <Localize\n                        i18n_default_text='{{amount}} {{currency}}'\n                        values={{\n                            amount: receipt.amount_transferred,\n                            currency: getCurrencyDisplayCode(selected_from.currency),\n                        }}\n                    />\n                </Text>\n            </div>\n            <div className='account-transfer-receipt__crypto--details-wrapper'>\n                <div className='crypto-transfer-from'>\n                    <div className='crypto-transfer-from-details'>\n                        <AccountPlatformIcon account={selected_from} size={32} />\n                        <Text as='p' size='s' weight='bold'>\n                            <Localize i18n_default_text={selected_from.text} />\n                        </Text>\n                    </div>\n                    {!(is_from_derivgo && selected_from.is_derivez) && (\n                        <Text as='p' size='s' color='less-prominent' align='center'>\n                            {selected_from.value}\n                        </Text>\n                    )}\n                </div>\n                <Icon className='crypto-transferred-icon' icon='IcArrowDownBold' />\n                <div className='crypto-transfer-to'>\n                    <div className='crypto-transfer-to-details'>\n                        <AccountPlatformIcon account={selected_to} size={32} />\n                        <Text as='p' size='s' weight='bold'>\n                            <Localize i18n_default_text={selected_to.text} />\n                        </Text>\n                    </div>\n                    {!(is_from_derivgo && selected_to.is_derivez) && (\n                        <Text as='p' size='s' color='less-prominent' align='center'>\n                            {selected_to.value}\n                        </Text>\n                    )}\n                </div>\n            </div>\n            <div className='account-transfer-receipt__crypto--form-submit'>\n                {!is_from_derivgo && (\n                    <Button\n                        className='account-transfer-receipt__button'\n                        has_effect\n                        text={localize('View transaction details')}\n                        onClick={checkAccount}\n                        secondary\n                        large\n                    />\n                )}\n                <Button\n                    className='account-transfer-receipt__button'\n                    has_effect\n                    text={is_from_outside_cashier ? localize('Close') : localize('Make a new transfer')}\n                    onClick={is_from_outside_cashier ? onClose : resetAccountTransfer}\n                    primary\n                    large\n                />\n            </div>\n            <Modal\n                is_open={is_switch_visible}\n                toggleModal={toggleSwitchAlert}\n                has_close_icon={isMobile()}\n                className='account_transfer_switch_modal'\n                small\n                title={localize(`Switch to ${switch_to.currency} account?`)}\n            >\n                <Modal.Body>\n                    <Localize\n                        i18n_default_text='We’re switching over to your {{currency}} account to view the transaction.'\n                        values={{ currency: switch_to.currency }}\n                    />\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button\n                        has_effect\n                        text={localize('Cancel')}\n                        onClick={() => {\n                            setShouldSwitchAccount(false);\n                            toggleSwitchAlert();\n                        }}\n                        secondary\n                        large\n                    />\n                    <Button\n                        has_effect\n                        text={localize(`Switch to ${switch_to.currency} account`)}\n                        onClick={switchAndRedirect}\n                        primary\n                        large\n                    />\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n});\n\nexport default withRouter(AccountTransferReceipt);\n","import AccountTransferReceipt from './account-transfer-receipt';\n\nexport default AccountTransferReceipt;\n","import React, { useCallback } from 'react';\nimport { Localize } from '@deriv/translations';\nimport { GetLimits } from '@deriv/api-types';\nimport { Text } from '@deriv/components';\nimport { getCurrencyDisplayCode, getPlatformSettings } from '@deriv/shared';\n\ntype TAccountTransferNoteProps = {\n    allowed_transfers_count: GetLimits['daily_transfers'];\n    currency: string;\n    is_crypto_to_crypto_transfer?: boolean;\n    is_derivez_transfer?: boolean;\n    is_dxtrade_allowed: boolean;\n    is_dxtrade_transfer?: boolean;\n    is_from_derivgo: boolean;\n    is_mt_transfer?: boolean;\n    minimum_fee: string | null;\n    transfer_fee?: number | null;\n};\n\nconst AccountTransferBullet = ({ children }: React.PropsWithChildren) => (\n    <div className='account-transfer-form__bullet-wrapper'>\n        <div className='account-transfer-form__bullet' />\n        <Text size='xxs'>{children}</Text>\n    </div>\n);\n\nconst AccountTransferNote = ({\n    allowed_transfers_count,\n    currency,\n    is_crypto_to_crypto_transfer,\n    is_derivez_transfer,\n    is_dxtrade_allowed,\n    is_dxtrade_transfer,\n    is_from_derivgo,\n    is_mt_transfer,\n    minimum_fee,\n    transfer_fee,\n}: TAccountTransferNoteProps) => {\n    const platform_name_dxtrade = getPlatformSettings('dxtrade').name;\n    const platform_name_mt5 = getPlatformSettings('mt5').name;\n    const platform_name_derivez = getPlatformSettings('derivez').name;\n\n    //TODO: to refactor derivez notes once this account is used in deriv app and not only from derivgo\n    const getTransferFeeNote = useCallback(() => {\n        if (transfer_fee === 0) {\n            if (is_from_derivgo && is_derivez_transfer) {\n                return (\n                    <Localize\n                        i18n_default_text='We do not charge a transfer fee for transfers in the same currency between your Deriv fiat and {{platform_name_mt5}} accounts, your Deriv fiat and {{platform_name_derivez}} accounts and your Deriv fiat and {{platform_name_dxtrade}} accounts.'\n                        values={{ platform_name_dxtrade, platform_name_mt5, platform_name_derivez }}\n                    />\n                );\n            }\n\n            return is_dxtrade_allowed ? (\n                <Localize\n                    i18n_default_text='We do not charge a transfer fee for transfers in the same currency between your Deriv fiat and {{platform_name_mt5}} accounts and between your Deriv fiat and {{platform_name_dxtrade}} accounts.'\n                    values={{ platform_name_dxtrade, platform_name_mt5 }}\n                />\n            ) : (\n                <Localize\n                    i18n_default_text='You’ll not be charged a transfer fee for transfers in the same currency between your Deriv fiat and {{platform_name_mt5}} accounts.'\n                    values={{ platform_name_mt5 }}\n                />\n            );\n        } else if (transfer_fee === 1) {\n            if (is_from_derivgo && is_derivez_transfer) {\n                return (\n                    <Localize\n                        i18n_default_text='We’ll charge a 1% transfer fee for transfers in different currencies between your Deriv fiat and {{platform_name_mt5}} accounts, your Deriv fiat and {{platform_name_derivez}} accounts, and your Deriv fiat and {{platform_name_dxtrade}} accounts.'\n                        values={{ platform_name_dxtrade, platform_name_mt5, platform_name_derivez }}\n                    />\n                );\n            }\n\n            return is_dxtrade_allowed ? (\n                <Localize\n                    i18n_default_text='We’ll charge a 1% transfer fee for transfers in different currencies between your Deriv fiat and {{platform_name_mt5}} accounts and between your Deriv fiat and {{platform_name_dxtrade}} accounts.'\n                    values={{ platform_name_dxtrade, platform_name_mt5 }}\n                />\n            ) : (\n                <Localize\n                    i18n_default_text='We’ll charge a 1% transfer fee for transfers in different currencies between your Deriv fiat and {{platform_name_mt5}} accounts.'\n                    values={{ platform_name_mt5 }}\n                />\n            );\n        } else if (transfer_fee === 2 && is_crypto_to_crypto_transfer) {\n            return (\n                <Localize\n                    i18n_default_text='We’ll charge a 2% transfer fee or {{minimum_fee}} {{currency}}, whichever is higher, for transfers between your Deriv cryptocurrency accounts.'\n                    values={{\n                        minimum_fee,\n                        currency: getCurrencyDisplayCode(currency),\n                    }}\n                />\n            );\n        } else if (transfer_fee === 2 && (is_mt_transfer || is_dxtrade_transfer || is_derivez_transfer)) {\n            if (is_from_derivgo && is_derivez_transfer) {\n                return (\n                    <Localize\n                        i18n_default_text='We’ll charge a 2% transfer fee or {{minimum_fee}} {{currency}}, whichever is higher, for transfers between your Deriv cryptocurrency and Deriv MT5 accounts, your Deriv cryptocurrency and {{platform_name_derivez}} accounts, and your Deriv cryptocurrency and {{platform_name_dxtrade}} accounts.'\n                        values={{\n                            minimum_fee,\n                            currency: getCurrencyDisplayCode(currency),\n                            platform_name_derivez,\n                            platform_name_dxtrade,\n                        }}\n                    />\n                );\n            }\n\n            return is_dxtrade_allowed ? (\n                <Localize\n                    i18n_default_text='We’ll charge a 2% transfer fee or {{minimum_fee}} {{currency}}, whichever is higher, for transfers between your Deriv cryptocurrency and Deriv MT5 accounts and between your Deriv cryptocurrency and {{platform_name_dxtrade}} accounts.'\n                    values={{\n                        minimum_fee,\n                        currency: getCurrencyDisplayCode(currency),\n                        platform_name_dxtrade,\n                    }}\n                />\n            ) : (\n                <Localize\n                    i18n_default_text='We’ll charge a 2% transfer fee or {{minimum_fee}} {{currency}}, whichever is higher, for transfers between your Deriv cryptocurrency and Deriv MT5 accounts.'\n                    values={{\n                        minimum_fee,\n                        currency: getCurrencyDisplayCode(currency),\n                    }}\n                />\n            );\n        } else if (transfer_fee === 2 && !is_mt_transfer && !is_dxtrade_transfer && !is_derivez_transfer) {\n            return (\n                <Localize\n                    i18n_default_text='We’ll charge a 2% transfer fee or {{minimum_fee}} {{currency}}, whichever is higher, for transfers between your Deriv fiat and Deriv cryptocurrency accounts.'\n                    values={{\n                        minimum_fee,\n                        currency: getCurrencyDisplayCode(currency),\n                    }}\n                />\n            );\n        }\n        return null;\n    }, [\n        currency,\n        is_crypto_to_crypto_transfer,\n        is_derivez_transfer,\n        is_dxtrade_allowed,\n        is_dxtrade_transfer,\n        is_from_derivgo,\n        is_mt_transfer,\n        minimum_fee,\n        platform_name_derivez,\n        platform_name_dxtrade,\n        platform_name_mt5,\n        transfer_fee,\n    ]);\n\n    const getDerivGoNotes = useCallback(() => {\n        if (is_from_derivgo && is_derivez_transfer) {\n            return (\n                <React.Fragment>\n                    <AccountTransferBullet>\n                        <Localize\n                            i18n_default_text='You may transfer between your Deriv fiat, cryptocurrency, {{platform_name_mt5}}, {{platform_name_derivez}} and {{platform_name_dxtrade}} accounts.'\n                            values={{ platform_name_dxtrade, platform_name_mt5, platform_name_derivez }}\n                        />\n                    </AccountTransferBullet>\n                    <AccountTransferBullet>\n                        <Localize\n                            i18n_default_text='Each day, you can make up to {{ allowed_internal }} transfers between your Deriv accounts, up to {{ allowed_mt5 }} transfers between your Deriv and {{platform_name_mt5}} accounts, up to {{ allowed_derivez }} transfers between your Deriv and {{platform_name_derivez}} accounts, and up to {{ allowed_dxtrade }} transfers between your Deriv and {{platform_name_dxtrade}} accounts.'\n                            values={{\n                                allowed_internal: allowed_transfers_count?.internal,\n                                allowed_mt5: allowed_transfers_count?.mt5,\n                                allowed_dxtrade: allowed_transfers_count?.dxtrade,\n                                allowed_derivez: allowed_transfers_count?.derivez,\n                                platform_name_dxtrade,\n                                platform_name_mt5,\n                                platform_name_derivez,\n                            }}\n                        />\n                    </AccountTransferBullet>\n                </React.Fragment>\n            );\n        }\n\n        return null;\n    }, [\n        allowed_transfers_count?.derivez,\n        allowed_transfers_count?.dxtrade,\n        allowed_transfers_count?.internal,\n        allowed_transfers_count?.mt5,\n        is_derivez_transfer,\n        is_from_derivgo,\n        platform_name_derivez,\n        platform_name_dxtrade,\n        platform_name_mt5,\n    ]);\n\n    const getDxtradeAllowedNotes = useCallback(() => {\n        if (is_dxtrade_allowed) {\n            return (\n                <React.Fragment>\n                    <AccountTransferBullet>\n                        <Localize\n                            i18n_default_text='You may transfer between your Deriv fiat, cryptocurrency, {{platform_name_mt5}}, and {{platform_name_dxtrade}} accounts.'\n                            values={{ platform_name_dxtrade, platform_name_mt5 }}\n                        />\n                    </AccountTransferBullet>\n                    <AccountTransferBullet>\n                        <Localize\n                            i18n_default_text='Each day, you can make up to {{ allowed_internal }} transfers between your Deriv accounts, up to {{ allowed_mt5 }} transfers between your Deriv and {{platform_name_mt5}} accounts, and up to {{ allowed_dxtrade }} transfers between your Deriv and {{platform_name_dxtrade}} accounts.'\n                            values={{\n                                allowed_internal: allowed_transfers_count?.internal,\n                                allowed_mt5: allowed_transfers_count?.mt5,\n                                allowed_dxtrade: allowed_transfers_count?.dxtrade,\n                                platform_name_dxtrade,\n                                platform_name_mt5,\n                            }}\n                        />\n                    </AccountTransferBullet>\n                </React.Fragment>\n            );\n        }\n        return (\n            <React.Fragment>\n                <AccountTransferBullet>\n                    <Localize\n                        i18n_default_text='You may transfer between your Deriv fiat, cryptocurrency, and {{platform_name_mt5}} accounts.'\n                        values={{ platform_name_mt5 }}\n                    />\n                </AccountTransferBullet>\n                <AccountTransferBullet>\n                    <Localize\n                        i18n_default_text='Each day, you can make up to {{ allowed_internal }} transfers between your Deriv accounts and up to {{ allowed_mt5 }} transfers between your Deriv and {{platform_name_mt5}} accounts.'\n                        values={{\n                            allowed_internal: allowed_transfers_count?.internal,\n                            allowed_mt5: allowed_transfers_count?.mt5,\n                            platform_name_mt5,\n                        }}\n                    />\n                </AccountTransferBullet>\n            </React.Fragment>\n        );\n    }, [\n        allowed_transfers_count?.dxtrade,\n        allowed_transfers_count?.internal,\n        allowed_transfers_count?.mt5,\n        is_dxtrade_allowed,\n        platform_name_dxtrade,\n        platform_name_mt5,\n    ]);\n\n    return (\n        <div className='account-transfer-form__notes'>\n            {getDerivGoNotes()}\n            {getDxtradeAllowedNotes()}\n            <AccountTransferBullet>\n                <Localize i18n_default_text='Transfer limits may vary depending on the exchange rates.' />\n            </AccountTransferBullet>\n            <AccountTransferBullet>\n                {getTransferFeeNote()}{' '}\n                <Localize i18n_default_text='Please bear in mind that some transfers may not be possible.' />\n            </AccountTransferBullet>\n            <AccountTransferBullet>\n                <Localize i18n_default_text='Transfers may be unavailable due to high volatility or technical issues and when the exchange markets are closed.' />\n            </AccountTransferBullet>\n        </div>\n    );\n};\n\nexport default AccountTransferNote;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Field, FieldProps, Formik, Form } from 'formik';\nimport { Button, Dropdown, Input, Loading, Money, Text } from '@deriv/components';\nimport {\n    getDecimalPlaces,\n    getCurrencyDisplayCode,\n    getCurrencyName,\n    getPlatformSettings,\n    validNumber,\n    routes,\n} from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport { useStore, observer } from '@deriv/stores';\nimport { TReactChangeEvent, TAccount, TAccountsList, TError, TSideNotesProps } from '../../../types';\nimport CryptoFiatConverter from '../../../components/crypto-fiat-converter';\nimport ErrorDialog from '../../../components/error-dialog';\nimport PercentageSelector from '../../../components/percentage-selector';\nimport RecentTransaction from '../../../components/recent-transaction';\nimport AccountTransferNote from './account-transfer-form-side-note';\nimport SideNote from '../../../components/side-note';\nimport AccountPlatformIcon from '../../../components/account-platform-icon';\nimport { useCashierStore } from '../../../stores/useCashierStores';\nimport './account-transfer-form.scss';\n\ntype TAccountTransferFormProps = {\n    error?: TError;\n    onClickDeposit?: () => void;\n    onClickNotes?: () => void;\n    onClose?: () => void;\n    setSideNotes?: (notes: TSideNotesProps) => void;\n};\n\nconst AccountOption = ({ account, idx }: TAccountsList) => {\n    return (\n        <React.Fragment key={idx}>\n            {(account.currency || account.platform_icon) && (\n                <div className='account-transfer-form__icon'>\n                    <AccountPlatformIcon account={account} size={16} />\n                </div>\n            )}\n\n            <div className='account-transfer-form__currency-wrapper'>\n                <Text size='xxs' line_height='xs' styles={{ color: 'prominent', fontWeight: 'inherit' }}>\n                    {account.is_dxtrade || account.is_mt || account.is_derivez\n                        ? account.text\n                        : getCurrencyName(account.currency)}\n                </Text>\n                {!account.is_derivez && (\n                    <Text size='xxxs' align='left' color='less-prominent'>\n                        {account.value}\n                    </Text>\n                )}\n            </div>\n\n            <span className='account-transfer-form__balance'>\n                <Money\n                    amount={account.balance}\n                    currency={account.currency}\n                    has_sign={Boolean(account.balance && Number(account.balance) < 0)}\n                    show_currency\n                />\n            </span>\n        </React.Fragment>\n    );\n};\n\nlet accounts_from: TAccount[] = [];\nlet accounts_to: TAccount[] = [];\nlet derivez_accounts_from: TAccount[] = [];\nlet derivez_accounts_to: TAccount[] = [];\nlet dxtrade_accounts_from: TAccount[] = [];\nlet dxtrade_accounts_to: TAccount[] = [];\nlet mt_accounts_from: TAccount[] = [];\nlet mt_accounts_to: TAccount[] = [];\nlet remaining_transfers: number | undefined;\n\nconst AccountTransferForm = observer(\n    ({ error, onClickDeposit, onClickNotes, setSideNotes }: TAccountTransferFormProps) => {\n        const {\n            client,\n            common: { is_from_derivgo },\n        } = useStore();\n\n        const { account_limits, authentication_status, is_dxtrade_allowed, getLimits: onMount } = client;\n        const { account_transfer, crypto_fiat_converter, transaction_history, general_store } = useCashierStore();\n\n        const {\n            account_transfer_amount,\n            accounts_list,\n            minimum_fee,\n            onChangeTransferFrom,\n            onChangeTransferTo,\n            requestTransferBetweenAccounts,\n            selected_from,\n            selected_to,\n            setAccountTransferAmount,\n            error: { setErrorMessage },\n            setTransferPercentageSelectorResult,\n            transfer_fee,\n            transfer_limit,\n            validateTransferFromAmount,\n            validateTransferToAmount,\n        } = account_transfer;\n        const { is_crypto, percentage, should_percentage_reset } = general_store;\n        const {\n            converter_from_amount,\n            converter_from_error,\n            converter_to_amount,\n            converter_to_error,\n            onChangeConverterFromAmount,\n            onChangeConverterToAmount,\n            resetConverter,\n        } = crypto_fiat_converter;\n        const { crypto_transactions, onMount: recentTransactionOnMount } = transaction_history;\n\n        const [from_accounts, setFromAccounts] = React.useState({});\n        const [to_accounts, setToAccounts] = React.useState({});\n        const [transfer_to_hint, setTransferToHint] = React.useState<string>();\n\n        const is_from_outside_cashier = !location.pathname.startsWith(routes.cashier);\n\n        const { daily_transfers } = account_limits;\n        const mt5_remaining_transfers = daily_transfers?.mt5;\n        const dxtrade_remaining_transfers = daily_transfers?.dxtrade;\n        const derivez_remaining_transfers = daily_transfers?.derivez;\n        const internal_remaining_transfers = daily_transfers?.internal;\n\n        const is_mt_transfer = selected_to.is_mt || selected_from.is_mt;\n        const is_dxtrade_transfer = selected_to.is_dxtrade || selected_from.is_dxtrade;\n        const is_derivez_transfer = selected_to.is_derivez || selected_from.is_derivez;\n\n        const platform_name_dxtrade = getPlatformSettings('dxtrade').name;\n\n        const history = useHistory();\n\n        React.useEffect(() => {\n            recentTransactionOnMount();\n        }, [recentTransactionOnMount]);\n\n        const validateAmount = (amount: string) => {\n            if (!amount) return localize('This field is required.');\n\n            const { is_ok, message } = validNumber(amount, {\n                type: 'float',\n                decimals: getDecimalPlaces(selected_from.currency || ''),\n                min: Number(transfer_limit.min),\n                max: Number(transfer_limit.max),\n            });\n            if (!is_ok) return message;\n\n            if (selected_from.balance && Number(selected_from.balance) < Number(amount))\n                return localize('Insufficient balance');\n\n            return undefined;\n        };\n\n        const shouldShowTransferButton = (amount: string) => {\n            return selected_from.currency === selected_to.currency ? !amount : !converter_from_amount;\n        };\n\n        const getAccounts = (type: string, { is_mt, is_dxtrade, is_derivez }: TAccount) => {\n            if (type === 'from') {\n                if (is_mt) return mt_accounts_from;\n                if (is_dxtrade) return dxtrade_accounts_from;\n                if (is_derivez) return derivez_accounts_from;\n\n                return accounts_from;\n            } else if (type === 'to') {\n                if (is_mt) return mt_accounts_to;\n                if (is_dxtrade) return dxtrade_accounts_to;\n                if (is_derivez) return derivez_accounts_to;\n\n                return accounts_to;\n            }\n            return [];\n        };\n\n        React.useEffect(() => {\n            onMount();\n        }, [onMount]);\n\n        React.useEffect(() => {\n            accounts_from = [];\n            mt_accounts_from = [];\n            dxtrade_accounts_from = [];\n            derivez_accounts_from = [];\n            accounts_to = [];\n            mt_accounts_to = [];\n            dxtrade_accounts_to = [];\n            derivez_accounts_to = [];\n\n            accounts_list.forEach((account, idx) => {\n                const text = <AccountOption idx={idx} account={account} />;\n                const value = account.value;\n\n                const is_cfd_account = account.is_mt || account.is_dxtrade || account.is_derivez;\n\n                getAccounts('from', account).push({\n                    text,\n                    value,\n                    is_mt: account.is_mt,\n                    is_dxtrade: account.is_dxtrade,\n                    nativepicker_text: `${is_cfd_account ? account.market_type : getCurrencyName(account.currency)} (${\n                        account.balance\n                    } ${is_cfd_account ? account.currency : account.text})`,\n                });\n                const is_selected_from = account.value === selected_from.value;\n\n                if ((selected_from.is_mt && account.is_dxtrade) || (selected_from.is_dxtrade && account.is_mt)) return;\n\n                // account from and to cannot be the same\n                if (!is_selected_from) {\n                    const is_selected_from_mt = selected_from.is_mt && account.is_mt;\n                    const is_selected_from_dxtrade = selected_from.is_dxtrade && account.is_dxtrade;\n\n                    // cannot transfer to MT account from MT\n                    // cannot transfer to Dxtrade account from Dxtrade\n\n                    const is_disabled = is_selected_from_mt || is_selected_from_dxtrade;\n\n                    getAccounts('to', account).push({\n                        text,\n                        value,\n                        is_mt: account.is_mt,\n                        is_dxtrade: account.is_dxtrade,\n                        is_derivez: account.is_derivez,\n                        disabled: is_disabled,\n                        nativepicker_text: `${\n                            is_cfd_account ? account.market_type : getCurrencyName(account.currency)\n                        } (${account.balance} ${is_cfd_account ? account.currency : account.text})`,\n                    });\n                }\n            });\n\n            setFromAccounts({\n                ...(mt_accounts_from.length && { [localize('Deriv MT5 accounts')]: mt_accounts_from }),\n                ...(dxtrade_accounts_from.length && {\n                    [localize('{{platform_name_dxtrade}} accounts', { platform_name_dxtrade })]: dxtrade_accounts_from,\n                }),\n                ...(derivez_accounts_from.length && { [localize('Deriv EZ accounts')]: derivez_accounts_from }),\n                ...(accounts_from.length && { [localize('Deriv accounts')]: accounts_from }),\n            });\n\n            setToAccounts({\n                ...(mt_accounts_to.length && { [localize('Deriv MT5 accounts')]: mt_accounts_to }),\n                ...(dxtrade_accounts_to.length && {\n                    [localize('{{platform_name_dxtrade}} accounts', { platform_name_dxtrade })]: dxtrade_accounts_to,\n                }),\n                ...(derivez_accounts_to.length && { [localize('Deriv EZ accounts')]: derivez_accounts_to }),\n                ...(accounts_to.length && { [localize('Deriv accounts')]: accounts_to }),\n            });\n        }, [accounts_list, selected_to, selected_from]); // eslint-disable-line react-hooks/exhaustive-deps\n\n        React.useEffect(() => {\n            if (Object.keys(from_accounts).length && typeof setSideNotes === 'function') {\n                const side_notes = [];\n                if (is_crypto && crypto_transactions?.length) {\n                    side_notes.push(<RecentTransaction key={2} />);\n                }\n                side_notes.push(\n                    <AccountTransferNote\n                        allowed_transfers_count={{\n                            internal: internal_remaining_transfers?.allowed,\n                            mt5: mt5_remaining_transfers?.allowed,\n                            dxtrade: dxtrade_remaining_transfers?.allowed,\n                            derivez: derivez_remaining_transfers?.allowed,\n                        }}\n                        transfer_fee={transfer_fee}\n                        currency={selected_from.currency || ''}\n                        minimum_fee={minimum_fee}\n                        key={0}\n                        is_crypto_to_crypto_transfer={selected_from.is_crypto && selected_to.is_crypto}\n                        is_dxtrade_allowed={is_dxtrade_allowed}\n                        is_dxtrade_transfer={is_dxtrade_transfer}\n                        is_mt_transfer={is_mt_transfer}\n                        is_from_derivgo={is_from_derivgo}\n                        is_derivez_transfer={is_derivez_transfer}\n                    />\n                );\n                setSideNotes([\n                    <SideNote title={<Localize i18n_default_text='Notes' />} key={0}>\n                        {side_notes}\n                    </SideNote>,\n                ]);\n            }\n        }, [\n            transfer_fee,\n            selected_from,\n            selected_to,\n            minimum_fee,\n            from_accounts,\n            is_dxtrade_allowed,\n            crypto_transactions,\n            setSideNotes,\n            is_crypto,\n            internal_remaining_transfers?.allowed,\n            mt5_remaining_transfers?.allowed,\n            dxtrade_remaining_transfers?.allowed,\n            derivez_remaining_transfers?.allowed,\n            is_dxtrade_transfer,\n            is_mt_transfer,\n            is_from_derivgo,\n            is_derivez_transfer,\n        ]);\n\n        React.useEffect(() => {\n            const getRemainingTransfers = () => {\n                if (is_mt_transfer) {\n                    return mt5_remaining_transfers?.available;\n                } else if (is_dxtrade_transfer) {\n                    return dxtrade_remaining_transfers?.available;\n                } else if (is_derivez_transfer) {\n                    return derivez_remaining_transfers?.available;\n                }\n                return internal_remaining_transfers?.available;\n            };\n\n            remaining_transfers = getRemainingTransfers();\n\n            const hint =\n                remaining_transfers && Number(remaining_transfers) === 1\n                    ? localize('You have {{number}} transfer remaining for today.', { number: remaining_transfers })\n                    : localize('You have {{number}} transfers remaining for today.', { number: remaining_transfers });\n            setTransferToHint(hint);\n            resetConverter();\n        }, [selected_to, selected_from, account_limits]); // eslint-disable-line react-hooks/exhaustive-deps\n\n        const is_mt5_restricted =\n            selected_from?.is_mt &&\n            selected_from?.status?.includes('poa_failed') &&\n            authentication_status?.document_status !== 'verified';\n\n        const poa_pending_msg = localize(\n            'You will be able to transfer funds between MT5 accounts and other accounts once your address is verified.'\n        );\n\n        const Mt5RestrictedMsg = () => (\n            <Localize\n                i18n_default_text='Please <0>resubmit</0> your proof of address to transfer funds between MT5 and Deriv accounts.'\n                components={[<Link key={0} to={routes.proof_of_address} className='link dark' />]}\n            />\n        );\n\n        const depositClick = () => {\n            if (onClickDeposit) {\n                onClickDeposit();\n            }\n            history.push(routes.cashier_deposit);\n        };\n\n        const getMt5Error = () => {\n            if (is_mt5_restricted) {\n                return authentication_status?.document_status === 'pending' ? poa_pending_msg : <Mt5RestrictedMsg />;\n            }\n            return null;\n        };\n\n        const NotesLink = () => {\n            return (\n                <div className='account-transfer-form__button-link' onClick={onClickNotes}>\n                    <Text size='xs' weight='bold' color='red'>\n                        <Localize i18n_default_text='Notes ' />\n                    </Text>\n                </div>\n            );\n        };\n\n        return (\n            <div\n                className='cashier__wrapper account-transfer-form__wrapper'\n                data-testid='dt_account_transfer_form_wrapper'\n            >\n                {!is_from_outside_cashier && (\n                    <Text\n                        as='h2'\n                        color='prominent'\n                        weight='bold'\n                        align='center'\n                        className='cashier__header cashier__content-header'\n                    >\n                        {localize('Transfer between your accounts in Deriv')}\n                    </Text>\n                )}\n                <Formik\n                    initialValues={{\n                        amount: account_transfer_amount || '',\n                        converter_from_amount: converter_from_amount || '',\n                        converter_to_amount: converter_to_amount || '',\n                    }}\n                    onSubmit={() => {\n                        requestTransferBetweenAccounts({\n                            amount: account_transfer_amount ? Number(account_transfer_amount) : 0,\n                        });\n                    }}\n                    validateOnBlur={false}\n                    enableReinitialize\n                >\n                    {({ errors, handleChange, isSubmitting, setFieldValue, setFieldError, values }) => (\n                        <React.Fragment>\n                            {isSubmitting || accounts_list.length === 0 ? (\n                                <div className='cashier__loader-wrapper' data-testid='dt_cashier_loader_wrapper'>\n                                    <Loading className='cashier__loader' is_fullscreen={false} />\n                                </div>\n                            ) : (\n                                <Form noValidate>\n                                    <div\n                                        className='cashier__drop-down-wrapper account-transfer-form__drop-down-wrapper'\n                                        data-testid='dt_account_transfer_form_drop_down_wrapper'\n                                    >\n                                        <Dropdown\n                                            id='transfer_from'\n                                            className='account-transfer-form__drop-down'\n                                            classNameDisplay='cashier__drop-down-display'\n                                            classNameDisplaySpan='cashier__drop-down-display-span'\n                                            classNameItems='cashier__drop-down-items'\n                                            classNameLabel='cashier__drop-down-label'\n                                            test_id='dt_account_transfer_form_drop_down'\n                                            is_large\n                                            label={localize('From')}\n                                            list={from_accounts}\n                                            list_height='404'\n                                            name='transfer_from'\n                                            value={selected_from.value}\n                                            onChange={(e: TReactChangeEvent) => {\n                                                onChangeTransferFrom(e);\n                                                handleChange(e);\n                                                setFieldValue('amount', '');\n                                                setTimeout(() => setFieldError('amount', ''));\n                                            }}\n                                            error={selected_from.error}\n                                        />\n                                        <Dropdown\n                                            id='transfer_to'\n                                            className='account-transfer-form__drop-down account-transfer-form__drop-down--to-dropdown'\n                                            classNameDisplay='cashier__drop-down-display'\n                                            classNameDisplaySpan='cashier__drop-down-display-span'\n                                            classNameItems='cashier__drop-down-items'\n                                            classNameLabel='cashier__drop-down-label'\n                                            classNameHint='account-transfer-form__hint'\n                                            test_id='dt_account_transfer_form_to_dropdown'\n                                            is_large\n                                            label={localize('To')}\n                                            list={to_accounts}\n                                            list_height='404'\n                                            name='transfer_to'\n                                            value={selected_to.value}\n                                            onChange={(e: TReactChangeEvent) => {\n                                                onChangeTransferTo(e);\n                                                setFieldValue('amount', '');\n                                                setTimeout(() => setFieldError('amount', ''));\n                                            }}\n                                            hint={transfer_to_hint}\n                                            error={getMt5Error() ?? selected_to.error}\n                                        />\n                                    </div>\n                                    {selected_from.currency === selected_to.currency ? (\n                                        <Field name='amount' validate={validateAmount}>\n                                            {({ field }: FieldProps<string>) => (\n                                                <Input\n                                                    {...field}\n                                                    onChange={(e: TReactChangeEvent) => {\n                                                        setErrorMessage({ code: '', message: '' });\n                                                        handleChange(e);\n                                                        setAccountTransferAmount(e.target.value);\n                                                    }}\n                                                    className={classNames(\n                                                        'cashier__input dc-input--no-placeholder account-transfer-form__input',\n                                                        !is_from_outside_cashier &&\n                                                            'account-transfer-form__input-fit-content'\n                                                    )}\n                                                    classNameHint={classNames('account-transfer-form__hint', {\n                                                        'account-transfer-form__hint__disabled': is_mt5_restricted,\n                                                    })}\n                                                    data-testid='dt_account_transfer_form_input'\n                                                    name='amount'\n                                                    type='text'\n                                                    label={localize('Amount')}\n                                                    error={errors.amount ? errors.amount : ''}\n                                                    required\n                                                    trailing_icon={\n                                                        selected_from.currency ? (\n                                                            <span\n                                                                className={classNames(\n                                                                    'symbols',\n                                                                    `symbols--${selected_from.currency.toLowerCase()}`\n                                                                )}\n                                                            >\n                                                                {getCurrencyDisplayCode(selected_from.currency)}\n                                                            </span>\n                                                        ) : undefined\n                                                    }\n                                                    autoComplete='off'\n                                                    maxLength={30}\n                                                    hint={\n                                                        transfer_limit.max ? (\n                                                            <Localize\n                                                                i18n_default_text='Transfer limits: <0 /> - <1 />'\n                                                                components={[\n                                                                    <Money\n                                                                        key={0}\n                                                                        amount={transfer_limit.min}\n                                                                        currency={selected_from.currency}\n                                                                        show_currency\n                                                                    />,\n                                                                    <Money\n                                                                        key={1}\n                                                                        amount={transfer_limit.max}\n                                                                        currency={selected_from.currency}\n                                                                        show_currency\n                                                                    />,\n                                                                ]}\n                                                            />\n                                                        ) : (\n                                                            ''\n                                                        )\n                                                    }\n                                                    disabled={is_mt5_restricted}\n                                                />\n                                            )}\n                                        </Field>\n                                    ) : (\n                                        <div\n                                            className={\n                                                is_mt5_restricted ? 'account-transfer-form__crypto--disabled' : ''\n                                            }\n                                        >\n                                            <div className='account-transfer-form__crypto--percentage-selector'>\n                                                <PercentageSelector\n                                                    amount={selected_from.balance ? Number(selected_from.balance) : 0}\n                                                    from_account={selected_from.value}\n                                                    getCalculatedAmount={setTransferPercentageSelectorResult}\n                                                    percentage={percentage}\n                                                    should_percentage_reset={should_percentage_reset}\n                                                    to_account={selected_to.value}\n                                                    from_currency={selected_from.currency || ''}\n                                                    to_currency={selected_to.currency || ''}\n                                                />\n                                            </div>\n                                            <CryptoFiatConverter\n                                                from_currency={selected_from.currency || ''}\n                                                to_currency={selected_to.currency || ''}\n                                                hint={\n                                                    transfer_limit.max ? (\n                                                        <Localize\n                                                            i18n_default_text='Transfer limits: <0 /> - <1 />'\n                                                            components={[\n                                                                <Money\n                                                                    key={0}\n                                                                    amount={transfer_limit.min}\n                                                                    currency={selected_from.currency}\n                                                                    show_currency\n                                                                />,\n                                                                <Money\n                                                                    key={1}\n                                                                    amount={transfer_limit.max}\n                                                                    currency={selected_from.currency}\n                                                                    show_currency\n                                                                />,\n                                                            ]}\n                                                        />\n                                                    ) : (\n                                                        ''\n                                                    )\n                                                }\n                                                onChangeConverterFromAmount={onChangeConverterFromAmount}\n                                                onChangeConverterToAmount={onChangeConverterToAmount}\n                                                resetConverter={resetConverter}\n                                                validateFromAmount={validateTransferFromAmount}\n                                                validateToAmount={validateTransferToAmount}\n                                            />\n                                        </div>\n                                    )}\n                                    <div\n                                        className={classNames(\n                                            'cashier__form-submit',\n                                            'account-transfer-form__form-buttons'\n                                        )}\n                                        data-testid='dt_account_transfer_form_submit'\n                                    >\n                                        {is_from_outside_cashier && <NotesLink />}\n                                        <Button\n                                            className='account-transfer-form__deposit-button'\n                                            secondary\n                                            large\n                                            onClick={depositClick}\n                                        >\n                                            <Localize i18n_default_text='Deposit' />\n                                        </Button>\n\n                                        <Button\n                                            className='account-transfer-form__submit-button'\n                                            type='submit'\n                                            is_disabled={\n                                                isSubmitting ||\n                                                (remaining_transfers && !Number(remaining_transfers)) ||\n                                                !!selected_from.error ||\n                                                !!selected_to.error ||\n                                                (selected_from.balance && !Number(selected_from.balance)) ||\n                                                !!converter_from_error ||\n                                                !!converter_to_error ||\n                                                !!errors.amount ||\n                                                shouldShowTransferButton(values.amount) ||\n                                                is_mt5_restricted\n                                            }\n                                            primary\n                                            large\n                                        >\n                                            <Localize i18n_default_text='Transfer' />\n                                        </Button>\n                                    </div>\n                                    {!is_from_outside_cashier && (\n                                        <SideNote title={<Localize i18n_default_text='Notes' />} is_mobile>\n                                            {is_crypto && crypto_transactions?.length ? <RecentTransaction /> : null}\n                                            <AccountTransferNote\n                                                allowed_transfers_count={{\n                                                    internal: internal_remaining_transfers?.allowed,\n                                                    mt5: mt5_remaining_transfers?.allowed,\n                                                    dxtrade: dxtrade_remaining_transfers?.allowed,\n                                                    derivez: derivez_remaining_transfers?.allowed,\n                                                }}\n                                                transfer_fee={transfer_fee}\n                                                currency={selected_from.currency || ''}\n                                                minimum_fee={minimum_fee}\n                                                is_crypto_to_crypto_transfer={\n                                                    selected_from.is_crypto && selected_to.is_crypto\n                                                }\n                                                is_dxtrade_allowed={is_dxtrade_allowed}\n                                                is_dxtrade_transfer={is_dxtrade_transfer}\n                                                is_mt_transfer={is_mt_transfer}\n                                                is_from_derivgo={is_from_derivgo}\n                                                is_derivez_transfer={is_derivez_transfer}\n                                            />\n                                        </SideNote>\n                                    )}\n                                    <ErrorDialog error={error} />\n                                </Form>\n                            )}\n                        </React.Fragment>\n                    )}\n                </Formik>\n            </div>\n        );\n    }\n);\nAccountTransferForm.displayName = 'AccountTransferForm';\nexport default AccountTransferForm;\n","import AccountTransferForm from './account-transfer-form';\n\nexport default AccountTransferForm;\n","import React from 'react';\nimport { Icon, Button, Text } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { useStore, observer } from '@deriv/stores';\nimport './account-transfer-no-account.scss';\nimport { useHistory } from 'react-router-dom';\n\nconst AccountTransferNoAccount = observer(() => {\n    const {\n        traders_hub: { closeModal },\n    } = useStore();\n\n    const history = useHistory();\n\n    React.useEffect(() => {\n        closeModal();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <div className='cashier__wrapper cashier__no-balance'>\n            <Icon icon='IcCashierNoBalance' className='cashier__no-balance-icon' size={116} />\n            <Text as='h2' weight='bold' align='center'>\n                <Localize i18n_default_text='You only have one account' />\n            </Text>\n            <Text as='p' size='xs' line_height='s' align='center' className='cashier__text'>\n                <Localize i18n_default_text='Transferring funds will require you to create a second account.' />\n            </Text>\n            <Button\n                className='account-transfer-no-account__button'\n                primary\n                large\n                onClick={() => {\n                    history.push(routes.traders_hub);\n                }}\n            >\n                <Localize i18n_default_text=\"Back to Trader's Hub\" />\n            </Button>\n        </div>\n    );\n});\n\nexport default AccountTransferNoAccount;\n","import AccountTransferNoAccount from './account-transfer-no-account';\n\nexport default AccountTransferNoAccount;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { routes } from '@deriv/shared';\nimport { Icon, Checklist, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { useStore, observer } from '@deriv/stores';\n\nconst AccountTransferLocked = observer(() => {\n    const {\n        client: { is_financial_account, is_financial_information_incomplete, is_trading_experience_incomplete },\n    } = useStore();\n\n    const history = useHistory();\n    const items = [\n        ...(is_financial_account && (is_financial_information_incomplete || is_trading_experience_incomplete)\n            ? [\n                  {\n                      content: localize('Complete the financial assessment form'),\n                      status: 'action',\n                      onClick: () => history.push(routes.financial_assessment),\n                  },\n              ]\n            : []),\n    ];\n    return (\n        <div className='cashier-locked'>\n            <Icon icon='IcMoneyTransfer' className='cashier-locked__icon' />\n            <Text as='h2' weight='bold' align='center' className='cashier-locked__title'>\n                {localize('Transfers are locked')}\n            </Text>\n            <React.Fragment>\n                <p className='cashier-locked__desc'>\n                    {localize('To enable this feature you must complete the following:')}\n                </p>\n                <Checklist className='cashier-locked__checklist' items={items} />\n            </React.Fragment>\n        </div>\n    );\n});\n\nexport default AccountTransferLocked;\n","import AccountTransferLocked from './account-transfer-locked';\n\nexport default AccountTransferLocked;\n","import React from 'react';\nimport { Loading } from '@deriv/components';\nimport { routes, WS } from '@deriv/shared';\nimport { useStore, observer } from '@deriv/stores';\nimport { TSideNotesProps } from '../../types';\nimport Error from '../../components/error';\nimport NoBalance from '../../components/no-balance';\nimport { Virtual } from '../../components/cashier-container';\nimport CashierLocked from '../../components/cashier-locked';\nimport CryptoTransactionsHistory from '../../components/crypto-transactions-history';\nimport AccountTransferReceipt from './account-transfer-receipt';\nimport AccountTransferForm from './account-transfer-form';\nimport AccountTransferNoAccount from './account-transfer-no-account';\nimport AccountTransferLocked from './account-transfer-locked';\nimport { useCashierStore } from '../../stores/useCashierStores';\nimport { useCashierLocked } from '@deriv/hooks';\n\ntype TAccountTransferProps = {\n    onClickDeposit?: VoidFunction;\n    onClickNotes?: VoidFunction;\n    onClose: VoidFunction;\n    openAccountSwitcherModal?: VoidFunction;\n    setSideNotes?: (notes: TSideNotesProps) => void;\n};\n\nconst AccountTransfer = observer(({ onClickDeposit, onClickNotes, onClose, setSideNotes }: TAccountTransferProps) => {\n    const { client } = useStore();\n    const { account_transfer, general_store, transaction_history } = useCashierStore();\n\n    const {\n        accounts_list,\n        container,\n        error,\n        has_no_account,\n        has_no_accounts_balance,\n        is_transfer_confirm,\n        is_transfer_locked,\n        onMountAccountTransfer: onMount,\n        setAccountTransferAmount,\n        setIsTransferConfirm,\n    } = account_transfer;\n    const { is_loading, setActiveTab } = general_store;\n    const is_cashier_locked = useCashierLocked();\n\n    const { is_crypto_transactions_visible, onMount: recentTransactionOnMount } = transaction_history;\n\n    const { is_switching, is_virtual } = client;\n\n    const [is_loading_status, setIsLoadingStatus] = React.useState(true);\n    const is_from_outside_cashier = !location.pathname.startsWith(routes.cashier);\n\n    React.useEffect(() => {\n        if (!is_crypto_transactions_visible) {\n            recentTransactionOnMount();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [is_switching]);\n\n    React.useEffect(() => {\n        setActiveTab(container);\n        onMount();\n\n        WS.wait('authorize', 'website_status', 'get_settings', 'paymentagent_list').then(() => {\n            setIsLoadingStatus(false);\n        });\n\n        return () => {\n            setAccountTransferAmount('');\n            setIsTransferConfirm(false);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        if (typeof setSideNotes === 'function' && (has_no_accounts_balance || is_switching)) {\n            setSideNotes(null);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [setSideNotes, has_no_accounts_balance]);\n\n    if (is_virtual) {\n        return <Virtual />;\n    }\n    if (is_loading || is_switching || is_loading_status) {\n        return <Loading className='cashier__loader' is_fullscreen={false} />;\n    }\n    if (is_cashier_locked) {\n        return <CashierLocked />;\n    }\n    if (is_transfer_locked) {\n        return <AccountTransferLocked />;\n    }\n    if (error.is_show_full_page || (error.message && !accounts_list.length)) {\n        // for errors with CTA hide the form and show the error,\n        // for others show them at the bottom of the form next to submit button\n        return <Error error={error} />;\n    }\n    if (has_no_account) {\n        return <AccountTransferNoAccount />;\n    }\n    if (has_no_accounts_balance) {\n        return <NoBalance onClickDeposit={onClickDeposit} />;\n    }\n    if (is_transfer_confirm) {\n        return <AccountTransferReceipt onClose={onClose} />;\n    }\n    if (!is_from_outside_cashier && is_crypto_transactions_visible) {\n        return <CryptoTransactionsHistory />;\n    }\n\n    return (\n        <AccountTransferForm\n            error={error}\n            setSideNotes={setSideNotes}\n            onClickDeposit={onClickDeposit}\n            onClickNotes={onClickNotes}\n        />\n    );\n});\n\nexport default AccountTransfer;\n","import AccountTransfer from './account-transfer';\n\nexport default AccountTransfer;\n","import React from 'react';\nimport { useRequest } from '@deriv/api';\nimport { Icon, Button, Text } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport './funds-protection.scss';\n\nconst FundsProtection = () => {\n    const { mutate } = useRequest('tnc_approval', { onSuccess: () => location.reload() });\n\n    return (\n        <div className='funds-protection'>\n            <Icon icon='IcCashierFundsProtection' className='funds-protection__icon' />\n            <Text as='h2' weight='bold' align='center' className='funds-protection__title'>\n                {localize('Funds protection level')}\n            </Text>\n            <p className='funds-protection__desc'>\n                {\n                    <Localize\n                        i18n_default_text=\"We hold customer funds in bank accounts separate from our operational accounts which would not, in the event of insolvency, form part of the company's assets. This meets the <0>Gambling Commission</0>'s requirements for the segregation of customer funds at the level: <1>medium protection</1>.\"\n                        components={[\n                            <a\n                                key={0}\n                                className='link link--orange'\n                                target='_blank'\n                                rel='noopener noreferrer'\n                                href='https://www.gamblingcommission.gov.uk/for-the-public/Your-rights/Protection-of-customer-funds.aspx'\n                            />,\n                            <strong key={1} />,\n                        ]}\n                    />\n                }\n            </p>\n            <Button onClick={() => mutate({ payload: { ukgc_funds_protection: 1 } })} primary large type='submit'>\n                {localize('Deposit now')}\n            </Button>\n        </div>\n    );\n};\n\nexport default FundsProtection;\n","import FundsProtection from './funds-protection';\n\nexport default FundsProtection;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Icon, Text } from '@deriv/components';\nimport './alert-banner.scss';\n\ntype TAlertBanner = {\n    className?: string;\n    icon: string;\n    message: string;\n};\n\nconst AlertBanner = ({ className, icon, message }: TAlertBanner) => {\n    return (\n        <div className={classNames('alert-banner', className)}>\n            <Icon size={16} icon={icon} data_testid='dt_alert_banner_icon' />\n            <Text as='p' align='center' size='xs'>\n                {message}\n            </Text>\n        </div>\n    );\n};\n\nexport default AlertBanner;\n","import React, { useState } from 'react';\nimport { Button, ButtonLink, Clipboard, Dropdown, Icon, Loading, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { CryptoConfig, getCurrencyName, isCryptocurrency, isMobile } from '@deriv/shared';\nimport { useStore, observer } from '@deriv/stores';\nimport { useFetch } from '@deriv/api';\nimport CashierBreadcrumb from '../../../components/cashier-breadcrumb';\nimport QRCode from 'qrcode.react';\nimport RecentTransaction from '../../../components/recent-transaction';\nimport AlertBanner from '../../../components/alert-banner/alert-banner';\nimport { useCashierStore } from '../../../stores/useCashierStores';\nimport './crypto-deposit.scss';\n\nconst CryptoDeposit = observer(() => {\n    const { client } = useStore();\n    const { currency } = client;\n    const { onramp, transaction_history, general_store } = useCashierStore();\n    const { api_error, deposit_address, is_deposit_address_loading, pollApiForDepositAddress } = onramp;\n    const { crypto_transactions, onMount: recentTransactionOnMount } = transaction_history;\n    const { setIsDeposit } = general_store;\n\n    const { data } = useFetch('crypto_config', { payload: { currency_code: currency } });\n    const minimum_deposit = data?.crypto_config?.currencies_config[currency]?.minimum_deposit;\n\n    React.useEffect(() => {\n        recentTransactionOnMount();\n    }, [recentTransactionOnMount]);\n\n    React.useEffect(() => {\n        setIsDeposit(true);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        pollApiForDepositAddress(false);\n    }, [pollApiForDepositAddress]);\n\n    const option_list = [\n        { text: localize('Binance Smart Chain'), value: '1' },\n        { text: localize('Polygon (Matic)'), value: '2' },\n        { text: localize('Tron'), value: '3' },\n        { text: localize('Ethereum (ERC20)'), value: '4' },\n        { text: localize('Ethereum (ETH)'), value: '5' },\n    ];\n\n    const [option_message, setOptionMessage] = useState<JSX.Element | string>('');\n    const [option_list_value, setOptionListValue] = useState<string | number>(0);\n    const [qrcode_header, setQRCodeHeader] = useState<JSX.Element | string>('');\n\n    const onChangeListOption = (event: { target: { value: number | string } }) => {\n        const token_ETH = 'ETH';\n        const token_USDC_eUSDT = 'ERC20';\n        let token = '';\n\n        if (currency === 'ETH') {\n            token = token_ETH;\n        } else if (['USDC', 'eUSDT'].includes(currency)) {\n            token = token_USDC_eUSDT;\n        }\n\n        const setProhibitedTokenMessage = () => {\n            const prohibited_token = token === token_ETH ? `${token_USDC_eUSDT} token` : token_ETH;\n            setOptionMessage(\n                <Localize\n                    i18n_default_text='This is an Ethereum ({{token}}) only address, please do not use {{prohibited_token}}.'\n                    values={{ token, prohibited_token }}\n                />\n            );\n        };\n\n        const setQRCodeHeaderMessage = () => {\n            setOptionMessage('');\n            setQRCodeHeader(\n                <Localize i18n_default_text=\"Do not send any other currency to the following address. Otherwise, you'll lose funds.\" />\n            );\n        };\n\n        switch (event.target.value) {\n            case option_list[0].value:\n                setOptionMessage(\n                    <Localize\n                        i18n_default_text='We do not support Binance Smart Chain tokens to deposit, please use only Ethereum ({{token}}).'\n                        values={{ token }}\n                    />\n                );\n                break;\n            case option_list[1].value:\n                setOptionMessage(\n                    <Localize\n                        i18n_default_text='We do not support Polygon (Matic), to deposit please use only Ethereum ({{token}}).'\n                        values={{ token }}\n                    />\n                );\n                break;\n            case option_list[2].value:\n                setOptionMessage(\n                    <Localize\n                        i18n_default_text='We do not support Tron, to deposit please use only Ethereum ({{token}}).'\n                        values={{ token }}\n                    />\n                );\n                break;\n            case option_list[3].value:\n                (currency === 'ETH' ? setProhibitedTokenMessage : setQRCodeHeaderMessage)();\n                break;\n            case option_list[4].value:\n                (['USDC', 'eUSDT'].includes(currency) ? setProhibitedTokenMessage : setQRCodeHeaderMessage)();\n                break;\n            default:\n                setOptionMessage('');\n        }\n\n        setOptionListValue(event.target.value);\n    };\n\n    if (is_deposit_address_loading) {\n        return <Loading is_fullscreen />;\n    }\n\n    const currency_name = getCurrencyName(currency);\n    const currency_display_code = CryptoConfig.get()[currency].display_code;\n\n    let header_note;\n\n    if (['ETH', 'USDC', 'eUSDT'].includes(currency)) {\n        header_note = (\n            <Localize i18n_default_text='Please select the network from where your deposit will come from.' />\n        );\n    } else {\n        header_note = (\n            <Localize i18n_default_text=\"Do not send any other currency to the following address. Otherwise, you'll lose funds.\" />\n        );\n    }\n\n    return (\n        <div className='cashier__wrapper crypto-deposit__wrapper'>\n            <CashierBreadcrumb is_crypto_deposit />\n            <div className='crypto-deposit__transaction-wrapper'>\n                <Icon icon={`IcCurrency-${currency?.toLowerCase()}`} size={64} />\n                <Text\n                    align='center'\n                    as='p'\n                    className='crypto-deposit__transaction-currency'\n                    line_height='m'\n                    size={isMobile() ? 'xs' : 's'}\n                    weight='bold'\n                >\n                    <Localize\n                        i18n_default_text='Send only {{currency}} ({{currency_symbol}}) to this address.'\n                        values={{\n                            currency: currency_name,\n                            currency_symbol: currency_display_code,\n                        }}\n                    />\n                </Text>\n                {api_error ? (\n                    <div className='crypto-api-error'>\n                        <AlertBanner\n                            icon='IcAlertWarning'\n                            message={localize(\n                                \"Unfortunately, we couldn't get the address since our server was down. Please click Refresh to reload the address or try again later.\"\n                            )}\n                        />\n                        <Button\n                            text={localize('Refresh')}\n                            onClick={() => pollApiForDepositAddress(false)}\n                            secondary\n                            small\n                        />\n                    </div>\n                ) : (\n                    <>\n                        {minimum_deposit ? (\n                            <AlertBanner\n                                className='crypto-third-party-alert'\n                                icon='IcAlertWarningDark'\n                                message={localize(\n                                    'A minimum deposit value of {{minimum_deposit}} {{currency}} is required. Otherwise, the funds will be lost and cannot be recovered.',\n                                    {\n                                        minimum_deposit,\n                                        currency,\n                                    }\n                                )}\n                            />\n                        ) : (\n                            <Text as='p' align='center' line_height='m' size={isMobile() ? 'xs' : 's'}>\n                                {qrcode_header || header_note}\n                            </Text>\n                        )}\n                        {\n                            <>\n                                {((currency === 'ETH' && option_list_value !== option_list[4].value) ||\n                                    (['USDC', 'eUSDT'].includes(currency) &&\n                                        option_list_value !== option_list[3].value)) && (\n                                    <Dropdown\n                                        className='crypto-deposit__dropdown-menu'\n                                        is_align_text_left\n                                        list={option_list}\n                                        name='dropdown'\n                                        onChange={onChangeListOption}\n                                        placeholder={localize('Choose an option')}\n                                        value={option_list_value}\n                                    />\n                                )}\n                                {option_message && (\n                                    <Text\n                                        align='center'\n                                        as='p'\n                                        color='loss-danger'\n                                        className='crypto-deposit__eth-option-message'\n                                        line_height='m'\n                                        size={isMobile() ? 'xs' : 's'}\n                                    >\n                                        {option_message}\n                                    </Text>\n                                )}\n                            </>\n                        }\n                        {(!['ETH', 'USDC', 'eUSDT'].includes(currency) ||\n                            (currency === 'ETH' && option_list_value === option_list[4].value) ||\n                            (['USDC', 'eUSDT'].includes(currency) && option_list_value === option_list[3].value)) && (\n                            <>\n                                <QRCode className='qrcode' value={deposit_address || ''} size={160} includeMargin />\n                                <div className='crypto-deposit__clipboard-wrapper'>\n                                    <Text\n                                        className='crypto-deposit__address-hash'\n                                        line_height='m'\n                                        size={isMobile() ? 'xxs' : 'xs'}\n                                        weight='bold'\n                                        align='center'\n                                    >\n                                        {deposit_address}\n                                    </Text>\n                                    <Clipboard\n                                        className='crypto-deposit__clipboard'\n                                        text_copy={deposit_address || ''}\n                                        info_message={isMobile() ? '' : localize('copy')}\n                                        icon='IcCashierClipboard'\n                                        success_message={localize('copied!')}\n                                        popoverAlignment={isMobile() ? 'left' : 'bottom'}\n                                    />\n                                </div>\n                            </>\n                        )}\n                    </>\n                )}\n            </div>\n            <div className='crypto-deposit__fiat-onramp-wrapper'>\n                <div className='crypto-deposit__fiat-onramp-description'>\n                    <Text as='p' line_height='m' size={isMobile() ? 'xs' : 's'} align='center'>\n                        <Localize i18n_default_text='Looking for a way to buy cryptocurrency?' />\n                    </Text>\n                    {isMobile() ? null : <br />}\n                    <Text as='p' line_height='m' size={isMobile() ? 'xs' : 's'} align='center'>\n                        <Localize i18n_default_text='Use our fiat onramp services to buy and deposit cryptocurrency into your Deriv account.' />\n                    </Text>\n                </div>\n                <ButtonLink className='crypto-deposit__fiat-onramp-button' to='/cashier/on-ramp'>\n                    <Text as='p' weight='bold' color='colored-background' size='xs'>\n                        <Localize i18n_default_text='Try our Fiat onramp' />\n                    </Text>\n                </ButtonLink>\n            </div>\n            {isMobile() && isCryptocurrency(currency) && crypto_transactions?.length ? <RecentTransaction /> : null}\n        </div>\n    );\n});\n\nexport default CryptoDeposit;\n","import CryptoDeposit from './crypto-deposit';\n\nexport default CryptoDeposit;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Icon, Checklist, StaticUrl, Text } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport { routes, WS } from '@deriv/shared';\nimport { useStore, observer } from '@deriv/stores';\nimport CashierLocked from '../../../components/cashier-locked';\nimport { useCashierStore } from '../../../stores/useCashierStores';\n\ntype TItems = {\n    button_text?: string;\n    onClick: () => void;\n    status: string;\n    is_disabled?: boolean;\n    content: string | JSX.Element;\n};\n\nconst DepositLocked = observer(() => {\n    const { client } = useStore();\n    const {\n        account_status,\n        is_financial_account,\n        is_financial_information_incomplete,\n        is_tnc_needed,\n        is_trading_experience_incomplete,\n        standpoint,\n    } = client;\n    const { deposit } = useCashierStore();\n    const { onMountDeposit: onMount } = deposit;\n\n    // handle authentication locked\n    const identity = account_status?.authentication?.identity;\n    const document = account_status?.authentication?.document;\n    const needs_verification = account_status?.authentication?.needs_verification;\n    const is_poi_needed = needs_verification?.includes('identity');\n    const is_poa_needed = needs_verification?.includes('document');\n    const has_poi_submitted = identity?.status !== 'none';\n    const has_poa_submitted = document?.status !== 'none';\n    const deposit_desc = standpoint.iom\n        ? localize(\n              'We were unable to verify your information automatically. To enable this function, you must complete the following:'\n          )\n        : localize('To enable this feature you must complete the following:');\n    const history = useHistory();\n\n    // handle TnC\n    const acceptTnc = async () => {\n        await WS.tncApproval();\n        await WS.getSettings();\n        onMount();\n    };\n\n    // handle all deposits lock status\n    const items: TItems[] = [\n        ...(is_poi_needed && has_poi_submitted\n            ? [\n                  {\n                      content: localize('Check proof of identity document verification status'),\n                      status: 'action',\n                      onClick: () => history.push(routes.proof_of_identity),\n                  },\n              ]\n            : []),\n        ...(is_poa_needed && has_poa_submitted\n            ? [\n                  {\n                      content: localize('Check proof of address document verification status'),\n                      status: 'action',\n                      onClick: () => history.push(routes.proof_of_address),\n                  },\n              ]\n            : []),\n        ...(is_tnc_needed\n            ? [\n                  {\n                      content: (\n                          <Localize\n                              i18n_default_text='Accept our updated <0>terms and conditions</0>'\n                              components={[\n                                  <StaticUrl\n                                      key={0}\n                                      className='link'\n                                      href='terms-and-conditions'\n                                      is_document={false}\n                                  />,\n                              ]}\n                          />\n                      ),\n                      status: 'button-action',\n                      onClick: () => acceptTnc(),\n                      button_text: localize('I accept'),\n                  },\n              ]\n            : []),\n        ...(is_financial_account && (is_financial_information_incomplete || is_trading_experience_incomplete)\n            ? [\n                  {\n                      content: localize('Complete the financial assessment form'),\n                      status: 'action',\n                      onClick: () => history.push(routes.financial_assessment),\n                  },\n              ]\n            : []),\n    ];\n    return (\n        <>\n            {items.length ? (\n                <div className='cashier-locked'>\n                    <Icon icon='IcCashierDepositLock' className='cashier-locked__icon' />\n                    <Text as='h2' weight='bold' align='center' className='cashier-locked__title'>\n                        {localize('Deposits are locked')}\n                    </Text>\n\n                    <Text as='p' align='center' size='xs' className='cashier-locked__desc'>\n                        {deposit_desc}\n                    </Text>\n                    <Checklist className='cashier-locked__checklist' items={items} />\n                </div>\n            ) : (\n                <CashierLocked />\n            )}\n        </>\n    );\n});\n\nexport default DepositLocked;\n","import DepositLocked from './deposit-locked';\n\nexport default DepositLocked;\n","import React from 'react';\nimport { Loading, ThemedScrollbars } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport CashierBreadcrumb from '../cashier-breadcrumb';\nimport './page-container.scss';\n\ntype TProps = {\n    hide_breadcrumb?: boolean;\n};\n\nconst PageContainer: React.FC<React.PropsWithChildren<TProps>> = observer(({ hide_breadcrumb = false, children }) => {\n    const { client } = useStore();\n    const { is_authorize } = client;\n    const is_loading = !is_authorize;\n\n    return (\n        <div className='page-container'>\n            {is_loading && <Loading is_fullscreen={false} />}\n            {!is_loading && (\n                <ThemedScrollbars className='page-container__content'>\n                    {!hide_breadcrumb && <CashierBreadcrumb />}\n                    {children}\n                </ThemedScrollbars>\n            )}\n        </div>\n    );\n});\n\nexport default PageContainer;\n","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport './cashier-onboarding-card.scss';\n\ntype TProps = {\n    title: string;\n    description: string;\n    onClick?: VoidFunction;\n};\n\nconst CashierOnboardingCard: React.FC<React.PropsWithChildren<TProps>> = observer(\n    ({ title, description, onClick, children }) => {\n        const { ui } = useStore();\n        const { is_dark_mode_on, is_mobile } = ui;\n\n        return (\n            <div className='cashier-onboarding-card'>\n                <Text size={is_mobile ? 's' : 'sm'} weight='bold' color='prominent'>\n                    {title}\n                </Text>\n                <div\n                    className='cashier-onboarding-card__container'\n                    data-testid='dt_cashier_onboarding_card'\n                    onClick={onClick}\n                >\n                    <div className='cashier-onboarding-card__content'>\n                        <Text size={is_mobile ? 'xxs' : 'xs'} className='cashier-onboarding-card__description'>\n                            {description}\n                        </Text>\n                        <Icon icon={is_dark_mode_on ? 'IcChevronRightBoldDark' : 'IcChevronRightBold'} size={16} />\n                    </div>\n                    {children}\n                </div>\n            </div>\n        );\n    }\n);\n\nexport default CashierOnboardingCard;\n","import React from 'react';\nimport { Icon, NewsTicker } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport './cashier-onboarding-icon-marquee.scss';\n\ntype TIcon = {\n    dark: string;\n    light: string;\n};\n\ntype TProps = {\n    icons: TIcon[];\n};\n\nconst CashierOnboardingIconMarquee: React.FC<TProps> = observer(({ icons }) => {\n    const { ui } = useStore();\n    const { is_dark_mode_on } = ui;\n\n    return (\n        <div data-testid='dt_cashier_onboarding_icon-marquee'>\n            <NewsTicker speed={10}>\n                <div className={'cashier-onboarding-icon-marquee'}>\n                    {icons.map((icon, index) => (\n                        <Icon\n                            key={`${icon}${index}`}\n                            icon={is_dark_mode_on ? icon.dark : icon.light}\n                            width={72}\n                            height={45}\n                        />\n                    ))}\n                </div>\n            </NewsTicker>\n        </div>\n    );\n});\n\nexport default CashierOnboardingIconMarquee;\n","import React from 'react';\nimport { useHasCryptoCurrency } from '@deriv/hooks';\nimport { routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { useCashierStore } from '../../../../stores/useCashierStores';\nimport { CashierOnboardingCard } from '../cashier-onboarding-card';\nimport { CashierOnboardingIconMarquee } from '../cashier-onboarding-icon-marquee';\n\nconst icons: React.ComponentProps<typeof CashierOnboardingIconMarquee>['icons'] = [\n    { light: 'IcCashierBitcoinLight', dark: 'IcCashierBitcoinDark' },\n    { light: 'IcCashierEthereumLight', dark: 'IcCashierEthereumDark' },\n    { light: 'IcCashierLiteCoinLight', dark: 'IcCashierLiteCoinDark' },\n    { light: 'IcCashierUsdCoinLight', dark: 'IcCashierUsdCoinDark' },\n    { light: 'IcCashierTetherLight', dark: 'IcCashierTetherDark' },\n];\n\nconst CashierOnboardingCryptoCard: React.FC = observer(() => {\n    const { client, ui } = useStore();\n    const { general_store } = useCashierStore();\n    const { is_crypto } = client;\n    const { openRealAccountSignup, shouldNavigateAfterChooseCrypto } = ui;\n    const { setDepositTarget } = general_store;\n    const has_crypto_account = useHasCryptoCurrency();\n\n    const onClick = () => {\n        setDepositTarget(routes.cashier_deposit);\n        if (is_crypto() || has_crypto_account) {\n            openRealAccountSignup('choose');\n            shouldNavigateAfterChooseCrypto(routes.cashier_deposit);\n        } else {\n            openRealAccountSignup('add_crypto');\n        }\n    };\n\n    return (\n        <CashierOnboardingCard\n            title={localize('Deposit cryptocurrencies')}\n            description={localize('We accept the following cryptocurrencies:')}\n            onClick={onClick}\n        >\n            <CashierOnboardingIconMarquee icons={icons} />\n        </CashierOnboardingCard>\n    );\n});\n\nexport default CashierOnboardingCryptoCard;\n","import React from 'react';\nimport { Dialog } from '@deriv/components';\nimport { useFiatAccountList } from '@deriv/hooks';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\n\ntype TProps = {\n    is_visible: boolean;\n    onCancel: VoidFunction;\n    onSwitchDone: VoidFunction;\n};\n\nconst SwitchToFiatAccountDialog: React.FC<TProps> = observer(({ is_visible = false, onCancel, onSwitchDone }) => {\n    const { client } = useStore();\n    const { switchAccount } = client;\n    const fiat_account_list = useFiatAccountList();\n    const fiat_account_loginid = fiat_account_list?.[0].loginid;\n    const fiat_account_currency = fiat_account_list?.[0].title;\n\n    const onConfirm = async () => {\n        await switchAccount(fiat_account_loginid);\n\n        onSwitchDone();\n    };\n\n    return (\n        <Dialog\n            title={localize('Switch account?')}\n            confirm_button_text={localize('Switch account')}\n            cancel_button_text={localize('Cancel')}\n            onConfirm={onConfirm}\n            onCancel={onCancel}\n            is_visible={is_visible}\n            dismissable={false}\n            has_close_icon={false}\n            portal_element_id='modal_root'\n        >\n            {localize('To deposit money, please switch to your {{currency_symbol}} account.', {\n                currency_symbol: fiat_account_currency,\n            })}\n        </Dialog>\n    );\n});\n\nexport default SwitchToFiatAccountDialog;\n","import React, { useState } from 'react';\nimport { useHasFiatCurrency } from '@deriv/hooks';\nimport { routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { useCashierStore } from '../../../../stores/useCashierStores';\nimport { CashierOnboardingCard } from '../cashier-onboarding-card';\nimport { CashierOnboardingIconMarquee } from '../cashier-onboarding-icon-marquee';\nimport { SwitchToFiatAccountDialog } from '../switch-to-fiat-account-dialog';\n\nconst icons: React.ComponentProps<typeof CashierOnboardingIconMarquee>['icons'] = [\n    { light: 'IcWalletCreditDebitLight', dark: 'IcWalletCreditDebitDark' },\n    { light: 'IcCashierInstantBankTransferLight', dark: 'IcCashierInstantBankTransferDark' },\n    { light: 'IcCashierEwalletLight', dark: 'IcCashierEwalletDark' },\n    { light: 'IcCashierLocalPaymentMethodsLight', dark: 'IcCashierLocalPaymentMethodsDark' },\n];\n\nconst CashierOnboardingFiatCard: React.FC = observer(() => {\n    const { client, ui } = useStore();\n    const { general_store } = useCashierStore();\n    const { is_crypto } = client;\n    const { openRealAccountSignup } = ui;\n    const { setDepositTarget, setIsDeposit } = general_store;\n    const has_fiat_currency = useHasFiatCurrency();\n    const can_switch_to_fiat_account = is_crypto() && has_fiat_currency;\n    const [is_dialog_visible, setIsDialogVisible] = useState(false);\n\n    const onClick = () => {\n        setDepositTarget(routes.cashier_deposit);\n\n        if (can_switch_to_fiat_account) {\n            setIsDialogVisible(true);\n        } else if (is_crypto()) {\n            openRealAccountSignup('add_fiat');\n        } else {\n            setIsDeposit(true);\n        }\n    };\n\n    const onSwitchDone = () => {\n        setIsDialogVisible(false);\n        setIsDeposit(true);\n    };\n\n    return (\n        <CashierOnboardingCard\n            title={localize('Deposit via bank wire, credit card, and e-wallet')}\n            description={localize('Deposit via the following payment methods:')}\n            onClick={is_dialog_visible ? undefined : onClick}\n        >\n            <CashierOnboardingIconMarquee icons={icons} />\n            {can_switch_to_fiat_account && (\n                <SwitchToFiatAccountDialog\n                    is_visible={is_dialog_visible}\n                    onCancel={() => setIsDialogVisible(false)}\n                    onSwitchDone={onSwitchDone}\n                />\n            )}\n        </CashierOnboardingCard>\n    );\n});\n\nexport default CashierOnboardingFiatCard;\n","import React from 'react';\nimport { useHasCryptoCurrency } from '@deriv/hooks';\nimport { routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { useCashierStore } from '../../../../stores/useCashierStores';\nimport { CashierOnboardingCard } from '../cashier-onboarding-card';\nimport { CashierOnboardingIconMarquee } from '../cashier-onboarding-icon-marquee';\n\nconst icons: React.ComponentProps<typeof CashierOnboardingIconMarquee>['icons'] = [\n    { light: 'IcCashierBanxaLight', dark: 'IcCashierBanxaDark' },\n];\n\nconst CashierOnboardingOnrampCard: React.FC = observer(() => {\n    const { client, ui } = useStore();\n    const { general_store } = useCashierStore();\n    const { is_crypto } = client;\n    const { openRealAccountSignup, shouldNavigateAfterChooseCrypto } = ui;\n    const { setDepositTarget } = general_store;\n    const has_crypto_account = useHasCryptoCurrency();\n\n    const onClick = () => {\n        setDepositTarget(routes.cashier_onramp);\n        if (is_crypto() || has_crypto_account) {\n            openRealAccountSignup('choose');\n            shouldNavigateAfterChooseCrypto(routes.cashier_onramp);\n        } else {\n            openRealAccountSignup('add_crypto');\n        }\n    };\n\n    return (\n        <CashierOnboardingCard\n            title={is_crypto() ? localize('Buy cryptocurrencies') : localize('Buy cryptocurrencies via fiat onramp')}\n            description={localize('Choose any of these exchanges to buy cryptocurrencies:')}\n            onClick={onClick}\n        >\n            <CashierOnboardingIconMarquee icons={icons} />\n        </CashierOnboardingCard>\n    );\n});\n\nexport default CashierOnboardingOnrampCard;\n","import React, { useState } from 'react';\nimport { useHasFiatCurrency, useHasUSDCurrency, useIsP2PEnabled } from '@deriv/hooks';\nimport { routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { useHistory } from 'react-router';\nimport { useCashierStore } from '../../../../stores/useCashierStores';\nimport { CashierOnboardingCard } from '../cashier-onboarding-card';\nimport { SwitchToFiatAccountDialog } from '../switch-to-fiat-account-dialog';\n\nconst CashierOnboardingP2PCard: React.FC = observer(() => {\n    const { client, ui } = useStore();\n    const { general_store } = useCashierStore();\n    const { is_crypto } = client;\n    const { openRealAccountSignup } = ui;\n    const { setDepositTarget } = general_store;\n    const history = useHistory();\n    const { data: is_p2p_enabled } = useIsP2PEnabled();\n    const has_usd_currency = useHasUSDCurrency();\n    const has_fiat_currency = useHasFiatCurrency();\n    const should_show_p2p_card = is_p2p_enabled || has_usd_currency;\n    const can_switch_to_fiat_account = is_crypto() && has_fiat_currency;\n    const [is_dialog_visible, setIsDialogVisible] = useState(false);\n\n    const onClick = () => {\n        setDepositTarget(routes.cashier_p2p);\n\n        if (can_switch_to_fiat_account) {\n            setIsDialogVisible(true);\n        } else if (is_crypto()) {\n            openRealAccountSignup('add_fiat');\n        } else {\n            history.push(routes.cashier_p2p);\n        }\n    };\n\n    const onSwitchDone = () => {\n        setIsDialogVisible(false);\n        history.push(routes.cashier_p2p);\n    };\n\n    if (!should_show_p2p_card) return null;\n\n    return (\n        <CashierOnboardingCard\n            title={localize('Deposit with Deriv P2P')}\n            description={localize(\n                'Deposit with your local currency via peer-to-peer exchange with fellow traders in your country.'\n            )}\n            onClick={is_dialog_visible ? undefined : onClick}\n        >\n            {can_switch_to_fiat_account && (\n                <SwitchToFiatAccountDialog\n                    is_visible={is_dialog_visible}\n                    onCancel={() => setIsDialogVisible(false)}\n                    onSwitchDone={onSwitchDone}\n                />\n            )}\n        </CashierOnboardingCard>\n    );\n});\n\nexport default CashierOnboardingP2PCard;\n","import React from 'react';\nimport { usePaymentAgentList } from '@deriv/hooks';\nimport { routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { useCashierStore } from '../../../../stores/useCashierStores';\nimport { CashierOnboardingCard } from '../cashier-onboarding-card';\n\nconst CashierOnboardingPaymentAgentCard: React.FC = observer(() => {\n    const { ui } = useStore();\n    const { general_store } = useCashierStore();\n    const { openRealAccountSignup, shouldNavigateAfterChooseCrypto } = ui;\n    const { setDepositTarget, setShouldShowAllAvailableCurrencies } = general_store;\n    const { data: all_payment_agent_list } = usePaymentAgentList();\n    const is_payment_agent_visible_in_onboarding = Boolean(all_payment_agent_list?.length);\n\n    const onClick = () => {\n        setShouldShowAllAvailableCurrencies(true);\n        setDepositTarget(routes.cashier_pa);\n        openRealAccountSignup('choose');\n        shouldNavigateAfterChooseCrypto(routes.cashier_pa);\n    };\n\n    if (!is_payment_agent_visible_in_onboarding) return null;\n\n    return (\n        <CashierOnboardingCard\n            title={localize('Deposit via payment agents')}\n            description={localize(\n                'Deposit in your local currency via an authorised, independent payment agent in your country.'\n            )}\n            onClick={onClick}\n        />\n    );\n});\n\nexport default CashierOnboardingPaymentAgentCard;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport './side-note-card.scss';\n\ntype TProps = {\n    title: string;\n    description: JSX.Element | string;\n    hide_paddings?: boolean; // Todo: remove this prop when page layout is refactored\n};\n\nconst SideNoteCard: React.FC<React.PropsWithChildren<TProps>> = observer(\n    ({ title, description, hide_paddings = false, children }) => {\n        const { ui } = useStore();\n        const { is_mobile } = ui;\n\n        return (\n            <div className='side-note-card' style={hide_paddings ? { padding: 0 } : {}}>\n                <div className='side-note-card__content'>\n                    <Text color='prominent' weight='bold' size={is_mobile ? 'xxs' : 'xs'}>\n                        {title}\n                    </Text>\n                    <Text size={is_mobile ? 'xxxs' : 'xxs'}>{description}</Text>\n                </div>\n                {children}\n            </div>\n        );\n    }\n);\n\nexport default SideNoteCard;\n","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { getCurrencyDisplayCode, routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { SideNoteCard } from '../../../../components/side-note-card';\nimport { useCashierStore } from '../../../../stores/useCashierStores';\n\nconst CashierOnboardingSideNoteCrypto: React.FC = observer(() => {\n    const { client, ui } = useStore();\n    const { general_store } = useCashierStore();\n    const { currency, loginid } = client;\n    const { openRealAccountSignup, is_mobile } = ui;\n    const { setDepositTarget } = general_store;\n    const currency_code = getCurrencyDisplayCode(currency);\n\n    const onClick = () => {\n        setDepositTarget(routes.cashier_deposit);\n        openRealAccountSignup('add_crypto');\n    };\n\n    return (\n        <SideNoteCard\n            title={localize('This is your {{currency_code}} account {{loginid}}', { currency_code, loginid })}\n            description={localize(\n                \"Don't want to trade in {{currency_code}}? You can open another cryptocurrency account.\",\n                {\n                    currency_code,\n                }\n            )}\n            hide_paddings={!is_mobile}\n        >\n            <div\n                className='cashier-onboarding-side-notes__link cashier-onboarding-side-notes__link-container'\n                onClick={onClick}\n            >\n                <Text size={is_mobile ? 'xxxs' : 'xxs'} color='red'>\n                    {localize('Manage your accounts')}\n                </Text>\n                <Icon icon='IcChevronRight' color='red' />\n            </div>\n        </SideNoteCard>\n    );\n});\n\nexport default CashierOnboardingSideNoteCrypto;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { getCurrencyDisplayCode } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize, localize } from '@deriv/translations';\nimport { SideNoteCard } from '../../../../components/side-note-card';\n\nconst CashierOnboardingSideNoteFiat: React.FC = observer(() => {\n    const { client, ui, common } = useStore();\n    const { currency, loginid, is_eu, is_low_risk } = client;\n    const { is_mobile } = ui;\n    const { is_from_derivgo } = common;\n    const currency_code = getCurrencyDisplayCode(currency);\n    const regulation_text = is_eu ? 'EU' : 'non-EU';\n\n    return (\n        <SideNoteCard\n            title={\n                is_low_risk\n                    ? localize('This is your {{regulation_text}} {{currency_code}} account {{loginid}}', {\n                          regulation_text,\n                          currency_code,\n                          loginid,\n                      })\n                    : localize('This is your {{currency_code}} account {{loginid}}', { currency_code, loginid })\n            }\n            hide_paddings={!is_mobile}\n            description={\n                <Localize\n                    i18n_default_text='If you want to change your account currency, please contact us via <0>live chat</0>.'\n                    components={[\n                        <Text\n                            key={0}\n                            color={!is_from_derivgo && 'red'}\n                            size={is_mobile ? 'xxxs' : 'xxs'}\n                            className={!is_from_derivgo && 'cashier-onboarding-side-notes__link'}\n                            onClick={() => (!is_from_derivgo ? window.LC_API.open_chat_window() : null)}\n                        />,\n                    ]}\n                />\n            }\n        />\n    );\n});\n\nexport default CashierOnboardingSideNoteFiat;\n","import React, { useEffect } from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport CashierOnboardingSideNoteCrypto from './cashier-onboarding-side-note-crypto';\nimport CashierOnboardingSideNoteFiat from './cashier-onboarding-side-note-fiat';\nimport './cashier-onboarding-side-notes.scss';\n\ntype TProps = {\n    setSideNotes: React.Dispatch<React.SetStateAction<JSX.Element[]>>;\n};\n\nconst CashierOnboardingSideNotes: React.FC<TProps> = observer(({ setSideNotes }) => {\n    const { client, ui } = useStore();\n    const { is_crypto } = client;\n    const { is_mobile } = ui;\n\n    useEffect(() => {\n        if (!is_mobile) {\n            if (is_crypto()) {\n                setSideNotes([<CashierOnboardingSideNoteCrypto key='crypto' />]);\n            } else {\n                setSideNotes([<CashierOnboardingSideNoteFiat key='fiat' />]);\n            }\n        }\n    }, [setSideNotes, is_crypto, is_mobile]);\n\n    if (!is_mobile) return null;\n\n    if (is_crypto()) return <CashierOnboardingSideNoteCrypto />;\n\n    return <CashierOnboardingSideNoteFiat />;\n});\n\nexport default CashierOnboardingSideNotes;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { getStaticUrl } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport './cashier-onboarding-title.scss';\n\nconst CashierOnboardingTitle: React.FC = observer(() => {\n    const { ui, common } = useStore();\n    const { is_mobile } = ui;\n    const { is_from_derivgo } = common;\n    const should_show_learn_more = is_mobile && !is_from_derivgo;\n\n    return (\n        <div className='cashier-onboarding-title' data-testid='dt_cashier_onboarding_title'>\n            <Text size={is_mobile ? 's' : 'sm'} align='center'>\n                {localize('Choose a way to fund your account')}\n            </Text>\n            <Text size={is_mobile ? 'xs' : 's'} align='center'>\n                {localize('Please note that some payment methods might not be available in your country.')}\n            </Text>\n            {should_show_learn_more && (\n                <Text\n                    data-testid='dt_cashier_onboarding_title_learn_more'\n                    onClick={() => window.open(getStaticUrl('/payment-methods'))}\n                    size='xs'\n                    color='red'\n                    align='center'\n                >\n                    {localize('Learn more about payment methods')}\n                </Text>\n            )}\n        </div>\n    );\n});\n\nexport default CashierOnboardingTitle;\n","import React, { useEffect } from 'react';\nimport { useHasSetCurrency } from '@deriv/hooks';\nimport { routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useHistory } from 'react-router';\nimport { PageContainer } from '../../components/page-container';\nimport { useCashierStore } from '../../stores/useCashierStores';\nimport {\n    CashierOnboardingCryptoCard,\n    CashierOnboardingFiatCard,\n    CashierOnboardingOnrampCard,\n    CashierOnboardingP2PCard,\n    CashierOnboardingPaymentAgentCard,\n    CashierOnboardingSideNotes,\n    CashierOnboardingTitle,\n} from './components';\n\ntype TProps = {\n    setSideNotes: React.Dispatch<React.SetStateAction<JSX.Element[]>>;\n};\n\nconst CashierOnboarding: React.FC<TProps> = observer(({ setSideNotes }) => {\n    const history = useHistory();\n    const { client, ui } = useStore();\n    const { general_store } = useCashierStore();\n    const { setIsCashierOnboarding } = general_store;\n    const { toggleSetCurrencyModal } = ui;\n    const { can_change_fiat_currency, available_crypto_currencies, is_crypto } = client;\n    const is_fiat_user = !is_crypto() && !can_change_fiat_currency;\n    const is_crypto_user = is_crypto() && available_crypto_currencies.length > 0;\n    const should_show_side_notes = is_fiat_user || is_crypto_user;\n    const has_set_currency = useHasSetCurrency();\n\n    useEffect(() => {\n        setIsCashierOnboarding(true);\n\n        return () => {\n            setIsCashierOnboarding(false);\n            if (!has_set_currency && window.location.pathname.includes(routes.cashier)) {\n                history.push(routes.trade);\n                toggleSetCurrencyModal();\n            }\n        };\n    }, [has_set_currency, history, setIsCashierOnboarding, toggleSetCurrencyModal]);\n\n    return (\n        <PageContainer hide_breadcrumb>\n            <CashierOnboardingTitle />\n            <CashierOnboardingFiatCard />\n            <CashierOnboardingCryptoCard />\n            <CashierOnboardingOnrampCard />\n            <CashierOnboardingPaymentAgentCard />\n            <CashierOnboardingP2PCard />\n            {should_show_side_notes && <CashierOnboardingSideNotes setSideNotes={setSideNotes} />}\n        </PageContainer>\n    );\n});\n\nexport default CashierOnboarding;\n","import React, { useState } from 'react';\nimport { Loading } from '@deriv/components';\nimport { useDepositFiatAddress } from '@deriv/hooks';\nimport { observer } from '@deriv/stores';\nimport './deposit-fiat-iframe.scss';\n\nconst DepositFiatIframe: React.FC = observer(() => {\n    const { data: iframe_url, isSuccess } = useDepositFiatAddress();\n    const [is_loading, setIsLoading] = useState(true);\n\n    React.useEffect(() => {\n        setIsLoading(true);\n    }, [iframe_url]);\n\n    return (\n        <React.Fragment>\n            {is_loading && <Loading is_fullscreen={false} />}\n            {isSuccess && (\n                <iframe\n                    key={iframe_url}\n                    className='deposit-fiat-iframe__iframe'\n                    onLoad={() => setIsLoading(false)}\n                    src={iframe_url}\n                    style={{ display: is_loading ? 'none' : 'block' }}\n                    data-testid='dt_deposit_fiat_iframe_iframe'\n                />\n            )}\n        </React.Fragment>\n    );\n});\n\nexport default DepositFiatIframe;\n","import React from 'react';\nimport { PageContainer } from '../../components/page-container';\nimport { DepositFiatIframe } from './components';\n\nconst DepositFiat: React.FC = () => (\n    <PageContainer>\n        <DepositFiatIframe />\n    </PageContainer>\n);\n\nexport default DepositFiat;\n","import React from 'react';\nimport { Loading } from '@deriv/components';\nimport { useCashierLocked, useDepositLocked, useIsSystemMaintenance } from '@deriv/hooks';\nimport { useStore, observer } from '@deriv/stores';\nimport { Virtual } from '../../components/cashier-container';\nimport CashierLocked from '../../components/cashier-locked';\nimport CryptoTransactionsHistory from '../../components/crypto-transactions-history';\nimport Error from '../../components/error';\nimport FundsProtection from '../../components/funds-protection';\nimport USDTSideNote from '../../components/usdt-side-note';\nimport RecentTransaction from '../../components/recent-transaction';\nimport CryptoDeposit from './crypto-deposit';\nimport DepositLocked from './deposit-locked';\nimport SideNote from '../../components/side-note';\nimport { useCashierStore } from '../../stores/useCashierStores';\nimport { CashierOnboardingModule } from '../../modules';\nimport { CashierOnboardingSideNotes } from '../../modules/cashier-onboarding/components';\nimport { DepositFiatModule } from '../../modules/deposit-fiat';\n\ntype TDeposit = {\n    setSideNotes: (notes: object | null) => void;\n};\n\nconst Deposit = observer(({ setSideNotes }: TDeposit) => {\n    const { client, traders_hub } = useStore();\n    const {\n        can_change_fiat_currency,\n        currency,\n        current_currency_type,\n        is_switching,\n        is_virtual,\n        landing_company_shortcode,\n    } = client;\n    const { iframe, deposit, transaction_history, general_store } = useCashierStore();\n    const { iframe_height, iframe_url } = iframe;\n    const { container, error, onMountDeposit: onMount } = deposit;\n    const { is_low_risk_cr_eu_real } = traders_hub;\n    const {\n        crypto_transactions,\n        is_crypto_transactions_visible,\n        onMount: recentTransactionOnMount,\n    } = transaction_history;\n    const {\n        cashier_route_tab_index: tab_index,\n        is_cashier_onboarding,\n        is_crypto,\n        is_deposit,\n        is_loading,\n        setActiveTab,\n        setIsDeposit,\n    } = general_store;\n    const is_cashier_locked = useCashierLocked();\n    const is_system_maintenance = useIsSystemMaintenance();\n    const is_deposit_locked = useDepositLocked();\n\n    const is_fiat_currency_banner_visible_for_MF_clients =\n        landing_company_shortcode === 'maltainvest' && !is_crypto && !can_change_fiat_currency && !!iframe_height;\n\n    React.useEffect(() => {\n        if (!is_crypto_transactions_visible) {\n            recentTransactionOnMount();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [is_switching]);\n\n    React.useEffect(() => {\n        setActiveTab(container);\n        onMount();\n        return () => {\n            setIsDeposit(false);\n            error.setErrorMessage({ code: '', message: '' });\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [setActiveTab, onMount, container, error.setErrorMessage]);\n\n    React.useEffect(() => {\n        if (typeof setSideNotes === 'function') {\n            if (is_switching || is_deposit) setSideNotes(null);\n            if (is_crypto && is_deposit && !is_switching) {\n                const side_notes = [\n                    ...(crypto_transactions.length ? [<RecentTransaction key={2} />] : []),\n                    ...(/^(UST)$/i.test(currency) ? [<USDTSideNote type='usdt' key={1} />] : []),\n                    ...(/^(eUSDT)$/i.test(currency) ? [<USDTSideNote type='eusdt' key={1} />] : []),\n                ];\n                if (side_notes.length > 0) {\n                    setSideNotes([\n                        <SideNote has_title={false} key={0}>\n                            {side_notes}\n                        </SideNote>,\n                    ]);\n                }\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currency, tab_index, crypto_transactions, crypto_transactions?.length, is_cashier_onboarding, iframe_height]);\n\n    if (!is_cashier_onboarding && (is_switching || (is_loading && !iframe_url)) && !is_crypto_transactions_visible) {\n        return <Loading is_fullscreen />;\n    }\n    if (is_virtual) {\n        return <Virtual />;\n    }\n    if (is_system_maintenance) {\n        if (is_cashier_locked || (is_deposit_locked && current_currency_type === 'crypto')) {\n            return <CashierLocked />;\n        }\n    }\n    if (error.is_ask_uk_funds_protection) {\n        return <FundsProtection />;\n    }\n    if (is_cashier_locked) {\n        return <CashierLocked />;\n    }\n    if (is_deposit_locked) {\n        return <DepositLocked />;\n    }\n    if (is_crypto_transactions_visible) {\n        return <CryptoTransactionsHistory />;\n    }\n\n    if (is_deposit || is_low_risk_cr_eu_real) {\n        if (error.message) {\n            return <Error error={error} />;\n        }\n        if (is_crypto) {\n            return <CryptoDeposit />;\n        }\n\n        return (\n            <>\n                {is_fiat_currency_banner_visible_for_MF_clients && (\n                    <CashierOnboardingSideNotes setSideNotes={setSideNotes} />\n                )}\n                <DepositFiatModule />\n            </>\n        );\n    }\n    return <CashierOnboardingModule setSideNotes={setSideNotes} />;\n});\n\nexport default Deposit;\n","import Deposit from './deposit';\n\nexport default Deposit;\n","import React from 'react';\nimport { Button, Icon, NewsTicker, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { TOnRampProvider } from '../../../types';\nimport { observer, useStore } from '@deriv/stores';\nimport { useCashierStore } from '../../../stores/useCashierStores';\n\ntype TOnRampProviderCardProps = {\n    provider: TOnRampProvider;\n};\n\nconst OnRampProviderCard = observer(({ provider }: TOnRampProviderCardProps) => {\n    const { ui } = useStore();\n    const { is_dark_mode_on, is_mobile } = ui;\n    const { onramp } = useCashierStore();\n    const { setSelectedProvider } = onramp;\n\n    const payment_icons = provider.getPaymentIcons();\n    const gtm_identifier = provider.name.toLowerCase().replace(' ', '-');\n    const logo_size = is_mobile ? 56 : 128;\n\n    return (\n        <div className='on-ramp__provider'>\n            <div className='on-ramp__provider-logo'>\n                <Icon\n                    data_testid={is_dark_mode_on ? 'dti_provider_icon_dark' : 'dti_provider_icon_light'}\n                    icon={is_dark_mode_on ? provider.icon.dark : provider.icon.light}\n                    width={logo_size}\n                    height={logo_size}\n                />\n            </div>\n            <Text size='s' color='prominent' weight='bold' line_height='l' className='on-ramp__provider-name'>\n                {provider.name}\n            </Text>\n            <Text size='xs' line_height='m' as='p' className='on-ramp__provider-description'>\n                {provider.getDescription()}\n            </Text>\n            <div className='on-ramp__provider-payment-icons'>\n                <div className='on-ramp__provider-payment-icons-shadow' />\n                <NewsTicker speed={10}>\n                    {payment_icons.map((payment_icon, idx) => (\n                        <Icon\n                            data_testid={is_dark_mode_on ? 'dti_payment_icon_dark' : 'dti_payment_icon_light'}\n                            icon={is_dark_mode_on ? payment_icon.dark : payment_icon.light}\n                            key={idx}\n                            size={40}\n                        />\n                    ))}\n                </NewsTicker>\n            </div>\n            <Button\n                id={`gtm-onramp-provider-select--${gtm_identifier}`}\n                className='on-ramp__provider-button'\n                type='button'\n                has_effect\n                onClick={() => setSelectedProvider(provider)}\n                text={localize('Select')}\n                primary\n                small={is_mobile}\n            />\n        </div>\n    );\n});\n\nexport default OnRampProviderCard;\n","import OnRampProviderCard from './on-ramp-provider-card';\n\nexport default OnRampProviderCard;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Button, HintBox, Icon, Loading, Popover, Text, useCopyToClipboard } from '@deriv/components';\nimport { getKebabCase, website_name, isMobile } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport { useCashierStore } from '../../../stores/useCashierStores';\n\nconst OnRampProviderPopup = observer(() => {\n    const { ui } = useStore();\n    const { is_dark_mode_on } = ui;\n    const { onramp } = useCashierStore();\n    const {\n        api_error,\n        deposit_address,\n        is_deposit_address_loading,\n        is_requesting_widget_html,\n        onClickDisclaimerContinue,\n        onClickGoToDepositPage,\n        selected_provider,\n        setIsOnRampModalOpen,\n        should_show_dialog,\n        should_show_widget,\n        widget_error,\n        widget_html,\n    } = onramp;\n    const el_onramp_widget_container_ref = React.useRef(null);\n    const [is_copied, copyToClipboard, setIsCopied] = useCopyToClipboard();\n\n    let timeout_clipboard: ReturnType<typeof setTimeout>;\n\n    const onClickCopyDepositAddress = () => {\n        copyToClipboard(deposit_address || '');\n\n        timeout_clipboard = setTimeout(() => {\n            setIsCopied(false);\n        }, 500);\n    };\n\n    React.useEffect(() => {\n        return () => clearTimeout(timeout_clipboard);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // JS executed after \"on-ramp__widget-container\" has been added to the DOM.\n    // Used for providers that require JS to be executed for inclusion of their widget.\n    // (vs embedding an <iframe>)\n    React.useEffect(() => {\n        if (should_show_widget && widget_html) {\n            selected_provider?.onMountWidgetContainer(el_onramp_widget_container_ref);\n        }\n    }, [selected_provider, should_show_widget, widget_html]);\n\n    if (selected_provider === null) {\n        return null;\n    }\n\n    if (is_deposit_address_loading || (should_show_widget && is_requesting_widget_html)) {\n        return <Loading is_fullscreen />;\n    }\n\n    if (should_show_widget) {\n        return (\n            <div\n                className={classNames('on-ramp__widget-container', {\n                    'on-ramp__widget-container--error': widget_error,\n                })}\n                ref={el_onramp_widget_container_ref}\n            >\n                {widget_error ? (\n                    <div className='on-ramp__widget-container-error'>{widget_error}</div>\n                ) : (\n                    <div dangerouslySetInnerHTML={{ __html: widget_html || '' }} />\n                )}\n            </div>\n        );\n    }\n\n    if (should_show_dialog) {\n        return (\n            <div className='on-ramp__popup-no-deposit-address'>\n                <Text size='xs' className='on-ramp__popup-no-deposit-address-text'>\n                    {api_error ? (\n                        <Localize i18n_default_text='Please go to the Deposit page to get an address.' />\n                    ) : (\n                        <Localize i18n_default_text='Please go to the Deposit page to generate an address. Then come back here to continue with your transaction.' />\n                    )}\n                </Text>\n                <Button.Group className='on-ramp__popup-no-deposit-address-buttons'>\n                    <Button text={localize('Cancel')} onClick={() => setIsOnRampModalOpen(false)} secondary large />\n                    <Button text={localize('Go to Deposit page')} onClick={onClickGoToDepositPage} primary large />\n                </Button.Group>\n            </div>\n        );\n    }\n\n    return (\n        <div className='on-ramp__popup' data-testid='dti_on-ramp_popup'>\n            {selected_provider.should_show_deposit_address && (\n                <React.Fragment>\n                    <div className='on-ramp__popup-deposit'>\n                        <Text\n                            size={isMobile() ? 'xxs' : 'xs'}\n                            color='general'\n                            line_height={isMobile() ? 'm' : 'l'}\n                            align={isMobile() ? 'left' : 'center'}\n                        >\n                            <Localize i18n_default_text=\"Please copy the crypto address you see below. You'll need it to deposit your cryptocurrency.\" />\n                        </Text>\n                        <div className='on-ramp__popup-deposit-address'>\n                            <Popover zIndex='9998' alignment='right' message={localize('Copied!')} is_open={is_copied}>\n                                <input\n                                    className={classNames('on-ramp__popup-deposit-address-text', {\n                                        'on-ramp__popup-deposit-address-text--dark': is_dark_mode_on,\n                                    })}\n                                    defaultValue={deposit_address || ''}\n                                    disabled\n                                    onFocus={e => e.preventDefault()}\n                                />\n                                <Icon\n                                    className='on-ramp__popup-deposit-address-icon'\n                                    data_testid='dti_deposit_address_icon'\n                                    icon={isMobile() ? 'IcCopy' : 'icClipboard'}\n                                    size={16}\n                                    onClick={onClickCopyDepositAddress}\n                                />\n                            </Popover>\n                        </div>\n                        <div className='on-ramp__popup-deposit-address-hint'>\n                            <HintBox\n                                icon={'IcInfo'}\n                                is_info\n                                message={localize(\n                                    'This address can only be used ONCE. Please copy a new one for your next transaction.'\n                                )}\n                            />\n                        </div>\n                    </div>\n                    <div className='on-ramp__popup-divider' />\n                </React.Fragment>\n            )}\n            <div className='on-ramp__popup-disclaimer'>\n                <Text\n                    line_height='m'\n                    weight='bold'\n                    color='prominent'\n                    as='p'\n                    className='on-ramp__popup-disclaimer-title'\n                >\n                    <Localize i18n_default_text='Disclaimer' />\n                </Text>\n                <Text\n                    size={isMobile() ? 'xxs' : 'xs'}\n                    line_height='l'\n                    color='general'\n                    as='p'\n                    className='on-ramp__popup-disclaimer-text'\n                >\n                    <Localize\n                        i18n_default_text=\"By clicking 'Continue' you will be redirected to {{ service }}, a third-party payment service provider. Please note that {{ website_name }} is not responsible for the content or services provided by {{ service }}. If you encounter any issues related to {{ service }} services, you must contact {{ service }} directly.\"\n                        values={{\n                            service: selected_provider.name,\n                            website_name,\n                        }}\n                    />\n                </Text>\n            </div>\n            {!should_show_widget && deposit_address && (\n                <div className='on-ramp__popup-buttons'>\n                    <Button.Group>\n                        <Button large onClick={() => setIsOnRampModalOpen(false)} secondary text={localize('Cancel')} />\n                        <Button\n                            id={`gtm-onramp-provider-continue--${getKebabCase(selected_provider.name)}`}\n                            large\n                            onClick={onClickDisclaimerContinue}\n                            primary\n                            text={localize('Continue')}\n                        />\n                    </Button.Group>\n                </div>\n            )}\n        </div>\n    );\n});\n\nexport default OnRampProviderPopup;\n","import OnRampProviderPopup from './on-ramp-provider-popup';\n\nexport default OnRampProviderPopup;\n","import React from 'react';\nimport { Loading, Modal, SelectNative, ReadMore, Text } from '@deriv/components';\nimport { useCashierLocked, useDepositLocked } from '@deriv/hooks';\nimport { routes, isMobile } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\nimport { useStore, observer } from '@deriv/stores';\nimport CashierLocked from '../../components/cashier-locked';\nimport SideNote from '../../components/side-note';\nimport OnRampProviderCard from './on-ramp-provider-card';\nimport OnRampProviderPopup from './on-ramp-provider-popup';\nimport { useCashierStore } from '../../stores/useCashierStores';\nimport './on-ramp.scss';\n\ntype TMenuOption = {\n    count?: number;\n    default?: boolean;\n    icon?: string;\n    label: string;\n    value?: string;\n    path: string;\n    has_side_note?: boolean;\n};\n\nexport type TOnRampProps = {\n    menu_options: TMenuOption[];\n    setSideNotes: (ReactComponent: React.ReactElement[]) => void;\n};\n\nconst OnRampSideNote = () => {\n    const notes = [\n        <Localize\n            i18n_default_text='Fiat onramp is a cashier service that allows you to convert fiat currencies to crypto to top up your Deriv crypto accounts. Listed here are third-party crypto exchanges. You’ll need to create an account with them to use their services.'\n            key={0}\n        />,\n    ];\n\n    return <SideNote side_notes={notes} title={<Localize i18n_default_text='What is Fiat onramp?' />} />;\n};\n\nconst OnRampInfo = () => (\n    <div className='on-ramp__info'>\n        <Text color='prominent' size='s' weight='bold' className='on-ramp__info-header' as='p'>\n            <Localize i18n_default_text='What is Fiat onramp?' />\n        </Text>\n        <div className='on-ramp__info-content'>\n            <ReadMore\n                expand_text={localize('See more')}\n                text={localize(\n                    'Fiat onramp is a cashier service that allows you to convert fiat currencies to crypto to top up your Deriv crypto accounts. Listed here are third-party crypto exchanges. You’ll need to create an account with them to use their services.'\n                )}\n                collapse_length={140}\n                className='on-ramp__read-more'\n            />\n        </div>\n    </div>\n);\n\nconst OnRamp = observer(({ menu_options, setSideNotes }: TOnRampProps) => {\n    const { common, client } = useStore();\n    const { onramp, general_store } = useCashierStore();\n    const {\n        filtered_onramp_providers,\n        is_onramp_modal_open,\n        onMountOnramp,\n        onUnmountOnramp,\n        onramp_popup_modal_title,\n        resetPopup,\n        setIsOnRampModalOpen,\n        should_show_dialog,\n    } = onramp;\n    const { is_cashier_onboarding, is_loading, cashier_route_tab_index } = general_store;\n    const is_cashier_locked = useCashierLocked();\n    const { is_switching } = client;\n    const { routeTo } = common;\n    const is_deposit_locked = useDepositLocked();\n\n    const [selected_cashier_path, setSelectedCashierPath] = React.useState(routes.cashier_onramp);\n\n    React.useEffect(() => {\n        if (menu_options && selected_cashier_path !== routes.cashier_onramp) {\n            routeTo(selected_cashier_path);\n        }\n    }, [menu_options, routeTo, selected_cashier_path]);\n\n    React.useEffect(() => {\n        onMountOnramp();\n        if (typeof setSideNotes === 'function' && !is_switching && !is_loading) {\n            setSideNotes([<OnRampSideNote key={0} />]);\n        }\n\n        return () => {\n            onUnmountOnramp();\n            if (typeof setSideNotes === 'function') {\n                setSideNotes([]);\n            }\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [onMountOnramp, onUnmountOnramp, is_cashier_onboarding, is_switching, is_loading, cashier_route_tab_index]);\n\n    const getActivePaths = () =>\n        (menu_options ?? []).map(menu_option => ({\n            text: menu_option.label,\n            value: menu_option.path,\n        }));\n\n    if (is_switching || is_loading) return <Loading className='cashier-onboarding__loader' is_fullscreen />;\n\n    if (is_deposit_locked || is_cashier_locked) {\n        return <CashierLocked />;\n    }\n\n    return (\n        <React.Fragment>\n            <div className='cashier__wrapper cashier__wrapper--align-left on-ramp'>\n                {isMobile() && (\n                    <React.Fragment>\n                        <SelectNative\n                            data_testid='dt_on_ramp_select_native'\n                            className='on-ramp__selector'\n                            label={''}\n                            list_items={getActivePaths()}\n                            value={selected_cashier_path}\n                            should_show_empty_option={false}\n                            hide_top_placeholder={false}\n                            onChange={e => {\n                                if (e.currentTarget.value !== selected_cashier_path) {\n                                    setSelectedCashierPath(e.currentTarget.value);\n                                }\n                            }}\n                        />\n                        <OnRampInfo />\n                    </React.Fragment>\n                )}\n                <Text\n                    color={isMobile() ? 'less-prominent' : 'general'}\n                    weight={isMobile() ? 'normal' : 'bold'}\n                    align='center'\n                    line_height='m'\n                    className='on-ramp__page-header'\n                    as='p'\n                >\n                    <Localize i18n_default_text='Select payment channel' />\n                </Text>\n                {filtered_onramp_providers.map(provider => (\n                    <OnRampProviderCard key={provider.name} provider={provider} />\n                ))}\n                <Modal\n                    className='on-ramp__modal'\n                    has_close_icon\n                    is_open={is_onramp_modal_open}\n                    small={should_show_dialog}\n                    title={onramp_popup_modal_title}\n                    toggleModal={() => setIsOnRampModalOpen(!is_onramp_modal_open)}\n                    onUnmount={resetPopup}\n                    width={should_show_dialog ? '44rem' : '62.8rem'}\n                >\n                    <Modal.Body>\n                        <OnRampProviderPopup />\n                    </Modal.Body>\n                </Modal>\n            </div>\n        </React.Fragment>\n    );\n});\n\nexport default OnRamp;\n","import OnRamp from './on-ramp';\n\nexport default OnRamp;\n","import React from 'react';\nimport { Money } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport TransferConfirm from 'Components/transfer-confirm';\nimport { useCashierStore } from '../../../stores/useCashierStores';\n\nconst PaymentAgentTransferConfirm = observer(() => {\n    const { client } = useStore();\n    const { payment_agent_transfer } = useCashierStore();\n    const { currency, loginid } = client;\n    const {\n        confirm: { amount, description, client_id: transfer_to, client_name: transfer_to_name },\n        error,\n        requestPaymentAgentTransfer,\n        setIsTryTransferSuccessful,\n    } = payment_agent_transfer;\n\n    return (\n        <TransferConfirm\n            data={[\n                { label: localize('From account number'), value: loginid || '', key: 'transfer_from' },\n                {\n                    label: [localize('To account number'), localize('Account holder name')],\n                    value: [transfer_to?.toUpperCase() || '', transfer_to_name || ''],\n                    key: 'transfer_to',\n                },\n                {\n                    label: localize('Amount'),\n                    value: <Money currency={currency} amount={amount} show_currency />,\n                    key: 'amount',\n                },\n                { label: localize('Description'), value: description || '', key: 'description' },\n            ]}\n            error={error}\n            onClickBack={() => {\n                setIsTryTransferSuccessful(false);\n            }}\n            onClickConfirm={() => {\n                requestPaymentAgentTransfer({\n                    amount: Number(amount),\n                    currency,\n                    description: description || '',\n                    transfer_to: transfer_to || '',\n                });\n            }}\n        />\n    );\n});\n\nexport default PaymentAgentTransferConfirm;\n","import PaymentAgentTransferConfirm from './payment-agent-transfer-confirm';\n\nexport default PaymentAgentTransferConfirm;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Field, FieldProps, Formik, Form } from 'formik';\nimport { Button, DesktopWrapper, Input, Text } from '@deriv/components';\nimport { getDecimalPlaces, validNumber, getCurrencyDisplayCode } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize, Localize } from '@deriv/translations';\nimport ErrorDialog from '../../../components/error-dialog';\nimport { useCashierStore } from '../../../stores/useCashierStores';\nimport './payment-agent-transfer-form.scss';\nimport { TTransferLimit } from '../../../types';\n\ntype TValidateTransferProps = {\n    balance: string;\n    currency: string;\n    transfer_limit: TTransferLimit;\n};\n\nconst validateTransfer = (\n    values: { loginid: string; amount: string; description: string },\n    { balance, currency, transfer_limit }: TValidateTransferProps\n) => {\n    const errors = { loginid: '', amount: '', description: '' };\n\n    if (!values.loginid || !/^[A-Za-z]+\\d+$/.test(values.loginid)) {\n        errors.loginid = localize('Please enter a valid client login ID.');\n    }\n\n    const { is_ok, message } = validNumber(values.amount, {\n        type: 'float',\n        decimals: getDecimalPlaces(currency),\n        ...(transfer_limit.min_withdrawal && {\n            min: Number(transfer_limit.min_withdrawal),\n            max:\n                Number(balance) >= Number(transfer_limit.min_withdrawal) &&\n                transfer_limit.max_withdrawal &&\n                Number(balance) < Number(transfer_limit.max_withdrawal)\n                    ? Number(balance)\n                    : Number(transfer_limit.max_withdrawal),\n        }),\n    });\n\n    if (!values.amount) {\n        errors.amount = localize('This field is required.');\n    } else if (Number(balance) < Number(values.amount)) {\n        errors.amount = localize('Insufficient balance.');\n    } else if (!is_ok && message) {\n        errors.amount = message;\n    }\n\n    if (values.description && !/^[0-9A-Za-z .,'-]{0,250}$/.test(values.description.replace(/\\n/g, ' '))) {\n        errors.description = localize('Please enter a valid description.');\n    }\n\n    return Object.fromEntries(Object.entries(errors).filter(([_, v]) => !!v));\n};\n\nconst PaymentAgentTransferForm = observer(() => {\n    const { client } = useStore();\n    const { balance, currency } = client;\n    const { payment_agent_transfer: payment_agent_transfer_store } = useCashierStore();\n    const {\n        confirm: { amount, description, client_id: transfer_to },\n        error,\n        requestTryPaymentAgentTransfer,\n        transfer_limit,\n    } = payment_agent_transfer_store;\n    const { setErrorMessage } = error;\n\n    const validateTransferPassthrough = (values: { loginid: string; amount: string; description: string }) =>\n        validateTransfer(values, {\n            balance: balance !== undefined ? String(balance) : '',\n            currency,\n            transfer_limit,\n        });\n\n    const onTransferPassthrough = async (\n        values: { loginid: string; amount: string; description: string },\n        actions: { setSubmitting: (value: boolean) => void }\n    ) => {\n        const payment_agent_transfer = await requestTryPaymentAgentTransfer({\n            amount: Number(values.amount),\n            currency,\n            description: values.description.replace(/\\n/g, ' '),\n            transfer_to: values.loginid,\n        });\n        if (payment_agent_transfer.error) {\n            actions.setSubmitting(false);\n        }\n    };\n\n    // in case coming back from confirmation screen, populate the recent data to be edited\n    const initial_transfer_form_values = {\n        loginid: transfer_to || '',\n        amount: amount?.toString() || '',\n        description: description || '',\n    };\n\n    return (\n        <div\n            className='cashier__wrapper payment-agent-transfer-form__container'\n            data-testid='dt_payment_agent_transfer_form_container'\n        >\n            <DesktopWrapper>\n                <Text\n                    as='h2'\n                    color='prominent'\n                    weight='bold'\n                    align='center'\n                    className='cashier__header cashier__content-header'\n                >\n                    <Localize i18n_default_text='Transfer to client' />\n                </Text>\n            </DesktopWrapper>\n            <Formik\n                initialValues={initial_transfer_form_values}\n                isInitialValid={!Object.keys(validateTransferPassthrough(initial_transfer_form_values)).length}\n                validate={validateTransferPassthrough}\n                onSubmit={onTransferPassthrough}\n            >\n                {({ errors, isSubmitting, isValid, touched, handleChange }) => (\n                    <Form noValidate>\n                        <Field name='loginid'>\n                            {({ field }: FieldProps) => (\n                                <Input\n                                    {...field}\n                                    onChange={e => {\n                                        setErrorMessage({ code: '', message: '' });\n                                        handleChange(e);\n                                    }}\n                                    className='payment-agent-transfer-form__input'\n                                    data-testid='dt_payment_agent_transfer_form_input_loginid'\n                                    type='text'\n                                    label={localize('Client account number')}\n                                    error={(touched.loginid && errors.loginid) || ''}\n                                    required\n                                    autoComplete='off'\n                                    maxLength={20}\n                                />\n                            )}\n                        </Field>\n                        <Field name='amount'>\n                            {({ field }: FieldProps) => (\n                                <Input\n                                    {...field}\n                                    onChange={e => {\n                                        setErrorMessage({ code: '', message: '' });\n                                        handleChange(e);\n                                    }}\n                                    className='payment-agent-transfer-form__input dc-input--no-placeholder'\n                                    data-testid='dt_payment_agent_transfer_form_input_amount'\n                                    type='text'\n                                    label={localize('Amount')}\n                                    error={(touched.amount && errors.amount) || ''}\n                                    required\n                                    trailing_icon={\n                                        <span\n                                            className={classNames(\n                                                'symbols',\n                                                `symbols--${(currency || '').toLowerCase()}`\n                                            )}\n                                        >\n                                            {getCurrencyDisplayCode(currency)}\n                                        </span>\n                                    }\n                                    autoComplete='off'\n                                    maxLength={30}\n                                />\n                            )}\n                        </Field>\n                        <Field name='description'>\n                            {({ field }: FieldProps) => (\n                                <Input\n                                    {...field}\n                                    onChange={e => {\n                                        setErrorMessage({ code: '', message: '' });\n                                        handleChange(e);\n                                    }}\n                                    className='payment-agent-transfer-form__input-area'\n                                    data-testid='dt_payment_agent_transfer_form_input_description'\n                                    type='textarea'\n                                    label={localize('Description')}\n                                    error={errors.description}\n                                    required\n                                    autoComplete='off'\n                                    has_character_counter\n                                    max_characters={250}\n                                />\n                            )}\n                        </Field>\n                        <div className='cashier__form-submit'>\n                            <Button\n                                className='cashier__form-submit-button payment-agent-transfer-form__submit-button'\n                                type='submit'\n                                is_disabled={!isValid || isSubmitting}\n                                primary\n                                large\n                            >\n                                <Localize i18n_default_text='Transfer' />\n                            </Button>\n                        </div>\n                        <ErrorDialog error={error} />\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    );\n});\n\nexport default PaymentAgentTransferForm;\n","import PaymentAgentTransferForm from './payment-agent-transfer-form';\n\nexport default PaymentAgentTransferForm;\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { Button, Icon, Text } from '@deriv/components';\nimport { routes, formatMoney, getCurrencyDisplayCode, getCurrencyName } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize, Localize } from '@deriv/translations';\nimport { useCashierStore } from '../../../stores/useCashierStores';\nimport './payment-agent-transfer-receipt.scss';\nimport { BrowserHistory } from 'history';\n\nconst openStatement = (history: BrowserHistory, resetPaymentAgentTransfer: VoidFunction) => {\n    history.push(routes.statement);\n    resetPaymentAgentTransfer();\n};\n\ntype TPaymentAgentTransferReceipt = {\n    history: BrowserHistory;\n};\n\nconst PaymentAgentTransferReceipt = observer(({ history }: TPaymentAgentTransferReceipt) => {\n    const { client, common } = useStore();\n    const { currency, loginid } = client;\n    const { is_from_derivgo } = common;\n    const { payment_agent_transfer } = useCashierStore();\n    const { receipt, resetPaymentAgentTransfer } = payment_agent_transfer;\n\n    return (\n        <div\n            className='cashier__wrapper payment-agent-transfer-receipt__wrapper'\n            data-testid='dt_payment_agent_transfer_receipt_wrapper'\n        >\n            <div className='cashier__success'>\n                <Text as='h2' color='prominent' align='center' weight='bold' className='cashier__header'>\n                    <Localize i18n_default_text=\"You've transferred\" />{' '}\n                    {formatMoney(currency, Number(receipt.amount_transferred), true)} {getCurrencyDisplayCode(currency)}\n                </Text>\n                <div className='cashier__transferred-details-wrapper'>\n                    <span className='account-transfer__transfer-details-from'>\n                        <Icon icon={`IcCurrency-${currency.toLowerCase()}`} />\n                        <span className='cashier__transferred-details'>\n                            <Text size='xs' line_height='xs' weight='bold'>\n                                {getCurrencyName(currency)}\n                            </Text>\n                            <Text size='xs' line_height='xs' color='less-prominent'>\n                                {loginid}\n                            </Text>\n                        </span>\n                    </span>\n                    <Icon className='cashier__transferred-icon' icon='IcArrowLeftBold' />\n                    <span className='account-transfer__transfer-details-to'>\n                        <Icon icon='IcCashierPaymentAgent' />\n                        <span className='cashier__transferred-details'>\n                            <Text size='xs' line_height='xs' weight='bold'>\n                                {receipt.client_name}\n                            </Text>\n                            <Text size='xs' line_height='xs' color='less-prominent'>\n                                {receipt.client_id?.toUpperCase() || ''}\n                            </Text>\n                        </span>\n                    </span>\n                </div>\n            </div>\n            <div className='cashier__form-submit'>\n                {!is_from_derivgo && (\n                    <Button\n                        className='cashier__form-submit-button'\n                        has_effect\n                        text={localize('View transactions')}\n                        onClick={() => openStatement(history, resetPaymentAgentTransfer)}\n                        secondary\n                        large\n                    />\n                )}\n                <Button\n                    className='cashier__form-submit-button cashier__done-button'\n                    has_effect\n                    text={localize('Make a new transfer')}\n                    onClick={resetPaymentAgentTransfer}\n                    primary\n                    large\n                />\n            </div>\n        </div>\n    );\n});\n\nexport default withRouter(PaymentAgentTransferReceipt);\n","import PaymentAgentTransferReceipt from './payment-agent-transfer-receipt';\n\nexport default PaymentAgentTransferReceipt;\n","import React from 'react';\nimport { Loading } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport CashierLocked from 'Components/cashier-locked';\nimport Error from 'Components/error';\nimport NoBalance from 'Components/no-balance';\nimport { Virtual } from 'Components/cashier-container';\nimport PaymentAgentTransferConfirm from './payment-agent-transfer-confirm';\nimport PaymentAgentTransferForm from './payment-agent-transfer-form';\nimport PaymentAgentTransferReceipt from './payment-agent-transfer-receipt';\nimport { useCashierStore } from '../../stores/useCashierStores';\nimport { useCashierLocked } from '@deriv/hooks';\n\nconst PaymentAgentTransfer = observer(() => {\n    const { client } = useStore();\n    const { balance, is_virtual } = client;\n    const { general_store, payment_agent_transfer } = useCashierStore();\n    const { is_loading, setActiveTab } = general_store;\n    const is_cashier_locked = useCashierLocked();\n    const {\n        container,\n        error,\n        is_transfer_successful,\n        is_try_transfer_successful,\n        onMountPaymentAgentTransfer: onMount,\n        resetPaymentAgentTransfer: onUnMount,\n    } = payment_agent_transfer;\n\n    React.useEffect(() => {\n        setActiveTab(container);\n        if (!is_virtual) {\n            onMount();\n        }\n    }, [container, is_virtual, onMount, setActiveTab]);\n\n    React.useEffect(() => {\n        return () => {\n            onUnMount();\n        };\n    }, [onUnMount]);\n\n    if (is_virtual) {\n        return <Virtual />;\n    }\n    if (is_loading) {\n        return <Loading className='cashier__loader' />;\n    }\n    if (is_cashier_locked) {\n        return <CashierLocked />;\n    }\n    if (error.is_show_full_page) {\n        // for errors with CTA hide the form and show the error,\n        // for others show them at the bottom of the form next to submit button\n        return <Error error={error} />;\n    }\n    if (!Number(balance)) {\n        return <NoBalance />;\n    }\n    if (is_try_transfer_successful) {\n        return <PaymentAgentTransferConfirm />;\n    }\n    if (is_transfer_successful) {\n        return <PaymentAgentTransferReceipt />;\n    }\n    return <PaymentAgentTransferForm error={error} />;\n});\n\nexport default PaymentAgentTransfer;\n","import PaymentAgentTransfer from './payment-agent-transfer';\n\nexport default PaymentAgentTransfer;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport './missing-payment-method-note.scss';\n\nconst MissingPaymentMethodNote = () => {\n    return (\n        <div className='missing-payment-method-note'>\n            <Text as='p' className='missing-payment-method-note__title' size='xs' line_height='m' weight='bold'>\n                <Localize i18n_default_text='Note' />\n            </Text>\n            <Text as='p' size='xxs' line_height='s'>\n                <Localize i18n_default_text='Some payment methods may not be listed here but payment agents may still offer them. If you can’t find your favourite method, contact the payment agents directly to check further.' />\n            </Text>\n        </div>\n    );\n};\n\nexport default MissingPaymentMethodNote;\n","import MissingPaymentMethodNote from './missing-payment-method-note';\n\nexport default MissingPaymentMethodNote;\n","const containers = {\n    account_transfer: 'account_transfer',\n    deposit: 'deposit',\n    payment_agent: 'payment_agent',\n    payment_agent_transfer: 'payment_agent_transfer',\n    withdraw: 'withdraw',\n} as const;\n\nconst map_action = {\n    withdraw: 'payment_withdraw',\n    payment_agent: 'payment_agent_withdraw',\n} as const;\n\nconst icon_payment_methods = {\n    Alipay: ['alipay'],\n    Bank: [\n        'bank',\n        'bankdeposit',\n        'banks',\n        'banktransfer',\n        'bankwire',\n        'bankwiretransfer',\n        'localbankwire',\n        'localbank',\n        'localbanks',\n        'localbanktransfer',\n    ],\n    Bankbri: ['bri', 'bankbri'],\n    Bca: ['bca', 'grupbca'],\n    Bch: ['bch'],\n    Bni: ['bni'],\n    Bitcoin: ['bitcoin', 'btc'],\n    Card: ['card', 'cards', 'visa', 'mastercard'],\n    Cimbniaga: ['cimbniaga'],\n    Crypto: ['crypto', 'cryptos', 'cryptocurrencies', 'cryptocurrency', 'weacceptcrypto'],\n    Dai: ['dai'],\n    Diamondbank: ['diamondbank'],\n    Eth: ['eth', 'ethd', 'ethereum'],\n    Ewallet: ['ewallet', 'ewallets', 'ewalletpayment', 'skrill'],\n    Firstbank: ['firstbank'],\n    Gtbank: ['gtbank'],\n    Icbc: ['icbc'],\n    Libertyreserve: ['libertyreserve'],\n    LiteCoin: ['ltc', 'litecoin'],\n    Mandiri: ['mandiri'],\n    Mandirisyariah: ['mandirisyariah'],\n    Moneygram: ['moneygram'],\n    Paypal: ['paypal'],\n    PerfectMoney: ['perfectmoneyandwebmoney', 'perfectmoney'],\n    Permatabank: ['permatabank'],\n    Tether: ['tether'],\n    Verve: ['verve'],\n    WebMoney: ['perfectmoneyandwebmoney', 'webmoney'],\n    Wechatpay: ['wechatpay'],\n    Zenithbank: ['zenithbank'],\n} as const;\n\nconst payment_methods = {\n    AbokiFX: ['AbokiFX', 'A BOKI FX'],\n    'ABSA Bank': [\n        'Absa',\n        'ABSA',\n        'ABSA Bank',\n        'ABSABank',\n        'ABSABANK',\n        'Absabank',\n        'ABSA Bank Transfer',\n        'ABSA Cash Send',\n        'Absa fund transfer and orange money services',\n        'ABSA GHANA LIMITED',\n        'Direct deposit FNB and ABSA',\n    ],\n    'Access bank': ['Access bank', 'Access Bank', 'Accessbank', 'AccessBank', 'ACCESS BANK', 'Acess Bank'],\n    'Access forex': ['Access Forex', 'ACCESS FOREX', 'Access forex'],\n    'Afriland First Bank': ['Afriland First Bank', 'AFRILAND FIRST BANK'],\n    'Airtel Mobile money': [\n        'Airtel Mobile money',\n        'airtel',\n        'Airtel',\n        'AIRTEL MOBILE MONEY',\n        'airtel money',\n        'Airtel money',\n        'Airtelmoney',\n        'Airtel Money',\n        'AirtelMoney',\n        'AIRTELMONEY',\n        'AIRTEL MONEY',\n        'Airtel Tigo',\n        'AirtelTigo cash',\n        'all mobile money',\n    ],\n    Airtm: ['airtm', 'Airtm'],\n    AlfalahBank: ['AlfalahBank', 'bank alfalfa', 'Alflah Bank'],\n    'All banks': [\n        'All banks',\n        'All local banks',\n        'All local Banks',\n        'All local banks ZWL',\n        'All Local Bank transfer',\n        'bank',\n        'Bank',\n        'BANK',\n        'banks',\n        'Banks',\n        'local banks',\n        'Local banks',\n        'Local Banks',\n        'Pakistani Local All banks',\n        'Local Indian banks',\n        'LocalBanks',\n    ],\n    Astropay: ['astropay', 'Astropay', 'Astro Pay'],\n    'ATM transfer': [\n        'ATM',\n        'ATMDeposits',\n        'ATMdeposit',\n        'ATM transfer',\n        'ATM Transfer',\n        'BanktransferATM',\n        'FNB ATM deposit',\n    ],\n    AzamPesa: ['AzamPesa', 'Azampesa'],\n    'Banco Bradesco': ['Banco Bradesco', 'Bradesco'],\n    'Banco de Pichincha': ['Banco de Pichincha', 'BANCO DE PICHINCHA', 'Pichincha'],\n    'Banco de Produbanco': ['Banco de Produbanco', 'BANCO DE PRODUBANCO'],\n    'Banco del Pacifico': ['Banco del Pacifico', 'BANCO DE PACIFICO', 'Pacifico'],\n    'Banco Internacional': ['Banco Internacional', 'BANCO INTERNACIONAL'],\n    'Banco Internacional de Moçambique (BIM)': ['Banco Internacional de Moçambique (BIM)', 'Bim', 'Transferencia Bim'],\n    'Bancobu Bank eNoti': ['Bancobu Bank eNoti', 'Bancobu e-noti'],\n    'Bank AL Habib': ['Bank AL Habib', 'bank al habib', 'Bank Alhabib'],\n    'Bank Negara Indonesia (BNI)': ['Bank Negara Indonesia (BNI)', 'BNI', 'BankBNI'],\n    'Bank Of Ceylon (BOC)': ['Bank Of Ceylon (BOC)', 'Bankofceylon', 'Boc Peoples Bank'],\n    'Bank Rakyat Indonesia (BRI)': ['Bank Rakyat Indonesia (BRI)', 'BankBri', 'BankBRI', 'BRI', 'BRI dan Ewallet'],\n    'Bank transfer': [\n        'All Local Bank payment Accept',\n        'All local bank payments',\n        'All Local Bank transfer',\n        'bank',\n        'Bank',\n        'BANK',\n        'Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe',\n        'Bank and E-wallet',\n        'bank deposit',\n        'Bank deposit',\n        'Bankdeposit',\n        'Bank Deposit',\n        'Bank deposits',\n        'bank ewallet',\n        'bank payment',\n        'banks',\n        'Banks',\n        'Bank to Bank account transfer',\n        'bank transfer',\n        'Bank transfer',\n        'Banktransfer',\n        'Bank Transfer',\n        'BankTransfer',\n        'BANK TRANSFER',\n        'BANKTRANSFER',\n        'bank transfer and all form of E-payments',\n        'Bank Transfer and all Forms of E-payments',\n        'BanktransferATM',\n        'bank transfers',\n        'Bank transfers',\n        'Bank Transfers',\n        'Ban transfer',\n        'Depositos direto em conta',\n        'Direct deposit FNB and ABSA',\n        'E-wallet Bank transfer',\n        'Internet Banking',\n        'Internet transfer',\n        'Internet Transfer',\n        'LocalBank',\n        'local banks',\n        'Local banks',\n        'Local Banks',\n        'Local bank transfer',\n        'Local bank Transfers',\n        'Local deposits',\n        'Local deposit',\n        'local deposits',\n        'BANKTRANSFERS',\n        'Bank Deposits',\n        'Bank deposit and transfer',\n        'Bank transfer and e-wallets',\n        'BankDeposit',\n        'Fiat',\n        'LOCALBANK',\n        'OnlineTransfer',\n        'ZWbanktransfers',\n        'localbanktransfer',\n        'Bank transfer Bank wire',\n    ],\n    'Bank wire': [\n        'bank',\n        'Bank',\n        'BANK',\n        'bank payment',\n        'banks',\n        'Banks',\n        'bank wire',\n        'bankwire',\n        'Bank wire',\n        'Bankwire',\n        'Bank Wire',\n        'BankWire',\n        'BANKWIRE',\n        'Bank wire and e-wallets',\n        'Bank wire and E-wallets',\n        'Bank wires',\n        'Bankwires',\n        'bank wires and e-wallet',\n        'Bank wires and e-wallets',\n        'BankWire transfer',\n        'E-wallets and bank wires',\n        'local bank wire',\n        'LocalBankWire',\n        'LocalBankwire',\n        'Wire Bank Transfer',\n        'WIRE TRANSFER',\n        'Bank Wire transfer',\n        'Fiat',\n        'OnlineTransfer',\n        'Bank transfer Bank wire',\n    ],\n    BankABC: ['BankABC', 'BANCABC BANK'],\n    'Bank BTN': ['Bank BTN', 'BTN'],\n    'Bank of the Philippine Islands (BPI)': ['Bank of the Philippine Islands (BPI)', 'BPI'],\n    'BCA bank': ['BCA bank', 'BCA', 'BankBCA', 'bca'],\n    'BDO Unibank': ['BDO Unibank', 'BDO'],\n    BHIM: ['BHIM', 'Bhim', 'Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe'],\n    'BMCE Bank': ['BMCE Bank', 'Bmce Bank'],\n    'CABS Bank': ['CABS Bank', 'Cabs bank', 'CABS transfer'],\n    Card: [\n        'Card',\n        'card',\n        'cards',\n        'Cards',\n        'Credit card',\n        'Debit Card',\n        'Mastercard',\n        'MasterCard',\n        'visa',\n        'Visa',\n        'VISA',\n        'Visa card',\n        'Bank cards',\n        'Carteiras Electronicas',\n        'Fiat',\n        'Master card',\n    ],\n    Cash: [\n        'cash',\n        'Cash',\n        'Cash deposit',\n        'Cash deposits',\n        'Cash in USD or Local',\n        'electronic transfers and cash deposits',\n        'FNB cash deposit',\n        'physical local and foreign bank notes',\n        'USD',\n        'USD cash',\n        'Cash Deposit',\n        'Fiat',\n        'INR',\n        'USDCash',\n        'Zwcash',\n    ],\n    'Cash send ABSA bank': [\n        'Cash send ABSA bank',\n        'ABSA Cash Send',\n        'Cashsend',\n        'Cash Send',\n        'CashSend',\n        'cash send Absa',\n        'Cash send Absa bank',\n    ],\n    'Chipper Cash': ['Chipper Cash', 'Chipper', 'Chippercash', 'Chipperchash'],\n    'CIH Bank': ['CIH Bank', 'Cih Bank'],\n    CIMB: ['CIMB', 'CIMBNIAGA', 'NIAGA'],\n    'City Hopper': ['City hopper', 'City Hopper'],\n    'Co-operative Bank of Kenya': ['Co-operative Bank of Kenya', 'cooperativebank'],\n    'Commercial Bank': ['Commercial Bank', 'Commercialbank'],\n    'CRDB Bank': ['CRDB Bank', 'CRDBBANK'],\n    Crypto: [\n        'Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe',\n        'bitcoin',\n        'Bitcoin',\n        'BITCOIN',\n        'bitcoins',\n        'Bitcoins',\n        'btc',\n        'BTC',\n        'btc smega',\n        'Cripto',\n        'crypto',\n        'Crypto',\n        'Cyptocurrency',\n        'cryptocurrencies',\n        'Cryptocurrencies',\n        'Crypto Currencies',\n        'CRYPTOCURRENCIES',\n        'cryptocurrency',\n        'Cryptocurrency',\n        'CRYPTOCURRENCY',\n        'Cryptos',\n        'ETH',\n        'eUSDT',\n        'EUSDT',\n        'LTC',\n        'Tether',\n        'TRON',\n        'USDC',\n        'USDT',\n        'UST',\n        'We accept Crypto',\n        'BCH',\n        'Btc',\n        'Criptomoedas',\n        'Crypto Payment',\n        'Crypto transfer',\n        'CryptoTransfer',\n        'E-Wallets and Crypto',\n        'E-wallets and Crypto',\n        'Ethereum',\n        'Etherium',\n        'Litecoin',\n        'Skrill Neteller Crypto',\n        'SkrillCrypto',\n        'Tether ERC20',\n        'Tether Omni',\n        'Thether',\n        'Usdt',\n        'cryptos',\n        'ethereum',\n        'litecoin',\n    ],\n    'Diamond Bank': ['Diamond bank', 'Diamond Bank', 'DiamondBank'],\n    'E-Mola': ['E-Mola', 'E-mola', 'Emola'],\n    'E-money': ['E-money', 'e money'],\n    'E-payment': [\n        'E-payment',\n        'all form of E-payments',\n        'All form of E-payments',\n        'all forms of E-payments',\n        'and all other forms of Epayment',\n        'bank transfer and all form of E-payments',\n        'Bank Transfer and all Forms of E-payments',\n        'E-payments',\n        'Epayments',\n        'All forms of E-Payments',\n        'DigitalPayment',\n        'OnlineTransfer',\n        'all forms of E-Payment',\n    ],\n    'E-transfer': ['E-transfer', 'electronic transfers and cash deposits', 'E-Transfers', 'OnlineTransfer'],\n    'E-wallet': [\n        'Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe',\n        'Bank and E-wallet',\n        'bank ewallet',\n        'Bank wire and e-wallets',\n        'Bank wire and E-wallets',\n        'bank wires and e-wallet',\n        'Bank wires and e-wallets',\n        'Digital Wallets',\n        'electronic wallets',\n        'e-wallers',\n        'e-wallet',\n        'ewallet',\n        'eWallet',\n        'E-wallet',\n        'Ewallet',\n        'EWALLET',\n        'E-wallet Bank transfer',\n        'E wallet FNB',\n        'E-wallet payment',\n        'Ewallet payment',\n        'e-wallets',\n        'ewallets',\n        'e-Wallets',\n        'e-WALLETS',\n        'E- wallets',\n        'E-wallets',\n        'Ewallets',\n        'E-Wallets',\n        'E-wallets and bank wires',\n        'fnb ewallet',\n        'MY WALLET',\n        'wallet',\n        'Bank transfer and e-wallets',\n        'E-Wallets and Crypto',\n        'E-wallets and Crypto',\n        'E-Wallet',\n        'EWallets',\n        'Fiat',\n        'OnlineTransfer',\n        'ewalllets',\n        'ewalltets',\n        'local bank wallets and Orange money',\n    ],\n    Easypaisa: ['easypaisa', 'Easy paisa', 'Easypaisa', 'Easy Paisa', 'EasyPaisaTransfer'],\n    Ecobank: ['Ecobank', 'Eco Bank', 'ECO BANK', 'Eco bank Transfers'],\n    EcoCash: [\n        'Eco cash',\n        'Ecocash',\n        'EcoCash',\n        'ECOCASH',\n        'Ecocash FCA',\n        'Ecocash method',\n        'ECOCASH WALLET',\n        'Ecocash ZWL',\n        'EcocashMobileMoney',\n        'Zwecocash',\n    ],\n    'Electronic Funds Transfer (EFT)': ['Electronic Funds Transfer (EFT)', 'EFT'],\n    'Equity Bank': ['Equity bank', 'Equity Bank', 'equitybankmoneytransfer'],\n    'EU Mobile Money': ['EU Mobile Money', 'all mobile money', 'EU MONEY'],\n    EzyPesa: ['EzyPesa', 'Ezypesa', 'Ezzy pesa', 'Ezzy Pesa', 'EzzyPesa'],\n    FasaPay: ['fasapay', 'Fasa pay', 'FasaPay'],\n    'Fast Payment': ['Fast payment', 'Fast Payment'],\n    'Faysal Bank': ['Faysal Bank', 'FaysalBank'],\n    'FBC Bank': ['FBC Bank', 'FBC BANK'],\n    'Fidelity Bank': ['Fidelity Bank', 'fidelitybank'],\n    Finbank: ['Finbank', 'Fin bank', 'FinBank'],\n    'First Bank of Nigeria': [\n        'First Bank of Nigeria',\n        'First bank',\n        'First Bank',\n        'FirstBank',\n        'FIRST BANK',\n        'Firstbank',\n    ],\n    'First City Monument Bank (FCMB)': ['First City Monument Bank (FCMB)', 'FCMB', 'fcmb'],\n    'First MicroFinanceBank (FMFB)': ['First MicroFinanceBank (FMFB)', 'FMFB'],\n    'First National Bank (FNB)': [\n        'First National Bank (FNB)',\n        'Direct deposit FNB and ABSA',\n        'E wallet FNB',\n        'First National Bank',\n        'fnb',\n        'FNB',\n        'FNB ATM deposit',\n        'Fnbbank',\n        'FNB Bank',\n        'FNBB Bank Transfer',\n        'FNB cash deposit',\n        'fnb ewallet',\n        'FNB First National Bank',\n        'FNB pay2cell',\n        'FNB pay to cell',\n        'FNB pay to sell',\n        'Pay to cell FNB',\n        'FNB bank transfer',\n        'FNBB',\n        'FNBBank',\n        'FirNationalBank',\n        'First National Bank of Botswana',\n        'Firstnationalbank',\n        'Fnb',\n    ],\n    Gmoney: ['Gmoney', 'GMONEY'],\n    'Google Pay': [\n        'Google Pay',\n        'Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe',\n        'Google pay',\n        'gpay',\n        'Gpay',\n        'GPay',\n    ],\n    'Grup BCA': ['Grup BCA', 'GrupBCA'],\n    'GT bank': [\n        'GT bank',\n        'Gtb',\n        'GTB',\n        'Gt Bank',\n        'GT Bank',\n        'GTBank',\n        'GT BANK',\n        'Gtbank',\n        'Guarantee Trust Bank',\n        'GuarantyTrustBank',\n    ],\n    Halopesa: ['halopesa', 'Halo pesa', 'Halopesa', 'Halo Pesa', 'HaloPesa', 'HALOPESA'],\n    'Hatton National Bank': ['Hatton National Bank', 'HattonNationalBank'],\n    HBL: ['HBL', 'HBLMFB', 'KONNET HBL'],\n    Help2Pay: ['Help2Pay', 'help2pay'],\n    'HNB Bank': ['HNB Bank', 'HNB'],\n    'IMPS Transfer': ['imps', 'Imps', 'IMPS', 'IMPS Transfer'],\n    'ING Bank': ['ING Bank', 'ING'],\n    Innbucks: ['Innbucks', 'INNBUCKS'],\n    'Instant Money': [\n        'Instant Money',\n        'InstantMoney',\n        'Instant money stambic bank',\n        'Instant money stanbic',\n        'Instant money',\n    ],\n    'Inter Bank Fund Transfer': ['Inter Bank Fund Transfer', 'InterBankfundtransfer', 'Interbank Transfer'],\n    'Itau Bank': ['Itau Bank', 'Itau'],\n    IZI: ['IZI', 'Izzy'],\n    JazzCash: ['JazzCash', 'jazzcash', 'Jazz cash', 'Jazzcash', 'Jazz-Cash', 'JazzCashTransfer'],\n    JENIUS: ['JENIUS', 'Jenius'],\n    Jeton: ['Jeton', 'jeton', 'JetonWallet'],\n    'Key Stone Bank': ['Key Stone Bank', 'Keystone'],\n    'Kuda Bank': [\n        'Kuda Bank',\n        'KUDA BANK',\n        'Kuda MFB',\n        'KudaMFB',\n        'KUDA MICROFINANCE BANK 2014563937',\n        'Kuda Microfinance',\n        'KUDA',\n    ],\n    'Luno Wallet': ['Luno Wallet', 'Luno', 'Luno crypto wallet', 'Luno e-wallet', 'Luno ewallet', 'luno'],\n    'Mandiri Bank': ['Mandiri Bank', 'Mandiri', 'MANDIRI', 'MandiriSyariah', 'BankMandiri'],\n    'Meezan Bank': ['Meezan Bank', 'MeezanBank'],\n    'Millenium Bim Visa': ['Millenium Bim Visa', 'Millenium Bim'],\n    MIX: ['mix', 'Mix', 'MIX', 'Mixed'],\n    'Mobile money': [\n        'all mobile money',\n        'mobile banking',\n        'Mobile banking',\n        'Mobile money',\n        'Mobile Money',\n        'MobileMoney',\n        'Mobile money MTN',\n        'Mobile Money transfer',\n        'MOBILE MONEY TRANSFER',\n        'Mobile money transfers',\n        'Mobilemoneyoption',\n        'OnlineTransfer',\n    ],\n    'Mojo Mula': ['Mojo money', 'Mojo Mula', 'MOJO MULA', 'MoMo pay', 'Mojo Moolah'],\n    MoMo: ['MoMo', 'MOMO', 'MoMo pay', 'MTN MOMO', 'MTNMOMO'],\n    MoneyGram: ['Moneygram', 'Money Gram', 'MoneyGram', 'Money grame'],\n    'M-PESA': [\n        'AbesafaricomMpesa Transfers',\n        'mpesa',\n        'M pesa',\n        'M-pesa',\n        'Mpesa',\n        'M Pesa',\n        'M-Pesa',\n        'MPesa',\n        'M PESA',\n        'M-PESA',\n        'MPESA',\n        'M-Pesa Tigo-Pesa T-Pesa',\n        'Pesa',\n        'safaricom mpesa',\n        'MPESA 0710393947 Albert Kyalo',\n        'VodacomMpesa',\n    ],\n    'MTN MOMO': [\n        'all mobile money',\n        'Mobile money MTN',\n        'MoMo',\n        'MOMO',\n        'MTN',\n        'MTN mobile money',\n        'MTN Mobile money',\n        'MTN Mobile Money',\n        'MTN MOBILE MONEY',\n        'MTNMOBILEMONEY',\n        'MTN MOMO',\n        'MTNMOMO',\n        'MTN MONEY',\n    ],\n    'Mukuru money transfers': ['Mukuru', 'Mukuru money transfers', 'MukuruMoneyTransfer', 'USDMukurutransfer'],\n    'MyZaka Mascom Money': [\n        'MyZaka Mascom Money',\n        'mascom',\n        'mascom myZaka',\n        'Mascom MyZaka',\n        'myzaka',\n        'My zaka',\n        'Myzaka',\n        'MyZaka',\n        'My zaka mascom money',\n        'my Zaka',\n        'myzaaka',\n    ],\n    Neft: ['neft', 'Neft', 'NEFT'],\n    Nequi: ['Nequi', 'Nequi o Daviplata al 300 6839026'],\n    Neteller: ['neTeller', 'Neteller', 'NETELLER', 'NETelle', 'Skrill Neteller Crypto', 'neteller', 'netteller'],\n    'Nigeria local bank': ['Nigeria Local', 'Nigeria local bank', 'NIGERIA LOCAL BANK'],\n    'NMB Bank': ['NMB Bank', 'NATIONALMICROFINANCEBANK', 'Nmb bank'],\n    'One Money': ['OM', 'Onemoney', 'One Money', 'One money service', 'OneMoney', 'OneMoneyMobileMoney'],\n    Opay: ['Opay', 'OPAY'],\n    'Orange Money Transfer': [\n        'Absa fund transfer and orange money services',\n        'Orange Cameroon',\n        'orange money',\n        'orangemoney',\n        'Orange money',\n        'Orangemoney',\n        'Orange Money',\n        'OrangeMoney',\n        'ORANGE MONEY',\n        'Orange Money Transfer',\n        'local bank wallets and Orange money',\n    ],\n    PalmPay: ['PalmPay', 'PALMPAY'],\n    'Pay safe Card': ['paysafecard', 'Pay safe Card'],\n    Pay2Cell: [\n        'FNB pay2cell',\n        'FNB pay to cell',\n        'FNB pay to sell',\n        'Pay2cell',\n        'Pay2Cell',\n        'PAY2CELL',\n        'pay to cell',\n        'Pay to cell',\n        'Paytocell',\n        'Pay to Cell',\n        'Pay to cell FNB',\n        'PayToCell',\n        'pay2cell',\n    ],\n    'Payment Checks': ['Payment checks', 'Payment Checks'],\n    PayPal: [\n        'Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe',\n        'Paypal',\n        'PayPal',\n        'PAYPAL',\n        'paypal',\n    ],\n    PayTM: ['Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe', 'Paytm', 'PayTM'],\n    'Perfect Money': [\n        'Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe',\n        'perfect money',\n        'perfectmoney',\n        'Perfect money',\n        'Perfectmoney',\n        'Perfect Money',\n        'PerfectMoney',\n        'PERFECT MONEY',\n        'Perfect Money and Webmoney',\n        'PM',\n        'PERFECTMONEY',\n        'PERFECT',\n    ],\n    'Permata Bank': ['Permata Bank', 'PermataBank', 'PERMATA'],\n    PhonePhe: [\n        'PhonePhe',\n        'Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe',\n        'Phonepay',\n        'phonepe',\n        'Phonepe',\n        'PhonePe',\n        'Phone pay',\n        'PhonePay',\n    ],\n    Pix: ['Pix', 'PIX'],\n    'Polaris Bank': ['Polaris Bank', 'Polaris'],\n    'Ponto 24': ['Conta movel', 'Conta Movel', 'ContamovelBCI', 'Ponto 24', 'Ponto24'],\n    'Pos deposit': ['Pos', 'POS', 'Pos deposit'],\n    'Postal transfer': ['Postal transfer', 'Egyptian postal transfers'],\n    RIA: ['Ria', 'RIA'],\n    'RTGS Transfers': ['RTGS Transfers', 'rtgs', 'RTGS', 'Rtgs bank transfer', 'RTGS transfers', 'Rtgs'],\n    Safaricom: ['Safaricom', 'AbesafaricomMpesa Transfers', 'AbeSafaricomMpesaTransfers', 'safaricom mpesa'],\n    'Sama Money': ['Sama Money', 'Sama money'],\n    ShopeePay: ['ShopeePay', 'SHOPEEPAY'],\n    Skrill: [\n        'Skrill',\n        'Skill',\n        'Skril',\n        'skrill',\n        'SKRILL',\n        'skrillpayments',\n        'Skrll',\n        'SkrillCrypto',\n        'Skrill Neteller Crypto',\n    ],\n    Smega: ['btc smega', 'smega', 'Smega'],\n    'Standard Bank Namibia': ['Standard Bank Namibia', 'Standard Bank', 'StandardBank'],\n    'Stanbic Bank': [\n        'Instant money stambic bank',\n        'Instant money stanbic',\n        'stanbic',\n        'Stanbic',\n        'Stanbic Bank',\n        'StanbicBank',\n        'Stanbic Bank Transfer',\n        'Stanbic Money Transfer',\n        'Standbic',\n        'Stanbic IBTC',\n        'Stanbic bank',\n    ],\n    'Standard Charted Bank': [\n        'STANCHART',\n        'Standard Charted Bank',\n        'Standard chartered',\n        'Standard chartered bank',\n        'Standard Chartered Bank Transfer',\n        'Standard Chatterd Bank',\n    ],\n    'Steward remit': ['Steward remit', 'Steward Remmitt'],\n    'T-pesa': ['M-Pesa Tigo-Pesa T-Pesa', 'Pesa', 'T-pesa', 'Tpesa', 'T PESA', 'TTCLpesa'],\n    'Tigo Cash': ['Tigo', 'Tigo Cash', 'AirtelTigo cash'],\n    'Tigo Mobile Money': [\n        'Tigo Mobile Money',\n        'Airtel Tigo',\n        'all mobile money',\n        'Tigo',\n        'TIGO MOBILE MONEY',\n        'TIGOMOBILEMONEY',\n        'AirtelTigo cash',\n    ],\n    'Tigo Pesa': [\n        'M-Pesa Tigo-Pesa T-Pesa',\n        'Pesa',\n        'Tigo',\n        'tigopesa',\n        'Tigo pesa',\n        'Tigopesa',\n        'Tigo Pesa',\n        'TigoPesa',\n        'TIGO PESA',\n        'TTCLpesa',\n        'TIGOPESA',\n    ],\n    'Transferencia bancaria': [\n        'Transferencia bancaria',\n        'Transferencia Eletronica TED',\n        'Transferencias bancarias',\n        'Ted',\n        'Transferencia Bancaria',\n    ],\n    'UBA Bank': ['UBA', 'UBA Bank', 'UBA BANK'],\n    'Union Bank': ['Union Bank', 'Unionbank', 'Union'],\n    'United Bank Limited (UBL)': ['United Bank Limited (UBL)', 'UBL Bank'],\n    UPI: [\n        'All UPI Transfer',\n        'Banks BHIMUP BTC Ewallet GooglePay LocalBank Paypal Paytm Perfect Money PhonePhe',\n        'upi',\n        'UPI',\n        'UPI transfer',\n        'AmazonUPI',\n        'PaytmUPI',\n        'Upi',\n    ],\n    'USSD code transfer': [\n        'USSD code transfer',\n        'Or USSD transfer from all Nigeria banks',\n        'USSD Code',\n        'USSD CODE',\n        'Ussd code Transfer from all Nigerian banks',\n        'Ussd transfer',\n        'USSD transfer',\n        'USSD Transfer',\n        'ussd transfer',\n    ],\n    Vodacom: ['Vodacom', 'VodacomMpesa'],\n    'Vodafone Cash': ['Vodafon Cash Methods', 'Vodafone cash', 'Vodafone Cash', 'VODAFONE CASH', 'VODAFONECASH'],\n    Webmoney: ['Perfect Money and Webmoney', 'Webmoney', 'WebMoney', 'Web Money', 'Web money'],\n    'WeChat Pay': ['WeChat Pay', 'WeChatPay'],\n    'Wema Bank': ['Wema Bank', 'Wema'],\n    WesternUnion: ['Western union', 'Western Union', 'WesternUnion', 'westernunion'],\n    Wise: ['Wise', 'transferwise'],\n    'World Remit': ['World remit', 'World Remit', 'CoinbaseworldRemit'],\n    'Zanaco bank': ['ZANACO', 'Zanaco bank'],\n    'Zenith bank': ['Zenith bank', 'Zenithbank', 'Zenith Bank', 'ZenithBank', 'ZENITH BANK', 'Zenith', 'zenithbank'],\n    Zipit: ['Zipit', 'ZIPIT', 'ZIPIT bank transfers'],\n} as const;\n\nexport default { containers, map_action, icon_payment_methods, payment_methods };\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Icon, Text } from '@deriv/components';\nimport './payment-agent-detail.scss';\n\ntype TPaymentAgentDetail = {\n    action?: string;\n    children?: React.ReactNode;\n    className?: string;\n    has_red_color?: boolean;\n    icon?: string;\n    is_link?: boolean;\n    title?: string;\n    rel?: string;\n    target?: string;\n};\n\nconst PaymentAgentDetail = ({\n    action,\n    children,\n    className,\n    has_red_color,\n    icon,\n    is_link,\n    title,\n    ...rest\n}: TPaymentAgentDetail) => {\n    const detail = Array.isArray(children) ? children : [children];\n    return (\n        <div className={classNames('payment-agent-detail', className && { [className]: !!className })}>\n            {icon && (\n                <div className='payment-agent-detail__icon-wrapper'>\n                    <Icon icon={icon} data_testid='dt_payment_agent_detail_icon' />\n                </div>\n            )}\n            <div className='payment-agent-detail__desc-wrapper'>\n                {title && (\n                    <Text as='p' line_height='s' size='xs'>\n                        {title}\n                    </Text>\n                )}\n                {detail.map((child, id) => (\n                    <React.Fragment key={id}>\n                        {action || is_link ? (\n                            <Text\n                                as='a'\n                                color={has_red_color ? 'red' : 'prominent'}\n                                data-testid='dt_payment_agent_detail_link'\n                                href={(action ? `${action}:` : '') + child}\n                                line_height='s'\n                                size={!title ? 'xxs' : 'xs'}\n                                weight='bold'\n                                className='payment-agent-detail__link'\n                                {...rest}\n                            >\n                                {child}\n                                {id === detail.length - 1 ? '' : ', '}\n                            </Text>\n                        ) : (\n                            <Text\n                                as='p'\n                                className='payment-agent-detail__paragraph'\n                                data-testid='dt_payment_agent_detail_paragraph'\n                                line_height='s'\n                                size={!title ? 'xxs' : 'xs'}\n                                weight='bold'\n                            >\n                                {child}\n                            </Text>\n                        )}\n                    </React.Fragment>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default PaymentAgentDetail;\n","import PaymentAgentDetail from './payment-agent-detail';\n\nexport default PaymentAgentDetail;\n","import { toJS } from 'mobx';\nimport React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { capitalizeFirstLetter } from '@deriv/shared';\nimport { hasNormalizedPaymentMethods, getUniquePaymentAgentSupportedBanks } from './helpers';\nimport PaymentAgentDetail from '../payment-agent-detail';\nimport { TPaymentAgent } from '../../../types';\n\ntype TPaymentAgentCardDescription = {\n    is_dark_mode_on?: boolean;\n    payment_agent: TPaymentAgent;\n};\n\nconst PaymentAgentCardDescription = ({ is_dark_mode_on, payment_agent }: TPaymentAgentCardDescription) => {\n    const payment_agent_urls = toJS(payment_agent.urls);\n\n    return (\n        <div className='payment-agent-card__description-container'>\n            <Text as='p' line_height='s' size='xs' weight='bold'>\n                {payment_agent.name}\n            </Text>\n            {payment_agent.further_information && (\n                <Text\n                    as='p'\n                    className='payment-agent-card__description-container-further-information'\n                    line_height='s'\n                    size='xs'\n                >\n                    {capitalizeFirstLetter(payment_agent.further_information).replace(\n                        /( ?Skril?l,? ?)|( ?Net?tel?ler,? ?)/gi,\n                        ''\n                    )}\n                </Text>\n            )}\n            {payment_agent_urls && (\n                <PaymentAgentDetail has_red_color is_link rel='noopener noreferrer' target='_blank'>\n                    {payment_agent_urls.map(url => url.url)}\n                </PaymentAgentDetail>\n            )}\n            {hasNormalizedPaymentMethods(payment_agent.supported_banks) && (\n                <div className='payment-agent-card__description-container-icons-container'>\n                    {getUniquePaymentAgentSupportedBanks(payment_agent.supported_banks).map((bank, idx) => {\n                        return (\n                            <Icon\n                                data_testid='dt_payment_method_icon'\n                                key={idx}\n                                icon={`IcCashier${bank}${is_dark_mode_on ? 'Dark' : 'Light'}`}\n                            />\n                        );\n                    })}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default PaymentAgentCardDescription;\n","import Constants from 'Constants/constants';\nimport { getNormalizedPaymentMethod } from 'Utils/utility';\n\nexport const hasNormalizedPaymentMethods = (all_payment_methods?: { payment_method: string }[]) => {\n    if (all_payment_methods && all_payment_methods.length > 0) {\n        return !all_payment_methods.every(\n            (method: { payment_method: string }) =>\n                getNormalizedPaymentMethod(method.payment_method, Constants.icon_payment_methods, true) === ''\n        );\n    }\n    return false;\n};\n\nexport const getUniquePaymentAgentSupportedBanks = (supported_banks?: { payment_method: string }[]) => {\n    const normalized_payment_methods =\n        supported_banks &&\n        supported_banks\n            .map(bank => getNormalizedPaymentMethod(bank.payment_method, Constants.icon_payment_methods, true))\n            .filter(Boolean);\n    return Array.from(new Set(normalized_payment_methods));\n};\n","import { toJS } from 'mobx';\nimport React from 'react';\nimport { Money } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport PaymentAgentDetail from '../payment-agent-detail';\nimport './payment-agent-deposit-details.scss';\nimport { TPaymentAgent } from '../../../types';\n\ntype TPaymentAgentDepositDetails = {\n    payment_agent: TPaymentAgent;\n};\n\nconst PaymentAgentDepositDetails = ({ payment_agent }: TPaymentAgentDepositDetails) => {\n    const payment_agent_phones = toJS(payment_agent.phone_numbers);\n\n    const PaymentAgentPhonesDetails = () => {\n        return (\n            <PaymentAgentDetail action='tel' icon='IcPhone' title={localize('Phone number')}>\n                {payment_agent.phone_numbers.map(phone => phone.phone_number)}\n            </PaymentAgentDetail>\n        );\n    };\n\n    const PaymentAgentEmailDetails = () => {\n        return (\n            <PaymentAgentDetail\n                action='mailto'\n                icon='IcEmailOutlineNew'\n                rel='noopener noreferrer'\n                target='_blank'\n                has_red_color\n                title={localize('Email')}\n            >\n                {payment_agent.email}\n            </PaymentAgentDetail>\n        );\n    };\n\n    const PaymentAgentMinimumWithdrawalDetails = () => {\n        return (\n            <PaymentAgentDetail icon='IcCashierMinimumWithdrawal' title={localize('Minimum withdrawal')}>\n                <Money amount={payment_agent.min_withdrawal || ''} currency={payment_agent.currency} show_currency />\n            </PaymentAgentDetail>\n        );\n    };\n\n    const PaymentAgentMaximumWithdrawalDetails = () => {\n        return (\n            <PaymentAgentDetail icon='IcCashierMaximumWithdrawal' title={localize('Maximum withdrawal')}>\n                <Money amount={payment_agent.max_withdrawal || ''} currency={payment_agent.currency} show_currency />\n            </PaymentAgentDetail>\n        );\n    };\n\n    const PaymentAgentDepositComissionDetails = () => {\n        return (\n            <PaymentAgentDetail\n                icon='IcCashierCommissionDeposit'\n                className='deposit-commission'\n                title={localize('Commission on deposits')}\n            >\n                {`${payment_agent.deposit_commission}%`}\n            </PaymentAgentDetail>\n        );\n    };\n\n    const PaymentAgentWithdrawalComissionDetails = () => {\n        return (\n            <PaymentAgentDetail\n                icon='IcCashierCommissionWithdrawal'\n                className='withdrawal_commission'\n                title={localize('Commission on withdrawal')}\n            >\n                {`${payment_agent.withdrawal_commission}%`}\n            </PaymentAgentDetail>\n        );\n    };\n\n    return (\n        <div className='payment-agent-deposit-details'>\n            {payment_agent_phones && <PaymentAgentPhonesDetails />}\n            {payment_agent.email && <PaymentAgentEmailDetails />}\n            {payment_agent.min_withdrawal && <PaymentAgentMinimumWithdrawalDetails />}\n            {payment_agent.deposit_commission && <PaymentAgentDepositComissionDetails />}\n            {payment_agent.max_withdrawal && <PaymentAgentMaximumWithdrawalDetails />}\n            {payment_agent.withdrawal_commission && <PaymentAgentWithdrawalComissionDetails />}\n        </div>\n    );\n};\n\nexport default PaymentAgentDepositDetails;\n","import PaymentAgentDepositDetails from './payment-agent-deposit-details';\n\nexport default PaymentAgentDepositDetails;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Field, FieldProps, Formik, Form } from 'formik';\nimport { Button, Input, Loading, Money, Text } from '@deriv/components';\nimport { getDecimalPlaces, getCurrencyDisplayCode, validNumber } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport ErrorDialog from 'Components/error-dialog';\nimport { useCashierStore } from '../../../stores/useCashierStores';\nimport './payment-agent-listed-withdraw-form.scss';\nimport { TPaymentAgent } from '../../../types';\n\ntype TValidateWithdrawalValueProps = {\n    amount: string;\n};\n\ntype TValidateWithdrawalProps = {\n    balance: string;\n    currency: string;\n    payment_agent: TPaymentAgent;\n};\n\ntype TPaymentAgentListedWithdrawForm = {\n    payment_agent: TPaymentAgent;\n};\n\nconst validateWithdrawal = (\n    values: TValidateWithdrawalValueProps,\n    { balance, currency, payment_agent }: TValidateWithdrawalProps\n) => {\n    const errors: { amount?: string } = {};\n\n    const { is_ok, message } = validNumber(values.amount, {\n        type: 'float',\n        decimals: getDecimalPlaces(currency),\n        ...(payment_agent.min_withdrawal && {\n            min: Number(payment_agent.min_withdrawal),\n            max: payment_agent.max_withdrawal ? Number(payment_agent.max_withdrawal) : undefined,\n        }),\n    });\n\n    if (!values.amount) {\n        errors.amount = localize('This field is required.');\n    } else if (!is_ok && message) {\n        errors.amount = message;\n    } else if (Number(balance) < Number(values.amount)) {\n        errors.amount = localize('Insufficient balance.');\n    }\n\n    return errors;\n};\n\nconst PaymentAgentListedWithdrawForm = observer(({ payment_agent }: TPaymentAgentListedWithdrawForm) => {\n    const { client } = useStore();\n    const { general_store, payment_agent: payment_agent_store } = useCashierStore();\n    const {\n        balance,\n        currency,\n        verification_code: { payment_agent_withdraw: verification_code },\n    } = client;\n    const { is_crypto, is_loading } = general_store;\n    const {\n        error,\n        onMountPaymentAgentWithdraw: onMount,\n        agents: payment_agent_list,\n        requestTryPaymentAgentWithdraw,\n        selected_bank,\n    } = payment_agent_store;\n\n    React.useEffect(() => {\n        onMount();\n    }, [onMount]);\n\n    const input_ref = React.useRef<HTMLInputElement & HTMLTextAreaElement>(null);\n\n    React.useEffect(() => {\n        if (input_ref.current) {\n            input_ref.current.value = '';\n        }\n    }, [selected_bank]);\n\n    const validateWithdrawalPassthrough = (values: TValidateWithdrawalValueProps) =>\n        validateWithdrawal(values, {\n            balance,\n            currency,\n            payment_agent: payment_agent_list.find(pa => pa.value === payment_agent.paymentagent_loginid),\n        } as TValidateWithdrawalProps);\n\n    const onWithdrawalPassthrough = async (values: TValidateWithdrawalValueProps) => {\n        await requestTryPaymentAgentWithdraw({\n            loginid: payment_agent.paymentagent_loginid,\n            currency,\n            amount: Number(values.amount),\n            verification_code,\n        });\n    };\n\n    if (is_loading || !payment_agent_list.length) {\n        return <Loading className='cashier__loader' is_fullscreen={false} />;\n    }\n\n    return (\n        <div className='payment-agent-listed-withdraw-form'>\n            <Text as='p' className='payment-agent-listed-withdraw-form__header' line_height='s' size='xs' weight='bold'>\n                <Localize i18n_default_text='Withdrawal amount' />\n            </Text>\n            <Formik\n                initialValues={{\n                    amount: '',\n                }}\n                validate={validateWithdrawalPassthrough}\n                onSubmit={onWithdrawalPassthrough}\n            >\n                {({ errors, isSubmitting, isValid, touched, values }) => {\n                    const getHint = () => {\n                        return (\n                            payment_agent_list.find(pa => pa.value === payment_agent.paymentagent_loginid) && (\n                                <Localize\n                                    i18n_default_text='Withdrawal limits: <0 />-<1 />'\n                                    components={[\n                                        <Money\n                                            key={0}\n                                            amount={\n                                                payment_agent_list.find(\n                                                    pa => pa.value === payment_agent.paymentagent_loginid\n                                                )?.min_withdrawal || ''\n                                            }\n                                            currency={payment_agent.currency}\n                                            show_currency\n                                        />,\n                                        <Money\n                                            key={1}\n                                            amount={\n                                                payment_agent_list.find(\n                                                    pa => pa.value === payment_agent.paymentagent_loginid\n                                                )?.max_withdrawal || ''\n                                            }\n                                            currency={payment_agent.currency}\n                                            show_currency\n                                        />,\n                                    ]}\n                                />\n                            )\n                        );\n                    };\n                    return (\n                        <Form className='payment-agent-listed-withdraw-form__form'>\n                            <Field name='amount'>\n                                {({ field }: FieldProps) => (\n                                    <Input\n                                        {...field}\n                                        className={classNames('dc-input--no-placeholder', {\n                                            'dc-input--crypto-hint': is_crypto,\n                                        })}\n                                        type='text'\n                                        label={localize('Enter amount')}\n                                        error={(touched.amount && errors.amount) || ''}\n                                        required\n                                        autoComplete='off'\n                                        maxLength={30}\n                                        hint={getHint()}\n                                        ref={input_ref}\n                                        trailing_icon={\n                                            <span\n                                                className={classNames('symbols', `symbols--${currency.toLowerCase()}`)}\n                                            >\n                                                {getCurrencyDisplayCode(currency)}\n                                            </span>\n                                        }\n                                    />\n                                )}\n                            </Field>\n                            <Button\n                                type='submit'\n                                is_disabled={!isValid || isSubmitting || !values.amount}\n                                primary\n                                large\n                            >\n                                <Localize i18n_default_text='Continue' />\n                            </Button>\n                        </Form>\n                    );\n                }}\n            </Formik>\n            <ErrorDialog error={error} className='payment-agent-list__error-dialog' />\n        </div>\n    );\n});\n\nexport default PaymentAgentListedWithdrawForm;\n","import PaymentAgentListedWithdrawForm from './payment-agent-listed-withdraw-form';\n\nexport default PaymentAgentListedWithdrawForm;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { ExpansionPanel } from '@deriv/components';\nimport PaymentAgentCardDescription from './payment-agent-card-description';\nimport PaymentAgentDepositDetails from '../payment-agent-deposit-details';\nimport PaymentAgentListedWithdrawForm from '../payment-agent-listed-withdraw-form';\nimport './payment-agent-card.scss';\nimport { TPaymentAgent } from '../../../types';\n\ntype TPaymentAgentCard = {\n    is_dark_mode_on?: boolean;\n    is_deposit?: boolean;\n    payment_agent: TPaymentAgent;\n};\n\nconst PaymentAgentCard = ({ is_dark_mode_on = false, is_deposit = false, payment_agent }: TPaymentAgentCard) => {\n    const message = {\n        header: <PaymentAgentCardDescription is_dark_mode_on={is_dark_mode_on} payment_agent={payment_agent} />,\n        content: is_deposit ? (\n            <PaymentAgentDepositDetails payment_agent={payment_agent} />\n        ) : (\n            <PaymentAgentListedWithdrawForm payment_agent={payment_agent} />\n        ),\n    };\n    return (\n        <div\n            className={classNames('payment-agent-card', {\n                'payment-agent-card--dark': is_dark_mode_on,\n            })}\n        >\n            <ExpansionPanel message={message} />\n        </div>\n    );\n};\n\nexport default PaymentAgentCard;\n","import PaymentAgentCard from './payment-agent-card';\n\nexport default PaymentAgentCard;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { website_name } from '@deriv/shared';\nimport './payment-agent-disclaimer.scss';\n\nconst PaymentAgentDisclaimer = () => {\n    return (\n        <div className='payment-agent-disclaimer'>\n            <Text as='p' className='payment-agent-disclaimer__title' size='xs' line_height='m' weight='bold'>\n                <Localize i18n_default_text='DISCLAIMER' />\n            </Text>\n            <Text as='p' size='xxs' line_height='s'>\n                <Localize\n                    i18n_default_text='{{website_name}} is not affiliated with any payment agents. Customers deal with payment agents at their sole risk. Customers are advised to check the credentials of payment agents and the accuracy of any information about payment agents (on {{website_name}} or elsewhere) before using their services.'\n                    values={{ website_name }}\n                />\n            </Text>\n        </div>\n    );\n};\n\nexport default PaymentAgentDisclaimer;\n","import PaymentAgentDisclaimer from './payment-agent-disclaimer';\n\nexport default PaymentAgentDisclaimer;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { Button, Text } from '@deriv/components';\nimport { isMobile, routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize, Localize } from '@deriv/translations';\nimport PaymentAgentDetail from '../payment-agent-detail';\nimport PaymentAgentDisclaimer from '../payment-agent-disclaimer';\nimport SideNote from 'Components/side-note';\nimport { useCashierStore } from '../../../stores/useCashierStores';\nimport './payment-agent-receipt.scss';\nimport { BrowserHistory } from 'history';\nimport { TPaymentAgent } from '../../../types';\n\nconst openStatement = (history: BrowserHistory, resetPaymentAgent: VoidFunction) => {\n    history.push(routes.statement);\n    resetPaymentAgent();\n};\n\ntype TPaymentAgentDetails = Pick<TPaymentAgent, 'email' | 'phone_numbers' | 'urls'>;\n\ntype TPaymentAgentReceipt = {\n    history: BrowserHistory;\n};\n\nconst PaymentAgentDetails = ({ email, phone_numbers, urls }: TPaymentAgentDetails) => {\n    return (\n        <div className='payment-agent-receipt__transferred-contact'>\n            {phone_numbers && (\n                <PaymentAgentDetail action='tel' icon='IcPhone'>\n                    {phone_numbers.map(phone => phone.phone_number)}\n                </PaymentAgentDetail>\n            )}\n            {email && (\n                <PaymentAgentDetail action='mailto' icon='IcEmailOutlineNew' rel='noopener noreferrer' target='_blank'>\n                    {email}\n                </PaymentAgentDetail>\n            )}\n            {urls && (\n                <PaymentAgentDetail icon='IcWebsite' is_link rel='noopener noreferrer' target='_blank'>\n                    {urls.map(url => url.url)}\n                </PaymentAgentDetail>\n            )}\n        </div>\n    );\n};\n\nconst PaymentAgentReceipt = observer(({ history }: TPaymentAgentReceipt) => {\n    const { client, common } = useStore();\n    const { payment_agent: payment_agent_store } = useCashierStore();\n    const { currency } = client;\n    const { is_from_derivgo } = common;\n    const { receipt, resetPaymentAgent } = payment_agent_store;\n\n    React.useEffect(() => {\n        return () => resetPaymentAgent();\n    }, [resetPaymentAgent]);\n\n    return (\n        <div className='cashier__wrapper--align-center payment-agent-receipt'>\n            <SideNote className='payment-agent-list__side-note' is_mobile>\n                <PaymentAgentDisclaimer />\n            </SideNote>\n            <Text\n                as='h1'\n                align='center'\n                color='prominent'\n                line_height='m'\n                size={isMobile() ? 'xsm' : 'sm'}\n                weight='bold'\n                className={classNames('payment-agent-receipt__header', {\n                    'payment-agent-receipt__header-listed': receipt.payment_agent_name,\n                    'payment-agent-receipt__header-unlisted': !receipt.payment_agent_name,\n                })}\n            >\n                <Localize\n                    i18n_default_text='You’ve transferred {{amount}} {{currency}}'\n                    values={{ amount: receipt.amount_transferred, currency }}\n                />\n            </Text>\n            <Text as='p' align='center' color='prominent' line_height='m' size='xs' weight='bold'>\n                <Localize i18n_default_text='Important notice to receive your funds' />\n            </Text>\n            <Text\n                as='p'\n                align='center'\n                color='prominent'\n                size='xxs'\n                line_height='m'\n                className={classNames('payment-agent-receipt__explanation', {\n                    'payment-agent-receipt__explanation-unlisted': !receipt.payment_agent_name,\n                })}\n            >\n                <Localize\n                    i18n_default_text='{{ text }}. <0></0>You can view the summary of this transaction in your email.'\n                    components={!isMobile() ? [<br key={0} />] : []}\n                    values={{\n                        text: receipt.payment_agent_name\n                            ? localize('To receive your funds, contact the payment agent with the details below')\n                            : localize('To receive your funds, contact the payment agent'),\n                    }}\n                    key={0}\n                />\n            </Text>\n            {receipt.payment_agent_name && (\n                <div className='payment-agent-receipt__transferred-contact-wrapper'>\n                    <Text align='center' as='p' size='xxs' line_height='m' weight='bold'>\n                        <Localize\n                            i18n_default_text=\"<0>{{payment_agent}}</0><1>'s</1> contact details\"\n                            components={[<span key={0} />, <span key={1} />]}\n                            values={{ payment_agent: receipt.payment_agent_name }}\n                            options={{ interpolation: { escapeValue: false } }}\n                        />\n                    </Text>\n                    {receipt.payment_agent_email && receipt.payment_agent_phone && receipt.payment_agent_url && (\n                        <PaymentAgentDetails\n                            email={receipt.payment_agent_email}\n                            phone_numbers={receipt.payment_agent_phone}\n                            urls={receipt.payment_agent_url}\n                        />\n                    )}\n                </div>\n            )}\n            <div className='cashier__form-submit'>\n                {!is_from_derivgo && (\n                    <Button\n                        className='cashier__form-submit-button'\n                        has_effect\n                        text={localize('View transaction')}\n                        onClick={() => openStatement(history, resetPaymentAgent)}\n                        secondary\n                        large\n                    />\n                )}\n                <Button\n                    className='cashier__form-submit-button cashier__done-button'\n                    has_effect\n                    text={localize('Make a new withdrawal')}\n                    onClick={resetPaymentAgent}\n                    primary\n                    large\n                />\n            </div>\n        </div>\n    );\n});\n\nexport default withRouter(PaymentAgentReceipt);\n","import PaymentAgentReceipt from './payment-agent-receipt';\n\nexport default PaymentAgentReceipt;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Field as FormField, Formik, Form, FieldProps } from 'formik';\nimport { Icon, Input } from '@deriv/components';\nimport './cashier-search-box.scss';\n\ntype TCashierSearchBoxProps = {\n    className?: string;\n    onClear: VoidFunction;\n    onSearch: (search: string) => void;\n    placeholder: string;\n    search_term: string;\n    setIsSearchLoading: (value: boolean) => void;\n};\n\nconst CashierSearchBox = ({\n    className,\n    onClear,\n    onSearch,\n    placeholder,\n    search_term,\n    setIsSearchLoading,\n}: TCashierSearchBoxProps) => {\n    React.useEffect(() => {\n        return onClear;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const onSearchClear = (setFieldValue: (field: string, value: string) => void) => {\n        setFieldValue('search', '');\n        onClear();\n    };\n\n    const onSearchKeyUpDown = (submitForm: VoidFunction, search: string) => {\n        if (!search.trim() && search_term) {\n            onClear();\n        } else if (!search.trim()) return;\n\n        setIsSearchLoading(true);\n        submitForm();\n    };\n\n    const onSearchSubmit = ({ search }: { search: string }) => {\n        onSearch(search);\n    };\n\n    return (\n        <div className={classNames('cashier-search-box', className)}>\n            <Formik initialValues={{ search: '' }} onSubmit={onSearchSubmit}>\n                {({ submitForm, values: { search }, setFieldValue }) => (\n                    <Form>\n                        <FormField name='search'>\n                            {({ field }: FieldProps<string>) => (\n                                <Input\n                                    {...field}\n                                    type='text'\n                                    name='search'\n                                    placeholder={placeholder}\n                                    onKeyUp={() => onSearchKeyUpDown(submitForm, search)}\n                                    onKeyDown={() => onSearchKeyUpDown(submitForm, search)}\n                                    leading_icon={<Icon icon='IcSearch' data_testid='dt_search_icon' />}\n                                    trailing_icon={\n                                        search ? (\n                                            <Icon\n                                                color='general'\n                                                data_testid='dt_close_icon'\n                                                icon='IcCloseCircle'\n                                                onClick={() => onSearchClear(setFieldValue)}\n                                            />\n                                        ) : null\n                                    }\n                                />\n                            )}\n                        </FormField>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    );\n};\n\nexport default CashierSearchBox;\n","import CashierSearchBox from './cashier-search-box';\n\nexport default CashierSearchBox;\n","import React from 'react';\nimport debounce from 'lodash.debounce';\nimport { observer } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport CashierSearchBox from 'Components/cashier-search-box';\nimport { useCashierStore } from '../../../stores/useCashierStores';\n\nconst PaymentAgentSearchBox = observer(() => {\n    const { payment_agent } = useCashierStore();\n    const { filterPaymentAgentList, setIsSearchLoading, search_term, setSearchTerm } = payment_agent;\n\n    const debouncedFunction = debounce(() => {\n        filterPaymentAgentList();\n    }, 500);\n\n    const onClear = () => {\n        setSearchTerm('');\n        filterPaymentAgentList();\n    };\n\n    const onSearch = (search: string) => {\n        setSearchTerm(search.trim());\n        debouncedFunction();\n    };\n\n    return (\n        <CashierSearchBox\n            onClear={onClear}\n            onSearch={onSearch}\n            placeholder={localize('Search payment agent name')}\n            search_term={search_term}\n            setIsSearchLoading={setIsSearchLoading}\n        />\n    );\n});\n\nexport default PaymentAgentSearchBox;\n","import PaymentAgentSearchBox from './payment-agent-search-box';\n\nexport default PaymentAgentSearchBox;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Field, FieldProps, Formik, Form } from 'formik';\nimport { Button, Icon, Input, Text } from '@deriv/components';\nimport { getDecimalPlaces, getCurrencyDisplayCode, validNumber, website_name } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize, Localize } from '@deriv/translations';\nimport PaymentAgentDisclaimer from '../payment-agent-disclaimer';\nimport ErrorDialog from 'Components/error-dialog';\nimport SideNote from 'Components/side-note';\nimport { useCashierStore } from '../../../stores/useCashierStores';\nimport { TPaymentAgent } from '../../../types';\nimport './payment-agent-unlisted-withdraw-form.scss';\n\ntype TValidateWithdrawalValueProps = {\n    amount: string;\n    account_number: string;\n};\n\ntype TValidateWithdrawalProps = {\n    balance?: string | number;\n    currency: string;\n    payment_agent?: TPaymentAgent;\n};\n\ntype TPaymentAgentUnlistedWithdrawForm = {\n    setIsUnlistedWithdraw: (value: boolean) => void;\n};\n\nconst validateWithdrawal = (values: TValidateWithdrawalValueProps, { balance, currency }: TValidateWithdrawalProps) => {\n    const errors: { account_number?: string; amount?: string } = {};\n\n    const { is_ok, message } = validNumber(values.amount, {\n        type: 'float',\n        decimals: getDecimalPlaces(currency),\n    });\n\n    if (!values.amount) {\n        errors.amount = localize('This field is required.');\n    } else if (!is_ok && message) {\n        errors.amount = message;\n    } else if (balance !== undefined && Number(balance) < Number(values.amount)) {\n        errors.amount = localize('Insufficient balance.');\n    } else if (!values.account_number) {\n        errors.account_number = localize('This field is required.');\n        // TODO: improve broker code validation of the account number when the wallets project will be released\n    } else if (!/^[C][R]\\d+$/.test(values.account_number)) {\n        errors.account_number = localize('Please enter a valid account number. Example: CR123456789');\n    }\n\n    return errors;\n};\n\nconst PaymentAgentUnlistedWithdrawForm = observer(({ setIsUnlistedWithdraw }: TPaymentAgentUnlistedWithdrawForm) => {\n    const { client } = useStore();\n    const { balance, currency } = client;\n    const verification_code = client.verification_code.payment_agent_withdraw;\n    const { payment_agent } = useCashierStore();\n    const { error, onMountPaymentAgentWithdraw: onMount, requestTryPaymentAgentWithdraw } = payment_agent;\n\n    React.useEffect(() => {\n        onMount();\n    }, [onMount]);\n\n    const validateWithdrawalPassthrough = (values: TValidateWithdrawalValueProps) =>\n        validateWithdrawal(values, { balance, currency });\n\n    const onWithdrawalPassthrough = async (values: TValidateWithdrawalValueProps) => {\n        await requestTryPaymentAgentWithdraw({\n            loginid: values.account_number,\n            currency,\n            amount: Number(values.amount),\n            verification_code,\n        });\n    };\n\n    return (\n        <div className='payment-agent-withdraw-form'>\n            <div className='payment-agent-withdraw-form__page-return'>\n                <Icon\n                    data_testid={'dt-back-arrow-icon'}\n                    icon='icArrowLeftBold'\n                    onClick={() => setIsUnlistedWithdraw(false)}\n                />\n                <Text as='p' line_height='m' size='xs' weight='bold'>\n                    <Localize i18n_default_text='Back to list' />\n                </Text>\n            </div>\n            <SideNote className='payment-agent-list__side-note' has_title={false} is_mobile>\n                <PaymentAgentDisclaimer />\n            </SideNote>\n            <Formik\n                initialValues={{\n                    account_number: '',\n                    amount: '',\n                }}\n                validate={validateWithdrawalPassthrough}\n                onSubmit={onWithdrawalPassthrough}\n            >\n                {({ errors, isSubmitting, isValid, touched, values, setFieldValue }) => {\n                    return (\n                        <Form className='payment-agent-withdraw-form__form'>\n                            <Field name='account_number'>\n                                {({ field }: FieldProps) => (\n                                    <Input\n                                        {...field}\n                                        type='text'\n                                        className='payment-agent-withdraw-form__form-account-number'\n                                        label={localize('Enter the payment agent account number')}\n                                        error={(touched.account_number && errors.account_number) || undefined}\n                                        hint={localize('Example: CR123456789')}\n                                        required\n                                        autoComplete='off'\n                                        maxLength={30}\n                                        trailing_icon={\n                                            errors.account_number ===\n                                            localize('Please enter a valid account number. Example: CR123456789') ? (\n                                                <Icon\n                                                    icon='IcCloseCircleRed'\n                                                    onClick={() => {\n                                                        setFieldValue('account_number', '');\n                                                    }}\n                                                />\n                                            ) : null\n                                        }\n                                    />\n                                )}\n                            </Field>\n                            <div className='payment-agent-withdraw-form__form-amount'>\n                                <Field name='amount'>\n                                    {({ field }: FieldProps) => (\n                                        <Input\n                                            {...field}\n                                            type='text'\n                                            label={localize('Enter amount')}\n                                            error={(touched.amount && errors.amount) || undefined}\n                                            required\n                                            autoComplete='off'\n                                            maxLength={30}\n                                            trailing_icon={\n                                                <span\n                                                    className={classNames(\n                                                        'symbols',\n                                                        `symbols--${currency.toLowerCase()}`\n                                                    )}\n                                                >\n                                                    {getCurrencyDisplayCode(currency)}\n                                                </span>\n                                            }\n                                        />\n                                    )}\n                                </Field>\n                                <Button\n                                    type='submit'\n                                    is_disabled={!isValid || isSubmitting || !values.account_number || !values.amount}\n                                    primary\n                                    large\n                                >\n                                    <Localize i18n_default_text='Continue' />\n                                </Button>\n                            </div>\n                        </Form>\n                    );\n                }}\n            </Formik>\n            <Text as='p' color='less-prominent' line_height='s' size='xxs'>\n                <Localize\n                    i18n_default_text='Note: {{website_name}} does not charge any transfer fees.'\n                    values={{ website_name }}\n                />\n            </Text>\n            <ErrorDialog error={error} className='payment-agent-list__error-dialog' />\n        </div>\n    );\n});\n\nexport default PaymentAgentUnlistedWithdrawForm;\n","import PaymentAgentUnlistedWithdrawForm from './payment-agent-unlisted-withdraw-form';\n\nexport default PaymentAgentUnlistedWithdrawForm;\n","import React from 'react';\nimport { Money } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport TransferConfirm from 'Components/transfer-confirm';\nimport { useCashierStore } from '../../../stores/useCashierStores';\n\nconst PaymentAgentWithdrawConfirm = observer(() => {\n    const { client } = useStore();\n    const { loginid: client_loginid, verification_code } = client;\n    const { payment_agent } = useCashierStore();\n    const {\n        confirm: { amount, currency, loginid, payment_agent_name },\n        error,\n        requestPaymentAgentWithdraw,\n        setIsTryWithdrawSuccessful,\n    } = payment_agent;\n\n    return (\n        <TransferConfirm\n            data={[\n                { label: localize('From account number'), value: client_loginid || '', key: 'transfer_from' },\n                {\n                    label: [localize('To account number'), localize('Account holder name')],\n                    value: [loginid.toUpperCase(), payment_agent_name],\n                    key: 'transfer_to',\n                },\n                {\n                    label: localize('Amount'),\n                    value: <Money currency={currency} amount={amount} show_currency />,\n                    key: 'amount',\n                },\n            ]}\n            error={error}\n            is_payment_agent_withdraw\n            onClickBack={() => {\n                setIsTryWithdrawSuccessful(false);\n            }}\n            onClickConfirm={() => {\n                requestPaymentAgentWithdraw({\n                    loginid,\n                    currency,\n                    amount,\n                    verification_code: verification_code.payment_agent_withdraw,\n                });\n            }}\n        />\n    );\n});\n\nexport default PaymentAgentWithdrawConfirm;\n","import PaymentAgentWithdrawConfirm from './payment-agent-withdraw-confirm';\n\nexport default PaymentAgentWithdrawConfirm;\n","import React from 'react';\nimport { DesktopWrapper, Dropdown, Icon, Loading, MobileWrapper, SelectNative, Text } from '@deriv/components';\nimport { useStore, observer } from '@deriv/stores';\nimport { localize, Localize } from '@deriv/translations';\nimport SideNote from 'Components/side-note';\nimport MissingPaymentMethodNote from '../missing-payment-method-note';\nimport PaymentAgentCard from '../payment-agent-card';\nimport PaymentAgentDisclaimer from '../payment-agent-disclaimer';\nimport PaymentAgentReceipt from '../payment-agent-receipt';\nimport PaymentAgentSearchBox from '../payment-agent-search-box';\nimport PaymentAgentUnlistedWithdrawForm from '../payment-agent-unlisted-withdraw-form';\nimport PaymentAgentWithdrawConfirm from '../payment-agent-withdraw-confirm';\nimport { useCashierStore } from '../../../stores/useCashierStores';\nimport './payment-agent-container.scss';\n\ntype TPaymentAgentContainer = {\n    is_deposit?: boolean;\n};\n\nconst PaymentAgentSearchWarning = () => {\n    return (\n        <div className='payment-agent-list__search-warning cashier__wrapper--align-center'>\n            <Icon icon='IcCashierSearch' size={64} />\n            <Text as='p' line_height='m' size='xs' weight='bold'>\n                <Localize i18n_default_text='No payment agents found for your search' />\n            </Text>\n            <Text as='p' line_height='m' size='xs'>\n                <Localize i18n_default_text='Try changing your search criteria.' />\n            </Text>\n        </div>\n    );\n};\n\nconst PaymentAgentContainer = observer(({ is_deposit }: TPaymentAgentContainer) => {\n    const { ui } = useStore();\n    const { app_contents_scroll_ref, is_dark_mode_on } = ui;\n    const { payment_agent: payment_agent_store } = useCashierStore();\n    const {\n        has_payment_agent_search_warning,\n        is_search_loading,\n        is_try_withdraw_successful,\n        is_withdraw_successful,\n        onChangePaymentMethod,\n        filtered_list: payment_agent_list,\n        resetPaymentAgent,\n        selected_bank,\n        supported_banks,\n    } = payment_agent_store;\n\n    React.useEffect(() => {\n        return () => {\n            if (!is_deposit) {\n                resetPaymentAgent();\n            }\n        };\n    }, [is_deposit, resetPaymentAgent]);\n\n    React.useEffect(() => {\n        return () => {\n            onChangePaymentMethod({ target: { value: '0' } });\n        };\n    }, [onChangePaymentMethod]);\n\n    React.useEffect(() => {\n        if (app_contents_scroll_ref && app_contents_scroll_ref.current) app_contents_scroll_ref.current.scrollTop = 0;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [is_try_withdraw_successful, is_withdraw_successful]);\n\n    const [is_unlisted_withdraw, setIsUnlistedWithdraw] = React.useState(false);\n\n    const list_with_default = [\n        { text: <Localize i18n_default_text='All payment methods' />, value: 0 },\n        ...supported_banks,\n    ];\n\n    if (is_try_withdraw_successful) {\n        return <PaymentAgentWithdrawConfirm />;\n    }\n\n    if (is_withdraw_successful) {\n        return <PaymentAgentReceipt />;\n    }\n\n    if (is_unlisted_withdraw) {\n        return <PaymentAgentUnlistedWithdrawForm setIsUnlistedWithdraw={setIsUnlistedWithdraw} />;\n    }\n\n    return (\n        <React.Fragment>\n            {!has_payment_agent_search_warning && (\n                <SideNote className='payment-agent-list__side-note' has_title={false} is_mobile>\n                    <PaymentAgentDisclaimer />\n                </SideNote>\n            )}\n            <SideNote className='payment-agent-list__side-note-second' has_title={false} is_mobile>\n                <MissingPaymentMethodNote />\n            </SideNote>\n            <div className='payment-agent-list__list-header'>\n                {is_deposit ? (\n                    <Text as='p' line_height='s' size='xs'>\n                        <Localize i18n_default_text='Contact your preferred payment agent for payment instructions and make your deposit.' />\n                    </Text>\n                ) : (\n                    <Text as='p' line_height='s' size='xs'>\n                        <Localize\n                            i18n_default_text='Choose your preferred payment agent and enter your withdrawal amount. If your payment agent is not listed, <0>search for them using their account number</0>.'\n                            components={[\n                                <span\n                                    data-testid='dt_withdrawal_link'\n                                    key={0}\n                                    className='link'\n                                    onClick={() => setIsUnlistedWithdraw(!is_unlisted_withdraw)}\n                                />,\n                            ]}\n                        />\n                    </Text>\n                )}\n            </div>\n            <div className='payment-agent-list__list-selector'>\n                <PaymentAgentSearchBox />\n                {supported_banks.length >= 1 && (\n                    <React.Fragment>\n                        <DesktopWrapper>\n                            <Dropdown\n                                id='payment_methods'\n                                classNameItems='cashier__drop-down-items'\n                                list={list_with_default}\n                                name='payment_methods'\n                                value={selected_bank}\n                                onChange={onChangePaymentMethod}\n                            />\n                        </DesktopWrapper>\n                        <MobileWrapper>\n                            <SelectNative\n                                hide_top_placeholder={false}\n                                placeholder={localize('All payment methods')}\n                                name='payment_methods'\n                                list_items={supported_banks}\n                                value={selected_bank === 0 ? '' : selected_bank.toString()}\n                                label={selected_bank === 0 ? localize('All payment methods') : localize('Type')}\n                                onChange={e =>\n                                    onChangePaymentMethod({\n                                        target: {\n                                            name: 'payment_methods',\n                                            value: e.target.value ? e.target.value.toLowerCase() : '0',\n                                        },\n                                    })\n                                }\n                                use_text={false}\n                            />\n                        </MobileWrapper>\n                    </React.Fragment>\n                )}\n            </div>\n            {is_search_loading ? (\n                <Loading is_fullscreen={false} className='payment-agent-list__search-loader' />\n            ) : (\n                <React.Fragment>\n                    {has_payment_agent_search_warning ? (\n                        <PaymentAgentSearchWarning />\n                    ) : (\n                        payment_agent_list.map((payment_agent, idx) => {\n                            return (\n                                <PaymentAgentCard\n                                    key={idx}\n                                    is_dark_mode_on={is_dark_mode_on}\n                                    is_deposit={is_deposit}\n                                    payment_agent={payment_agent}\n                                />\n                            );\n                        })\n                    )}\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n});\n\nexport default PaymentAgentContainer;\n","import PaymentAgentContainer from './payment-agent-container';\n\nexport default PaymentAgentContainer;\n","import React from 'react';\nimport { Loading } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport PaymentAgentContainer from '../payment-agent-container';\nimport { useCashierStore } from '../../../stores/useCashierStores';\n\nconst DepositTab = observer(() => {\n    const { payment_agent, general_store } = useCashierStore();\n\n    React.useEffect(() => {\n        payment_agent.onMountPaymentAgentList();\n    }, [payment_agent]);\n\n    return (\n        // TODO: Check `is_deposit` TS type-check error after migrating payment-agents to TS\n        <div>{general_store.is_loading ? <Loading is_fullscreen={false} /> : <PaymentAgentContainer is_deposit />}</div>\n    );\n});\n\nexport default DepositTab;\n","import React from 'react';\nimport { Button, StaticUrl, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { routes } from '@deriv/shared';\nimport { withRouter } from 'react-router-dom';\nimport Error from 'Components/error';\nimport './payment-agent-withdrawal-locked.scss';\nimport { RouteComponentProps } from 'react-router';\nimport { TServerError } from '../../../types';\n\ntype TPaymentAgentWithdrawalLockedItemProps = {\n    item: {\n        btn_confirm_text: string;\n        content: string | JSX.Element;\n        onConfirm: VoidFunction;\n        title?: string;\n    };\n};\n\ntype TPaymentAgentWithdrawalLockedProps = RouteComponentProps & {\n    error: TServerError & {\n        onClickButton?: VoidFunction;\n        setErrorMessage?: (value: string) => void;\n    };\n};\n\nconst PaymentAgentWithdrawalLockedItem = ({ item }: TPaymentAgentWithdrawalLockedItemProps) => {\n    return (\n        <div className='cashier__wrapper--align-center payment-agent-withdrawal-locked'>\n            {item.title && (\n                <Text align='center' as='p' className='payment-agent-withdrawal-locked__title' line_height='s' size='s'>\n                    {item.title}\n                </Text>\n            )}\n            <Text align='center' as='p' className='payment-agent-withdrawal-locked__text' line_height='s' size='xs'>\n                {item.content}\n            </Text>\n            <Button\n                className='payment-agent-withdrawal-locked__btn-confirm'\n                onClick={item.onConfirm}\n                primary\n                large\n                type='button'\n            >\n                <Localize i18n_default_text={item.btn_confirm_text} />\n            </Button>\n        </div>\n    );\n};\n\nconst PaymentAgentWithdrawalLocked = ({ error, history }: TPaymentAgentWithdrawalLockedProps) => {\n    const items = [\n        ...(error.code === 'PaymentAgentWithdrawSameMethod'\n            ? [\n                  {\n                      btn_confirm_text: localize('OK'),\n                      content: localize(\n                          'To withdraw your funds, please choose the same payment method you used to make your deposits.'\n                      ),\n                      onConfirm: () => history.push(routes.cashier_withdrawal),\n                  },\n              ]\n            : []),\n        ...(error.code === 'PaymentAgentUseOtherMethod'\n            ? [\n                  {\n                      btn_confirm_text: localize('OK'),\n                      content: (\n                          <Localize\n                              i18n_default_text='Please use an e-wallet that you have used for deposits previously. Ensure the e-wallet supports withdrawal. See the list of e-wallets that support withdrawals <0>here</0>.'\n                              components={[<StaticUrl key={0} className='link' href='/payment-methods' />]}\n                          />\n                      ),\n                      onConfirm: () => history.push(routes.cashier_withdrawal),\n                      title: localize('Please use an e-wallet to withdraw your funds.'),\n                  },\n              ]\n            : []),\n    ];\n\n    if (\n        error.onClickButton ||\n        (error.code !== 'PaymentAgentWithdrawSameMethod' && error.code !== 'PaymentAgentUseOtherMethod')\n    ) {\n        return <Error error={error} />;\n    }\n\n    return (\n        <React.Fragment>\n            {items.map((item, index) => {\n                return <PaymentAgentWithdrawalLockedItem item={item} key={index} />;\n            })}\n        </React.Fragment>\n    );\n};\n\nexport default withRouter(PaymentAgentWithdrawalLocked);\n","import PaymentAgentWithdrawalLocked from './payment-agent-withdrawal-locked';\n\nexport default PaymentAgentWithdrawalLocked;\n","import React from 'react';\nimport { Loading } from '@deriv/components';\nimport { useVerifyEmail } from '@deriv/hooks';\nimport { useStore, observer } from '@deriv/stores';\nimport EmailVerificationEmptyState from '../../../components/email-verification-empty-state';\nimport PaymentAgentContainer from '../payment-agent-container';\nimport PaymentAgentWithdrawalLocked from '../payment-agent-withdrawal-locked';\nimport { useCashierStore } from '../../../stores/useCashierStores';\n\nconst WithdrawalTab = observer(() => {\n    const verify = useVerifyEmail('paymentagent_withdraw');\n    const { client } = useStore();\n    const { payment_agent } = useCashierStore();\n    const verification_code = client.verification_code.payment_agent_withdraw;\n\n    React.useEffect(() => {\n        if (payment_agent.active_tab_index && !verification_code && client.is_authorize) {\n            verify.send();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [payment_agent.active_tab_index, verification_code, client.is_authorize]);\n    // TODO: `verify` should not be a dependency of the `useEffect` hook as it will cause a loop,\n    // We shouldn't call `verify.send()` inside the `useEffect` and we should improve the UX to\n    // match the behavior of the `Withdrawal` page and first inform the user.\n\n    if (verify.is_loading) {\n        return <Loading is_fullscreen={false} />;\n    }\n\n    if (verify.error && 'code' in verify.error) return <PaymentAgentWithdrawalLocked error={verify.error} />;\n    if (verify.has_been_sent) return <EmailVerificationEmptyState type={'paymentagent_withdraw'} />;\n    if (verification_code || payment_agent.is_withdraw) return <PaymentAgentContainer />;\n\n    return null;\n});\n\nexport default WithdrawalTab;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Tabs } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { isDesktop } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport SideNote from '../../../components/side-note';\nimport { TSideNotesProps } from '../../../types';\nimport DepositTab from './deposit-tab';\nimport WithdrawalTab from './withdrawal-tab';\nimport MissingPaymentMethodNote from '../missing-payment-method-note';\nimport PaymentAgentDisclaimer from '../payment-agent-disclaimer';\nimport { useCashierStore } from '../../../stores/useCashierStores';\nimport './payment-agent-list.scss';\n\ntype TProps = {\n    setSideNotes?: (notes: TSideNotesProps) => void;\n};\n\nconst PaymentAgentList = observer(({ setSideNotes }: TProps) => {\n    const { payment_agent, general_store } = useCashierStore();\n\n    const {\n        common: { current_language },\n    } = useStore();\n\n    React.useEffect(() => {\n        if (!general_store.is_loading && !payment_agent.is_try_withdraw_successful) {\n            setSideNotes?.([\n                <SideNote has_title={false} key={0}>\n                    <PaymentAgentDisclaimer />\n                </SideNote>,\n                <SideNote has_title={false} key={1}>\n                    <MissingPaymentMethodNote />\n                </SideNote>,\n            ]);\n        } else {\n            setSideNotes?.([]);\n        }\n    }, [setSideNotes, general_store.is_loading, payment_agent.is_try_withdraw_successful, current_language]);\n\n    return (\n        <div className='payment-agent-list cashier__wrapper--align-left'>\n            <div\n                className={classNames('payment-agent-list__instructions', {\n                    'payment-agent-list__instructions-hide-tabs': payment_agent.is_try_withdraw_successful,\n                })}\n                key={current_language}\n            >\n                <Tabs\n                    active_index={payment_agent.active_tab_index}\n                    className='tabs--desktop'\n                    onTabItemClick={payment_agent.setActiveTab}\n                    top\n                    header_fit_content={isDesktop()}\n                    center={false}\n                    bottom={false}\n                    active_icon_color={''}\n                    background_color={''}\n                    fit_content={false}\n                    icon_color={''}\n                    icon_size={0}\n                    is_100vw={false}\n                    is_full_width={false}\n                    is_overflow_hidden={false}\n                    is_scrollable={false}\n                    should_update_hash={false}\n                    single_tab_has_no_label={false}\n                >\n                    <div label={localize('Deposit')}>\n                        <DepositTab />\n                    </div>\n                    <div label={localize('Withdrawal')}>\n                        <WithdrawalTab />\n                    </div>\n                </Tabs>\n            </div>\n        </div>\n    );\n});\n\nexport default PaymentAgentList;\n","import PaymentAgentList from './payment-agent-list';\n\nexport default PaymentAgentList;\n","import React from 'react';\nimport { Loading } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport CashierLocked from 'Components/cashier-locked';\nimport { Virtual } from 'Components/cashier-container';\nimport PaymentAgentList from './payment-agent-list';\nimport { useCashierStore } from '../../stores/useCashierStores';\nimport { useCashierLocked } from '@deriv/hooks';\n\ntype TPaymentAgent = {\n    setSideNotes: (notes: (React.ReactNode | React.ReactNode[])[] | null) => void;\n};\n\nconst PaymentAgent = observer(({ setSideNotes }: TPaymentAgent) => {\n    const { client } = useStore();\n    const {\n        is_switching,\n        is_virtual,\n        verification_code: { payment_agent_withdraw: verification_code },\n    } = client;\n    const { general_store, payment_agent } = useCashierStore();\n    const { setActiveTab } = general_store;\n    const is_cashier_locked = useCashierLocked();\n    const {\n        container,\n        is_withdraw: is_payment_agent_withdraw,\n        active_tab_index: payment_agent_active_tab_index,\n        setActiveTabIndex: setPaymentAgentActiveTabIndex,\n    } = payment_agent;\n    const initial_active_index =\n        verification_code || is_payment_agent_withdraw || payment_agent_active_tab_index ? 1 : 0;\n\n    setPaymentAgentActiveTabIndex(initial_active_index);\n\n    React.useEffect(() => {\n        setActiveTab(container);\n        return () => {\n            setPaymentAgentActiveTabIndex(0);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (is_switching) {\n        return <Loading />;\n    }\n\n    if (is_virtual) {\n        return <Virtual />;\n    }\n\n    if (is_cashier_locked) {\n        return <CashierLocked />;\n    }\n\n    return <PaymentAgentList setSideNotes={setSideNotes} />;\n});\n\nexport default PaymentAgent;\n","import PaymentAgent from './payment-agent';\n\nexport default PaymentAgent;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Field, FieldProps, Formik, FormikProps } from 'formik';\nimport { Button, Icon, Input, Loading, MobileWrapper, Text } from '@deriv/components';\nimport { CryptoConfig, getCurrencyName, isCryptocurrency, isMobile } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport { useStore, observer } from '@deriv/stores';\nimport CryptoFiatConverter from '../../../components/crypto-fiat-converter';\nimport PercentageSelector from '../../../components/percentage-selector';\nimport RecentTransaction from '../../../components/recent-transaction';\nimport { TReactChangeEvent } from '../../../types';\nimport { useCashierStore } from '../../../stores/useCashierStores';\nimport './crypto-withdraw-form.scss';\n\ntype THeaderProps = {\n    currency: string;\n};\n\ntype TFormValues = {\n    address: string;\n};\n\nconst MIN_ADDRESS_LENGTH = 25;\nconst MAX_ADDRESS_LENGTH = 64;\nconst DEFAULT_FIAT_CURRENCY = 'USD';\n\nconst Header = ({ currency }: THeaderProps) => {\n    const currency_name = getCurrencyName(currency);\n    const currency_display_code = CryptoConfig.get()[currency].display_code;\n\n    return (\n        <Text\n            as='h2'\n            color='prominent'\n            weight='bold'\n            align='center'\n            className='cashier__header cashier__content-header'\n        >\n            <Localize\n                i18n_default_text='Withdraw {{currency}} ({{currency_symbol}}) to your wallet'\n                values={{\n                    currency: currency_name,\n                    currency_symbol: currency_display_code,\n                }}\n            />\n        </Text>\n    );\n};\n\nconst CryptoWithdrawForm = observer(() => {\n    const { client } = useStore();\n    const {\n        balance,\n        currency,\n        current_fiat_currency,\n        verification_code: { payment_withdraw: verification_code },\n    } = client;\n    const { crypto_fiat_converter, general_store, transaction_history, withdraw } = useCashierStore();\n    const crypto_currency = currency;\n    const {\n        account_platform_icon,\n        blockchain_address,\n        onMountCryptoWithdraw: onMountWithdraw,\n        requestWithdraw,\n        setBlockchainAddress,\n        setWithdrawPercentageSelectorResult,\n        validateWithdrawFromAmount,\n        validateWithdrawToAmount,\n        resetWithdrawForm,\n    } = withdraw;\n    const {\n        converter_from_error,\n        converter_to_error,\n        onChangeConverterFromAmount,\n        onChangeConverterToAmount,\n        resetConverter,\n    } = crypto_fiat_converter;\n    const { is_loading, percentage, percentageSelectorSelectionStatus, should_percentage_reset } = general_store;\n    const { crypto_transactions, onMount: recentTransactionOnMount } = transaction_history;\n\n    React.useEffect(() => {\n        recentTransactionOnMount();\n    }, [recentTransactionOnMount]);\n\n    React.useEffect(() => {\n        onMountWithdraw(verification_code);\n\n        return () => {\n            percentageSelectorSelectionStatus(false);\n            resetWithdrawForm();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const validateAddress = (address: string): string | undefined => {\n        if (!address) return localize('This field is required.');\n\n        if (address.length < MIN_ADDRESS_LENGTH || address.length > MAX_ADDRESS_LENGTH) {\n            return localize('Your wallet address should have 25 to 64 characters.');\n        }\n\n        return undefined;\n    };\n\n    if (is_loading) return <Loading />;\n\n    return (\n        <div className='cashier__wrapper' data-testid='dt_crypto_withdraw_form'>\n            {!isMobile() && <Header currency={currency} />}\n            <div className={classNames({ 'crypto-withdraw-form__icon': isMobile() })}>\n                <Icon icon={`IcCurrency-${account_platform_icon?.toLowerCase()}`} size={isMobile() ? 64 : 128} />\n            </div>\n            {isMobile() && <Header currency={currency} />}\n            <Formik\n                initialValues={{\n                    address: '',\n                }}\n                onSubmit={() => requestWithdraw(verification_code)}\n            >\n                {({\n                    errors,\n                    isSubmitting,\n                    touched,\n                    setFieldTouched,\n                    handleChange,\n                    handleSubmit,\n                    values,\n                }: FormikProps<TFormValues>) => (\n                    <form className='crypto-withdraw-form' onSubmit={handleSubmit} autoComplete='off'>\n                        <Field name='address' validate={validateAddress}>\n                            {({ field }: FieldProps<string, TFormValues>) => (\n                                <Input\n                                    {...field}\n                                    onChange={(e: TReactChangeEvent) => {\n                                        handleChange(e);\n                                        setBlockchainAddress(e.target.value);\n                                        setFieldTouched('address', true, false);\n                                    }}\n                                    className='cashier__input withdraw__input'\n                                    data-testid='dt_address_input'\n                                    type='text'\n                                    label={\n                                        <Localize\n                                            i18n_default_text='Your {{currency_symbol}} wallet address'\n                                            values={{\n                                                currency_symbol: currency?.toUpperCase(),\n                                            }}\n                                        />\n                                    }\n                                    error={touched.address ? errors.address : ''}\n                                    required\n                                    autoComplete='off'\n                                />\n                            )}\n                        </Field>\n                        <div className='crypto-withdraw-form__percentage-container'>\n                            <div className='crypto-withdraw-form__percentage-selector'>\n                                <PercentageSelector\n                                    amount={Number(balance)}\n                                    getCalculatedAmount={setWithdrawPercentageSelectorResult}\n                                    percentage={percentage}\n                                    should_percentage_reset={should_percentage_reset}\n                                    from_currency={crypto_currency}\n                                    to_currency={current_fiat_currency || DEFAULT_FIAT_CURRENCY}\n                                />\n                            </div>\n                            <CryptoFiatConverter\n                                from_currency={crypto_currency}\n                                onChangeConverterFromAmount={onChangeConverterFromAmount}\n                                onChangeConverterToAmount={onChangeConverterToAmount}\n                                resetConverter={resetConverter}\n                                to_currency={current_fiat_currency || DEFAULT_FIAT_CURRENCY}\n                                validateFromAmount={validateWithdrawFromAmount}\n                                validateToAmount={validateWithdrawToAmount}\n                            />\n                            <div className='crypto-withdraw-form__submit'>\n                                <Button\n                                    className='cashier__form-submit-button'\n                                    is_disabled={\n                                        !!validateAddress(values.address) ||\n                                        !!converter_from_error ||\n                                        !!converter_to_error ||\n                                        isSubmitting ||\n                                        !blockchain_address\n                                    }\n                                    type='submit'\n                                    primary\n                                    large\n                                >\n                                    <Localize i18n_default_text='Withdraw' />\n                                </Button>\n                            </div>\n                        </div>\n                    </form>\n                )}\n            </Formik>\n            <MobileWrapper>\n                {isCryptocurrency(currency) && crypto_transactions?.length ? <RecentTransaction /> : null}\n            </MobileWrapper>\n        </div>\n    );\n});\n\nexport default CryptoWithdrawForm;\n","import CryptoWithdrawForm from './crypto-withdraw-form';\n\nexport default CryptoWithdrawForm;\n","import React from 'react';\nimport { Button, Clipboard, Icon, Text } from '@deriv/components';\nimport { isCryptocurrency, isMobile } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport { useStore, observer } from '@deriv/stores';\nimport { TAccount } from '../../../types';\nimport { getAccountText } from '../../../utils/utility';\nimport RecentTransaction from '../../../components/recent-transaction';\nimport { useCashierStore } from '../../../stores/useCashierStores';\nimport './crypto-withdraw-receipt.scss';\n\ntype TWalletInformationProps = {\n    account: TAccount;\n    blockchain_address: string;\n};\n\nconst Status = () => {\n    return (\n        <Text as='p' color='prominent' weight='bold' align='center' className='crypto-withdraw-receipt__status'>\n            <Icon\n                icon='IcCircleDynamicColor'\n                color='orange'\n                size={8}\n                className='crypto-withdraw-receipt__status-icon'\n            />\n            <Localize i18n_default_text='In review' />\n        </Text>\n    );\n};\n\nconst AccountInformation = ({ account }: { account: TAccount }) => {\n    return (\n        <div className='crypto-withdraw-receipt__account-info'>\n            <div className='crypto-withdraw-receipt__account-info-detail'>\n                <Icon icon={account?.platform_icon || `IcCurrency-${account?.currency?.toLowerCase()}`} size={32} />\n                <Text\n                    color='prominent'\n                    weight='bold'\n                    size={isMobile() ? 'xxs' : 's'}\n                    align='center'\n                    className='crypto-withdraw-receipt__account-info-detail-text'\n                >\n                    {account?.currency?.toUpperCase()}\n                </Text>\n            </div>\n            <Text\n                color='less-prominent'\n                size={isMobile() ? 'xs' : 's'}\n                align='center'\n                className='crypto-withdraw-receipt__account-info-detail-text'\n            >\n                {account?.value}\n            </Text>\n        </div>\n    );\n};\n\nconst WalletInformation = ({ account, blockchain_address }: TWalletInformationProps) => {\n    const text = getAccountText(account);\n    return (\n        <div className='crypto-withdraw-receipt__account-info'>\n            <div className='crypto-withdraw-receipt__account-info-detail'>\n                <Icon icon='IcCashierWithdrawWallet' size={32} />\n                <Text\n                    color='prominent'\n                    weight='bold'\n                    align='center'\n                    className='crypto-withdraw-receipt__account-info-detail-text'\n                >\n                    <Localize\n                        i18n_default_text='{{account_text}} wallet'\n                        values={{\n                            account_text: text,\n                        }}\n                    />\n                </Text>\n            </div>\n            <div className='crypto-withdraw-receipt__account-info-address'>\n                <Text\n                    color='less-prominent'\n                    as='p'\n                    size={isMobile() ? 'xxs' : 'xs'}\n                    align='center'\n                    className='crypto-withdraw-receipt__account-info-detail-text'\n                >\n                    {blockchain_address}\n                </Text>\n                <Clipboard\n                    text_copy={blockchain_address}\n                    info_message={isMobile() ? '' : localize('copy')}\n                    icon='IcCashierClipboard'\n                    success_message={localize('copied!')}\n                    popoverAlignment={isMobile() ? 'left' : 'bottom'}\n                />\n            </div>\n        </div>\n    );\n};\n\nconst CryptoWithdrawReceipt = observer(() => {\n    const { client } = useStore();\n    const { currency, is_switching } = client;\n    const { account_transfer, general_store, transaction_history, withdraw } = useCashierStore();\n    const { selected_from: account } = account_transfer;\n    const { cashier_route_tab_index: tab_index } = general_store;\n    const {\n        crypto_transactions,\n        onMount: recentTransactionOnMount,\n        setIsCryptoTransactionsVisible,\n    } = transaction_history;\n\n    const { blockchain_address, resetWithdrawForm, setIsWithdrawConfirmed, withdraw_amount } = withdraw;\n\n    React.useEffect(() => {\n        recentTransactionOnMount();\n    }, [recentTransactionOnMount]);\n\n    React.useEffect(() => {\n        return () => {\n            setIsWithdrawConfirmed(false);\n            resetWithdrawForm();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [is_switching, tab_index]);\n\n    return (\n        <div className='cashier__wrapper'>\n            <Text\n                as='h2'\n                color='prominent'\n                weight='bold'\n                align='center'\n                className='cashier__header cashier__content-header'\n            >\n                <Localize i18n_default_text='Your withdrawal will be processed within 24 hours' />\n            </Text>\n            <div className='crypto-withdraw-receipt__detail'>\n                {!isMobile() && <Status />}\n                <Text\n                    as='p'\n                    color='profit-success'\n                    weight='bold'\n                    align='center'\n                    size={isMobile() ? 'm' : 'l'}\n                    className='crypto-withdraw-receipt__crypto'\n                >\n                    <Localize\n                        i18n_default_text='{{withdraw_amount}} {{currency_symbol}}'\n                        values={{\n                            withdraw_amount,\n                            currency_symbol: currency?.toUpperCase(),\n                        }}\n                    />\n                </Text>\n                {isMobile() && <Status />}\n                <AccountInformation account={account} />\n                <Icon className='crypto-withdraw-receipt__icon' icon='IcArrowDown' size={30} />\n                <WalletInformation account={account} blockchain_address={blockchain_address} />\n            </div>\n            <div className='crypto-withdraw-receipt__button-wrapper'>\n                <Button\n                    id='withdraw_transaction'\n                    className='crypto-withdraw-receipt__button crypto-withdraw-receipt__button-left'\n                    text={localize('View transaction history')}\n                    onClick={() => setIsCryptoTransactionsVisible(true)}\n                    secondary\n                />\n                <Button\n                    id='crypto-withdraw-receipt'\n                    className='crypto-withdraw-receipt__button'\n                    has_effect\n                    text={localize('Make a new withdrawal')}\n                    onClick={() => setIsWithdrawConfirmed(false)}\n                    primary\n                />\n            </div>\n            {isMobile() && isCryptocurrency(currency) && crypto_transactions?.length ? <RecentTransaction /> : null}\n        </div>\n    );\n});\n\nexport default CryptoWithdrawReceipt;\n","import CryptoWithdrawReceipt from './crypto-withdraw-receipt';\n\nexport default CryptoWithdrawReceipt;\n","import React from 'react';\nimport { useStore, observer } from '@deriv/stores';\nimport { Real } from '../../../components/cashier-container';\nimport { useCashierStore } from '../../../stores/useCashierStores';\n\nconst Withdraw = observer(() => {\n    const { client } = useStore();\n    const {\n        verification_code: { payment_withdraw: verification_code },\n    } = client;\n    const { general_store, withdraw } = useCashierStore();\n    const { setActiveTab } = general_store;\n    const { container, onMountWithdraw: onMount } = withdraw;\n\n    React.useEffect(() => {\n        setActiveTab(container);\n        onMount(verification_code);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return <Real />;\n});\n\nexport default Withdraw;\n","import Withdraw from './withdraw';\n\nexport default Withdraw;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Icon, Checklist, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { routes } from '@deriv/shared';\nimport { useStore, observer } from '@deriv/stores';\nimport CashierLocked from '../../../components/cashier-locked';\nimport { useCashierStore } from '../../../stores/useCashierStores';\n\ntype TItem = {\n    content: string;\n    status: string;\n    onClick: VoidFunction;\n};\n\nconst WithdrawalLocked = observer(() => {\n    const { client } = useStore();\n    const { account_status } = client;\n    const { withdraw } = useCashierStore();\n    const {\n        is_10k_withdrawal_limit_reached: is_10K_limit,\n        error: { is_ask_financial_risk_approval },\n    } = withdraw;\n    const document = account_status.authentication?.document;\n    const identity = account_status.authentication?.identity;\n    const needs_verification = account_status.authentication?.needs_verification;\n    const is_poi_needed = is_10K_limit && identity?.status !== 'verified';\n    const has_poi_submitted = identity?.status !== 'none';\n    const is_poa_needed = is_10K_limit && (needs_verification?.includes('document') || document?.status !== 'verified');\n    const has_poa_submitted = document?.status !== 'none';\n    const is_ask_financial_risk_approval_needed = is_10K_limit && is_ask_financial_risk_approval;\n    const history = useHistory();\n    const items: TItem[] = [\n        ...(is_poi_needed\n            ? [\n                  {\n                      content: has_poi_submitted\n                          ? localize('Check proof of identity document verification status')\n                          : localize('Upload a proof of identity to verify your identity'),\n                      status: 'action',\n                      onClick: () => history.push(routes.proof_of_identity),\n                  },\n              ]\n            : []),\n        ...(is_poa_needed\n            ? [\n                  {\n                      content: has_poa_submitted\n                          ? localize('Check proof of address document verification status')\n                          : localize('Upload a proof of address to verify your address'),\n                      status: 'action',\n                      onClick: () => history.push(routes.proof_of_address),\n                  },\n              ]\n            : []),\n        ...(is_ask_financial_risk_approval_needed\n            ? [\n                  {\n                      content: localize('Complete the financial assessment form'),\n                      status: 'action',\n                      onClick: () => history.push(routes.financial_assessment),\n                  },\n              ]\n            : []),\n    ];\n    return (\n        <React.Fragment>\n            {items.length ? (\n                <div className='cashier-locked'>\n                    <Icon icon='IcCashierWithdrawalLock' className='cashier-locked__icon' />\n                    <Text as='h2' weight='bold' align='center' className='cashier-locked__title'>\n                        <Localize\n                            i18n_default_text='You have reached the withdrawal limit.<0/>Please upload your proof of identity and address to lift the limit to continue your withdrawal.'\n                            components={[<br key={0} />]}\n                        />\n                    </Text>\n                    <React.Fragment>\n                        <Checklist className='cashier-locked__checklist' items={items} />\n                    </React.Fragment>\n                </div>\n            ) : (\n                <CashierLocked />\n            )}\n        </React.Fragment>\n    );\n});\n\nexport default WithdrawalLocked;\n","import WithdrawalLocked from './withdrawal-locked';\n\nexport default WithdrawalLocked;\n","import React from 'react';\nimport { MobileWrapper } from '@deriv/components';\nimport { useVerifyEmail } from '@deriv/hooks';\nimport { localize, Localize } from '@deriv/translations';\nimport { isCryptocurrency } from '@deriv/shared';\nimport { useStore, observer } from '@deriv/stores';\nimport RecentTransaction from '../../../components/recent-transaction';\nimport EmailVerificationEmptyState from '../../../components/email-verification-empty-state';\nimport EmptyState from '../../../components/empty-state';\nimport Error from '../../../components/error';\nimport { useCashierStore } from '../../../stores/useCashierStores';\nimport ErrorStore from '../../../stores/error-store';\n\nconst WithdrawalVerificationEmail = observer(() => {\n    const verify = useVerifyEmail('payment_withdraw');\n    const { client } = useStore();\n    const { transaction_history } = useCashierStore();\n\n    React.useEffect(() => {\n        transaction_history.onMount();\n    }, [transaction_history]);\n\n    if (verify.error) return <Error error={verify.error as ErrorStore} />;\n\n    if (verify.has_been_sent) return <EmailVerificationEmptyState type={'payment_withdraw'} />;\n\n    return (\n        <>\n            <EmptyState\n                icon='IcCashierAuthenticate'\n                title={localize('Please help us verify your withdrawal request.')}\n                description={\n                    <>\n                        <Localize i18n_default_text=\"Hit the button below and we'll send you an email with a link. Click that link to verify your withdrawal request.\" />\n                        <br />\n                        <br />\n                        <Localize i18n_default_text='This is to protect your account from unauthorised withdrawals.' />\n                    </>\n                }\n                action={{\n                    label: localize('Send email'),\n                    onClick: verify.send,\n                }}\n            />\n            <MobileWrapper>{isCryptocurrency(client.currency) && <RecentTransaction />}</MobileWrapper>\n        </>\n    );\n});\n\nexport default WithdrawalVerificationEmail;\n","import WithdrawalVerificationEmail from './withdrawal-verification-email';\n\nexport default WithdrawalVerificationEmail;\n","import React from 'react';\nimport { Loading } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { isCryptocurrency, isDesktop } from '@deriv/shared';\nimport { useStore, observer } from '@deriv/stores';\nimport CryptoTransactionsHistory from '../../components/crypto-transactions-history';\nimport CryptoWithdrawForm from './crypto-withdraw-form';\nimport CryptoWithdrawReceipt from './crypto-withdraw-receipt';\nimport Withdraw from './withdraw';\nimport WithdrawalLocked from './withdrawal-locked';\nimport WithdrawalVerificationEmail from './withdrawal-verification-email';\nimport CashierLocked from '../../components/cashier-locked';\nimport Error from '../../components/error';\nimport NoBalance from '../../components/no-balance';\nimport RecentTransaction from '../../components/recent-transaction';\nimport SideNote from '../../components/side-note';\nimport USDTSideNote from '../../components/usdt-side-note';\nimport { Virtual } from '../../components/cashier-container';\nimport { useCashierStore } from '../../stores/useCashierStores';\nimport { useCashierLocked, useIsSystemMaintenance } from '@deriv/hooks';\n\ntype TWithdrawalSideNoteProps = {\n    currency: string;\n    is_mobile?: boolean;\n};\n\ntype TWithdrawalProps = {\n    setSideNotes: (notes: (JSX.Element | JSX.Element[])[] | null) => void;\n};\n\nconst WithdrawalSideNote = ({ is_mobile, currency }: TWithdrawalSideNoteProps) => {\n    const notes = [\n        <Localize\n            i18n_default_text='Do not enter an address linked to an ICO purchase or crowdsale. If you do, the ICO tokens will not be credited into your account.'\n            key={0}\n        />,\n        <Localize\n            i18n_default_text='Please note that your maximum and minimum withdrawal limits aren’t fixed. They change due to the high volatility of cryptocurrency.'\n            key={1}\n        />,\n    ];\n\n    if (!isCryptocurrency(currency)) {\n        notes.push(\n            <Localize i18n_default_text=\"We'll send you an email once your transaction has been processed.\" key={1} />\n        );\n    }\n\n    return <SideNote has_bullets is_mobile={is_mobile} side_notes={notes} className='outside-wrapper' />;\n};\n\nconst Withdrawal = observer(({ setSideNotes }: TWithdrawalProps) => {\n    const { client } = useStore();\n    const {\n        balance,\n        currency,\n        current_currency_type,\n        is_switching,\n        is_virtual,\n        verification_code: { payment_withdraw: verification_code },\n    } = client;\n    const { iframe, general_store, transaction_history, withdraw } = useCashierStore();\n    const { is_crypto, setActiveTab, cashier_route_tab_index: tab_index } = general_store;\n    const is_cashier_locked = useCashierLocked();\n    const is_system_maintenance = useIsSystemMaintenance();\n    const { iframe_url } = iframe;\n    const {\n        crypto_transactions,\n        is_crypto_transactions_visible,\n        onMount: recentTransactionOnMount,\n    } = transaction_history;\n    const {\n        check10kLimit,\n        container,\n        error,\n        is_10k_withdrawal_limit_reached,\n        is_withdraw_confirmed,\n        is_withdrawal_locked,\n        error: { setErrorMessage },\n        willMountWithdraw,\n    } = withdraw;\n\n    React.useEffect(() => {\n        if (!is_crypto_transactions_visible) {\n            recentTransactionOnMount();\n        }\n    }, [is_crypto_transactions_visible, is_switching, recentTransactionOnMount]);\n\n    React.useEffect(() => {\n        setActiveTab(container);\n        return () => {\n            setErrorMessage({ code: '', message: '' });\n        };\n    }, [container, setActiveTab, setErrorMessage]);\n\n    React.useEffect(() => {\n        check10kLimit();\n    }, [check10kLimit]);\n\n    React.useEffect(() => {\n        return () => willMountWithdraw(verification_code);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [willMountWithdraw]);\n\n    React.useEffect(() => {\n        if (isDesktop()) {\n            if (isCryptocurrency(currency) && typeof setSideNotes === 'function' && !is_switching) {\n                const side_notes = [];\n                if (crypto_transactions?.length) {\n                    side_notes.push(<RecentTransaction key={2} />);\n                }\n                const side_note = [\n                    <WithdrawalSideNote currency={currency} key={0} />,\n                    ...(/^(UST)$/i.test(currency) ? [<USDTSideNote type='usdt' key={1} />] : []),\n                    ...(/^(eUSDT)$/i.test(currency) ? [<USDTSideNote type='eusdt' key={1} />] : []),\n                ];\n                side_notes.push(side_note);\n                setSideNotes(side_notes);\n            } else setSideNotes(null);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currency, tab_index, crypto_transactions]);\n\n    // TODO: Fix if conditions, use else if and combine conditions when possible\n    if (is_system_maintenance) {\n        if (is_cashier_locked || (is_withdrawal_locked && current_currency_type === 'crypto')) {\n            return <CashierLocked />;\n        }\n    }\n\n    if (is_switching || is_10k_withdrawal_limit_reached === undefined) {\n        return <Loading is_fullscreen={false} />;\n    }\n\n    if (is_virtual) {\n        return <Virtual />;\n    }\n\n    if (is_cashier_locked) {\n        return <CashierLocked />;\n    }\n\n    if (is_withdrawal_locked || is_10k_withdrawal_limit_reached) {\n        return <WithdrawalLocked />;\n    }\n\n    if (!Number(balance)) {\n        return (\n            <>\n                <NoBalance />\n                {is_crypto && <WithdrawalSideNote currency={currency} is_mobile />}\n            </>\n        );\n    }\n\n    if (error.is_show_full_page && error.message) {\n        return <Error error={error} />;\n    }\n\n    if (!is_crypto && (verification_code || iframe_url)) {\n        return <Withdraw />;\n    }\n\n    if (verification_code && is_crypto && !is_withdraw_confirmed && !is_crypto_transactions_visible) {\n        return (\n            <>\n                <CryptoWithdrawForm />\n                {is_crypto && <WithdrawalSideNote currency={currency} is_mobile />}\n            </>\n        );\n    }\n\n    if (is_withdraw_confirmed && !is_crypto_transactions_visible) {\n        return <CryptoWithdrawReceipt />;\n    }\n\n    if (is_crypto_transactions_visible) {\n        return <CryptoTransactionsHistory />;\n    }\n\n    return (\n        <>\n            <WithdrawalVerificationEmail />\n            {is_crypto && <WithdrawalSideNote currency={currency} is_mobile />}\n        </>\n    );\n});\n\nexport default Withdrawal;\n","import Withdrawal from './withdrawal';\n\nexport default Withdrawal;\n","import React, { createContext, PropsWithChildren, useContext } from 'react';\nimport { useStore } from '@deriv/stores';\nimport CashierStore from './cashier-store';\n\nconst CashierStoreContext = createContext<CashierStore | null>(null);\n\nexport const CashierStoreProvider = ({ children }: PropsWithChildren<unknown>) => {\n    const { modules } = useStore();\n    // const memoizedValue = useMemo(() => new CashierStore(), []);\n\n    return (\n        <CashierStoreContext.Provider\n            // value={memoizedValue}\n            value={modules?.cashier}\n        >\n            {children}\n        </CashierStoreContext.Provider>\n    );\n};\n\nexport const useCashierStore = () => {\n    const store = useContext(CashierStoreContext);\n\n    if (!store) {\n        throw new Error('useCashierStore must be used within CashierStoreContext');\n    }\n\n    return store;\n};\n","import { getCurrencyDisplayCode } from '@deriv/shared';\nimport Constants from 'Constants/constants';\n\nclass PromiseClass {\n    promise: Promise<unknown>;\n    reject?: (reason?: unknown) => void;\n    resolve?: (value?: unknown) => void;\n\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.reject = reject;\n            this.resolve = resolve;\n        });\n    }\n}\n\n// check if mlt or dxtrade for account text\nconst getAccountText = (account: { is_dxtrade: boolean; is_mt: boolean; text: string }) => {\n    let account_text: string;\n    if (account.is_dxtrade || account.is_mt) {\n        account_text = account.text;\n    } else {\n        account_text = getCurrencyDisplayCode(account.text);\n    }\n\n    return account_text;\n};\n\nconst getNormalizedPaymentMethod = (\n    payment_method: string,\n    constants: typeof Constants.icon_payment_methods | typeof Constants.payment_methods,\n    is_for_icon = false\n) => {\n    const method = is_for_icon ? payment_method.replace(/[' ,-]/g, '').toLowerCase() : payment_method;\n\n    const normalized_payment_method = Object.entries(constants).reduce(\n        (pay_method, [key, value]) => (value.some((el: string) => el === method) ? key : pay_method),\n        ''\n    );\n    return is_for_icon ? normalized_payment_method : normalized_payment_method || payment_method;\n};\n\nexport { getAccountText, getNormalizedPaymentMethod, PromiseClass };\n","import { useStore } from '@deriv/stores';\n\nconst useHasMaltaInvestAccount = () => {\n    const { client } = useStore();\n    const { active_accounts } = client;\n    const has_malta_invest_account = active_accounts.some(\n        account => account.landing_company_shortcode === 'maltainvest'\n    );\n\n    return has_malta_invest_account;\n};\n\nexport default useHasMaltaInvestAccount;\n","import { useStore } from '@deriv/stores';\nimport useHasMaltaInvestAccount from './useHasMaltaInvestAccount';\n\nconst useAccountTransferVisible = () => {\n    const { client } = useStore();\n    const { landing_company_shortcode, residence } = client;\n    const has_malta_invest_account = useHasMaltaInvestAccount();\n    const is_account_transfer_visible =\n        residence !== 'im' && (landing_company_shortcode !== 'malta' || has_malta_invest_account);\n\n    return is_account_transfer_visible;\n};\n\nexport default useAccountTransferVisible;\n","import { useStore } from '@deriv/stores';\n\nconst useCashierLocked = () => {\n    const { client } = useStore();\n    const { account_status } = client;\n\n    const is_cashier_locked = account_status.status?.some(status => status === 'cashier_locked') || false;\n\n    return is_cashier_locked;\n};\n\nexport default useCashierLocked;\n","import { useEffect, useState } from 'react';\n\nconst ONE_SECOND = 1000;\n\nexport type TCountdownOptions = {\n    from: number;\n    to?: number;\n    increment?: boolean;\n};\n\nconst useCountdown = ({ from, to = 0, increment = false }: TCountdownOptions) => {\n    const [count, setCount] = useState(from);\n    const [is_running, setIsRunning] = useState(false);\n\n    useEffect(() => {\n        let timer: NodeJS.Timeout;\n\n        if (is_running) {\n            timer = setTimeout(() => {\n                if (count === to) {\n                    pause();\n                } else {\n                    setCount(old => (increment ? old + 1 : old - 1));\n                }\n            }, ONE_SECOND);\n        }\n\n        return () => clearTimeout(timer);\n    }, [count, is_running, to, increment]);\n\n    const start = () => setIsRunning(true);\n\n    const pause = () => setIsRunning(false);\n\n    const reset = () => setCount(from);\n\n    const stop = () => {\n        pause();\n        reset();\n    };\n\n    return {\n        count,\n        is_running,\n        start,\n        pause,\n        reset,\n        stop,\n    };\n};\n\nexport default useCountdown;\n","import { useCallback, useEffect } from 'react';\nimport { useRequest } from '@deriv/api';\nimport { useStore } from '@deriv/stores';\n\nconst useDepositFiatAddress = () => {\n    const { ui } = useStore();\n    const { is_dark_mode_on } = ui;\n    const { data, mutate, ...rest } = useRequest('cashier');\n    const deposit_iframe_url =\n        typeof data?.cashier === 'string' ? `${data?.cashier}&DarkMode=${is_dark_mode_on ? 'on' : 'off'}` : undefined;\n\n    const send = useCallback(() => mutate({ payload: { cashier: 'deposit', provider: 'doughflow' } }), [mutate]);\n\n    useEffect(() => {\n        send();\n    }, [send]);\n\n    return {\n        ...rest,\n        resend: send,\n        data: deposit_iframe_url,\n    };\n};\n\nexport default useDepositFiatAddress;\n","import { useStore } from '@deriv/stores';\n\nconst useNeedAuthentication = () => {\n    const { client, traders_hub } = useStore();\n    const { is_authentication_needed } = client;\n    const { is_low_risk_cr_eu_real } = traders_hub;\n    const is_need_authentication = is_authentication_needed && is_low_risk_cr_eu_real;\n\n    return is_need_authentication;\n};\n\nexport default useNeedAuthentication;\n","import { useStore } from '@deriv/stores';\n\nconst useNeedFinancialAssessment = () => {\n    const { client } = useStore();\n    const { is_financial_account, is_financial_information_incomplete, is_trading_experience_incomplete } = client;\n    const is_need_financial_assessment =\n        is_financial_account && (is_financial_information_incomplete || is_trading_experience_incomplete);\n\n    return is_need_financial_assessment;\n};\n\nexport default useNeedFinancialAssessment;\n","import { useStore } from '@deriv/stores';\n\nconst useRealSTPAccount = () => {\n    const { client } = useStore();\n    const { mt5_login_list } = client;\n    const has_real_stp_account = mt5_login_list.some(\n        item => item.account_type === 'real' && item.sub_account_type === 'financial_stp'\n    );\n\n    return has_real_stp_account;\n};\n\nexport default useRealSTPAccount;\n","import { useStore } from '@deriv/stores';\nimport useRealSTPAccount from './useRealSTPAccount';\n\nconst useNeedTNC = () => {\n    const { client } = useStore();\n    const { is_eu, is_tnc_needed } = client;\n    const has_real_stp_account = useRealSTPAccount();\n    const is_need_tnc = (is_eu || has_real_stp_account) && is_tnc_needed;\n\n    return is_need_tnc;\n};\n\nexport default useNeedTNC;\n","import { useStore } from '@deriv/stores';\nimport useNeedAuthentication from './useNeedAuthentication';\nimport useNeedFinancialAssessment from './useNeedFinancialAssessment';\nimport useNeedTNC from './useNeedTNC';\n\nconst useDepositLocked = () => {\n    const { client } = useStore();\n    const { is_deposit_lock, is_trading_experience_incomplete, landing_company_shortcode } = client;\n    const is_need_authentication = useNeedAuthentication();\n    const is_need_tnc = useNeedTNC();\n    const is_need_financial_assessment = useNeedFinancialAssessment();\n    const is_malta_invest = landing_company_shortcode === 'maltainvest';\n    const is_trading_experience_incomplete_or_need_financial_assessment = is_malta_invest\n        ? is_trading_experience_incomplete\n        : is_need_financial_assessment;\n\n    const is_deposit_locked =\n        is_deposit_lock ||\n        is_need_authentication ||\n        is_need_tnc ||\n        is_trading_experience_incomplete_or_need_financial_assessment;\n\n    return is_deposit_locked;\n};\n\nexport default useDepositLocked;\n","import { useCallback } from 'react';\nimport { useStore } from '@deriv/stores';\n\n/**\n * we can use this hook to get the exchange rate for the given currency.\n * exchange_rates comes from store and includes the rates for all currencies based on USD.\n */\nconst useExchangeRate = () => {\n    const { exchange_rates } = useStore();\n    const data = exchange_rates.data;\n    const rates = data?.rates;\n\n    const getRate = useCallback((currency: string) => rates?.[currency] || 1, [rates]);\n\n    return {\n        getRate,\n        last_update: data?.date,\n        base_currency: data?.base_currency || 'USD',\n    };\n};\nexport default useExchangeRate;\n","import { useStore } from '@deriv/stores';\n\nconst useFiatAccountList = () => {\n    const { client } = useStore();\n    const { account_list, is_crypto } = client;\n\n    const fiat_account_list = account_list.filter(\n        account => !account.is_virtual && !is_crypto(account.title || '') && account.loginid?.startsWith('CR')\n    );\n\n    return fiat_account_list;\n};\n\nexport default useFiatAccountList;\n","import { useStore } from '@deriv/stores';\n\nconst useHasActiveRealAccount = () => {\n    const { client } = useStore();\n    const { active_accounts } = client;\n\n    const has_active_real_account = active_accounts.some(account => account.is_virtual === 0);\n\n    return has_active_real_account;\n};\n\nexport default useHasActiveRealAccount;\n","import { useStore } from '@deriv/stores';\n\nconst useHasCryptoCurrency = () => {\n    const { client } = useStore();\n    const { account_list, is_crypto } = client;\n\n    const has_crypto_currency = account_list.some(account => is_crypto(account.title || 'USD'));\n\n    return has_crypto_currency;\n};\n\nexport default useHasCryptoCurrency;\n","import { useStore } from '@deriv/stores';\n\nconst useHasFiatCurrency = () => {\n    const { client } = useStore();\n    const { account_list, is_crypto } = client;\n\n    const has_fiat_currency = account_list.some(account => account.title !== 'Real' && !is_crypto(account.title));\n\n    return has_fiat_currency;\n};\n\nexport default useHasFiatCurrency;\n","import { useStore } from '@deriv/stores';\nimport useHasActiveRealAccount from './useHasActiveRealAccount';\n\nconst useHasSetCurrency = () => {\n    const { client } = useStore();\n    const { account_list } = client;\n    const has_active_real_account = useHasActiveRealAccount();\n\n    const has_real_account = account_list\n        .filter(account => !account.is_virtual)\n        .some(account => account.title !== 'Real' && account.title !== 'Investment');\n\n    const has_set_currency = has_real_account || !has_active_real_account;\n\n    return has_set_currency;\n};\n\nexport default useHasSetCurrency;\n","import { useStore } from '@deriv/stores';\n\nconst useHasUSDCurrency = () => {\n    const { client } = useStore();\n    const { account_list } = client;\n\n    const has_usd_currency = account_list.some(account => account.title === 'USD');\n\n    return has_usd_currency;\n};\n\nexport default useHasUSDCurrency;\n","import { useEffect } from 'react';\nimport { useFetch, useInvalidateQuery } from '@deriv/api';\nimport { useStore } from '@deriv/stores';\n\nconst useIsP2PEnabled = () => {\n    const { client, traders_hub } = useStore();\n    const { is_authorize, loginid, currency, is_virtual } = client;\n    const { is_low_risk_cr_eu_real } = traders_hub;\n    const invalidate = useInvalidateQuery();\n    const { data, ...rest } = useFetch('website_status', { options: { enabled: is_authorize } });\n\n    const is_p2p_supported_currency = Boolean(\n        data?.website_status?.p2p_config?.supported_currencies.includes(currency.toLocaleLowerCase())\n    );\n    const is_p2p_enabled = is_p2p_supported_currency && !is_virtual && !is_low_risk_cr_eu_real;\n\n    // Todo: should replace with the next line instead once BE is fixed.\n    // const is_p2p_enabled = data?.p2p_config?.disabled === 0;\n\n    useEffect(() => {\n        invalidate('website_status');\n    }, [invalidate, loginid]);\n\n    return {\n        ...rest,\n        data: is_p2p_enabled,\n    };\n};\n\nexport default useIsP2PEnabled;\n","import { useStore } from '@deriv/stores';\n\nconst useIsSystemMaintenance = () => {\n    const { client } = useStore();\n    const { account_status } = client;\n\n    const is_system_maintenance =\n        account_status.cashier_validation?.some(validation => validation === 'system_maintenance') || false;\n\n    return is_system_maintenance;\n};\n\nexport default useIsSystemMaintenance;\n","import { useStore } from '@deriv/stores';\n\nconst useOnrampVisible = () => {\n    const { client } = useStore();\n    const { is_virtual, is_crypto } = client;\n    const is_onramp_visible = !is_virtual && is_crypto();\n\n    return is_onramp_visible;\n};\n\nexport default useOnrampVisible;\n","import { useEffect, useState } from 'react';\nimport { useStore } from '@deriv/stores';\n\ntype TNotification = {\n    order_id: string;\n    is_seen: boolean;\n    is_active: boolean;\n};\n\ntype TClientData = {\n    is_cached: boolean;\n    notifications: TNotification[];\n};\n\ntype TP2PSettings = Record<string, TClientData>;\n\nconst useP2PNotificationCount = () => {\n    const [p2p_settings, setP2PSettings] = useState<TP2PSettings>(\n        JSON.parse(localStorage.getItem('p2p_settings') || '{}')\n    );\n    const { client } = useStore();\n    const { loginid } = client;\n    const notifications = loginid ? p2p_settings[loginid]?.notifications : null;\n\n    useEffect(() => {\n        const onStorageChanged = () => {\n            const data = localStorage.getItem('p2p_settings');\n\n            if (data) {\n                setP2PSettings(JSON.parse(data));\n            }\n        };\n\n        window.addEventListener('storage', onStorageChanged);\n\n        return () => {\n            window.removeEventListener('storage', onStorageChanged);\n        };\n    }, []);\n\n    const p2p_notification_count = notifications?.filter(notification => !notification.is_seen).length || 0;\n\n    return p2p_notification_count;\n};\n\nexport default useP2PNotificationCount;\n","import { useFetch } from '@deriv/api';\nimport { useStore } from '@deriv/stores';\n\nconst usePaymentAgentList = (currency?: string) => {\n    const { client } = useStore();\n    const { residence } = client;\n\n    const { data, ...rest } = useFetch('paymentagent_list', {\n        payload: { paymentagent_list: residence, currency },\n        options: { enabled: Boolean(residence) },\n    });\n\n    return {\n        data: data?.paymentagent_list?.list,\n        ...rest,\n    };\n};\n\nexport default usePaymentAgentList;\n","import { useFetch } from '@deriv/api';\nimport { useStore } from '@deriv/stores';\n\nconst usePaymentAgentTransferVisible = () => {\n    const { client } = useStore();\n    const { is_authorize } = client;\n\n    const { data, ...rest } = useFetch('get_settings', { options: { enabled: is_authorize } });\n\n    const is_payment_agent_transfer_visible = Boolean(data?.get_settings?.is_authenticated_payment_agent);\n\n    return {\n        data: is_payment_agent_transfer_visible,\n        ...rest,\n    };\n};\n\nexport default usePaymentAgentTransferVisible;\n","import { useState } from 'react';\nimport { useRequest } from '@deriv/api';\nimport { useStore } from '@deriv/stores';\nimport useCountdown from './useCountdown';\n\nconst RESEND_COUNTDOWN = 60;\n\nconst useVerifyEmail = (\n    type: Parameters<ReturnType<typeof useRequest<'verify_email'>>['mutate']>[0]['payload']['type']\n) => {\n    const WS = useRequest('verify_email');\n    const counter = useCountdown({ from: RESEND_COUNTDOWN });\n    const { client } = useStore();\n    const [sent_count, setSentCount] = useState(0);\n\n    const send = () => {\n        if (!client.email) return;\n        if (counter.is_running) return;\n\n        counter.reset();\n        counter.start();\n\n        setSentCount(old => old + 1);\n\n        WS.mutate({ payload: { verify_email: client.email, type } });\n    };\n\n    return {\n        is_loading: WS.isLoading,\n        error: WS.error,\n        data: WS.data,\n        counter: counter.count,\n        is_counter_running: counter.is_running,\n        sent_count,\n        has_been_sent: sent_count !== 0,\n        send,\n    };\n};\n\nexport default useVerifyEmail;\n","import { createContext } from 'react';\nimport type { TStores } from '../types';\n\nconst StoreContext = createContext<TStores | null>(null);\n\nexport default StoreContext;\n","import { useContext } from 'react';\nimport StoreContext from './storeContext';\n\nconst useStore = () => {\n    const store = useContext(StoreContext);\n\n    if (!store) {\n        throw new Error('useStore must be used within StoreProvider');\n    }\n\n    return store;\n};\n\nexport default useStore;\n","import React, { useEffect } from 'react';\nimport { useSubscription } from '@deriv/api';\nimport merge from 'lodash.merge';\nimport useStore from '../useStore';\n\nconst ExchangeRatesProvider = ({ children }: React.PropsWithChildren<unknown>) => {\n    const { data, subscribe } = useSubscription('exchange_rates');\n    const {\n        exchange_rates: { update },\n    } = useStore();\n\n    useEffect(() => {\n        subscribe({ payload: { base_currency: 'USD' } });\n    }, [subscribe]);\n\n    useEffect(() => {\n        if (data) {\n            const { exchange_rates } = data;\n\n            if (exchange_rates) update(prev => merge(prev, exchange_rates));\n        }\n    }, [update, data]);\n\n    return <>{children}</>;\n};\n\nexport default ExchangeRatesProvider;\n","import { action, makeObservable, observable } from 'mobx';\nimport { makePersistable, stopPersisting } from 'mobx-persist-store';\n\nexport default class BaseStore<T> {\n    data: T | undefined = undefined;\n\n    constructor(name: string, onHydrationDone?: VoidFunction) {\n        makeObservable(this, {\n            data: observable,\n            update: action.bound,\n            unmount: action.bound,\n        });\n\n        makePersistable(this, { name, properties: ['data'], storage: window.localStorage }).then(() =>\n            onHydrationDone?.()\n        );\n    }\n\n    update(data: NonNullable<T> | ((previous?: T) => NonNullable<T>)) {\n        this.data = data instanceof Function ? data(this.data) : data;\n    }\n\n    unmount() {\n        stopPersisting(this);\n    }\n}\n","import BaseStore from './BaseStore';\nimport type { ExchangeRatesResponse } from '@deriv/api-types';\n\nexport default class ExchangeRatesStore extends BaseStore<ExchangeRatesResponse['exchange_rates']> {\n    constructor() {\n        super('ExchangeRatesStore');\n    }\n}\n","import BaseStore from './BaseStore';\n\nconst FLAGS = {\n    foo: false,\n    bar: false,\n    baz: false,\n    // Add your flag here 🚀\n} satisfies Record<string, boolean>;\n\nexport default class FeatureFlagsStore extends BaseStore<{ [k in keyof typeof FLAGS]: boolean }> {\n    constructor() {\n        super('FeatureFlagsStore', () => {\n            // Set the default values for the first time.\n            if (!this.data) this.update(FLAGS);\n\n            // Update the store data if a new flag was added or removed.\n            if (this.data && Object.keys(this.data).length !== Object.keys(FLAGS).length) {\n                this.update(old => {\n                    const data = FLAGS;\n\n                    Object.keys(FLAGS).forEach(flag => {\n                        // @ts-expect-error flag key is always present in the object, Hence can ignore the TS error.\n                        if (old[flag] !== undefined) data[flag] = old[flag];\n                    });\n\n                    return data;\n                });\n            }\n        });\n    }\n}\n","import React, { useEffect, useMemo } from 'react';\nimport { ExchangeRatesProvider } from './providers';\nimport StoreContext from './storeContext';\nimport { ExchangeRatesStore, FeatureFlagsStore } from './stores';\nimport type { TCoreStores, TStores } from '../types';\n\nconst StoreProvider = ({ children, store }: React.PropsWithChildren<{ store: TCoreStores }>) => {\n    const memoizedValue: TStores = useMemo(() => {\n        // If the store is mocked for testing purposes, then return the mocked value.\n        if ('is_mock' in store && store.is_mock) return store as unknown as TStores;\n\n        // Otherwise, instantiate store and return it.\n        return {\n            ...store,\n            exchange_rates: new ExchangeRatesStore(),\n            feature_flags: new FeatureFlagsStore(),\n        };\n    }, [store]);\n\n    useEffect(() => {\n        return () => {\n            Object.values(memoizedValue).forEach(value => {\n                if (typeof value === 'object' && 'unmount' in value) value.unmount();\n            });\n        };\n    }, [memoizedValue]);\n\n    return (\n        <StoreContext.Provider value={memoizedValue}>\n            <ExchangeRatesProvider>{children}</ExchangeRatesProvider>\n        </StoreContext.Provider>\n    );\n};\n\nexport default StoreProvider;\n"],"names":["queryClient","QueryClient","children","QueryClientProvider","client","i","send","name","payload","WS","response","error","props","prop","undefined","options","useQuery","req_id","Object","keys","length","ordered_props","sort","reduce","obj","key","JSON","stringify","getQueryKeys","useQueryClient","useCallback","invalidateQueries","useMutation","_mutate","mutate","rest","useState","is_loading","setIsLoading","is_subscribed","setSubscribed","setError","data","setData","subscriber","useRef","useWS","subscribe","current","e","unsubscribe","useEffect","performance_request_time","get_time_interval","update_time_interval","onTimeUpdated","clock_started","pending","PromiseClass","requestTime","performance","now","time","then","timeCounter","init","fncTimeUpdated","clearInterval","setInterval","start_timestamp","performance_response_time","server_time_at_response","updateTime","time_since_response","moment","utc","resolve","promise","store","ThemeProvider","Cashier","observer","history","location","routes_config","routes","useStore","common","ui","useCashierStore","withdraw","general_store","transaction_history","payment_agent","is_cashier_onboarding","onMount","onMountCommon","setAccountSwitchListener","setTabIndex","setCashierTabIndex","tab_index","cashier_route_tab_index","is_crypto_transactions_visible","usePaymentAgentTransferVisible","is_payment_agent_transfer_visible","is_payment_agent_checking","isLoading","is_payment_agent_transfer_visible_is_success","isSuccess","is_payment_agent_visible","is_from_derivgo","is_visible","is_cashier_visible","toggleCashier","is_account_setting_loaded","is_logged_in","is_logging_in","is_account_transfer_visible","useAccountTransferVisible","is_onramp_visible","useOnrampVisible","p2p_notification_count","useP2PNotificationCount","useIsP2PEnabled","is_p2p_enabled","is_p2p_enabled_success","is_p2p_enabled_loading","React","pathname","push","getMenuOptions","forEach","route","is_invisible","path","count","default","icon","icon_component","label","getTitle","value","component","has_side_note","selected_route","getSelectedRoute","is_default_route","isMobile","Loading","is_fullscreen","FadeWrapper","className","keyname","PageOverlay","header","localize","onClickClose","is_from_app","DesktopWrapper","VerticalTab","current_path","is_floating","setVerticalTabIndex","vertical_tab_index","is_full_width","is_routed","list","tab_headers_note","Button","id","text","onClick","window","open","getStaticUrl","secondary","MobileWrapper","Div100vhContainer","height_offset","component_icon","menu_options","withRouter","routesConfig","route_default","moduleLoader","is_modal","is_authenticated","Deposit","Withdrawal","PaymentAgent","AccountTransfer","PaymentAgentTransfer","P2P","OnRamp","Route","exact","render","result","Redirect","to","toLowerCase","replace","default_subroute","find","r","removeBranchName","redirectToLogin","getLanguage","title","document","default_title","alternateLinkTagChange","canonicalLinkTagChange","Localize","i18n_default_text","fallback","Switch","getRoutesConfig","map","idx","message","redirect_label","redirectOnClick","redirect_to","should_clear_error_on_click","should_show_refresh","useHistory","listen","refresh_message","PageErrorContainer","error_header","error_messages","redirect_urls","redirect_labels","buttonOnClick","reload","Routes","has_error","setIsCryptoTransactionsVisible","setIsCashierOnboarding","setIsDeposit","destination_hash","hash","is_hash_deposit","is_hash_crypto_transactions_visible","is_dark_mode_on","Notifications","notification_messages_ui","setColorMode","useTheme","useUnsafeCashierRouteHandler","passthrough","root_store","setWebsocket","is_crypto_deposit","crypto_deposit_crumbs","fiat_deposit_crumbs","Breadcrumb","items","handleOnClick","item","is_deposit","traders_hub","is_low_risk_cr_eu_real","iframe","deposit","clearIframe","iframe_height","iframe_url","checkIframeLoaded","setContainerHeight","onMountDeposit","should_show_breadcrumbs","Boolean","should_show_loader","height","src","frameBorder","scrolling","Virtual","toggleAccountsDialog","classNames","Text","as","align","weight","color","size","line_height","components","cashier_validation","is_crypto","is_system_maintenance","is_cashier_locked","is_deposit_locked","is_withdrawal_locked","is_identity_verification_needed","excluded_until","no_residence","includes","unwelcome_status","self_exclusion","no_withdrawal_or_trading_status","only_pa_withdrawals_allowed_status","withdraw_service_unavailable_for_pa","withdrawal_locked_status","documents_expired","cashier_locked_status","disabled_status","financial_assessment_required","ask_currency","ask_authenticate","ask_financial_risk_approval","ask_tin_information","ask_self_exclusion_max_turnover_set","ask_fix_details","ask_uk_funds_protection","pa_commision_withdrawal_limit","description","LC_API","open_chat_window","href","rel","values","exclude_until","formatDate","account_status","accounts","current_currency_type","is_withdrawal_lock","loginid","useCashierLocked","useIsSystemMaintenance","useDepositLocked","state","getMessage","Timer","onComplete","remaining_time","setRemainingTime","useInterval","InputGroup","CryptoFiatConverter","from_currency","hint","onChangeConverterFromAmount","onChangeConverterToAmount","resetConverter","to_currency","validateFromAmount","validateToAmount","crypto_fiat_converter","getRate","useExchangeRate","converter_from_amount","converter_from_error","converter_to_error","converter_to_amount","is_timer_visible","handleChange","useFormikContext","arrow_icon_direction","setArrowIconDirection","validate","field","Input","onFocus","onChange","from_rate","to_rate","converted_amount","Number","target","type","currency","getCurrencyDisplayCode","autoComplete","required","classNameHint","Icon","data_testid","cancelCryptoTransaction","hideCryptoTransactionsCancelModal","is_cancel_modal_visible","is_crypto_transactions_cancel_modal_visible","selected_crypto_transaction_id","Modal","small","is_open","toggleModal","has_close_icon","large","primary","hideCryptoTransactionsStatusModal","is_status_modal_visible","is_crypto_transactions_status_modal_visible","selected_crypto_status","selected_crypto_status_description","crypto","row","onTooltipClick","showCryptoTransactionsCancelModal","showCryptoTransactionsStatusModal","address_hash","address_url","amount","is_valid_to_cancel","status_code","submit_date","transaction_hash","transaction_url","transaction_type","formatted_address_hash","substring","formatted_amount","formatted_submit_date","epochToMoment","format","formatted_submit_time","status","getStatus","is_transaction_clicked","setTransactionClicked","is_third_party_transaction","Table","renderer","Money","formatMoney","should_format","show_currency","custom_color","Popover","alignment","crypto_transactions","is_modal_visible","setIsModalVisible","endsWith","isDesktop","DataList","data_source","rowRenderer","row_props","keyMapper","row_gap","old","width","is_counter_running","counter","resend","action","seconds","disabled","verify","useVerifyEmail","tertiary","has_been_sent","has_effect","is_disabled","disableApp","enableApp","setIsVisible","cancel_button_text","confirm_button_text","onConfirm","details","setDetails","dismissError","setErrorMessage","code","setErrorVisibility","mapErrorToDetails","error_code","error_message","Link","is_error_visible","Dialog","onEscapeButtonCancel","onCancel","portal_element_id","dismissable","ErrorComponent","button_link","onClickButton","button_text","footer","ButtonLink","AccountError","error_fields","address_city","address_line_1","address_postcode","address_state","email","phone","residence","clearErrorMessage","Array","isArray","fields","join","interpolation","escapeValue","StaticUrl","is_document","NoBalance","onClickDeposit","style","marginTop","from_account","getCalculatedAmount","percentage","should_percentage_reset","to_account","selected_percentage","setSelectedPercentage","percentage_selector_block","getElementById","String","backgroundColor","calculateAmount","percent","new_percentage","is_percentage_selected","toFixed","getDecimalPlaces","format_amount","currency__display_code","submit_date_moment","transaction_type_display_text","toUpperCase","slice","address_hash_display_value","SideNoteTitle","children_length","side_notes_length","length_of_notes","SideNoteBullet","has_bullets","has_title","is_mobile","side_notes","Wrapper","note","Row","item_key","label_text","v","WarningBullet","is_payment_agent_withdraw","onClickBack","onClickConfirm","is_transfer_consent_checked","setIsTransferConsentChecked","warning_messages","d","warning","Checkbox","classNameLabel","is_modal_open","setModalOpen","handleLearnMore","formatted_transaction_hash","status_list","CONFIRMED","ERROR","PENDING","withdrawal","CANCELLED","LOCKED","PERFORMING_BLOCKCHAIN_TXN","PROCESSING","REJECTED","SENT","VERIFIED","isWithdrawal","PlatformIcons","Derived","styles","viewBox","fill","xmlns","Financial","Options","CFDs","SwapFree","PlatformIcon","account","icon_class_name","appstore_icon_class_name","appstoreIconOnClickHandler","is_mt","platform_icon","AccountTransferReceipt","onClose","account_transfer","switchAccount","closeAccountTransferModal","receipt","resetAccountTransfer","selected_from","selected_to","setShouldSwitchAccount","is_from_outside_cashier","startsWith","is_switch_visible","setIsSwitchVisible","switch_to","setSwitchTo","openStatement","switchAndRedirect","toggleSwitchAlert","amount_transferred","is_derivez","is_dxtrade","AccountTransferBullet","allowed_transfers_count","is_crypto_to_crypto_transfer","is_derivez_transfer","is_dxtrade_allowed","is_dxtrade_transfer","is_mt_transfer","minimum_fee","transfer_fee","platform_name_dxtrade","getPlatformSettings","platform_name_mt5","platform_name_derivez","getTransferFeeNote","getDerivGoNotes","allowed_internal","internal","allowed_mt5","mt5","allowed_dxtrade","dxtrade","allowed_derivez","derivez","getDxtradeAllowedNotes","remaining_transfers","AccountOption","fontWeight","getCurrencyName","balance","has_sign","accounts_from","accounts_to","derivez_accounts_from","derivez_accounts_to","dxtrade_accounts_from","dxtrade_accounts_to","mt_accounts_from","mt_accounts_to","AccountTransferForm","onClickNotes","setSideNotes","account_limits","authentication_status","getLimits","account_transfer_amount","accounts_list","onChangeTransferFrom","onChangeTransferTo","requestTransferBetweenAccounts","setAccountTransferAmount","setTransferPercentageSelectorResult","transfer_limit","validateTransferFromAmount","validateTransferToAmount","recentTransactionOnMount","from_accounts","setFromAccounts","to_accounts","setToAccounts","transfer_to_hint","setTransferToHint","daily_transfers","mt5_remaining_transfers","dxtrade_remaining_transfers","derivez_remaining_transfers","internal_remaining_transfers","validateAmount","validNumber","decimals","min","max","is_ok","getAccounts","is_cfd_account","nativepicker_text","market_type","is_selected_from","is_selected_from_mt","is_selected_from_dxtrade","allowed","available","number","is_mt5_restricted","document_status","poa_pending_msg","Mt5RestrictedMsg","depositClick","NotesLink","initialValues","onSubmit","validateOnBlur","enableReinitialize","errors","isSubmitting","setFieldValue","setFieldError","noValidate","Dropdown","classNameDisplay","classNameDisplaySpan","classNameItems","test_id","is_large","list_height","setTimeout","trailing_icon","maxLength","displayName","closeModal","is_financial_account","is_financial_information_incomplete","is_trading_experience_incomplete","content","Checklist","container","has_no_account","has_no_accounts_balance","is_transfer_confirm","is_transfer_locked","onMountAccountTransfer","setIsTransferConfirm","setActiveTab","is_switching","is_virtual","is_loading_status","setIsLoadingStatus","is_show_full_page","useRequest","onSuccess","ukgc_funds_protection","onramp","api_error","deposit_address","is_deposit_address_loading","pollApiForDepositAddress","useFetch","currency_code","minimum_deposit","crypto_config","currencies_config","option_list","option_message","setOptionMessage","option_list_value","setOptionListValue","qrcode_header","setQRCodeHeader","header_note","currency_name","currency_display_code","CryptoConfig","display_code","currency_symbol","is_align_text_left","event","token_ETH","token_USDC_eUSDT","token","setProhibitedTokenMessage","prohibited_token","setQRCodeHeaderMessage","placeholder","includeMargin","Clipboard","text_copy","info_message","success_message","popoverAlignment","isCryptocurrency","is_tnc_needed","standpoint","identity","authentication","needs_verification","is_poi_needed","is_poa_needed","has_poi_submitted","has_poa_submitted","deposit_desc","iom","acceptTnc","hide_breadcrumb","is_authorize","ThemedScrollbars","CashierOnboardingIconMarquee","icons","NewsTicker","speed","index","dark","light","openRealAccountSignup","shouldNavigateAfterChooseCrypto","setDepositTarget","has_crypto_account","useHasCryptoCurrency","onSwitchDone","fiat_account_list","useFiatAccountList","fiat_account_loginid","fiat_account_currency","has_fiat_currency","useHasFiatCurrency","can_switch_to_fiat_account","is_dialog_visible","setIsDialogVisible","has_usd_currency","useHasUSDCurrency","should_show_p2p_card","setShouldShowAllAvailableCurrencies","all_payment_agent_list","usePaymentAgentList","hide_paddings","padding","is_eu","is_low_risk","regulation_text","should_show_learn_more","toggleSetCurrencyModal","can_change_fiat_currency","available_crypto_currencies","is_fiat_user","is_crypto_user","should_show_side_notes","has_set_currency","useHasSetCurrency","useDepositFiatAddress","onLoad","display","landing_company_shortcode","is_fiat_currency_banner_visible_for_MF_clients","test","is_ask_uk_funds_protection","provider","setSelectedProvider","payment_icons","getPaymentIcons","gtm_identifier","logo_size","getDescription","payment_icon","timeout_clipboard","is_requesting_widget_html","onClickDisclaimerContinue","onClickGoToDepositPage","selected_provider","setIsOnRampModalOpen","should_show_dialog","should_show_widget","widget_error","widget_html","el_onramp_widget_container_ref","useCopyToClipboard","is_copied","copyToClipboard","setIsCopied","clearTimeout","onMountWidgetContainer","ref","dangerouslySetInnerHTML","__html","should_show_deposit_address","zIndex","defaultValue","preventDefault","HintBox","is_info","service","website_name","getKebabCase","OnRampSideNote","notes","OnRampInfo","ReadMore","expand_text","collapse_length","filtered_onramp_providers","is_onramp_modal_open","onMountOnramp","onUnmountOnramp","onramp_popup_modal_title","resetPopup","routeTo","selected_cashier_path","setSelectedCashierPath","SelectNative","list_items","menu_option","should_show_empty_option","hide_top_placeholder","currentTarget","onUnmount","PaymentAgentTransferConfirm","payment_agent_transfer","confirm","transfer_to","client_id","transfer_to_name","client_name","requestPaymentAgentTransfer","setIsTryTransferSuccessful","validateTransfer","min_withdrawal","max_withdrawal","fromEntries","entries","filter","payment_agent_transfer_store","requestTryPaymentAgentTransfer","validateTransferPassthrough","onTransferPassthrough","actions","setSubmitting","initial_transfer_form_values","toString","isInitialValid","isValid","touched","has_character_counter","max_characters","PaymentAgentTransferReceipt","resetPaymentAgentTransfer","is_transfer_successful","is_try_transfer_successful","onMountPaymentAgentTransfer","onUnMount","Alipay","Bank","Bankbri","Bca","Bch","Bni","Bitcoin","Card","Cimbniaga","Crypto","Dai","Diamondbank","Eth","Ewallet","Firstbank","Gtbank","Icbc","Libertyreserve","LiteCoin","Mandiri","Mandirisyariah","Moneygram","Paypal","PerfectMoney","Permatabank","Tether","Verve","WebMoney","Wechatpay","Zenithbank","has_red_color","is_link","detail","child","supported_banks","normalized_payment_methods","all_payment_methods","payment_agent_urls","toJS","urls","further_information","capitalizeFirstLetter","url","every","method","getNormalizedPaymentMethod","payment_method","Constants","bank","from","Set","payment_agent_phones","phone_numbers","PaymentAgentPhonesDetails","phone_number","PaymentAgentEmailDetails","PaymentAgentMinimumWithdrawalDetails","PaymentAgentMaximumWithdrawalDetails","PaymentAgentDepositComissionDetails","deposit_commission","PaymentAgentWithdrawalComissionDetails","withdrawal_commission","validateWithdrawal","PaymentAgentListedWithdrawForm","payment_agent_store","verification_code","payment_agent_withdraw","onMountPaymentAgentWithdraw","payment_agent_list","agents","requestTryPaymentAgentWithdraw","selected_bank","input_ref","onWithdrawalPassthrough","paymentagent_loginid","pa","ExpansionPanel","PaymentAgentDetails","PaymentAgentReceipt","resetPaymentAgent","payment_agent_name","payment_agent_email","payment_agent_phone","payment_agent_url","onClear","onSearch","search_term","setIsSearchLoading","onSearchKeyUpDown","submitForm","search","trim","onKeyUp","onKeyDown","leading_icon","onSearchClear","PaymentAgentSearchBox","filterPaymentAgentList","setSearchTerm","debouncedFunction","debounce","PaymentAgentUnlistedWithdrawForm","setIsUnlistedWithdraw","account_number","PaymentAgentWithdrawConfirm","client_loginid","requestPaymentAgentWithdraw","setIsTryWithdrawSuccessful","PaymentAgentSearchWarning","PaymentAgentContainer","app_contents_scroll_ref","has_payment_agent_search_warning","is_search_loading","is_try_withdraw_successful","is_withdraw_successful","onChangePaymentMethod","filtered_list","scrollTop","is_unlisted_withdraw","list_with_default","use_text","DepositTab","onMountPaymentAgentList","PaymentAgentWithdrawalLockedItem","btn_confirm_text","WithdrawalTab","active_tab_index","is_withdraw","PaymentAgentList","current_language","Tabs","active_index","onTabItemClick","top","header_fit_content","center","bottom","active_icon_color","background_color","fit_content","icon_color","icon_size","is_100vw","is_overflow_hidden","is_scrollable","should_update_hash","single_tab_has_no_label","payment_agent_active_tab_index","setPaymentAgentActiveTabIndex","setActiveTabIndex","Header","CryptoWithdrawForm","current_fiat_currency","payment_withdraw","crypto_currency","account_platform_icon","blockchain_address","onMountWithdraw","onMountCryptoWithdraw","requestWithdraw","setBlockchainAddress","setWithdrawPercentageSelectorResult","validateWithdrawFromAmount","validateWithdrawToAmount","resetWithdrawForm","percentageSelectorSelectionStatus","validateAddress","address","setFieldTouched","handleSubmit","Status","AccountInformation","WalletInformation","getAccountText","account_text","CryptoWithdrawReceipt","setIsWithdrawConfirmed","withdraw_amount","Withdraw","WithdrawalLocked","is_10K_limit","is_10k_withdrawal_limit_reached","is_ask_financial_risk_approval","is_ask_financial_risk_approval_needed","WithdrawalSideNote","check10kLimit","is_withdraw_confirmed","willMountWithdraw","side_note","CashierStoreContext","createContext","CashierStoreProvider","modules","Provider","cashier","useContext","Error","reject","this","Promise","constants","is_for_icon","normalized_payment_method","pay_method","some","el","active_accounts","has_malta_invest_account","useHasMaltaInvestAccount","increment","setCount","is_running","setIsRunning","timer","pause","reset","start","stop","deposit_iframe_url","is_authentication_needed","mt5_login_list","account_type","sub_account_type","has_real_stp_account","useRealSTPAccount","is_deposit_lock","is_need_authentication","useNeedAuthentication","is_need_tnc","useNeedTNC","is_need_financial_assessment","useNeedFinancialAssessment","exchange_rates","rates","last_update","date","base_currency","account_list","has_active_real_account","useHasActiveRealAccount","invalidate","useInvalidateQuery","enabled","website_status","p2p_config","supported_currencies","toLocaleLowerCase","validation","parse","localStorage","getItem","p2p_settings","setP2PSettings","notifications","onStorageChanged","addEventListener","removeEventListener","notification","is_seen","paymentagent_list","get_settings","is_authenticated_payment_agent","useCountdown","sent_count","setSentCount","verify_email","StoreContext","useSubscription","update","prev","merge","BaseStore","onHydrationDone","makeObservable","observable","unmount","makePersistable","properties","storage","Function","stopPersisting","ExchangeRatesStore","FLAGS","foo","bar","baz","FeatureFlagsStore","flag","memoizedValue","useMemo","is_mock","feature_flags"],"sourceRoot":""}