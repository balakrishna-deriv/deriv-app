{"version":3,"file":"p2p/js/p2p.filter-modal.325a3f1f52162fa6c781.js","mappings":"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","sources":["webpack://@deriv/p2p/./src/components/modal-manager/modals/filter-modal/filter-modal-no-results.scss","webpack://@deriv/p2p/./src/components/modal-manager/modals/filter-modal/filter-modal-search.scss","webpack://@deriv/p2p/./src/components/modal-manager/modals/filter-modal/filter-modal.scss","webpack://@deriv/p2p/./src/components/modal-manager/modals/filter-modal/filter-modal-no-results.scss?b295","webpack://@deriv/p2p/./src/components/modal-manager/modals/filter-modal/filter-modal-search.scss?6103","webpack://@deriv/p2p/./src/components/modal-manager/modals/filter-modal/filter-modal.scss?69a2","webpack://@deriv/p2p/./src/components/modal-manager/modals/filter-modal/filter-modal-header.jsx","webpack://@deriv/p2p/./src/components/modal-manager/modals/filter-modal/filter-modal-search.jsx","webpack://@deriv/p2p/./src/components/modal-manager/modals/filter-modal/filter-modal-no-results.jsx","webpack://@deriv/p2p/./src/components/modal-manager/modals/filter-modal/filter-modal.jsx","webpack://@deriv/p2p/./src/components/modal-manager/modals/filter-modal/index.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".filter-modal-no-result{display:flex;flex-direction:column;padding:50% .8rem;justify-content:center;align-content:center}.filter-modal-no-result__title{line-height:1.43;letter-spacing:normal;margin-bottom:.8rem}.filter-modal-no-result__subtitle{letter-spacing:normal;margin:0}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/modal-manager/modals/filter-modal/filter-modal-no-results.scss\"],\"names\":[],\"mappings\":\"AAkoBA,wBACI,YAAA,CACA,qBAAA,CACA,iBAAA,CACA,sBAAA,CACA,oBAAA,CAEA,+BACI,gBAAA,CACA,qBAAA,CACA,mBAAA,CAEJ,kCACI,qBAAA,CACA,QAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n.filter-modal-no-result {\\n    display: flex;\\n    flex-direction: column;\\n    padding: 50% 0.8rem;\\n    justify-content: center;\\n    align-content: center;\\n\\n    &__title {\\n        line-height: 1.43;\\n        letter-spacing: normal;\\n        margin-bottom: 0.8rem;\\n    }\\n    &__subtitle {\\n        letter-spacing: normal;\\n        margin: 0;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".filter-modal-search{border-bottom:1px solid var(--border-normal)}.filter-modal-search .dc-input{border:medium none currentColor;border:initial;height:5.2rem}@media(min-width: 320px)and (max-width: 767px){.filter-modal-search{padding:.8rem 1rem;min-width:25rem}.filter-modal-search .dc-input{height:4rem}}@media(max-width: 320px){.filter-modal-search{width:14rem}}.filter-modal-search__cross-icon{cursor:pointer}.filter-modal-search__field{margin-bottom:0 !important}.filter-modal-search__field .dc-input{justify-content:center}.filter-modal-search__field .dc-input__container{border:none;height:6rem}.filter-modal-search__field .dc-input__field{flex-grow:1;height:4rem;padding-right:3rem;margin-left:1.2rem;width:auto;width:initial}@media(min-width: 320px)and (max-width: 767px){.filter-modal-search__field .dc-input__field{padding:0 2.8rem 0 .4rem}}.filter-modal-search__field .dc-input__leading-icon{cursor:pointer;margin-left:.8rem;pointer-events:inherit;position:static;position:initial}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/modal-manager/modals/filter-modal/filter-modal-search.scss\"],\"names\":[],\"mappings\":\"AAkoBA,qBACI,4CAAA,CAEA,+BACI,+BAAA,CAAA,cAAA,CACA,aAAA,CA9BJ,+CAyBJ,qBASQ,kBAAA,CACA,eAAA,CAEA,+BACI,WAAA,CAAA,CAIR,yBAjBJ,qBAkBQ,WAAA,CAAA,CAGJ,iCACI,cAAA,CAGJ,4BACI,0BAAA,CAEA,sCACI,sBAAA,CAEA,iDACI,WAAA,CACA,WAAA,CAEJ,6CACI,WAAA,CACA,WAAA,CACA,kBAAA,CACA,kBAAA,CACA,UAAA,CAAA,aAAA,CAjEZ,+CA4DQ,6CAQQ,wBAAA,CAAA,CAIR,oDACI,cAAA,CACA,iBAAA,CACA,sBAAA,CACA,eAAA,CAAA,gBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n.filter-modal-search {\\n    border-bottom: 1px solid var(--border-normal);\\n\\n    .dc-input {\\n        border: unset;\\n        height: 5.2rem;\\n    }\\n\\n    @include mobile {\\n        padding: 0.8rem 1rem;\\n        min-width: 25rem;\\n\\n        .dc-input {\\n            height: 4rem;\\n        }\\n    }\\n\\n    @media (max-width: 320px) {\\n        width: 14rem;\\n    }\\n\\n    &__cross-icon {\\n        cursor: pointer;\\n    }\\n\\n    &__field {\\n        margin-bottom: 0 !important;\\n\\n        .dc-input {\\n            justify-content: center;\\n\\n            &__container {\\n                border: none;\\n                height: 6rem;\\n            }\\n            &__field {\\n                flex-grow: 1;\\n                height: 4rem;\\n                padding-right: 3rem;\\n                margin-left: 1.2rem;\\n                width: unset;\\n\\n                @include mobile {\\n                    padding: 0 2.8rem 0 0.4rem;\\n                }\\n            }\\n\\n            &__leading-icon {\\n                cursor: pointer;\\n                margin-left: 0.8rem;\\n                pointer-events: unset;\\n                position: unset;\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".filter-modal__column{display:flex;flex-direction:column;flex:1}.filter-modal__header .page-return__button{margin-right:2rem}.filter-modal__select{cursor:pointer}.filter-modal__arrow{min-width:1.8rem;min-height:1.8rem}.filter-modal__selected-payment-methods{max-width:350px;max-height:45px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}@media(max-width: 450px){.filter-modal__selected-payment-methods{max-width:300px}}@media(max-width: 400px){.filter-modal__selected-payment-methods{max-width:250px}}.filter-modal__header-return-button{position:absolute;left:1.2rem}.filter-modal__body{flex-direction:column}.filter-modal__footer-button{display:flex;width:100%}.filter-modal__footer-button-group{display:grid;grid-template-columns:1fr 1fr;width:100%}.filter-modal__row{align-items:center;border-bottom:2px solid var(--general-section-5);display:flex;flex-direction:row;justify-content:space-between;min-height:8rem;padding:0 2.4rem;gap:1.6rem}@media(max-width: 375px){.filter-modal__row{padding:1.4rem 2.4rem}}.filter-modal__toggle-label{margin:0}.filter-modal__checkbox-container{height:36rem}@media(min-width: 320px)and (max-width: 767px){.filter-modal__checkbox-container{height:100%}.filter-modal__checkbox-container .dc-checkbox{margin:3.5rem 1rem}}.dc-modal__container_payment-methods .dc-modal-header{border-bottom:2px solid var(--general-section-5);height:5.6rem}.dc-modal__container_payment-methods .dc-modal-header__title{padding:1.6rem 3.2rem}.dc-modal__container_payment-methods .dc-modal-body{padding:0;min-width:33rem}.dc-modal__container_payment-methods .dc-checkbox{min-height:4.9rem;padding:0 1.6rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/modal-manager/modals/filter-modal/filter-modal.scss\"],\"names\":[],\"mappings\":\"AAmoBI,sBACI,YAAA,CACA,qBAAA,CACA,MAAA,CAIA,2CACI,iBAAA,CAIR,sBACI,cAAA,CAGJ,qBACI,gBAAA,CACA,iBAAA,CAGJ,wCACI,eAAA,CACA,eAAA,CACA,eAAA,CACA,kBAAA,CACA,sBAAA,CAEA,yBAPJ,wCAQQ,eAAA,CAAA,CAEJ,yBAVJ,wCAWQ,eAAA,CAAA,CAIR,oCACI,iBAAA,CACA,WAAA,CAGJ,oBACI,qBAAA,CAIA,6BACI,YAAA,CACA,UAAA,CAGJ,mCACI,YAAA,CACA,6BAAA,CACA,UAAA,CAIR,mBACI,kBAAA,CACA,gDAAA,CACA,YAAA,CACA,kBAAA,CACA,6BAAA,CACA,eAAA,CACA,gBAAA,CACA,UAAA,CAEA,yBAVJ,mBAWQ,qBAAA,CAAA,CAIR,4BACI,QAAA,CAGJ,kCACI,YAAA,CAxGJ,+CAuGA,kCAIQ,WAAA,CAEA,+CACI,kBAAA,CAAA,CAOZ,sDACI,gDAAA,CACA,aAAA,CAEA,6DACI,qBAAA,CAIR,oDACI,SAAA,CACA,eAAA,CAGJ,kDACI,iBAAA,CACA,gBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n.filter-modal {\\n    &__column {\\n        display: flex;\\n        flex-direction: column;\\n        flex: 1;\\n    }\\n\\n    &__header {\\n        .page-return__button {\\n            margin-right: 2rem;\\n        }\\n    }\\n\\n    &__select {\\n        cursor: pointer;\\n    }\\n\\n    &__arrow {\\n        min-width: 1.8rem;\\n        min-height: 1.8rem;\\n    }\\n\\n    &__selected-payment-methods {\\n        max-width: 350px;\\n        max-height: 45px;\\n        overflow: hidden;\\n        white-space: nowrap;\\n        text-overflow: ellipsis;\\n\\n        @media (max-width: 450px) {\\n            max-width: 300px;\\n        }\\n        @media (max-width: 400px) {\\n            max-width: 250px;\\n        }\\n    }\\n\\n    &__header-return-button {\\n        position: absolute;\\n        left: 1.2rem;\\n    }\\n\\n    &__body {\\n        flex-direction: column;\\n    }\\n\\n    &__footer {\\n        &-button {\\n            display: flex;\\n            width: 100%;\\n        }\\n\\n        &-button-group {\\n            display: grid;\\n            grid-template-columns: 1fr 1fr;\\n            width: 100%;\\n        }\\n    }\\n\\n    &__row {\\n        align-items: center;\\n        border-bottom: 2px solid var(--general-section-5);\\n        display: flex;\\n        flex-direction: row;\\n        justify-content: space-between;\\n        min-height: 8rem;\\n        padding: 0 2.4rem;\\n        gap: 1.6rem;\\n\\n        @media (max-width: 375px) {\\n            padding: 1.4rem 2.4rem;\\n        }\\n    }\\n\\n    &__toggle-label {\\n        margin: 0;\\n    }\\n\\n    &__checkbox-container {\\n        height: 36rem;\\n\\n        @include mobile {\\n            height: 100%;\\n\\n            .dc-checkbox {\\n                margin: 3.5rem 1rem;\\n            }\\n        }\\n    }\\n}\\n\\n.dc-modal__container_payment-methods {\\n    .dc-modal-header {\\n        border-bottom: 2px solid var(--general-section-5);\\n        height: 5.6rem;\\n\\n        &__title {\\n            padding: 1.6rem 3.2rem;\\n        }\\n    }\\n\\n    .dc-modal-body {\\n        padding: 0;\\n        min-width: 33rem;\\n    }\\n\\n    .dc-checkbox {\\n        min-height: 4.9rem;\\n        padding: 0 1.6rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./filter-modal-no-results.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./filter-modal-search.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./filter-modal.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","import * as React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { localize, Localize } from 'Components/i18next';\nimport { useStores } from 'Stores';\nimport PageReturn from 'Components/page-return';\nimport { DesktopWrapper, Icon, MobileWrapper, Text } from '@deriv/components';\nimport PropTypes from 'prop-types';\n\nconst FilterModalHeader = ({ pageHeaderReturnFn }) => {\n    const { buy_sell_store } = useStores();\n\n    if (buy_sell_store.show_filter_payment_methods) {\n        return (\n            <React.Fragment>\n                <DesktopWrapper>\n                    <PageReturn\n                        className='filter-modal__header'\n                        onClick={pageHeaderReturnFn}\n                        page_title={localize('Payment methods')}\n                    />\n                </DesktopWrapper>\n                <MobileWrapper>\n                    <Text align='center' weight='bold'>\n                        <Icon\n                            className='filter-modal__header-return-button'\n                            icon='IcArrowLeftBold'\n                            onClick={pageHeaderReturnFn}\n                            size={16}\n                        />\n                        <Localize i18n_default_text='Payment methods' />\n                    </Text>\n                </MobileWrapper>\n            </React.Fragment>\n        );\n    }\n\n    return <Localize i18n_default_text='Filter' />;\n};\n\nFilterModalHeader.propTypes = {\n    pageHeaderReturnFn: PropTypes.func,\n};\n\nexport default observer(FilterModalHeader);\n","import React from 'react';\nimport { Field as FormField, Formik, Form } from 'formik';\nimport debounce from 'lodash.debounce';\nimport { Icon, Input } from '@deriv/components';\nimport { isDesktop } from '@deriv/shared';\nimport { observer } from 'mobx-react-lite';\nimport { localize } from 'Components/i18next';\nimport { useStores } from 'Stores';\nimport './filter-modal-search.scss';\n\nconst FilterModalSearch = () => {\n    const { buy_sell_store, my_profile_store } = useStores();\n\n    const returnedFunction = debounce(() => {\n        my_profile_store.getPaymentMethodsList();\n    }, 1000);\n\n    const onSearch = ({ search }) => {\n        my_profile_store.setSearchTerm(search.trim());\n\n        if (!search.trim()) {\n            my_profile_store.setSearchResults([]);\n            return;\n        }\n\n        buy_sell_store.setIsFilterModalLoading(true);\n        returnedFunction();\n    };\n\n    const onSearchClear = setFieldValue => {\n        setFieldValue('search', '');\n        my_profile_store.setSearchTerm('');\n        my_profile_store.setSearchResults([]);\n    };\n\n    const onSearchKeyUp = submitForm => {\n        clearTimeout(typing_timer);\n\n        const typing_timer = setTimeout(() => {\n            submitForm();\n        }, 1000);\n    };\n\n    return (\n        <div className='filter-modal-search'>\n            <Formik initialValues={{ search: '' }} onSubmit={onSearch}>\n                {({ submitForm, values: { search }, setFieldValue }) => (\n                    <Form>\n                        <FormField name='search'>\n                            {({ field }) => (\n                                <Input\n                                    {...field}\n                                    className='filter-modal-search__field'\n                                    data-lpignore='true'\n                                    leading_icon={<Icon className='filter-modal-search__field-icon' icon='IcSearch' />}\n                                    name='search'\n                                    onFocus={submitForm}\n                                    onKeyUp={() => onSearchKeyUp(submitForm)}\n                                    placeholder={isDesktop() ? localize('Search payment method') : localize('Search')}\n                                    trailing_icon={\n                                        search ? (\n                                            <Icon\n                                                className='filter-modal-search__cross-icon'\n                                                color='secondary'\n                                                icon='IcCloseCircle'\n                                                onClick={() => onSearchClear(setFieldValue)}\n                                            />\n                                        ) : null\n                                    }\n                                    type='text'\n                                />\n                            )}\n                        </FormField>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    );\n};\n\nexport default observer(FilterModalSearch);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { localize } from 'Components/i18next';\nimport { Text } from '@deriv/components';\nimport './filter-modal-no-results.scss';\n\nconst FilterModalNoResults = ({ text }) => (\n    <div className='filter-modal-no-result'>\n        <Text as='h2' align='center' weight='bold' className='filter-modal-no-result__title'>\n            {localize('No results for \"{{text}}\".', { text, interpolation: { escapeValue: false } })}\n        </Text>\n        <Text as='p' align='center' className='filter-modal-no-result__subtitle'>\n            {localize('Check your spelling or use a different term.')}\n        </Text>\n    </div>\n);\n\nFilterModalNoResults.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default FilterModalNoResults;\n","import * as React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport {\n    Button,\n    Checkbox,\n    DesktopWrapper,\n    Icon,\n    Loading,\n    MobileFullPageModal,\n    MobileWrapper,\n    Modal,\n    Text,\n    ThemedScrollbars,\n    ToggleSwitch,\n} from '@deriv/components';\nimport { localize, Localize } from 'Components/i18next';\nimport { useStores } from 'Stores';\nimport FilterModalHeader from './filter-modal-header.jsx';\nimport FilterModalSearch from './filter-modal-search.jsx';\nimport FilterModalNoResults from './filter-modal-no-results.jsx';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\nimport { isMobile } from '@deriv/shared';\n\nconst FilterModalResult = observer(({ onChange, selected_methods }) => {\n    const { buy_sell_store, my_profile_store } = useStores();\n    if (buy_sell_store.is_filter_modal_loading) return <Loading is_fullscreen={false} />;\n    else if (my_profile_store.search_term) {\n        if (my_profile_store.search_results && my_profile_store.search_results.length > 0) {\n            return my_profile_store.search_results?.map((payment_method, key) => {\n                return (\n                    <Checkbox\n                        key={key}\n                        label={payment_method.text}\n                        onChange={() => onChange(payment_method)}\n                        value={selected_methods.includes(payment_method.value)}\n                    />\n                );\n            });\n        }\n        return <FilterModalNoResults text={my_profile_store.search_term} />;\n    }\n    return my_profile_store.payment_methods_list_items.map((payment_method, key) => {\n        return (\n            <Checkbox\n                name='checkbox'\n                key={key}\n                label={payment_method.text}\n                onChange={() => onChange(payment_method)}\n                value={selected_methods.includes(payment_method.value)}\n            />\n        );\n    });\n});\n\nconst FilterModal = () => {\n    const { buy_sell_store, my_profile_store } = useStores();\n    const { hideModal, is_modal_open, showModal, useSavedState } = useModalManagerContext();\n\n    const [selected_methods, setSelectedMethods] = useSavedState(\n        'selected_methods',\n        buy_sell_store.selected_payment_method_value ?? []\n    );\n    const [selected_methods_text, setSelectedMethodsText] = useSavedState(\n        'selected_methods_text',\n        buy_sell_store.selected_payment_method_text ?? []\n    );\n    const [has_made_changes, setHasMadeChanges] = useSavedState('has_made_changes', false);\n\n    const diff = (arr1, arr2) => arr1.filter(x => !arr2.includes(x));\n    // if user has previously already selected some payment methods and clicked Apply\n    const has_already_selected_payment_methods =\n        buy_sell_store.selected_payment_method_value?.length &&\n        (selected_methods.length !== buy_sell_store.selected_payment_method_value.length ||\n            diff(selected_methods, buy_sell_store.selected_payment_method_value).length > 0);\n    // if user is selecting payment methods for the first time and has selected some payment methods\n    const has_recently_selected_payment_methods =\n        buy_sell_store.selected_payment_method_value?.length === 0 && selected_methods.length > 0;\n    const has_selected_payment_methods = has_already_selected_payment_methods || has_recently_selected_payment_methods;\n\n    const onChange = payment_method => {\n        if (!selected_methods.includes(payment_method.value)) {\n            setSelectedMethods(prev_selected_methods => [...prev_selected_methods, payment_method.value]);\n            setSelectedMethodsText(prev_selected_methods_text => [...prev_selected_methods_text, payment_method.text]);\n        } else {\n            setSelectedMethods(prev_selected_methods => prev_selected_methods.filter(i => i !== payment_method.value));\n            setSelectedMethodsText(prev_selected_methods_text =>\n                prev_selected_methods_text.filter(i => i !== payment_method.text)\n            );\n        }\n    };\n\n    const onClose = () => {\n        if (has_selected_payment_methods || has_made_changes) {\n            showModal({\n                key: 'LeavePageModal',\n                props: {\n                    onLeavePage: () => {\n                        if (isMobile()) {\n                            setSelectedMethods(\n                                selected_methods.filter(selected_method =>\n                                    buy_sell_store.selected_payment_method_value.includes(selected_method)\n                                )\n                            );\n                            setSelectedMethodsText(\n                                selected_methods_text.filter(selected_method_text =>\n                                    buy_sell_store.selected_payment_method_text.includes(selected_method_text)\n                                )\n                            );\n                        }\n                        setSelectedMethods(buy_sell_store.selected_payment_method_value);\n                        setSelectedMethodsText(buy_sell_store.selected_payment_method_text);\n                        hideModal({\n                            should_restore_local_state: false,\n                            should_hide_all_modals: true,\n                        });\n                    },\n                },\n            });\n        } else {\n            buy_sell_store.setShowFilterPaymentMethods(false);\n            my_profile_store.setSearchTerm('');\n            my_profile_store.setSearchResults([]);\n            hideModal({\n                should_restore_local_state: false,\n            });\n        }\n    };\n\n    const onClickReset = () => {\n        buy_sell_store.setShouldUseClientLimits(true);\n\n        setSelectedMethods([]);\n        setSelectedMethodsText([]);\n\n        setHasMadeChanges(\n            buy_sell_store.selected_payment_method_value.length > 0 &&\n                diff(selected_methods, buy_sell_store.selected_payment_method_value).length === 0\n        );\n    };\n\n    const onClickConfirmPaymentMethods = () => {\n        my_profile_store.setSearchTerm('');\n        my_profile_store.setSearchResults([]);\n        buy_sell_store.setShowFilterPaymentMethods(false);\n        setHasMadeChanges(true);\n    };\n\n    const onClickClearPaymentMethods = () => {\n        setSelectedMethods([]);\n        setSelectedMethodsText([]);\n    };\n\n    const onClickApply = () => {\n        buy_sell_store.setSelectedPaymentMethodValue(selected_methods);\n        buy_sell_store.setSelectedPaymentMethodText(selected_methods_text);\n        buy_sell_store.onClickApply(selected_methods, selected_methods_text);\n        hideModal();\n    };\n\n    React.useEffect(() => {\n        my_profile_store.getPaymentMethodsList();\n\n        return () => {\n            my_profile_store.setSearchTerm('');\n            my_profile_store.setSearchResults([]);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const pageHeaderReturnFn = () => {\n        if (buy_sell_store.show_filter_payment_methods) {\n            my_profile_store.setSearchTerm('');\n            my_profile_store.setSearchResults([]);\n            setSelectedMethods(buy_sell_store.selected_payment_method_value);\n            setSelectedMethodsText(buy_sell_store.selected_payment_method_text);\n            buy_sell_store.setShowFilterPaymentMethods(false);\n        } else {\n            hideModal({\n                should_restore_local_state: false,\n            });\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <DesktopWrapper>\n                <Modal\n                    className='payment-methods'\n                    has_close_icon\n                    height='56rem'\n                    title={<FilterModalHeader pageHeaderReturnFn={pageHeaderReturnFn} />}\n                    is_open={is_modal_open}\n                    toggleModal={onClose}\n                    width='44rem'\n                >\n                    <Modal.Body>\n                        {buy_sell_store.show_filter_payment_methods ? (\n                            <React.Fragment>\n                                <FilterModalSearch />\n                                <div className='filter-modal__checkbox-container'>\n                                    <ThemedScrollbars is_scrollbar_hidden>\n                                        <FilterModalResult selected_methods={selected_methods} onChange={onChange} />\n                                    </ThemedScrollbars>\n                                </div>\n                            </React.Fragment>\n                        ) : (\n                            <React.Fragment>\n                                <div\n                                    className='filter-modal__row filter-modal__select'\n                                    onClick={() => buy_sell_store.setShowFilterPaymentMethods(true)}\n                                >\n                                    <div className='filter-modal__column'>\n                                        <Text color='prominent' size='xs'>\n                                            <Localize i18n_default_text='Payment methods' />\n                                        </Text>\n                                        {selected_methods_text.length ===\n                                        my_profile_store.payment_methods_list_items.length ? (\n                                            <Text color='less-prominent' size='xs'>\n                                                <Localize i18n_default_text='All' />\n                                            </Text>\n                                        ) : (\n                                            <Text\n                                                className='filter-modal__selected-payment-methods'\n                                                color='less-prominent'\n                                                size='xs'\n                                            >\n                                                {selected_methods_text.join(', ')}\n                                            </Text>\n                                        )}\n                                    </div>\n                                    <Icon className='filter-modal__arrow' icon='IcChevronRight' size={18} />\n                                </div>\n                                <div className='filter-modal__row'>\n                                    <div className='filter-modal__column'>\n                                        <Text color='prominent' size='xs'>\n                                            <Localize i18n_default_text='Matching ads' />\n                                        </Text>\n                                        <Text color='less-prominent' size='xs'>\n                                            <Localize i18n_default_text='Ads that match your Deriv P2P balance and limit.' />\n                                        </Text>\n                                    </div>\n                                    <ToggleSwitch\n                                        id='toggle-filter-modal'\n                                        classNameButton='filter-modal__toggle-button'\n                                        classNameLabel='filter-modal__toggle-label'\n                                        handleToggle={() => {\n                                            buy_sell_store.setShouldUseClientLimits(\n                                                !buy_sell_store.should_use_client_limits\n                                            );\n                                            setHasMadeChanges(true);\n                                        }}\n                                        is_enabled={buy_sell_store.should_use_client_limits}\n                                    />\n                                </div>\n                            </React.Fragment>\n                        )}\n                    </Modal.Body>\n                    <Modal.Footer has_separator>\n                        {buy_sell_store.show_filter_payment_methods ? (\n                            <Button.Group>\n                                <Button\n                                    disabled={selected_methods.length === 0}\n                                    large\n                                    secondary\n                                    onClick={onClickClearPaymentMethods}\n                                >\n                                    <Localize i18n_default_text='Clear' />\n                                </Button>\n                                <Button\n                                    disabled={!has_selected_payment_methods}\n                                    large\n                                    primary\n                                    onClick={onClickConfirmPaymentMethods}\n                                >\n                                    {localize('Confirm')}\n                                </Button>\n                            </Button.Group>\n                        ) : (\n                            <Button.Group>\n                                <Button large secondary onClick={onClickReset}>\n                                    {localize('Reset')}\n                                </Button>\n                                <Button disabled={!has_made_changes} large primary onClick={onClickApply}>\n                                    {localize('Apply')}\n                                </Button>\n                            </Button.Group>\n                        )}\n                    </Modal.Footer>\n                </Modal>\n            </DesktopWrapper>\n            <MobileWrapper>\n                <MobileFullPageModal\n                    body_className='filter-modal__body'\n                    is_modal_open={is_modal_open}\n                    height_offset='80px'\n                    is_flex\n                    header={<FilterModalHeader pageHeaderReturnFn={pageHeaderReturnFn} />}\n                    onClickClose={onClose}\n                    renderPageFooterChildren={() => {\n                        return (\n                            <React.Fragment>\n                                {buy_sell_store.show_filter_payment_methods ? (\n                                    <Button.Group className='filter-modal__footer-button-group'>\n                                        <Button\n                                            disabled={selected_methods.length === 0}\n                                            large\n                                            secondary\n                                            onClick={onClickClearPaymentMethods}\n                                        >\n                                            <Localize i18n_default_text='Clear' />\n                                        </Button>\n                                        <Button\n                                            disabled={!has_selected_payment_methods}\n                                            large\n                                            primary\n                                            onClick={onClickConfirmPaymentMethods}\n                                        >\n                                            {localize('Confirm')}\n                                        </Button>\n                                    </Button.Group>\n                                ) : (\n                                    <Button.Group className='filter-modal__footer-button-group'>\n                                        <Button large secondary onClick={onClickReset}>\n                                            {localize('Reset')}\n                                        </Button>\n                                        <Button disabled={!has_made_changes} large primary onClick={onClickApply}>\n                                            {localize('Apply')}\n                                        </Button>\n                                    </Button.Group>\n                                )}\n                            </React.Fragment>\n                        );\n                    }}\n                >\n                    {buy_sell_store.show_filter_payment_methods ? (\n                        <React.Fragment>\n                            <FilterModalSearch />\n                            <div className='filter-modal__checkbox-container'>\n                                <ThemedScrollbars is_scrollbar_hidden>\n                                    <FilterModalResult selected_methods={selected_methods} onChange={onChange} />\n                                </ThemedScrollbars>\n                            </div>\n                        </React.Fragment>\n                    ) : (\n                        <React.Fragment>\n                            <div\n                                className='filter-modal__row filter-modal__select'\n                                onClick={() => buy_sell_store.setShowFilterPaymentMethods(true)}\n                            >\n                                <div className='filter-modal__column'>\n                                    <Text color='prominent' size='xs'>\n                                        <Localize i18n_default_text='Payment methods' />\n                                    </Text>\n                                    {selected_methods_text.length ===\n                                    my_profile_store.payment_methods_list_items.length ? (\n                                        <Text color='less-prominent' size='xs'>\n                                            <Localize i18n_default_text='All' />\n                                        </Text>\n                                    ) : (\n                                        <Text\n                                            className='filter-modal__selected-payment-methods'\n                                            color='less-prominent'\n                                            size='xs'\n                                        >\n                                            {selected_methods_text.join(', ')}\n                                        </Text>\n                                    )}\n                                </div>\n                                <Icon className='filter-modal__arrow' icon='IcChevronRight' size={18} />\n                            </div>\n                            <div className='filter-modal__row'>\n                                <div className='filter-modal__column'>\n                                    <Text color='prominent' size='xs'>\n                                        <Localize i18n_default_text='Matching ads' />\n                                    </Text>\n                                    <Text color='less-prominent' size='xs'>\n                                        <Localize i18n_default_text='Ads that match your Deriv P2P balance and limit.' />\n                                    </Text>\n                                </div>\n                                <ToggleSwitch\n                                    id='toggle-filter-modal'\n                                    classNameButton='filter-modal__toggle-button'\n                                    classNameLabel='filter-modal__toggle-label'\n                                    handleToggle={() => {\n                                        buy_sell_store.setShouldUseClientLimits(\n                                            !buy_sell_store.should_use_client_limits\n                                        );\n                                        setHasMadeChanges(true);\n                                    }}\n                                    is_enabled={buy_sell_store.should_use_client_limits}\n                                />\n                            </div>\n                        </React.Fragment>\n                    )}\n                </MobileFullPageModal>\n            </MobileWrapper>\n        </React.Fragment>\n    );\n};\n\nexport default observer(FilterModal);\n","import FilterModal from './filter-modal.jsx';\nimport './filter-modal.scss';\n\nexport default FilterModal;\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","api","content","__esModule","default","options","exports","locals","FilterModalHeader","pageHeaderReturnFn","useStores","buy_sell_store","show_filter_payment_methods","DesktopWrapper","className","onClick","page_title","localize","MobileWrapper","Text","align","weight","Icon","icon","size","i18n_default_text","propTypes","PropTypes","observer","my_profile_store","returnedFunction","debounce","getPaymentMethodsList","Formik","initialValues","search","onSubmit","setSearchTerm","trim","setIsFilterModalLoading","setSearchResults","submitForm","values","setFieldValue","Form","name","field","Input","leading_icon","onFocus","onKeyUp","clearTimeout","typing_timer","setTimeout","onSearchKeyUp","placeholder","isDesktop","trailing_icon","color","onSearchClear","type","FilterModalNoResults","text","as","interpolation","escapeValue","FilterModalResult","onChange","selected_methods","is_filter_modal_loading","Loading","is_fullscreen","search_term","search_results","length","map","payment_method","key","Checkbox","label","value","includes","payment_methods_list_items","useModalManagerContext","hideModal","is_modal_open","showModal","useSavedState","selected_payment_method_value","setSelectedMethods","selected_payment_method_text","selected_methods_text","setSelectedMethodsText","has_made_changes","setHasMadeChanges","diff","arr1","arr2","filter","x","has_already_selected_payment_methods","has_recently_selected_payment_methods","has_selected_payment_methods","prev_selected_methods","i","prev_selected_methods_text","onClose","props","onLeavePage","isMobile","selected_method","selected_method_text","should_restore_local_state","should_hide_all_modals","setShowFilterPaymentMethods","onClickReset","setShouldUseClientLimits","onClickConfirmPaymentMethods","onClickClearPaymentMethods","onClickApply","setSelectedPaymentMethodValue","setSelectedPaymentMethodText","React","Modal","has_close_icon","height","title","is_open","toggleModal","width","ThemedScrollbars","is_scrollbar_hidden","join","ToggleSwitch","classNameButton","classNameLabel","handleToggle","should_use_client_limits","is_enabled","has_separator","Button","disabled","large","secondary","primary","MobileFullPageModal","body_className","height_offset","is_flex","header","onClickClose","renderPageFooterChildren"],"sourceRoot":""}