{"version":3,"file":"p2p/js/p2p.buy-sell-modal.a906e9b962be227614c7.js","mappings":"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","sources":["webpack://@deriv/p2p/./src/components/modal-manager/modals/buy-sell-modal/buy-sell-modal.scss","webpack://@deriv/p2p/./src/pages/buy-sell/buy-sell-form-receive-amount.scss","webpack://@deriv/p2p/./src/pages/buy-sell/buy-sell-form.scss","webpack://@deriv/p2p/./src/components/modal-manager/modals/buy-sell-modal/buy-sell-modal.scss?1a05","webpack://@deriv/p2p/./src/pages/buy-sell/buy-sell-form-receive-amount.scss?5c44","webpack://@deriv/p2p/./src/pages/buy-sell/buy-sell-form.scss?f4ed","webpack://@deriv/p2p/./src/pages/buy-sell/buy-sell-form-receive-amount.jsx","webpack://@deriv/p2p/./src/pages/buy-sell/buy-sell-form.jsx","webpack://@deriv/p2p/./src/components/modal-manager/modals/buy-sell-modal/buy-sell-modal.jsx","webpack://@deriv/p2p/./src/components/modal-manager/modals/buy-sell-modal/index.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".buy-sell-modal{opacity:1 !important}@media(min-width: 320px)and (max-width: 767px){.buy-sell-modal .dc-mobile-full-page-modal__header--border-bottom{border-bottom:2px solid var(--general-section-1)}}.buy-sell-modal__body{position:relative;display:block;padding-top:2.4rem}@media(min-width: 320px)and (max-width: 767px){.buy-sell-modal__body>form{height:-moz-fit-content !important;height:fit-content !important}}@media(min-width: 320px)and (max-width: 767px){.buy-sell-modal__footer{border-top:2px solid var(--general-section-1);display:flex;flex-direction:row;justify-content:flex-end;margin-top:auto;padding:1.6rem}}.buy-sell-modal__layout{padding:0;padding:initial}.buy-sell-modal-field{margin-bottom:0 !important}.buy-sell-modal-field{flex:1;height:-moz-fit-content;height:fit-content}.buy-sell-modal-field .dc-input__container{width:91%;padding:.5rem 1rem .5rem 1.2rem}.buy-sell-modal-field--disable{opacity:.32}.buy-sell-modal-field--textarea{border-top:1px solid var(--general-section-5);margin-bottom:3.5rem;padding:1.8rem 2.4rem 0}.buy-sell-modal-field--textarea .dc-input__container{height:9.7rem}.buy-sell-modal-field--textarea .dc-input__field{height:100% !important}.buy-sell-modal-field-wrapper{display:flex;margin:-2.4rem 0 1.6rem -2.4rem;padding:0 2.4rem;word-break:break-word}.buy-sell-modal-field-wrapper>*{margin:2.4rem 0 0 2.4rem}@media(min-width: 320px)and (max-width: 767px){.buy-sell-modal-field-wrapper{flex-direction:column}.buy-sell-modal-field-wrapper .dc-input__wrapper{margin-top:2.5rem;width:90vw}}.buy-sell-modal-field-wrapper>.dc-input{margin-top:1rem}.buy-sell-modal__form{height:-moz-fit-content !important;height:fit-content !important}.buy-sell-modal-hintbox{margin:-0.5rem 0 2.4rem;padding:0 2.4rem}.buy-sell-modal-hintbox .dc-hint-box__icon{align-self:flex-start}.buy-sell-modal__icon{margin-right:.8rem}.buy-sell-modal-line{border-top:1px solid var(--general-section-5);margin:1.6rem 0;width:100%}.buy-sell-modal-payment-method{padding:0 2.4rem}.buy-sell-modal-payment-method--container{align-self:center;display:flex;flex-direction:column;margin-bottom:1.6rem;padding:0 2.4rem}.buy-sell-modal-payment-method--icon{border-radius:2px;margin-right:.8rem}.buy-sell-modal-payment-method--row{align-items:center;display:flex;flex-direction:row;margin-bottom:.8rem}.buy-sell-modal-payment-method--title{margin-bottom:.8rem}.buy-sell-modal--danger{margin-bottom:1.6rem;width:-moz-fit-content;width:fit-content;align-items:flex-start}.buy-sell-modal--input{display:flex;gap:2rem;flex-direction:column;padding:0 2.4rem 2rem;margin-bottom:2rem}.buy-sell-modal--input .dc-input__wrapper{margin-right:.2rem;margin-bottom:0;margin-bottom:initial}@media(min-width: 1024px){.buy-sell-modal--input-field{display:flex}}@media(min-width: 320px)and (max-width: 767px){.buy-sell-modal--input .dc-input__container{width:100%;padding:.5rem 1rem .5rem 1.2rem}.buy-sell-modal--input .dc-input__wrapper{margin:.8rem .2rem 1.4rem 0}}.buy-sell-modal--sell-payment-methods{display:flex;flex-wrap:wrap;gap:.8rem;margin:1.6rem 0 2.4rem}.buy-sell-modal--sell-payment-methods .payment-method-card{margin:0;margin:initial}@media(min-width: 320px)and (max-width: 767px){.buy-sell-modal--sell-payment-methods .payment-method-card{min-height:8.8rem;min-width:0;min-width:initial;width:13.6rem}}.buy-sell-modal--sell-payment-methods .payment-method-card--add{margin:0;margin:initial}@media(min-width: 320px)and (max-width: 767px){.buy-sell-modal--sell-payment-methods .payment-method-card--add{min-height:8.8rem;width:13.6rem}}.buy-sell-modal--sell-payment-methods .payment-method-card__body{margin-top:.8rem}@media(min-width: 320px)and (max-width: 767px){.buy-sell-modal--sell-payment-methods .payment-method-card__body{margin-top:0}}.buy-sell-modal--sell-payment-methods--disable{opacity:.32}.buy-sell-modal--error-message{padding:0 2.4rem}.buy-sell-modal__content .dc-input{margin-bottom:0;margin-bottom:initial}.dc-modal__container_buy-sell-modal .dc-modal-header--buy-sell-modal{border-bottom:2px solid var(--general-section-5)}.dc-modal__container_buy-sell-modal .dc-modal-footer--separator{margin-top:1rem;border-top:2px solid var(--general-section-5)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/modal-manager/modals/buy-sell-modal/buy-sell-modal.scss\"],\"names\":[],\"mappings\":\"AAkoBA,gBACI,oBAAA,CA1BA,+CA6BI,kEACI,gDAAA,CAAA,CAIR,sBACI,iBAAA,CACA,aAAA,CACA,kBAAA,CArCJ,+CAwCQ,2BACI,kCAAA,CAAA,6BAAA,CAAA,CAzCZ,+CA8CA,wBAEQ,6CAAA,CACA,YAAA,CACA,kBAAA,CACA,wBAAA,CACA,eAAA,CACA,cAAA,CAAA,CAIR,wBACI,SAAA,CAAA,eAAA,CAGJ,sBACI,0BAEA,CAHJ,sBAEI,MAAA,CACA,uBAAA,CAAA,kBAAA,CAEA,2CACI,SAAA,CACA,+BAAA,CAGJ,+BACI,WAAA,CAGJ,gCACI,6CAAA,CACA,oBAAA,CACA,uBAAA,CAGI,qDACI,aAAA,CAEJ,iDACI,sBAAA,CAKZ,8BAEI,YAAA,CACA,+BAAA,CACA,gBAAA,CACA,qBAAA,CAEA,gCACI,wBAAA,CAlGZ,+CA0FI,8BAYQ,qBAAA,CAEA,iDACI,iBAAA,CACA,UAAA,CAAA,CAIR,wCACI,eAAA,CAKZ,sBACI,kCAAA,CAAA,6BAAA,CAGJ,wBACI,uBAAA,CACA,gBAAA,CAGI,2CACI,qBAAA,CAKZ,sBACI,kBAAA,CAGJ,qBACI,6CAAA,CACA,eAAA,CACA,UAAA,CAGJ,+BACI,gBAAA,CACA,0CACI,iBAAA,CACA,YAAA,CACA,qBAAA,CACA,oBAAA,CACA,gBAAA,CAGJ,qCACI,iBAAA,CACA,kBAAA,CAGJ,oCACI,kBAAA,CACA,YAAA,CACA,kBAAA,CACA,mBAAA,CAGJ,sCACI,mBAAA,CAIR,wBACI,oBAAA,CACA,sBAAA,CAAA,iBAAA,CACA,sBAAA,CAGJ,uBACI,YAAA,CACA,QAAA,CACA,qBAAA,CACA,qBAAA,CACA,kBAAA,CACA,0CACI,kBAAA,CACA,eAAA,CAAA,qBAAA,CA9MR,0BAiNI,6BAEQ,YAAA,CAAA,CA3LZ,+CAgMY,4CACI,UAAA,CACA,+BAAA,CAEJ,0CACI,2BAAA,CAAA,CAMhB,sCACI,YAAA,CACA,cAAA,CACA,SAAA,CACA,sBAAA,CAEA,2DACI,QAAA,CAAA,cAAA,CAlNR,+CAiNI,2DAIQ,iBAAA,CACA,WAAA,CAAA,iBAAA,CACA,aAAA,CAAA,CAGJ,gEACI,QAAA,CAAA,cAAA,CA3NZ,+CA0NQ,gEAIQ,iBAAA,CACA,aAAA,CAAA,CAGR,iEACI,gBAAA,CAnOZ,+CAkOQ,iEAIQ,YAAA,CAAA,CAKZ,+CACI,WAAA,CAIR,+BACI,gBAAA,CAKJ,mCACI,eAAA,CAAA,qBAAA,CAIJ,qEACI,gDAAA,CAGJ,gEACI,eAAA,CACA,6CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n.buy-sell-modal {\\n    opacity: 1 !important;\\n\\n    @include mobile {\\n        .dc-mobile-full-page-modal__header--border-bottom {\\n            border-bottom: 2px solid var(--general-section-1);\\n        }\\n    }\\n\\n    &__body {\\n        position: relative;\\n        display: block;\\n        padding-top: 2.4rem;\\n\\n        @include mobile {\\n            & > form {\\n                height: fit-content !important;\\n            }\\n        }\\n    }\\n\\n    &__footer {\\n        @include mobile {\\n            border-top: 2px solid var(--general-section-1);\\n            display: flex;\\n            flex-direction: row;\\n            justify-content: flex-end;\\n            margin-top: auto;\\n            padding: 1.6rem;\\n        }\\n    }\\n\\n    &__layout {\\n        padding: unset;\\n    }\\n\\n    &-field {\\n        margin-bottom: 0 !important;\\n        flex: 1;\\n        height: fit-content;\\n\\n        .dc-input__container {\\n            width: 91%;\\n            padding: 0.5rem 1rem 0.5rem 1.2rem;\\n        }\\n\\n        &--disable {\\n            opacity: 0.32;\\n        }\\n\\n        &--textarea {\\n            border-top: 1px solid var(--general-section-5);\\n            margin-bottom: 3.5rem;\\n            padding: 1.8rem 2.4rem 0;\\n\\n            .dc-input {\\n                &__container {\\n                    height: 9.7rem;\\n                }\\n                &__field {\\n                    height: 100% !important;\\n                }\\n            }\\n        }\\n\\n        &-wrapper {\\n            $gap: 2.4rem;\\n            display: flex;\\n            margin: -#{$gap} 0 1.6rem -#{$gap};\\n            padding: 0 2.4rem;\\n            word-break: break-word;\\n\\n            & > * {\\n                margin: $gap 0 0 $gap;\\n            }\\n\\n            @include mobile {\\n                flex-direction: column;\\n\\n                .dc-input__wrapper {\\n                    margin-top: 2.5rem;\\n                    width: 90vw;\\n                }\\n            }\\n\\n            > .dc-input {\\n                margin-top: 1rem; // Compensate for label.\\n            }\\n        }\\n    }\\n\\n    &__form {\\n        height: fit-content !important;\\n    }\\n\\n    &-hintbox {\\n        margin: -0.5rem 0 2.4rem;\\n        padding: 0 2.4rem;\\n\\n        .dc-hint-box {\\n            &__icon {\\n                align-self: flex-start;\\n            }\\n        }\\n    }\\n\\n    &__icon {\\n        margin-right: 0.8rem;\\n    }\\n\\n    &-line {\\n        border-top: 1px solid var(--general-section-5);\\n        margin: 1.6rem 0;\\n        width: 100%;\\n    }\\n\\n    &-payment-method {\\n        padding: 0 2.4rem;\\n        &--container {\\n            align-self: center;\\n            display: flex;\\n            flex-direction: column;\\n            margin-bottom: 1.6rem;\\n            padding: 0 2.4rem;\\n        }\\n\\n        &--icon {\\n            border-radius: 2px;\\n            margin-right: 0.8rem;\\n        }\\n\\n        &--row {\\n            align-items: center;\\n            display: flex;\\n            flex-direction: row;\\n            margin-bottom: 0.8rem;\\n        }\\n\\n        &--title {\\n            margin-bottom: 0.8rem;\\n        }\\n    }\\n\\n    &--danger {\\n        margin-bottom: 1.6rem;\\n        width: fit-content;\\n        align-items: flex-start;\\n    }\\n\\n    &--input {\\n        display: flex;\\n        gap: 2rem;\\n        flex-direction: column;\\n        padding: 0 2.4rem 2rem;\\n        margin-bottom: 2rem;\\n        .dc-input__wrapper {\\n            margin-right: 0.2rem;\\n            margin-bottom: unset;\\n        }\\n\\n        &-field {\\n            @include desktop {\\n                display: flex;\\n            }\\n        }\\n        @include mobile {\\n            .dc-input {\\n                &__container {\\n                    width: 100%;\\n                    padding: 0.5rem 1rem 0.5rem 1.2rem;\\n                }\\n                &__wrapper {\\n                    margin: 0.8rem 0.2rem 1.4rem 0;\\n                }\\n            }\\n        }\\n    }\\n\\n    &--sell-payment-methods {\\n        display: flex;\\n        flex-wrap: wrap;\\n        gap: 0.8rem;\\n        margin: 1.6rem 0 2.4rem;\\n\\n        .payment-method-card {\\n            margin: unset;\\n\\n            @include mobile {\\n                min-height: 8.8rem;\\n                min-width: unset;\\n                width: 13.6rem;\\n            }\\n\\n            &--add {\\n                margin: unset;\\n\\n                @include mobile {\\n                    min-height: 8.8rem;\\n                    width: 13.6rem;\\n                }\\n            }\\n            &__body {\\n                margin-top: 0.8rem;\\n\\n                @include mobile {\\n                    margin-top: 0;\\n                }\\n            }\\n        }\\n\\n        &--disable {\\n            opacity: 0.32;\\n        }\\n    }\\n\\n    &--error-message {\\n        padding: 0 2.4rem;\\n    }\\n}\\n\\n.buy-sell-modal__content {\\n    .dc-input {\\n        margin-bottom: unset;\\n    }\\n}\\n.dc-modal__container_buy-sell-modal {\\n    .dc-modal-header--buy-sell-modal {\\n        border-bottom: 2px solid var(--general-section-5);\\n    }\\n\\n    .dc-modal-footer--separator {\\n        margin-top: 1rem;\\n        border-top: 2px solid var(--general-section-5);\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@media(min-width: 320px)and (max-width: 767px){.buy-sell-form-receive-amount{border-top:1px solid var(--general-section-2);padding:.8rem 1.6rem;background-color:var(--general-main-1)}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/buy-sell/buy-sell-form-receive-amount.scss\"],\"names\":[],\"mappings\":\"AAymBI,+CAyBJ,8BAEQ,6CAAA,CACA,oBAAA,CACA,sCAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n.buy-sell-form-receive-amount {\\n    @include mobile {\\n        border-top: 1px solid var(--general-section-2);\\n        padding: 0.8rem 1.6rem;\\n        background-color: var(--general-main-1);\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".buy-sell-form{opacity:1 !important}@media(min-width: 320px)and (max-width: 767px){.buy-sell-form .dc-mobile-full-page-modal__header--border-bottom{border-bottom:2px solid var(--general-section-1)}}.buy-sell-form__content .dc-input{margin-bottom:0;margin-bottom:initial}.buy-sell-form__field{margin-bottom:0 !important}.buy-sell-form__field{flex:1}.buy-sell-form__field .dc-input__container{width:91%;padding:.5rem 1rem .5rem 1.2rem}.buy-sell-form__field--disable{opacity:.32}.buy-sell-form__field--textarea{border-top:1px solid var(--general-section-5);margin-bottom:3.5rem;padding:1.8rem 2.4rem 0}.buy-sell-form__field--textarea .dc-input__container{height:9.7rem}.buy-sell-form__field--textarea .dc-input__field{padding-top:1rem;padding-bottom:1rem}.buy-sell-form__field-wrapper{display:flex;margin:-2.4rem 0 1.6rem -2.4rem;padding:0 2.4rem;word-break:break-word}.buy-sell-form__field-wrapper>*{margin:2.4rem 0 0 2.4rem}@media(min-width: 320px)and (max-width: 767px){.buy-sell-form__field-wrapper{flex-direction:column}.buy-sell-form__field-wrapper .dc-input__wrapper{margin-top:2.5rem;width:90vw}}.buy-sell-form__field-wrapper>.dc-input{margin-top:1rem}.buy-sell-form-body{position:relative;display:block;padding-top:2.4rem}@media(min-width: 320px)and (max-width: 767px){.buy-sell-form-body>form{height:-moz-fit-content !important;height:fit-content !important}}.buy-sell-form-danger{margin-bottom:1.6rem;width:-moz-fit-content;width:fit-content;align-items:flex-start}.buy-sell-form-form{height:-moz-fit-content !important;height:fit-content !important}@media(min-width: 320px)and (max-width: 767px){.buy-sell-form-footer{border-top:2px solid var(--general-section-1);display:flex;flex-direction:row;justify-content:flex-end;margin-top:auto;padding:1.6rem}}.buy-sell-form--input{display:flex;gap:2rem;flex-direction:column;padding:0 2.4rem 2rem;margin-bottom:2rem}.buy-sell-form--input .dc-input__wrapper{margin-right:.2rem;margin-bottom:0;margin-bottom:initial}@media(min-width: 1024px){.buy-sell-form--input-field{display:flex}}@media(min-width: 320px)and (max-width: 767px){.buy-sell-form--input .dc-input__container{width:100%;padding:.5rem 1rem .5rem 1.2rem}.buy-sell-form--input .dc-input__wrapper{margin:.8rem .2rem 1.4rem 0}}.buy-sell-form-hintbox{margin:-0.5rem 0 2.4rem;padding:0 2.4rem}.buy-sell-form-hintbox .dc-hint-box__icon{align-self:flex-start}.buy-sell-form-icon{margin-right:.8rem}.buy-sell-form-line{border-top:1px solid var(--general-section-5);margin:1.6rem 0;width:100%}.buy-sell-form-payment-method{padding:0 2.4rem}.buy-sell-form-payment-method--container{align-self:center;display:flex;flex-direction:column;margin-bottom:1.6rem;padding:0 2.4rem}.buy-sell-form-payment-method--icon{border-radius:2px;margin-right:.8rem}.buy-sell-form-payment-method--row{align-items:center;display:flex;flex-direction:row;margin-bottom:.8rem}.buy-sell-form-payment-method--title{margin-bottom:.8rem}@media(min-width: 320px)and (max-width: 767px){.buy-sell-form-receive-amount{border-top:1px solid var(--general-section-2);padding:.8rem 1.6rem;background-color:var(--general-main-1)}}.buy-sell-form--sell-payment-methods{display:flex;flex-wrap:wrap;gap:.8rem;margin:1.6rem 0 2.4rem}.buy-sell-form--sell-payment-methods .payment-method-card{margin:0;margin:initial}@media(min-width: 320px)and (max-width: 767px){.buy-sell-form--sell-payment-methods .payment-method-card{min-height:8.8rem;min-width:0;min-width:initial;width:13.6rem}}.buy-sell-form--sell-payment-methods .payment-method-card--add{margin:0;margin:initial}@media(min-width: 320px)and (max-width: 767px){.buy-sell-form--sell-payment-methods .payment-method-card--add{min-height:8.8rem;width:13.6rem}}.buy-sell-form--sell-payment-methods .payment-method-card__body{margin-top:.8rem}@media(min-width: 320px)and (max-width: 767px){.buy-sell-form--sell-payment-methods .payment-method-card__body{margin-top:0}}.buy-sell-form--sell-payment-methods--disable{opacity:.32}.buy-sell-form--layout{padding:0;padding:initial}.buy-sell-form--error-message{padding:0 2.4rem}.dc-modal__container_buy-sell-form .dc-modal-header--buy-sell-form{border-bottom:2px solid var(--general-section-5)}.dc-modal__container_buy-sell-form .dc-modal-footer--separator{margin-top:1rem;border-top:2px solid var(--general-section-5)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/buy-sell/buy-sell-form.scss\"],\"names\":[],\"mappings\":\"AAkoBA,eACI,oBAAA,CA1BA,+CA6BI,iEACI,gDAAA,CAAA,CAKJ,kCACI,eAAA,CAAA,qBAAA,CAIR,sBACI,0BACA,CAFJ,sBAEI,MAAA,CAEA,2CACI,SAAA,CACA,+BAAA,CAGJ,+BACI,WAAA,CAGJ,gCACI,6CAAA,CACA,oBAAA,CACA,uBAAA,CAGI,qDACI,aAAA,CAGJ,iDACI,gBAAA,CAAA,mBAAA,CAKZ,8BAEI,YAAA,CACA,+BAAA,CACA,gBAAA,CACA,qBAAA,CAEA,gCACI,wBAAA,CA7EZ,+CAqEI,8BAYQ,qBAAA,CAEA,iDACI,iBAAA,CACA,UAAA,CAAA,CAIR,wCACI,eAAA,CAKZ,oBACI,iBAAA,CACA,aAAA,CACA,kBAAA,CAlGJ,+CAqGQ,yBACI,kCAAA,CAAA,6BAAA,CAAA,CAKZ,sBACI,oBAAA,CACA,sBAAA,CAAA,iBAAA,CACA,sBAAA,CAGJ,oBACI,kCAAA,CAAA,6BAAA,CAlHJ,+CAqHA,sBAEQ,6CAAA,CACA,YAAA,CACA,kBAAA,CACA,wBAAA,CACA,eAAA,CACA,cAAA,CAAA,CAIR,sBACI,YAAA,CACA,QAAA,CACA,qBAAA,CACA,qBAAA,CACA,kBAAA,CACA,yCACI,kBAAA,CACA,eAAA,CAAA,qBAAA,CAhKR,0BAmKI,4BAEQ,YAAA,CAAA,CA7IZ,+CAkJY,2CACI,UAAA,CACA,+BAAA,CAEJ,yCACI,2BAAA,CAAA,CAMhB,uBACI,uBAAA,CACA,gBAAA,CAGI,0CACI,qBAAA,CAKZ,oBACI,kBAAA,CAGJ,oBACI,6CAAA,CACA,eAAA,CACA,UAAA,CAGJ,8BACI,gBAAA,CACA,yCACI,iBAAA,CACA,YAAA,CACA,qBAAA,CACA,oBAAA,CACA,gBAAA,CAGJ,oCACI,iBAAA,CACA,kBAAA,CAGJ,mCACI,kBAAA,CACA,YAAA,CACA,kBAAA,CACA,mBAAA,CAGJ,qCACI,mBAAA,CAzMR,+CA6MA,8BAEQ,6CAAA,CACA,oBAAA,CACA,sCAAA,CAAA,CAIR,qCACI,YAAA,CACA,cAAA,CACA,SAAA,CACA,sBAAA,CAEA,0DACI,QAAA,CAAA,cAAA,CA5NR,+CA2NI,0DAIQ,iBAAA,CACA,WAAA,CAAA,iBAAA,CACA,aAAA,CAAA,CAGJ,+DACI,QAAA,CAAA,cAAA,CArOZ,+CAoOQ,+DAIQ,iBAAA,CACA,aAAA,CAAA,CAGR,gEACI,gBAAA,CA7OZ,+CA4OQ,gEAIQ,YAAA,CAAA,CAKZ,8CACI,WAAA,CAIR,uBACI,SAAA,CAAA,eAAA,CAGJ,8BACI,gBAAA,CAKJ,mEACI,gDAAA,CAGJ,+DACI,eAAA,CACA,6CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n.buy-sell-form {\\n    opacity: 1 !important;\\n\\n    @include mobile {\\n        .dc-mobile-full-page-modal__header--border-bottom {\\n            border-bottom: 2px solid var(--general-section-1);\\n        }\\n    }\\n\\n    &__content {\\n        .dc-input {\\n            margin-bottom: unset;\\n        }\\n    }\\n\\n    &__field {\\n        margin-bottom: 0 !important;\\n        flex: 1;\\n\\n        .dc-input__container {\\n            width: 91%;\\n            padding: 0.5rem 1rem 0.5rem 1.2rem;\\n        }\\n\\n        &--disable {\\n            opacity: 0.32;\\n        }\\n\\n        &--textarea {\\n            border-top: 1px solid var(--general-section-5);\\n            margin-bottom: 3.5rem;\\n            padding: 1.8rem 2.4rem 0;\\n\\n            .dc-input {\\n                &__container {\\n                    height: 9.7rem;\\n                }\\n\\n                &__field {\\n                    padding-block: 1rem;\\n                }\\n            }\\n        }\\n\\n        &-wrapper {\\n            $gap: 2.4rem;\\n            display: flex;\\n            margin: -#{$gap} 0 1.6rem -#{$gap};\\n            padding: 0 2.4rem;\\n            word-break: break-word;\\n\\n            & > * {\\n                margin: $gap 0 0 $gap;\\n            }\\n\\n            @include mobile {\\n                flex-direction: column;\\n\\n                .dc-input__wrapper {\\n                    margin-top: 2.5rem;\\n                    width: 90vw;\\n                }\\n            }\\n\\n            > .dc-input {\\n                margin-top: 1rem; // Compensate for label.\\n            }\\n        }\\n    }\\n\\n    &-body {\\n        position: relative;\\n        display: block;\\n        padding-top: 2.4rem;\\n\\n        @include mobile {\\n            & > form {\\n                height: fit-content !important;\\n            }\\n        }\\n    }\\n\\n    &-danger {\\n        margin-bottom: 1.6rem;\\n        width: fit-content;\\n        align-items: flex-start;\\n    }\\n\\n    &-form {\\n        height: fit-content !important;\\n    }\\n\\n    &-footer {\\n        @include mobile {\\n            border-top: 2px solid var(--general-section-1);\\n            display: flex;\\n            flex-direction: row;\\n            justify-content: flex-end;\\n            margin-top: auto;\\n            padding: 1.6rem;\\n        }\\n    }\\n\\n    &--input {\\n        display: flex;\\n        gap: 2rem;\\n        flex-direction: column;\\n        padding: 0 2.4rem 2rem;\\n        margin-bottom: 2rem;\\n        .dc-input__wrapper {\\n            margin-right: 0.2rem;\\n            margin-bottom: unset;\\n        }\\n\\n        &-field {\\n            @include desktop {\\n                display: flex;\\n            }\\n        }\\n        @include mobile {\\n            .dc-input {\\n                &__container {\\n                    width: 100%;\\n                    padding: 0.5rem 1rem 0.5rem 1.2rem;\\n                }\\n                &__wrapper {\\n                    margin: 0.8rem 0.2rem 1.4rem 0;\\n                }\\n            }\\n        }\\n    }\\n\\n    &-hintbox {\\n        margin: -0.5rem 0 2.4rem;\\n        padding: 0 2.4rem;\\n\\n        .dc-hint-box {\\n            &__icon {\\n                align-self: flex-start;\\n            }\\n        }\\n    }\\n\\n    &-icon {\\n        margin-right: 0.8rem;\\n    }\\n\\n    &-line {\\n        border-top: 1px solid var(--general-section-5);\\n        margin: 1.6rem 0;\\n        width: 100%;\\n    }\\n\\n    &-payment-method {\\n        padding: 0 2.4rem;\\n        &--container {\\n            align-self: center;\\n            display: flex;\\n            flex-direction: column;\\n            margin-bottom: 1.6rem;\\n            padding: 0 2.4rem;\\n        }\\n\\n        &--icon {\\n            border-radius: 2px;\\n            margin-right: 0.8rem;\\n        }\\n\\n        &--row {\\n            align-items: center;\\n            display: flex;\\n            flex-direction: row;\\n            margin-bottom: 0.8rem;\\n        }\\n\\n        &--title {\\n            margin-bottom: 0.8rem;\\n        }\\n    }\\n\\n    &-receive-amount {\\n        @include mobile {\\n            border-top: 1px solid var(--general-section-2);\\n            padding: 0.8rem 1.6rem;\\n            background-color: var(--general-main-1);\\n        }\\n    }\\n\\n    &--sell-payment-methods {\\n        display: flex;\\n        flex-wrap: wrap;\\n        gap: 0.8rem;\\n        margin: 1.6rem 0 2.4rem;\\n\\n        .payment-method-card {\\n            margin: unset;\\n\\n            @include mobile {\\n                min-height: 8.8rem;\\n                min-width: unset;\\n                width: 13.6rem;\\n            }\\n\\n            &--add {\\n                margin: unset;\\n\\n                @include mobile {\\n                    min-height: 8.8rem;\\n                    width: 13.6rem;\\n                }\\n            }\\n            &__body {\\n                margin-top: 0.8rem;\\n\\n                @include mobile {\\n                    margin-top: 0;\\n                }\\n            }\\n        }\\n\\n        &--disable {\\n            opacity: 0.32;\\n        }\\n    }\\n\\n    &--layout {\\n        padding: unset;\\n    }\\n\\n    &--error-message {\\n        padding: 0 2.4rem;\\n    }\\n}\\n\\n.dc-modal__container_buy-sell-form {\\n    .dc-modal-header--buy-sell-form {\\n        border-bottom: 2px solid var(--general-section-5);\\n    }\\n\\n    .dc-modal-footer--separator {\\n        margin-top: 1rem;\\n        border-top: 2px solid var(--general-section-5);\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./buy-sell-modal.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./buy-sell-form-receive-amount.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./buy-sell-form.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { getFormattedText } from '@deriv/shared';\nimport { Localize } from 'Components/i18next';\nimport { roundOffDecimal } from 'Utils/format-value';\nimport { useStores } from 'Stores';\nimport './buy-sell-form-receive-amount.scss';\n\nconst BuySellFormReceiveAmount = () => {\n    const { buy_sell_store } = useStores();\n\n    return (\n        <div className='buy-sell-form-receive-amount'>\n            <Text as='p' color='less-prominent' size='xxs'>\n                {buy_sell_store?.is_sell_advert ? (\n                    <Localize i18n_default_text=\"You'll receive\" />\n                ) : (\n                    <Localize i18n_default_text=\"You'll send\" />\n                )}\n            </Text>\n            <Text as='p' size='xs' weight='bold'>\n                {getFormattedText(\n                    roundOffDecimal(buy_sell_store?.receive_amount),\n                    buy_sell_store?.advert?.local_currency\n                )}\n            </Text>\n        </div>\n    );\n};\n\nexport default BuySellFormReceiveAmount;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { Formik, Field, Form } from 'formik';\nimport { HintBox, Input, Text } from '@deriv/components';\nimport { useP2PAdvertiserPaymentMethods, useExchangeRate } from '@deriv/hooks';\nimport { getDecimalPlaces, isDesktop, isMobile, useIsMounted } from '@deriv/shared';\nimport { reaction } from 'mobx';\nimport { observer, Observer } from 'mobx-react-lite';\nimport { localize, Localize } from 'Components/i18next';\nimport { ad_type } from 'Constants/floating-rate';\nimport { useStores } from 'Stores';\nimport BuySellFormReceiveAmount from './buy-sell-form-receive-amount.jsx';\nimport PaymentMethodCard from 'Pages/my-profile/payment-methods/payment-method-card/payment-method-card.jsx';\nimport { floatingPointValidator } from 'Utils/validations';\nimport { countDecimalPlaces } from 'Utils/string';\nimport { generateEffectiveRate, setDecimalPlaces, roundOffDecimal, removeTrailingZeros } from 'Utils/format-value';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\nimport PaymentMethodIcon from 'Components/payment-method-icon';\nimport './buy-sell-form.scss';\n\nconst BuySellForm = props => {\n    const isMounted = useIsMounted();\n    const { advertiser_page_store, buy_sell_store, general_store, my_profile_store } = useStores();\n    const [selected_methods, setSelectedMethods] = React.useState([]);\n    buy_sell_store.setFormProps(props);\n    const { showModal } = useModalManagerContext();\n    const { data: p2p_advertiser_payment_methods } = useP2PAdvertiserPaymentMethods();\n\n    const { setPageFooterParent } = props;\n    const {\n        advertiser_details,\n        description,\n        effective_rate: market_rate,\n        local_currency,\n        max_order_amount_limit_display,\n        min_order_amount_limit,\n        min_order_amount_limit_display,\n        payment_method_names,\n        price,\n        rate,\n        rate_type,\n    } = buy_sell_store?.advert || {};\n\n    const { getRate } = useExchangeRate();\n    const exchange_rate = getRate(local_currency);\n\n    const [previous_rate, setPreviousRate] = React.useState(exchange_rate);\n    const [input_amount, setInputAmount] = React.useState(min_order_amount_limit);\n\n    const { advertiser_buy_limit, advertiser_sell_limit, balance } = general_store;\n\n    const should_disable_field =\n        !buy_sell_store.is_buy_advert && (parseFloat(balance) === 0 || parseFloat(balance) < min_order_amount_limit);\n\n    const style = {\n        borderColor: 'var(--brand-secondary)',\n        borderWidth: '2px',\n        cursor: should_disable_field ? 'not-allowed' : 'pointer',\n    };\n\n    const { effective_rate, display_effective_rate } = generateEffectiveRate({\n        price,\n        rate_type,\n        rate,\n        local_currency,\n        exchange_rate,\n        market_rate,\n    });\n\n    const calculated_rate = removeTrailingZeros(roundOffDecimal(effective_rate, setDecimalPlaces(effective_rate, 6)));\n\n    React.useEffect(\n        () => {\n            my_profile_store.setShouldShowAddPaymentMethodForm(false);\n            my_profile_store.setSelectedPaymentMethod('');\n            my_profile_store.setSelectedPaymentMethodDisplayName('');\n            buy_sell_store.setHasPaymentMethods(!!payment_method_names);\n\n            const disposeReceiveAmountReaction = reaction(\n                () => buy_sell_store.receive_amount,\n                () => {\n                    if (isMobile() && typeof setPageFooterParent === 'function') {\n                        setPageFooterParent(<BuySellFormReceiveAmount />);\n                    }\n                }\n            );\n\n            if (!my_profile_store.advertiser_has_payment_methods) {\n                my_profile_store.getPaymentMethodsList();\n            }\n\n            advertiser_page_store.setFormErrorMessage('');\n            buy_sell_store.setInitialReceiveAmount(calculated_rate);\n\n            return () => {\n                buy_sell_store.payment_method_ids = [];\n                disposeReceiveAmountReaction();\n            };\n        },\n        [] // eslint-disable-line react-hooks/exhaustive-deps\n    );\n\n    React.useEffect(() => {\n        const receive_amount = input_amount * calculated_rate;\n        buy_sell_store.setReceiveAmount(receive_amount);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [input_amount, effective_rate]);\n\n    React.useEffect(() => {\n        if (exchange_rate !== previous_rate && rate_type === ad_type.FLOAT) {\n            setPreviousRate(exchange_rate);\n            showModal({\n                key: 'RateChangeModal',\n                props: {\n                    currency: buy_sell_store.local_currency,\n                },\n            });\n        }\n    }, [exchange_rate, previous_rate]);\n\n    const onClickPaymentMethodCard = payment_method => {\n        if (!should_disable_field) {\n            if (!buy_sell_store.payment_method_ids.includes(payment_method.id)) {\n                if (buy_sell_store.payment_method_ids.length < 3) {\n                    buy_sell_store.payment_method_ids.push(payment_method.id);\n                    setSelectedMethods([...selected_methods, payment_method.id]);\n                }\n            } else {\n                buy_sell_store.payment_method_ids = buy_sell_store.payment_method_ids.filter(\n                    payment_method_id => payment_method_id !== payment_method.id\n                );\n                setSelectedMethods(selected_methods.filter(i => i !== payment_method.id));\n            }\n        }\n    };\n\n    const getAdvertiserMaxLimit = () => {\n        if (buy_sell_store.is_buy_advert) {\n            if (advertiser_buy_limit < max_order_amount_limit_display) return roundOffDecimal(advertiser_buy_limit);\n        } else if (advertiser_sell_limit < max_order_amount_limit_display)\n            return roundOffDecimal(advertiser_sell_limit);\n        return max_order_amount_limit_display;\n    };\n\n    return (\n        <React.Fragment>\n            {rate_type === ad_type.FLOAT && !should_disable_field && (\n                <div className='buy-sell-form-hintbox'>\n                    <HintBox\n                        icon='IcAlertInfo'\n                        message={\n                            <Text as='p' size='xxxs' color='prominent' line_height='xs'>\n                                <Localize i18n_default_text=\"If the market rate changes from the rate shown here, we won't be able to process your order.\" />\n                            </Text>\n                        }\n                        is_info\n                    />\n                </div>\n            )}\n            <Formik\n                enableReinitialize\n                validate={buy_sell_store.validatePopup}\n                validateOnMount={!should_disable_field}\n                initialValues={{\n                    amount: min_order_amount_limit,\n                    contact_info: general_store.contact_info,\n                    payment_info: general_store.payment_info,\n                    rate: rate_type === ad_type.FLOAT ? effective_rate : null,\n                }}\n                initialErrors={buy_sell_store.is_sell_advert ? { contact_info: true } : {}}\n                onSubmit={(...args) => buy_sell_store.handleSubmit(() => isMounted(), ...args)}\n            >\n                {({ errors, isSubmitting, isValid, validateForm, setFieldValue, submitForm, touched }) => {\n                    buy_sell_store.form_props.setIsSubmitDisabled(\n                        !isValid ||\n                            isSubmitting ||\n                            (buy_sell_store.is_sell_advert && payment_method_names && selected_methods.length < 1)\n                    );\n                    buy_sell_store.form_props.setSubmitForm(submitForm);\n\n                    return (\n                        <Form noValidate>\n                            <div className='buy-sell-form__content'>\n                                <div className='buy-sell-form__field-wrapper'>\n                                    <div className='buy-sell-form__field'>\n                                        <Text as='p' color='less-prominent' size='xxs'>\n                                            {buy_sell_store.is_buy_advert ? (\n                                                <Localize i18n_default_text='Seller' />\n                                            ) : (\n                                                <Localize i18n_default_text='Buyer' />\n                                            )}\n                                        </Text>\n                                        <Text as='p' size='xs'>\n                                            {advertiser_details.name}\n                                        </Text>\n                                    </div>\n                                    <div className='buy-sell-form__field'>\n                                        <Text as='p' color='less-prominent' size='xxs'>\n                                            <Localize\n                                                i18n_default_text='Rate (1 {{ currency }})'\n                                                values={{ currency: buy_sell_store.account_currency }}\n                                            />\n                                        </Text>\n                                        <Text as='p' size='xs'>\n                                            {display_effective_rate} {local_currency}\n                                        </Text>\n                                    </div>\n                                </div>\n                                <div className='buy-sell-form-payment-method--container'>\n                                    {payment_method_names && (\n                                        <Text\n                                            as='p'\n                                            className='buy-sell-form-payment-method--title'\n                                            color='less-prominent'\n                                            size='xxs'\n                                        >\n                                            <Localize i18n_default_text='Payment methods' />\n                                        </Text>\n                                    )}\n                                    {payment_method_names &&\n                                        payment_method_names.map((payment_method, key) => (\n                                            <div className='buy-sell-form-payment-method--row' key={key}>\n                                                <PaymentMethodIcon\n                                                    className='buy-sell-form-payment-method--icon'\n                                                    display_name={payment_method}\n                                                />\n                                                <Text as='p' size='xs'>\n                                                    {payment_method}\n                                                </Text>\n                                            </div>\n                                        ))}\n                                </div>\n                                <div className='buy-sell-form__field-wrapper'>\n                                    <div className='buy-sell-form__field'>\n                                        <Text as='p' color='less-prominent' size='xxs'>\n                                            {buy_sell_store.is_buy_advert ? (\n                                                <Localize i18n_default_text=\"Seller's instructions\" />\n                                            ) : (\n                                                <Localize i18n_default_text=\"Buyer's instructions\" />\n                                            )}\n                                        </Text>\n                                        {description\n                                            .trim()\n                                            .replace(/([\\r\\n]){2,}/g, '\\n\\n')\n                                            .split('\\n')\n                                            .map((text, idx) => (\n                                                <Text key={idx} as='p' size='xs'>\n                                                    {text || '-'}\n                                                </Text>\n                                            ))}\n                                    </div>\n                                </div>\n                                <div className='buy-sell-form-line' />\n                                {buy_sell_store.is_sell_advert && payment_method_names && (\n                                    <React.Fragment>\n                                        <div className='buy-sell-form-payment-method'>\n                                            <Text\n                                                as='p'\n                                                className='buy-sell-form-payment-method--title'\n                                                color='less-prominent'\n                                                size='xxs'\n                                            >\n                                                <Localize i18n_default_text='Receive payment to' />\n                                            </Text>\n                                            <Text as='p' color='prominent' size='xxs'>\n                                                {my_profile_store.advertiser_has_payment_methods ? (\n                                                    <Localize i18n_default_text='You may choose up to 3.' />\n                                                ) : (\n                                                    <Localize i18n_default_text='To place an order, add one of the advertiser’s preferred payment methods:' />\n                                                )}\n                                            </Text>\n                                            <Observer>\n                                                {() => (\n                                                    <div\n                                                        className={classNames('buy-sell-form--sell-payment-methods', {\n                                                            'buy-sell-form--sell-payment-methods--disable':\n                                                                should_disable_field,\n                                                        })}\n                                                    >\n                                                        {payment_method_names\n                                                            ?.map((add_payment_method, key) => {\n                                                                const {\n                                                                    setSelectedPaymentMethodDisplayName,\n                                                                    setShouldShowAddPaymentMethodForm,\n                                                                } = my_profile_store;\n                                                                const matching_payment_methods =\n                                                                    p2p_advertiser_payment_methods?.filter(\n                                                                        advertiser_payment_method =>\n                                                                            advertiser_payment_method.display_name ===\n                                                                            add_payment_method\n                                                                    );\n\n                                                                return matching_payment_methods?.length > 0 ? (\n                                                                    matching_payment_methods.map(payment_method => (\n                                                                        <PaymentMethodCard\n                                                                            is_vertical_ellipsis_visible={false}\n                                                                            key={key}\n                                                                            medium\n                                                                            onClick={async () => {\n                                                                                onClickPaymentMethodCard(\n                                                                                    payment_method\n                                                                                );\n                                                                                await validateForm();\n                                                                            }}\n                                                                            payment_method={payment_method}\n                                                                            style={\n                                                                                selected_methods.includes(\n                                                                                    payment_method.id\n                                                                                )\n                                                                                    ? style\n                                                                                    : {}\n                                                                            }\n                                                                            disabled={should_disable_field}\n                                                                        />\n                                                                    ))\n                                                                ) : (\n                                                                    <PaymentMethodCard\n                                                                        add_payment_method={add_payment_method}\n                                                                        is_add\n                                                                        key={key}\n                                                                        medium\n                                                                        onClickAdd={() => {\n                                                                            if (!should_disable_field) {\n                                                                                setSelectedPaymentMethodDisplayName(\n                                                                                    add_payment_method\n                                                                                );\n                                                                                setShouldShowAddPaymentMethodForm(true);\n                                                                            }\n                                                                        }}\n                                                                        disabled={should_disable_field}\n                                                                        style={{\n                                                                            cursor: should_disable_field\n                                                                                ? 'not-allowed'\n                                                                                : 'pointer',\n                                                                        }}\n                                                                    />\n                                                                );\n                                                            })\n                                                            .sort(payment_method_card_node =>\n                                                                Array.isArray(payment_method_card_node) &&\n                                                                !payment_method_card_node[0].props?.is_add\n                                                                    ? -1\n                                                                    : 1\n                                                            )}\n                                                    </div>\n                                                )}\n                                            </Observer>\n                                        </div>\n                                        <div className='buy-sell-form-line' />\n                                    </React.Fragment>\n                                )}\n                                <div className='buy-sell-form--input'>\n                                    <Text color='less-prominent' size='xxs'>\n                                        {localize('Enter {{transaction_type}} amount', {\n                                            transaction_type: buy_sell_store.is_buy_advert ? 'buy' : 'sell',\n                                        })}\n                                    </Text>\n                                    <section className='buy-sell-form--input-field'>\n                                        <Field name='amount'>\n                                            {({ field }) => (\n                                                <Input\n                                                    {...field}\n                                                    data-lpignore='true'\n                                                    type='number'\n                                                    error={errors.amount}\n                                                    label={localize('{{ad_type}}', {\n                                                        ad_type: buy_sell_store.is_buy_advert\n                                                            ? 'Buy amount'\n                                                            : 'Sell amount',\n                                                    })}\n                                                    hint={\n                                                        <Localize\n                                                            i18n_default_text='Limit: {{min}}–{{max}} {{currency}}'\n                                                            values={{\n                                                                min: min_order_amount_limit_display,\n                                                                max: getAdvertiserMaxLimit(),\n                                                                currency: buy_sell_store.account_currency,\n                                                            }}\n                                                        />\n                                                    }\n                                                    is_relative_hint\n                                                    className='buy-sell-form__field'\n                                                    trailing_icon={\n                                                        <Text color='less-prominent' size='xs'>\n                                                            {buy_sell_store.account_currency}\n                                                        </Text>\n                                                    }\n                                                    onKeyDown={event => {\n                                                        if (!floatingPointValidator(event.key)) {\n                                                            event.preventDefault();\n                                                        }\n                                                    }}\n                                                    onChange={event => {\n                                                        const { value } = event.target;\n\n                                                        if (\n                                                            countDecimalPlaces(value) >\n                                                            getDecimalPlaces(buy_sell_store.account_currency)\n                                                        ) {\n                                                            setFieldValue('amount', parseFloat(input_amount));\n                                                        } else {\n                                                            setFieldValue('amount', parseFloat(value));\n                                                            setInputAmount(value);\n                                                        }\n                                                    }}\n                                                    required\n                                                    value={input_amount}\n                                                    disabled={should_disable_field}\n                                                />\n                                            )}\n                                        </Field>\n                                        {isDesktop() && (\n                                            <div\n                                                className={classNames('buy-sell-form__field', {\n                                                    'buy-sell-form__field--disable': should_disable_field,\n                                                })}\n                                            >\n                                                <BuySellFormReceiveAmount />\n                                            </div>\n                                        )}\n                                    </section>\n                                </div>\n                                {buy_sell_store.is_sell_advert && (\n                                    <React.Fragment>\n                                        {!payment_method_names && (\n                                            <div className='buy-sell-form__field--textarea'>\n                                                <Field name='payment_info'>\n                                                    {({ field }) => (\n                                                        <Input\n                                                            {...field}\n                                                            data-lpignore='true'\n                                                            type='textarea'\n                                                            error={touched.payment_info && errors.payment_info}\n                                                            hint={localize(\n                                                                'Bank name, account number, beneficiary name'\n                                                            )}\n                                                            is_relative_hint\n                                                            label={localize('Your bank details')}\n                                                            required\n                                                            has_character_counter\n                                                            initial_character_count={general_store.payment_info.length}\n                                                            max_characters={300}\n                                                            disabled={should_disable_field}\n                                                        />\n                                                    )}\n                                                </Field>\n                                            </div>\n                                        )}\n                                        <div className='buy-sell-form__field--textarea'>\n                                            <Field name='contact_info'>\n                                                {({ field }) => (\n                                                    <Input\n                                                        {...field}\n                                                        data-lpignore='true'\n                                                        type='textarea'\n                                                        error={touched.contact_info && errors.contact_info}\n                                                        label={localize('Your contact details')}\n                                                        required\n                                                        has_character_counter\n                                                        initial_character_count={general_store.contact_info.length}\n                                                        max_characters={300}\n                                                        disabled={should_disable_field}\n                                                    />\n                                                )}\n                                            </Field>\n                                        </div>\n                                    </React.Fragment>\n                                )}\n                            </div>\n                        </Form>\n                    );\n                }}\n            </Formik>\n        </React.Fragment>\n    );\n};\n\nBuySellForm.propTypes = {\n    advert: PropTypes.object,\n    contact_info: PropTypes.string,\n    form_props: PropTypes.object,\n    setIsSubmitDisabled: PropTypes.func,\n    setSubmitForm: PropTypes.func,\n    setPageFooterParent: PropTypes.func,\n    has_payment_info: PropTypes.bool,\n    is_buy_advert: PropTypes.bool,\n    is_sell_advert: PropTypes.bool,\n    payment_info: PropTypes.string,\n    receive_amount: PropTypes.number,\n    setFormProps: PropTypes.func,\n    setInitialReceiveAmount: PropTypes.func,\n    setReceiveAmount: PropTypes.func,\n    validatePopup: PropTypes.func,\n};\n\nexport default observer(BuySellForm);\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport {\n    Button,\n    DesktopWrapper,\n    HintBox,\n    Icon,\n    MobileFullPageModal,\n    MobileWrapper,\n    Modal,\n    Text,\n    ThemedScrollbars,\n    useSafeState,\n} from '@deriv/components';\nimport { isDesktop, routes } from '@deriv/shared';\nimport { observer } from 'mobx-react-lite';\nimport { reaction } from 'mobx';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { buy_sell } from 'Constants/buy-sell';\nimport { localize, Localize } from 'Components/i18next';\nimport { useStores } from 'Stores';\nimport BuySellForm from 'Pages/buy-sell/buy-sell-form.jsx';\nimport BuySellFormReceiveAmount from 'Pages/buy-sell/buy-sell-form-receive-amount.jsx';\nimport NicknameForm from 'Components/nickname-form';\nimport AddPaymentMethodForm from 'Pages/my-profile/payment-methods/add-payment-method/add-payment-method-form.jsx';\nimport { api_error_codes } from 'Constants/api-error-codes';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\n\nconst LowBalanceMessage = () => (\n    <div className='buy-sell-modal--error-message'>\n        <HintBox\n            className='buy-sell-modal--danger'\n            icon='IcAlertDanger'\n            message={\n                <Text as='p' size='xxxs' color='prominent' line_height='s'>\n                    <Localize i18n_default_text=\"Your Deriv P2P balance isn't enough. Please increase your balance before trying again.\" />\n                </Text>\n            }\n            is_danger\n        />\n    </div>\n);\n\nconst BuySellModalFooter = ({ onCancel, is_submit_disabled, onSubmit }) => {\n    const { my_profile_store } = useStores();\n    return (\n        <div\n            className={\n                my_profile_store.should_show_add_payment_method_form\n                    ? 'add-payment-method__footer'\n                    : 'buy-sell-modal__footer'\n            }\n        >\n            <Button.Group>\n                <Button secondary onClick={onCancel} large>\n                    {localize('Cancel')}\n                </Button>\n                <Button is_disabled={is_submit_disabled} primary large onClick={onSubmit}>\n                    {localize('Confirm')}\n                </Button>\n            </Button.Group>\n        </div>\n    );\n};\n\nBuySellModalFooter.propTypes = {\n    onCancel: PropTypes.func.isRequired,\n    is_submit_disabled: PropTypes.bool,\n    onSubmit: PropTypes.func.isRequired,\n};\n\nconst BuySellModalTitle = ({ table_type }) => {\n    const { general_store, buy_sell_store, my_profile_store } = useStores();\n    const { showModal } = useModalManagerContext();\n\n    const { account_currency } = buy_sell_store.selected_ad_state;\n\n    if (my_profile_store.should_show_add_payment_method_form) {\n        if (isDesktop()) {\n            return (\n                <React.Fragment>\n                    <Icon\n                        icon='IcArrowLeftBold'\n                        onClick={() => {\n                            if (general_store.is_form_modified) {\n                                showModal({\n                                    key: 'CancelAddPaymentMethodModal',\n                                });\n                            } else {\n                                my_profile_store.setShouldShowAddPaymentMethodForm(false);\n                            }\n                        }}\n                        className='buy-sell-modal__icon'\n                    />\n                    {localize('Add payment method')}\n                </React.Fragment>\n            );\n        }\n        return localize('Add payment method');\n    }\n    if (table_type === buy_sell.BUY) {\n        return localize('Buy {{ currency }}', { currency: account_currency });\n    }\n    return localize('Sell {{ currency }}', { currency: account_currency });\n};\n\nBuySellModalTitle.propTypes = {\n    table_type: PropTypes.string.isRequired,\n};\n\nconst BuySellModal = () => {\n    const { advertiser_page_store, buy_sell_store, general_store, my_profile_store, order_store } = useStores();\n    const submitForm = React.useRef(() => {});\n    const [error_message, setErrorMessage] = useSafeState(null);\n    const [is_submit_disabled, setIsSubmitDisabled] = useSafeState(true);\n    const [is_account_balance_low, setIsAccountBalanceLow] = React.useState(false);\n    const [has_rate_changed_recently, setHasRateChangedRecently] = React.useState(false);\n    const { hideModal, is_modal_open, showModal } = useModalManagerContext();\n    const history = useHistory();\n    const location = useLocation();\n\n    const table_type = buy_sell_store.show_advertiser_page\n        ? advertiser_page_store.counterparty_type\n        : buy_sell_store.table_type;\n\n    React.useEffect(() => {\n        const disposeHasRateChangedReaction = reaction(\n            () => buy_sell_store.advert,\n            (new_advert, previous_advert) => {\n                // check to see if the rate is initialized in the store for the first time (when unitialized it is undefined) AND\n                const rate_has_changed = previous_advert?.rate && previous_advert.rate !== new_advert.rate;\n                // check to see if user is not switching between different adverts, it should not trigger rate change modal\n                const is_the_same_advert = previous_advert?.id === new_advert.id;\n                if (rate_has_changed && is_the_same_advert) {\n                    setHasRateChangedRecently(true);\n                }\n            }\n        );\n\n        const disposeFormErrorCodeReaction = reaction(\n            () => buy_sell_store.form_error_code,\n            () => {\n                if (buy_sell_store.form_error_code === api_error_codes.ORDER_CREATE_FAIL_RATE_CHANGED) {\n                    if (isDesktop()) {\n                        setTimeout(() => showModal({ key: 'MarketRateChangeErrorModal' }), 280);\n                    } else {\n                        showModal({ key: 'MarketRateChangeErrorModal' });\n                    }\n                    buy_sell_store.setFormErrorCode('');\n                    setErrorMessage(null);\n                }\n            }\n        );\n\n        return () => {\n            disposeHasRateChangedReaction();\n            disposeFormErrorCodeReaction();\n        };\n    }, []);\n\n    const onSubmitWhenRateChanged = () => {\n        if (isDesktop()) {\n            setTimeout(\n                () => showModal({ key: 'MarketRateChangeErrorModal' }),\n                my_profile_store.MODAL_TRANSITION_DURATION\n            );\n        } else {\n            showModal({ key: 'MarketRateChangeErrorModal' });\n        }\n        setHasRateChangedRecently(false);\n    };\n\n    const BuySellFormError = () => {\n        if (!!error_message && buy_sell_store.form_error_code !== api_error_codes.ORDER_CREATE_FAIL_RATE_CHANGED) {\n            return (\n                <div className='buy-sell-modal--error-message'>\n                    <HintBox\n                        className='buy-sell-modal--danger'\n                        icon='IcAlertDanger'\n                        message={\n                            <Text as='p' size='xxxs' color='prominent' line_height='s'>\n                                {buy_sell_store.form_error_code === api_error_codes.ORDER_CREATE_FAIL_CLIENT_BALANCE ? (\n                                    <Localize i18n_default_text=\"Your Deriv P2P balance isn't enough. Please increase your balance before trying again.\" />\n                                ) : (\n                                    error_message\n                                )}\n                            </Text>\n                        }\n                        is_danger\n                    />\n                </div>\n            );\n        }\n        return null;\n    };\n\n    const onCancel = () => {\n        if (my_profile_store.should_show_add_payment_method_form) {\n            if (general_store.is_form_modified) {\n                showModal({\n                    key: 'CancelAddPaymentMethodModal',\n                });\n            } else {\n                my_profile_store.hideAddPaymentMethodForm();\n            }\n        } else {\n            hideModal();\n            buy_sell_store.fetchAdvertiserAdverts();\n            buy_sell_store.unsubscribeAdvertInfo();\n        }\n    };\n\n    const onConfirmClick = order_info => {\n        const current_query_params = new URLSearchParams(location.search);\n        current_query_params.append('order', order_info.id);\n        general_store.redirectTo('orders', { nav: { location: 'buy_sell' } });\n        history.replace({\n            pathname: routes.p2p_orders,\n            search: current_query_params.toString(),\n            hash: location.hash,\n        });\n        order_store.setOrderId(order_info.id);\n        hideModal();\n        buy_sell_store.fetchAdvertiserAdverts();\n        buy_sell_store.setShowAdvertiserPage(false);\n    };\n\n    const setSubmitForm = submitFormFn => (submitForm.current = submitFormFn);\n\n    const has_rate_changed =\n        (!!error_message && buy_sell_store.form_error_code === api_error_codes.ORDER_CREATE_FAIL_RATE_CHANGED) ||\n        has_rate_changed_recently;\n    const onSubmit = has_rate_changed ? onSubmitWhenRateChanged : submitForm.current;\n\n    React.useEffect(() => {\n        const balance_check =\n            parseFloat(general_store.balance) === 0 ||\n            parseFloat(general_store.balance) < buy_sell_store.advert?.min_order_amount_limit;\n\n        setIsAccountBalanceLow(balance_check);\n        if (!is_modal_open) {\n            setErrorMessage(null);\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [is_modal_open]);\n\n    const Form = general_store.nickname ? BuySellForm : NicknameForm;\n\n    return (\n        <React.Fragment>\n            <MobileWrapper>\n                <MobileFullPageModal\n                    body_className='buy-sell-modal__body'\n                    className='buy-sell-modal'\n                    height_offset='80px'\n                    is_flex\n                    is_modal_open={is_modal_open}\n                    page_header_className='buy-sell-modal__header'\n                    page_header_text={<BuySellModalTitle table_type={table_type} />}\n                    pageHeaderReturnFn={onCancel}\n                >\n                    {table_type === buy_sell.SELL && is_account_balance_low && <LowBalanceMessage />}\n                    {!!error_message && <BuySellFormError />}\n                    {my_profile_store.should_show_add_payment_method_form ? (\n                        <AddPaymentMethodForm should_show_separated_footer />\n                    ) : (\n                        <React.Fragment>\n                            <Form\n                                advert={buy_sell_store.selected_ad_state}\n                                handleClose={onCancel}\n                                handleConfirm={onConfirmClick}\n                                setIsSubmitDisabled={setIsSubmitDisabled}\n                                setErrorMessage={setErrorMessage}\n                                setSubmitForm={setSubmitForm}\n                            />\n                            <BuySellFormReceiveAmount\n                                is_sell_advert={buy_sell_store.is_sell_advert}\n                                local_currency={buy_sell_store?.advert && buy_sell_store.advert.local_currency}\n                                receive_amount={buy_sell_store.receive_amount}\n                            />\n                            <BuySellModalFooter\n                                is_submit_disabled={is_submit_disabled}\n                                onCancel={onCancel}\n                                onSubmit={onSubmit}\n                            />\n                        </React.Fragment>\n                    )}\n                </MobileFullPageModal>\n            </MobileWrapper>\n            <DesktopWrapper>\n                <Modal\n                    className={classNames('buy-sell-modal', {\n                        'buy-sell-modal__form': my_profile_store.should_show_add_payment_method_form,\n                    })}\n                    height={table_type === buy_sell.BUY ? 'auto' : '649px'}\n                    width='456px'\n                    is_open={is_modal_open}\n                    title={<BuySellModalTitle table_type={table_type} />}\n                    portalId='modal_root'\n                    toggleModal={onCancel}\n                >\n                    {/* Parent height - Modal.Header height - Modal.Footer height */}\n                    <ThemedScrollbars height={table_type === buy_sell.BUY ? '100%' : 'calc(100% - 5.8rem - 7.4rem)'}>\n                        <Modal.Body className='buy-sell-modal__layout'>\n                            {table_type === buy_sell.SELL && is_account_balance_low && <LowBalanceMessage />}\n                            <BuySellFormError />\n                            {my_profile_store.should_show_add_payment_method_form ? (\n                                <AddPaymentMethodForm should_show_separated_footer />\n                            ) : (\n                                <Form\n                                    advert={buy_sell_store.selected_ad_state}\n                                    handleClose={onCancel}\n                                    handleConfirm={onConfirmClick}\n                                    setIsSubmitDisabled={setIsSubmitDisabled}\n                                    setErrorMessage={setErrorMessage}\n                                    setSubmitForm={setSubmitForm}\n                                />\n                            )}\n                        </Modal.Body>\n                    </ThemedScrollbars>\n                    {!my_profile_store.should_show_add_payment_method_form && (\n                        <Modal.Footer has_separator>\n                            {my_profile_store.should_show_add_payment_method_form ? null : (\n                                <BuySellModalFooter\n                                    is_submit_disabled={is_submit_disabled}\n                                    onCancel={onCancel}\n                                    onSubmit={onSubmit}\n                                />\n                            )}\n                        </Modal.Footer>\n                    )}\n                </Modal>\n            </DesktopWrapper>\n        </React.Fragment>\n    );\n};\n\nexport default observer(BuySellModal);\n","import BuySellModal from './buy-sell-modal';\nimport './buy-sell-modal.scss';\n\nexport default BuySellModal;\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","api","content","__esModule","default","options","exports","locals","buy_sell_store","useStores","className","Text","as","color","size","is_sell_advert","i18n_default_text","weight","getFormattedText","roundOffDecimal","receive_amount","advert","local_currency","i","BuySellForm","props","isMounted","useIsMounted","advertiser_page_store","general_store","my_profile_store","React","selected_methods","setSelectedMethods","setFormProps","showModal","useModalManagerContext","p2p_advertiser_payment_methods","useP2PAdvertiserPaymentMethods","data","setPageFooterParent","advertiser_details","description","market_rate","effective_rate","max_order_amount_limit_display","min_order_amount_limit","min_order_amount_limit_display","payment_method_names","price","rate","rate_type","exchange_rate","getRate","useExchangeRate","previous_rate","setPreviousRate","input_amount","setInputAmount","advertiser_buy_limit","advertiser_sell_limit","balance","should_disable_field","is_buy_advert","parseFloat","style","borderColor","borderWidth","cursor","generateEffectiveRate","display_effective_rate","calculated_rate","removeTrailingZeros","setDecimalPlaces","setShouldShowAddPaymentMethodForm","setSelectedPaymentMethod","setSelectedPaymentMethodDisplayName","setHasPaymentMethods","disposeReceiveAmountReaction","reaction","isMobile","advertiser_has_payment_methods","getPaymentMethodsList","setFormErrorMessage","setInitialReceiveAmount","payment_method_ids","setReceiveAmount","ad_type","key","currency","onClickPaymentMethodCard","payment_method","includes","filter","payment_method_id","length","getAdvertiserMaxLimit","HintBox","icon","message","line_height","is_info","Formik","enableReinitialize","validate","validatePopup","validateOnMount","initialValues","amount","contact_info","payment_info","initialErrors","onSubmit","args","handleSubmit","errors","isSubmitting","isValid","validateForm","setFieldValue","submitForm","touched","form_props","setIsSubmitDisabled","setSubmitForm","Form","noValidate","name","values","account_currency","map","display_name","trim","replace","split","text","idx","classNames","add_payment_method","matching_payment_methods","advertiser_payment_method","is_vertical_ellipsis_visible","medium","onClick","disabled","is_add","onClickAdd","sort","payment_method_card_node","Array","isArray","localize","transaction_type","Field","field","Input","type","error","label","hint","min","max","is_relative_hint","trailing_icon","onKeyDown","event","floatingPointValidator","preventDefault","onChange","value","target","countDecimalPlaces","getDecimalPlaces","required","isDesktop","has_character_counter","initial_character_count","max_characters","propTypes","PropTypes","has_payment_info","observer","LowBalanceMessage","is_danger","BuySellModalFooter","onCancel","is_submit_disabled","should_show_add_payment_method_form","Button","secondary","large","is_disabled","primary","BuySellModalTitle","table_type","selected_ad_state","Icon","is_form_modified","buy_sell","order_store","useSafeState","error_message","setErrorMessage","is_account_balance_low","setIsAccountBalanceLow","has_rate_changed_recently","setHasRateChangedRecently","hideModal","is_modal_open","history","useHistory","location","useLocation","show_advertiser_page","counterparty_type","disposeHasRateChangedReaction","new_advert","previous_advert","rate_has_changed","is_the_same_advert","disposeFormErrorCodeReaction","form_error_code","api_error_codes","setTimeout","setFormErrorCode","BuySellFormError","hideAddPaymentMethodForm","fetchAdvertiserAdverts","unsubscribeAdvertInfo","onConfirmClick","order_info","current_query_params","URLSearchParams","search","append","redirectTo","nav","pathname","routes","toString","hash","setOrderId","setShowAdvertiserPage","submitFormFn","current","MODAL_TRANSITION_DURATION","balance_check","nickname","NicknameForm","MobileWrapper","MobileFullPageModal","body_className","height_offset","is_flex","page_header_className","page_header_text","pageHeaderReturnFn","should_show_separated_footer","handleClose","handleConfirm","DesktopWrapper","Modal","height","width","is_open","title","portalId","toggleModal","ThemedScrollbars","has_separator"],"sourceRoot":""}